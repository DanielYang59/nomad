window.nomadArtifacts = {
  "searchQuantities": {
    "upload_id": {
      "name": "upload_id",
      "description": "The persistent and globally unique identifier for the upload of the entry",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "upload_name": {
      "name": "upload_name",
      "description": "The user provided upload name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "upload_create_time": {
      "name": "upload_create_time",
      "description": "The date and time when the upload was created in nomad",
      "type": {
        "type_kind": "custom",
        "type_data": "nomad.metainfo.metainfo._Datetime"
      },
      "aggregatable": false
    },
    "entry_id": {
      "name": "entry_id",
      "description": "A persistent and globally unique identifier for the entry",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_name": {
      "name": "entry_name",
      "description": "A brief human readable name for the entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "entry_name.prefix": {
      "name": "entry_name",
      "description": "A brief human readable name for the entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "entry_type": {
      "name": "entry_type",
      "description": "The main schema definition. This is the name of the section used for data.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "calc_id": {
      "name": "calc_id",
      "description": "Legacy field name, use `entry_id` instead.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_create_time": {
      "name": "entry_create_time",
      "description": "The date and time when the entry was created in nomad",
      "type": {
        "type_kind": "custom",
        "type_data": "nomad.metainfo.metainfo._Datetime"
      },
      "aggregatable": false
    },
    "parser_name": {
      "name": "parser_name",
      "description": "The NOMAD parser used for the last processing",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "mainfile": {
      "name": "mainfile",
      "description": "The path to the mainfile from the root directory of the uploaded files",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "mainfile.path": {
      "name": "mainfile",
      "description": "The path to the mainfile from the root directory of the uploaded files",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "mainfile_key": {
      "name": "mainfile_key",
      "description": "Key used to differentiate between different *child entries* of an entry.\nFor parent entries and entries that do not have any children, the value should\nbe empty.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "mainfile_key.path": {
      "name": "mainfile_key",
      "description": "Key used to differentiate between different *child entries* of an entry.\nFor parent entries and entries that do not have any children, the value should\nbe empty.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "files": {
      "name": "files",
      "description": "The paths to the files within the upload that belong to this entry.\nAll files within the same directory as the entry's mainfile are considered the\nauxiliary files that belong to the entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true
    },
    "files.path": {
      "name": "files",
      "description": "The paths to the files within the upload that belong to this entry.\nAll files within the same directory as the entry's mainfile are considered the\nauxiliary files that belong to the entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": false
    },
    "pid": {
      "name": "pid",
      "description": "The unique, sequentially enumerated, integer PID that was used in the legacy\nNOMAD CoE. It allows to resolve URLs of the old NOMAD CoE Repository.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "raw_id": {
      "name": "raw_id",
      "description": "The code specific identifier extracted from the entry's raw files by the parser,\nif supported.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "external_id": {
      "name": "external_id",
      "description": "A user provided external id. Usually the id for an entry in an external database\nwhere the data was imported from.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "published": {
      "name": "published",
      "description": "Indicates if the entry is published",
      "type": {
        "type_kind": "python",
        "type_data": "bool"
      },
      "aggregatable": true
    },
    "publish_time": {
      "name": "publish_time",
      "description": "The date and time when the upload was published in nomad",
      "type": {
        "type_kind": "custom",
        "type_data": "nomad.metainfo.metainfo._Datetime"
      },
      "aggregatable": false
    },
    "with_embargo": {
      "name": "with_embargo",
      "description": "Indicated if this entry is under an embargo",
      "type": {
        "type_kind": "python",
        "type_data": "bool"
      },
      "aggregatable": true
    },
    "processed": {
      "name": "processed",
      "description": "Indicates that the entry is successfully processed.",
      "type": {
        "type_kind": "python",
        "type_data": "bool"
      },
      "aggregatable": true
    },
    "last_processing_time": {
      "name": "last_processing_time",
      "description": "The date and time of the last processing.",
      "type": {
        "type_kind": "custom",
        "type_data": "nomad.metainfo.metainfo._Datetime"
      },
      "aggregatable": false
    },
    "processing_errors": {
      "name": "processing_errors",
      "description": "Errors that occurred during processing",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true
    },
    "nomad_version": {
      "name": "nomad_version",
      "description": "The NOMAD version used for the last processing",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "nomad_commit": {
      "name": "nomad_commit",
      "description": "The NOMAD commit used for the last processing",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "comment": {
      "name": "comment",
      "description": "A user provided comment for this entry",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "references": {
      "name": "references",
      "description": "User provided references (URLs) for this entry",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true
    },
    "external_db": {
      "name": "external_db",
      "description": "The repository or external database where the original data resides",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "The Perovskite Database Project",
          "EELS Data Base",
          "Materials Project",
          "AFLOW",
          "OQMD",
          "Kyoto Phonopy Database"
        ]
      },
      "aggregatable": true
    },
    "origin": {
      "name": "origin",
      "description": "A short human readable description of the entries origin. Usually it is the\nhandle of an external database/repository or the name of the main author.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "main_author.name": {
      "name": "name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "main_author.name.text": {
      "name": "name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "main_author.user_id": {
      "name": "user_id",
      "description": "The unique, persistent keycloak UUID",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "main_author": {
      "name": "main_author",
      "description": "The main author of the entry",
      "type": {
        "type_kind": "User",
        "type_data": "User"
      },
      "aggregatable": false
    },
    "authors.name": {
      "name": "name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "authors.name.text": {
      "name": "name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "authors": {
      "name": "authors",
      "description": "All authors (main author and co-authors)",
      "type": {
        "type_kind": "Author",
        "type_data": "Author"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": false
    },
    "writers.name": {
      "name": "name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "writers.name.text": {
      "name": "name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "writers.user_id": {
      "name": "user_id",
      "description": "The unique, persistent keycloak UUID",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "writers": {
      "name": "writers",
      "description": "All writers (main author, upload coauthors)",
      "type": {
        "type_kind": "User",
        "type_data": "User"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": false
    },
    "viewers.name": {
      "name": "name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "viewers.name.text": {
      "name": "name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "viewers.user_id": {
      "name": "user_id",
      "description": "The unique, persistent keycloak UUID",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "viewers": {
      "name": "viewers",
      "description": "All viewers (main author, upload coauthors, and reviewers)",
      "type": {
        "type_kind": "User",
        "type_data": "User"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": false
    },
    "datasets.dataset_id": {
      "name": "dataset_id",
      "description": "The unique identifier for this dataset as a string. It should be\na randomly generated UUID, similar to other nomad ids.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "datasets.dataset_name": {
      "name": "dataset_name",
      "description": "The human-readable name of the dataset as string. The dataset name must be\nunique for the user.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "datasets.doi": {
      "name": "doi",
      "description": "The optional Document Object Identifier (DOI) associated with this dataset.\nNomad can register DOIs that link back to the respective representation of\nthe dataset in the nomad UI. This quantity holds the string representation of\nthis DOI. There is only one per dataset. The DOI is just the DOI name, not its\nfull URL, e.g. \"10.17172/nomad/2019.10.29-1\".",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "datasets.dataset_create_time": {
      "name": "dataset_create_time",
      "description": "The date when the dataset was first created.",
      "type": {
        "type_kind": "custom",
        "type_data": "nomad.metainfo.metainfo._Datetime"
      },
      "aggregatable": false
    },
    "datasets.dataset_modified_time": {
      "name": "dataset_modified_time",
      "description": "The date when the dataset was last modified. An owned dataset\ncan only be extended after a DOI was assigned. A foreign dataset cannot be changed\nonce a DOI was assigned.",
      "type": {
        "type_kind": "custom",
        "type_data": "nomad.metainfo.metainfo._Datetime"
      },
      "aggregatable": false
    },
    "datasets.dataset_type": {
      "name": "dataset_type",
      "description": "The type determined if a dataset is owned, i.e. was created by\nthe authors of the contained entries; or if a dataset is foreign,\ni.e. it was created by someone not necessarily related to the entries.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "owned",
          "foreign"
        ]
      },
      "aggregatable": true
    },
    "datasets": {
      "name": "datasets",
      "description": "A list of user curated datasets this entry belongs to.",
      "type": {
        "type_kind": "reference",
        "type_data": "/packages/12/section_definitions/0"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": false
    },
    "domain": {
      "name": "domain",
      "description": "The material science domain",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "dft",
          "ems"
        ]
      },
      "aggregatable": true
    },
    "n_quantities": {
      "name": "n_quantities",
      "description": "Number of metainfo quantities parsed from the entry.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "quantities": {
      "name": "quantities",
      "description": "All quantities that are used by this entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true
    },
    "quantities.path": {
      "name": "quantities",
      "description": "All quantities that are used by this entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": false
    },
    "sections": {
      "name": "sections",
      "description": "All sections that are present in this entry. This field is deprecated and will be removed.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true
    },
    "optimade.elements": {
      "name": "elements",
      "description": "Names of the different elements present in the structure.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "X",
          "H",
          "He",
          "Li",
          "Be",
          "B",
          "C",
          "N",
          "O",
          "F",
          "Ne",
          "Na",
          "Mg",
          "Al",
          "Si",
          "P",
          "S",
          "Cl",
          "Ar",
          "K",
          "Ca",
          "Sc",
          "Ti",
          "V",
          "Cr",
          "Mn",
          "Fe",
          "Co",
          "Ni",
          "Cu",
          "Zn",
          "Ga",
          "Ge",
          "As",
          "Se",
          "Br",
          "Kr",
          "Rb",
          "Sr",
          "Y",
          "Zr",
          "Nb",
          "Mo",
          "Tc",
          "Ru",
          "Rh",
          "Pd",
          "Ag",
          "Cd",
          "In",
          "Sn",
          "Sb",
          "Te",
          "I",
          "Xe",
          "Cs",
          "Ba",
          "La",
          "Ce",
          "Pr",
          "Nd",
          "Pm",
          "Sm",
          "Eu",
          "Gd",
          "Tb",
          "Dy",
          "Ho",
          "Er",
          "Tm",
          "Yb",
          "Lu",
          "Hf",
          "Ta",
          "W",
          "Re",
          "Os",
          "Ir",
          "Pt",
          "Au",
          "Hg",
          "Tl",
          "Pb",
          "Bi",
          "Po",
          "At",
          "Rn",
          "Fr",
          "Ra",
          "Ac",
          "Th",
          "Pa",
          "U",
          "Np",
          "Pu",
          "Am",
          "Cm",
          "Bk",
          "Cf",
          "Es",
          "Fm",
          "Md",
          "No",
          "Lr",
          "Rf",
          "Db",
          "Sg",
          "Bh",
          "Hs",
          "Mt",
          "Ds",
          "Rg",
          "Cn",
          "Nh",
          "Fl",
          "Mc",
          "Lv",
          "Ts",
          "Og"
        ]
      },
      "shape": [
        "1..*"
      ],
      "aggregatable": true
    },
    "optimade.nelements": {
      "name": "nelements",
      "description": "Number of different elements in the structure as an integer.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "optimade.elements_ratios": {
      "name": "elements_ratios",
      "description": "Relative proportions of different elements in the structure.",
      "type": {
        "type_kind": "python",
        "type_data": "float"
      },
      "shape": [
        "nelements"
      ],
      "aggregatable": false
    },
    "optimade.chemical_formula_descriptive": {
      "name": "chemical_formula_descriptive",
      "description": "The chemical formula for a structure as a string in a form chosen by the API\nimplementation.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "optimade.chemical_formula_reduced": {
      "name": "chemical_formula_reduced",
      "description": "The reduced chemical formula for a structure as a string with element symbols and\ninteger chemical proportion numbers. The proportion number MUST be omitted if it is 1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "optimade.chemical_formula_hill": {
      "name": "chemical_formula_hill",
      "description": "The chemical formula for a structure in Hill form with element symbols followed by\ninteger chemical proportion numbers. The proportion number MUST be omitted if it is 1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "optimade.chemical_formula_anonymous": {
      "name": "chemical_formula_anonymous",
      "description": "The anonymous formula is the chemical_formula_reduced, but where the elements are\ninstead first ordered by their chemical proportion number, and then, in order left to\nright, replaced by anonymous symbols A, B, C, ..., Z, Aa, Ba, ..., Za, Ab, Bb, ... and\nso on.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "optimade.nperiodic_dimensions": {
      "name": "nperiodic_dimensions",
      "description": "An integer specifying the number of periodic dimensions in the structure, equivalent\nto the number of non-zero entries in dimension_types.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "optimade.nsites": {
      "name": "nsites",
      "description": "An integer specifying the length of the cartesian_site_positions property.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "optimade.species_at_sites": {
      "name": "species_at_sites",
      "description": "Name of the species at each site (where values for sites are specified with the same\norder of the cartesian_site_positions property). The properties of the species are\nfound in the species property.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "nsites"
      ],
      "aggregatable": true
    },
    "optimade.structure_features": {
      "name": "structure_features",
      "description": "A list of strings that flag which special features are used by the structure.\n\n- disorder: This flag MUST be present if any one entry in the species list has a\nchemical_symbols list that is longer than 1 element.\n- unknown_positions: This flag MUST be present if at least one component of the\ncartesian_site_positions list of lists has value null.\n- assemblies: This flag MUST be present if the assemblies list is present.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "disorder",
          "unknown_positions",
          "assemblies"
        ]
      },
      "shape": [
        "1..*"
      ],
      "aggregatable": true
    },
    "section_defs.definition_qualified_name": {
      "name": "definition_qualified_name",
      "description": "The qualified name of the compatible section.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "section_defs.definition_id": {
      "name": "definition_id",
      "description": "The definition id of the compatible section.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "section_defs.used_directly": {
      "name": "used_directly",
      "description": "If the compatible section is directly used as base section.",
      "type": {
        "type_kind": "python",
        "type_data": "bool"
      },
      "aggregatable": true
    },
    "entry_references.target_reference": {
      "name": "target_reference",
      "description": "The full url like reference of the the target.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_references.target_entry_id": {
      "name": "target_entry_id",
      "description": "The id of the entry containing the target.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_references.target_mainfile": {
      "name": "target_mainfile",
      "description": "The mainfile of the entry containing the target.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_references.target_upload_id": {
      "name": "target_upload_id",
      "description": "The id of the upload containing the target.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_references.target_name": {
      "name": "target_name",
      "description": "The name of the target quantity/section.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_references.target_path": {
      "name": "target_path",
      "description": "The path of the target quantity/section in its archive.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_references.source_name": {
      "name": "source_name",
      "description": "The name of the source (self) quantity/section in its archive.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_references.source_path": {
      "name": "source_path",
      "description": "The path of the source (self) quantity/section in its archive.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "entry_references.source_quantity": {
      "name": "source_quantity",
      "description": "A reference to the quantity definition that defines the reference",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "searchable_quantities.quantity_name": {
      "name": "quantity_name",
      "description": "The name of the quantity holding the value.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "searchable_quantities.section_definition": {
      "name": "section_definition",
      "description": "A reference to the section definition for the section that holds the quantity that holds the value.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "searchable_quantities.path": {
      "name": "path",
      "description": "The path to the quantity holding the value.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "searchable_quantities.keyword_value": {
      "name": "keyword_value",
      "description": "The value mapped as an ES keyword field.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "searchable_quantities.text_value": {
      "name": "text_value",
      "description": "The value mapped as an ES text field.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "searchable_quantities.long_value": {
      "name": "long_value",
      "description": "The value mapped as an ES long number field.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "searchable_quantities.double_value": {
      "name": "double_value",
      "description": "The value mapped as an ES double number field.",
      "type": {
        "type_kind": "python",
        "type_data": "float"
      },
      "aggregatable": false
    },
    "searchable_quantities.date_value": {
      "name": "date_value",
      "description": "The value mapped as an ES date field.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": false
    },
    "results.material.material_id": {
      "name": "material_id",
      "description": "A fixed length, unique material identifier in the form of a hash\ndigest.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.material.material_name": {
      "name": "material_name",
      "description": "Meaningful names for this a material if any can be assigned.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.structural_type": {
      "name": "structural_type",
      "description": "Structural class determined from the atomic structure.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "bulk",
          "surface",
          "2D",
          "1D",
          "molecule / cluster",
          "atom",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.dimensionality": {
      "name": "dimensionality",
      "description": "Dimensionality of the system. For atomistic systems this is\nautomatically evaluated by using the topology-scaling algorithm:\nhttps://doi.org/10.1103/PhysRevLett.118.106101.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'0D'` | Not connected periodically |\n| `'1D'` | Periodically connected in one dimension |\n| `'2D'` | Periodically connected in two dimensions |\n| `'3D'` | Periodically connected in three dimensions |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "0D",
          "1D",
          "2D",
          "3D"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.building_block": {
      "name": "building_block",
      "description": "More exact classification for this system, i.e. the type of \"building\nblock\" it represents.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'surface'` | Structure built from a unit cell that repeats periodically in two directions and at least twice, but not infinitely in a third direction. |\n| `'2D material'` | Structure built from a unit cell that repeats periodically in two directions and only once in a third direction. |\n| `'molecule'` | Molecule defined in the force-field topology |\n| `'monomer'` | Monomer defined in the force-field topology |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "surface",
          "2D material",
          "molecule",
          "monomer"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.functional_type": {
      "name": "functional_type",
      "description": "Classification based on the functional properties.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.compound_type": {
      "name": "compound_type",
      "description": "Classification based on the chemical formula.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.elements": {
      "name": "elements",
      "description": "Names of the different elements present in the structure.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "X",
          "H",
          "He",
          "Li",
          "Be",
          "B",
          "C",
          "N",
          "O",
          "F",
          "Ne",
          "Na",
          "Mg",
          "Al",
          "Si",
          "P",
          "S",
          "Cl",
          "Ar",
          "K",
          "Ca",
          "Sc",
          "Ti",
          "V",
          "Cr",
          "Mn",
          "Fe",
          "Co",
          "Ni",
          "Cu",
          "Zn",
          "Ga",
          "Ge",
          "As",
          "Se",
          "Br",
          "Kr",
          "Rb",
          "Sr",
          "Y",
          "Zr",
          "Nb",
          "Mo",
          "Tc",
          "Ru",
          "Rh",
          "Pd",
          "Ag",
          "Cd",
          "In",
          "Sn",
          "Sb",
          "Te",
          "I",
          "Xe",
          "Cs",
          "Ba",
          "La",
          "Ce",
          "Pr",
          "Nd",
          "Pm",
          "Sm",
          "Eu",
          "Gd",
          "Tb",
          "Dy",
          "Ho",
          "Er",
          "Tm",
          "Yb",
          "Lu",
          "Hf",
          "Ta",
          "W",
          "Re",
          "Os",
          "Ir",
          "Pt",
          "Au",
          "Hg",
          "Tl",
          "Pb",
          "Bi",
          "Po",
          "At",
          "Rn",
          "Fr",
          "Ra",
          "Ac",
          "Th",
          "Pa",
          "U",
          "Np",
          "Pu",
          "Am",
          "Cm",
          "Bk",
          "Cf",
          "Es",
          "Fm",
          "Md",
          "No",
          "Lr",
          "Rf",
          "Db",
          "Sg",
          "Bh",
          "Hs",
          "Mt",
          "Ds",
          "Rg",
          "Cn",
          "Nh",
          "Fl",
          "Mc",
          "Lv",
          "Ts",
          "Og"
        ]
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.n_elements": {
      "name": "n_elements",
      "description": "Number of different elements in the structure as an integer.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.material.elements_exclusive": {
      "name": "elements_exclusive",
      "description": "String containing the chemical elements in alphabetical order and\nseparated by a single whitespace. This quantity can be used for\nexclusive element searches where you want to find entries/materials\nwith only certain given elements.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.material.chemical_formula_descriptive": {
      "name": "chemical_formula_descriptive",
      "description": "The chemical formula for a structure as a string in a form chosen by the API\nimplementation.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.chemical_formula_reduced": {
      "name": "chemical_formula_reduced",
      "description": "Alphabetically sorted chemical formula with reduced integer chemical\nproportion numbers. The proportion number is omitted if it is 1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.chemical_formula_hill": {
      "name": "chemical_formula_hill",
      "description": "The chemical formula for a structure in Hill form with element\nsymbols followed by non-reduced integer chemical proportion numbers.\nThe proportion number is omitted if it is 1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.chemical_formula_iupac": {
      "name": "chemical_formula_iupac",
      "description": "Formula where the elements are ordered using a formal list loosely\nbased on electronegativity as defined in the IUPAC nomenclature of\ninorganic chemistry (2005). Contains reduced integer chemical\nproportion numbers where the proportion number is omitted if it is\n1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.chemical_formula_anonymous": {
      "name": "chemical_formula_anonymous",
      "description": "Formula with the elements ordered by their reduced integer chemical\nproportion number, and the chemical species replaced by\nalphabetically ordered letters. The proportion number is omitted if\nit is 1. E.g.  H2O becomes A2B and H2O2 becomes AB. The letters are\ndrawn from the english alphabet that may be extended by increasing\nthe number of letters, e.g. A, B, ..., Z, Aa, Ab and so on. This\ndefinition is in line with the similarly named OPTIMADE definition.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.chemical_formula_reduced_fragments": {
      "name": "chemical_formula_reduced_fragments",
      "description": "Alphabetically sorted chemical formula with reduced integer chemical\nproportion numbers. The proportion number is omitted if it is 1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": false
    },
    "results.material.elemental_composition.element": {
      "name": "element",
      "description": "The symbol of the element, e.g. 'Pb'.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "H",
          "He",
          "Li",
          "Be",
          "B",
          "C",
          "N",
          "O",
          "F",
          "Ne",
          "Na",
          "Mg",
          "Al",
          "Si",
          "P",
          "S",
          "Cl",
          "Ar",
          "K",
          "Ca",
          "Sc",
          "Ti",
          "V",
          "Cr",
          "Mn",
          "Fe",
          "Co",
          "Ni",
          "Cu",
          "Zn",
          "Ga",
          "Ge",
          "As",
          "Se",
          "Br",
          "Kr",
          "Rb",
          "Sr",
          "Y",
          "Zr",
          "Nb",
          "Mo",
          "Tc",
          "Ru",
          "Rh",
          "Pd",
          "Ag",
          "Cd",
          "In",
          "Sn",
          "Sb",
          "Te",
          "I",
          "Xe",
          "Cs",
          "Ba",
          "La",
          "Ce",
          "Pr",
          "Nd",
          "Pm",
          "Sm",
          "Eu",
          "Gd",
          "Tb",
          "Dy",
          "Ho",
          "Er",
          "Tm",
          "Yb",
          "Lu",
          "Hf",
          "Ta",
          "W",
          "Re",
          "Os",
          "Ir",
          "Pt",
          "Au",
          "Hg",
          "Tl",
          "Pb",
          "Bi",
          "Po",
          "At",
          "Rn",
          "Fr",
          "Ra",
          "Ac",
          "Th",
          "Pa",
          "U",
          "Np",
          "Pu",
          "Am",
          "Cm",
          "Bk",
          "Cf",
          "Es",
          "Fm",
          "Md",
          "No",
          "Lr",
          "Rf",
          "Db",
          "Sg",
          "Bh",
          "Hs",
          "Mt",
          "Ds",
          "Rg",
          "Cn",
          "Nh",
          "Fl",
          "Mc",
          "Lv",
          "Ts",
          "Og"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.elemental_composition.atomic_fraction": {
      "name": "atomic_fraction",
      "description": "The atomic fraction of the element in the system it is contained within.\nPer definition a positive value less than or equal to 1.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "aggregatable": false
    },
    "results.material.elemental_composition.mass_fraction": {
      "name": "mass_fraction",
      "description": "The mass fraction of the element in the system it is contained within.\nPer definition a positive value less than or equal to 1.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "aggregatable": false
    },
    "results.material.symmetry.bravais_lattice": {
      "name": "bravais_lattice",
      "description": "Identifier for the Bravais lattice in Pearson notation. The first lowercase letter\nidentifies the crystal family and can be one of the following: a (triclinic), b\n(monoclinic), o (orthorhombic), t (tetragonal), h (hexagonal) or c (cubic). The\nsecond uppercase letter identifies the centring and can be one of the following: P\n(primitive), S (face centred), I (body centred), R (rhombohedral centring) or F\n(all faces centred).",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "aP",
          "mP",
          "mS",
          "oP",
          "oS",
          "oF",
          "oI",
          "tP",
          "tI",
          "hP",
          "hR",
          "cP",
          "cF",
          "cI"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.symmetry.crystal_system": {
      "name": "crystal_system",
      "description": "Name of the crystal system.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "triclinic",
          "monoclinic",
          "orthorhombic",
          "tetragonal",
          "trigonal",
          "hexagonal",
          "cubic"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.symmetry.hall_number": {
      "name": "hall_number",
      "description": "The Hall number for this system.",
      "type": {
        "type_kind": "numpy",
        "type_data": "int32"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.material.symmetry.hall_symbol": {
      "name": "hall_symbol",
      "description": "The Hall symbol for this system.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.symmetry.point_group": {
      "name": "point_group",
      "description": "Symbol of the crystallographic point group in the Hermann-Mauguin notation.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.symmetry.space_group_number": {
      "name": "space_group_number",
      "description": "Specifies the International Union of Crystallography (IUC) number of the 3D space\ngroup of this system.",
      "type": {
        "type_kind": "numpy",
        "type_data": "int32"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.material.symmetry.space_group_symbol": {
      "name": "space_group_symbol",
      "description": "The International Union of Crystallography (IUC) short symbol of the 3D\nspace group of this system.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.symmetry.prototype_formula": {
      "name": "prototype_formula",
      "description": "The formula of the prototypical material for this structure.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.material.symmetry.prototype_aflow_id": {
      "name": "prototype_aflow_id",
      "description": "The identifier of this structure in the AFLOW encyclopedia of\ncrystallographic prototypes:\nhttp://www.aflowlib.org/prototype-encyclopedia/index.html",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.symmetry.structure_name": {
      "name": "structure_name",
      "description": "A common name for this structure, e.g. fcc, bcc.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "4-member ring",
          "Heusler",
          "bcc",
          "bct",
          "bct5",
          "clathrate",
          "cuprite",
          "diamond",
          "fcc",
          "fct",
          "half-Heusler",
          "hcp",
          "perovskite",
          "rock salt",
          "simple cubic",
          "wurtzite",
          "zincblende"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.symmetry.strukturbericht_designation": {
      "name": "strukturbericht_designation",
      "description": "Classification of the material according to the historically grown\n'strukturbericht'.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.system_id": {
      "name": "system_id",
      "description": "That path of this section within the metainfo that is used as a unique\nidentifier.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.material.topology.label": {
      "name": "label",
      "description": "Descriptive label that identifies this structural part.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.method": {
      "name": "method",
      "description": "The method used for identifying this system.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "parser",
          "user",
          "matid",
          "porosity"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.description": {
      "name": "description",
      "description": "A short description about this part of the topology.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.material.topology.material_id": {
      "name": "material_id",
      "description": "A fixed length, unique material identifier in the form of a hash\ndigest.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.material.topology.material_name": {
      "name": "material_name",
      "description": "Meaningful names for this a material if any can be assigned.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.structural_type": {
      "name": "structural_type",
      "description": "Structural class determined from the atomic structure.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "bulk",
          "surface",
          "2D",
          "1D",
          "molecule / cluster",
          "atom",
          "unavailable",
          "not processed",
          "group",
          "molecule",
          "monomer"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.dimensionality": {
      "name": "dimensionality",
      "description": "Dimensionality of the system. For atomistic systems this is\nautomatically evaluated by using the topology-scaling algorithm:\nhttps://doi.org/10.1103/PhysRevLett.118.106101.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'0D'` | Not connected periodically |\n| `'1D'` | Periodically connected in one dimension |\n| `'2D'` | Periodically connected in two dimensions |\n| `'3D'` | Periodically connected in three dimensions |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "0D",
          "1D",
          "2D",
          "3D"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.building_block": {
      "name": "building_block",
      "description": "More exact classification for this system, i.e. the type of \"building\nblock\" it represents.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'surface'` | Structure built from a unit cell that repeats periodically in two directions and at least twice, but not infinitely in a third direction. |\n| `'2D material'` | Structure built from a unit cell that repeats periodically in two directions and only once in a third direction. |\n| `'molecule'` | Molecule defined in the force-field topology |\n| `'monomer'` | Monomer defined in the force-field topology |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "surface",
          "2D material",
          "molecule",
          "monomer"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.functional_type": {
      "name": "functional_type",
      "description": "Classification based on the functional properties.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.compound_type": {
      "name": "compound_type",
      "description": "Classification based on the chemical formula.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.elements": {
      "name": "elements",
      "description": "Names of the different elements present in the structure.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "X",
          "H",
          "He",
          "Li",
          "Be",
          "B",
          "C",
          "N",
          "O",
          "F",
          "Ne",
          "Na",
          "Mg",
          "Al",
          "Si",
          "P",
          "S",
          "Cl",
          "Ar",
          "K",
          "Ca",
          "Sc",
          "Ti",
          "V",
          "Cr",
          "Mn",
          "Fe",
          "Co",
          "Ni",
          "Cu",
          "Zn",
          "Ga",
          "Ge",
          "As",
          "Se",
          "Br",
          "Kr",
          "Rb",
          "Sr",
          "Y",
          "Zr",
          "Nb",
          "Mo",
          "Tc",
          "Ru",
          "Rh",
          "Pd",
          "Ag",
          "Cd",
          "In",
          "Sn",
          "Sb",
          "Te",
          "I",
          "Xe",
          "Cs",
          "Ba",
          "La",
          "Ce",
          "Pr",
          "Nd",
          "Pm",
          "Sm",
          "Eu",
          "Gd",
          "Tb",
          "Dy",
          "Ho",
          "Er",
          "Tm",
          "Yb",
          "Lu",
          "Hf",
          "Ta",
          "W",
          "Re",
          "Os",
          "Ir",
          "Pt",
          "Au",
          "Hg",
          "Tl",
          "Pb",
          "Bi",
          "Po",
          "At",
          "Rn",
          "Fr",
          "Ra",
          "Ac",
          "Th",
          "Pa",
          "U",
          "Np",
          "Pu",
          "Am",
          "Cm",
          "Bk",
          "Cf",
          "Es",
          "Fm",
          "Md",
          "No",
          "Lr",
          "Rf",
          "Db",
          "Sg",
          "Bh",
          "Hs",
          "Mt",
          "Ds",
          "Rg",
          "Cn",
          "Nh",
          "Fl",
          "Mc",
          "Lv",
          "Ts",
          "Og"
        ]
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.n_elements": {
      "name": "n_elements",
      "description": "Number of different elements in the structure as an integer.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.material.topology.elements_exclusive": {
      "name": "elements_exclusive",
      "description": "String containing the chemical elements in alphabetical order and\nseparated by a single whitespace. This quantity can be used for\nexclusive element searches where you want to find entries/materials\nwith only certain given elements.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.material.topology.chemical_formula_descriptive": {
      "name": "chemical_formula_descriptive",
      "description": "The chemical formula for a structure as a string in a form chosen by the API\nimplementation.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.chemical_formula_reduced": {
      "name": "chemical_formula_reduced",
      "description": "Alphabetically sorted chemical formula with reduced integer chemical\nproportion numbers. The proportion number is omitted if it is 1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.chemical_formula_hill": {
      "name": "chemical_formula_hill",
      "description": "The chemical formula for a structure in Hill form with element\nsymbols followed by non-reduced integer chemical proportion numbers.\nThe proportion number is omitted if it is 1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.chemical_formula_iupac": {
      "name": "chemical_formula_iupac",
      "description": "Formula where the elements are ordered using a formal list loosely\nbased on electronegativity as defined in the IUPAC nomenclature of\ninorganic chemistry (2005). Contains reduced integer chemical\nproportion numbers where the proportion number is omitted if it is\n1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.chemical_formula_anonymous": {
      "name": "chemical_formula_anonymous",
      "description": "Formula with the elements ordered by their reduced integer chemical\nproportion number, and the chemical species replaced by\nalphabetically ordered letters. The proportion number is omitted if\nit is 1. E.g.  H2O becomes A2B and H2O2 becomes AB. The letters are\ndrawn from the english alphabet that may be extended by increasing\nthe number of letters, e.g. A, B, ..., Z, Aa, Ab and so on. This\ndefinition is in line with the similarly named OPTIMADE definition.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.chemical_formula_reduced_fragments": {
      "name": "chemical_formula_reduced_fragments",
      "description": "Alphabetically sorted chemical formula with reduced integer chemical\nproportion numbers. The proportion number is omitted if it is 1.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": false
    },
    "results.material.topology.parent_system": {
      "name": "parent_system",
      "description": "Reference to the parent system.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.material.topology.child_systems": {
      "name": "child_systems",
      "description": "References to the child systems.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true
    },
    "results.material.topology.atomic_fraction": {
      "name": "atomic_fraction",
      "description": "The atomic fraction of this system in the full structure it is contained in.\nPer definition a positive value less than or equal to 1.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "aggregatable": false
    },
    "results.material.topology.mass_fraction": {
      "name": "mass_fraction",
      "description": "The mass fraction of this system in the full structure it is contained within.\nPer definition a positive value less than or equal to 1.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "aggregatable": false
    },
    "results.material.topology.n_atoms": {
      "name": "n_atoms",
      "description": "The total number of species (atoms, particles) in the system.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.material.topology.sbu_type": {
      "name": "sbu_type",
      "description": "The topological representation of the metal secondary building units (sbus).\nThe shape of most metal sbus are well defined and form the basis of most\n popular MOFs. The most common example is the paddlewheel, rodlike mofs,\n irmofs, uio66",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.largest_cavity_diameter": {
      "name": "largest_cavity_diameter",
      "description": "The largest cavity diameter is the largest sphere that can be inserted in a porous\nsystem without overlapping with any of the atoms in the system.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.material.topology.pore_limiting_diameter": {
      "name": "pore_limiting_diameter",
      "description": "The pore limiting diameter is the largest sphere that can freely\ndiffuse through the porous network without overlapping with any of the\natoms in the system.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.material.topology.largest_included_sphere_along_free_sphere_path": {
      "name": "largest_included_sphere_along_free_sphere_path",
      "description": "The largest included sphere along free sphere path is\nlargest sphere that can be inserted in the pore.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.material.topology.accessible_surface_area": {
      "name": "accessible_surface_area",
      "description": "The surface area accessible is the area that is accessible to guest molecules\nin a porous system. It is generally considered to be the entire surface area\nthat can be spanned by a probe of a specific radius. In NOMAD, by default we use\na probe that has a radius of 1.86 Angstrom, which correspond to the\ncovalent radii of nitrogen gas. For biomolecular system, a radii of\n1.4 Angstrom can be used, which correspond to the covalent radii\nof water.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter ** 2",
      "aggregatable": false
    },
    "results.material.topology.accessible_volume": {
      "name": "accessible_volume",
      "description": "Volume of unoccupied space in a system that can be accessible to\nguest molecules, like solvents.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter ** 3",
      "aggregatable": false
    },
    "results.material.topology.void_fraction": {
      "name": "void_fraction",
      "description": "Ratio of the the volume of the unoccupied space in the system\nto the volume of the entire system. It is a good proxy to\ndetermine how porous a system is. Highly porous systems\noften have a larger void fraction, meanwhile compact or dense\nsystems have smaller void fractions.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "aggregatable": false
    },
    "results.material.topology.n_channels": {
      "name": "n_channels",
      "description": "Number of channels present in the porous system, which correspond to the number of\npores within the system.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.material.topology.sbu_coordination_number": {
      "name": "sbu_coordination_number",
      "description": "The number of connecting point in the secondary building units(sbu), which corresponds to\nthe to the number of point of extension in the secondary building unit. Some common\nterminology include\n1 : monotopic\n2 : ditopic\n3 : tritopic\n4 : tetratopic\n5 : pentatopic",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.material.topology.elemental_composition.element": {
      "name": "element",
      "description": "The symbol of the element, e.g. 'Pb'.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "H",
          "He",
          "Li",
          "Be",
          "B",
          "C",
          "N",
          "O",
          "F",
          "Ne",
          "Na",
          "Mg",
          "Al",
          "Si",
          "P",
          "S",
          "Cl",
          "Ar",
          "K",
          "Ca",
          "Sc",
          "Ti",
          "V",
          "Cr",
          "Mn",
          "Fe",
          "Co",
          "Ni",
          "Cu",
          "Zn",
          "Ga",
          "Ge",
          "As",
          "Se",
          "Br",
          "Kr",
          "Rb",
          "Sr",
          "Y",
          "Zr",
          "Nb",
          "Mo",
          "Tc",
          "Ru",
          "Rh",
          "Pd",
          "Ag",
          "Cd",
          "In",
          "Sn",
          "Sb",
          "Te",
          "I",
          "Xe",
          "Cs",
          "Ba",
          "La",
          "Ce",
          "Pr",
          "Nd",
          "Pm",
          "Sm",
          "Eu",
          "Gd",
          "Tb",
          "Dy",
          "Ho",
          "Er",
          "Tm",
          "Yb",
          "Lu",
          "Hf",
          "Ta",
          "W",
          "Re",
          "Os",
          "Ir",
          "Pt",
          "Au",
          "Hg",
          "Tl",
          "Pb",
          "Bi",
          "Po",
          "At",
          "Rn",
          "Fr",
          "Ra",
          "Ac",
          "Th",
          "Pa",
          "U",
          "Np",
          "Pu",
          "Am",
          "Cm",
          "Bk",
          "Cf",
          "Es",
          "Fm",
          "Md",
          "No",
          "Lr",
          "Rf",
          "Db",
          "Sg",
          "Bh",
          "Hs",
          "Mt",
          "Ds",
          "Rg",
          "Cn",
          "Nh",
          "Fl",
          "Mc",
          "Lv",
          "Ts",
          "Og"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.elemental_composition.atomic_fraction": {
      "name": "atomic_fraction",
      "description": "The atomic fraction of the element in the system it is contained within.\nPer definition a positive value less than or equal to 1.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "aggregatable": false
    },
    "results.material.topology.elemental_composition.mass_fraction": {
      "name": "mass_fraction",
      "description": "The mass fraction of the element in the system it is contained within.\nPer definition a positive value less than or equal to 1.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "aggregatable": false
    },
    "results.material.topology.system_relation.type": {
      "name": "type",
      "description": "The type of relation between a system and it's parent.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'root'` | System representing the entire structure, has no parent system. |\n| `'subsystem'` | A single logical entity extracted from the parent system. |\n| `'group'` | A logical group of subsystems within the parent, e.g. a group of molecules in MD. |\n| `'primitive_cell'` | The conventional cell from which the parent is constructed from. |\n| `'conventional_cell'` | The primitive cell from which the parent is constructed from. |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "root",
          "subsystem",
          "group",
          "primitive_cell",
          "conventional_cell"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.cell.a": {
      "name": "a",
      "description": "Length of the first basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.material.topology.cell.b": {
      "name": "b",
      "description": "Length of the second basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.material.topology.cell.c": {
      "name": "c",
      "description": "Length of the third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.material.topology.cell.alpha": {
      "name": "alpha",
      "description": "Angle between second and third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.material.topology.cell.beta": {
      "name": "beta",
      "description": "Angle between first and third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.material.topology.cell.gamma": {
      "name": "gamma",
      "description": "Angle between first and second basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.material.topology.cell.volume": {
      "name": "volume",
      "description": "Volume of the cell.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter ** 3",
      "aggregatable": false
    },
    "results.material.topology.cell.atomic_density": {
      "name": "atomic_density",
      "description": "Atomic density of the material (atoms/volume).'",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "1 / meter ** 3",
      "aggregatable": false
    },
    "results.material.topology.cell.mass_density": {
      "name": "mass_density",
      "description": "Mass density of the material.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "kilogram / meter ** 3",
      "aggregatable": false
    },
    "results.material.topology.symmetry.bravais_lattice": {
      "name": "bravais_lattice",
      "description": "Identifier for the Bravais lattice in Pearson notation. The first lowercase letter\nidentifies the crystal family and can be one of the following: a (triclinic), b\n(monoclinic), o (orthorhombic), t (tetragonal), h (hexagonal) or c (cubic). The\nsecond uppercase letter identifies the centring and can be one of the following: P\n(primitive), S (face centred), I (body centred), R (rhombohedral centring) or F\n(all faces centred).",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "aP",
          "mP",
          "mS",
          "oP",
          "oS",
          "oF",
          "oI",
          "tP",
          "tI",
          "hP",
          "hR",
          "cP",
          "cF",
          "cI"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.symmetry.crystal_system": {
      "name": "crystal_system",
      "description": "Name of the crystal system.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "triclinic",
          "monoclinic",
          "orthorhombic",
          "tetragonal",
          "trigonal",
          "hexagonal",
          "cubic"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.symmetry.hall_number": {
      "name": "hall_number",
      "description": "The Hall number for this system.",
      "type": {
        "type_kind": "numpy",
        "type_data": "int32"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.material.topology.symmetry.hall_symbol": {
      "name": "hall_symbol",
      "description": "The Hall symbol for this system.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.symmetry.point_group": {
      "name": "point_group",
      "description": "Symbol of the crystallographic point group in the Hermann-Mauguin notation.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.symmetry.space_group_number": {
      "name": "space_group_number",
      "description": "Specifies the International Union of Crystallography (IUC) number of the 3D space\ngroup of this system.",
      "type": {
        "type_kind": "numpy",
        "type_data": "int32"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.material.topology.symmetry.space_group_symbol": {
      "name": "space_group_symbol",
      "description": "The International Union of Crystallography (IUC) short symbol of the 3D\nspace group of this system.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.symmetry.strukturbericht_designation": {
      "name": "strukturbericht_designation",
      "description": "Classification of the material according to the historically grown\n'strukturbericht'.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.symmetry.prototype_label_aflow": {
      "name": "prototype_label_aflow",
      "description": "AFLOW label of the prototype (see\nhttp://aflowlib.org/CrystalDatabase/prototype_index.html) identified on the basis\nof the space_group and normalized_wyckoff.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material.topology.symmetry.prototype_name": {
      "name": "prototype_name",
      "description": "A common name for this prototypical structure, e.g. fcc, bcc.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "4-member ring",
          "Heusler",
          "bcc",
          "bct",
          "bct5",
          "clathrate",
          "cuprite",
          "diamond",
          "fcc",
          "fct",
          "half-Heusler",
          "hcp",
          "perovskite",
          "rock salt",
          "simple cubic",
          "wurtzite",
          "zincblende"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.method_id": {
      "name": "method_id",
      "description": "Identifier for the used method. Only available for a subset of entries\nfor which the methodology has been identified with precision.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true
    },
    "results.method.method_name": {
      "name": "method_name",
      "description": "Common name for the used method.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "DFT",
          "Projection",
          "GW",
          "DMFT",
          "CoreHole",
          "BSE",
          "EELS",
          "XPS",
          "XRD",
          "unavailable"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.workflow_name": {
      "name": "workflow_name",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.program_name": {
      "name": "program_name",
      "description": "The name of the used program.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.program_version": {
      "name": "program_version",
      "description": "The version of the used program.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dft.basis_set_type": {
      "name": "basis_set_type",
      "description": "The used basis set functions.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "(L)APW+lo",
          "gaussians",
          "numeric AOs",
          "plane waves",
          "psinc functions",
          "real-space grid",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dft.core_electron_treatment": {
      "name": "core_electron_treatment",
      "description": "How the core electrons are described.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "full all electron",
          "all electron frozen core",
          "pseudopotential",
          "unavailable"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dft.spin_polarized": {
      "name": "spin_polarized",
      "description": "Whether the calculation is spin-polarized.",
      "type": {
        "type_kind": "python",
        "type_data": "bool"
      },
      "aggregatable": true
    },
    "results.method.simulation.dft.scf_threshold_energy_change": {
      "name": "scf_threshold_energy_change",
      "description": "Specifies the threshold for the total energy change between two subsequent\nself-consistent field (SCF) iterations. The SCF is considered converged when the\ntotal-energy change between two SCF cycles is below the threshold (possibly in\ncombination with other criteria).",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.dft.van_der_Waals_method": {
      "name": "van_der_Waals_method",
      "description": "The used van der Waals method.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dft.relativity_method": {
      "name": "relativity_method",
      "description": "Describes the relativistic treatment used for the calculation of the final energy\nand related quantities. If skipped or empty, no relativistic treatment is applied.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "scalar_relativistic",
          "pseudo_scalar_relativistic",
          "scalar_relativistic_atomic_ZORA"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dft.smearing_kind": {
      "name": "smearing_kind",
      "description": "Specifies the kind of smearing on the electron occupation used to calculate the\nfree energy (see energy_free)\n\nValid values are:\n\n| Smearing kind             | Description                       |\n\n| ------------------------- | --------------------------------- |\n\n| `\"empty\"`                 | No smearing is applied            |\n\n| `\"gaussian\"`              | Gaussian smearing                 |\n\n| `\"fermi\"`                 | Fermi smearing                    |\n\n| `\"marzari-vanderbilt\"`    | Marzari-Vanderbilt smearing       |\n\n| `\"methfessel-paxton\"`     | Methfessel-Paxton smearing        |\n\n| `\"tetrahedra\"`            | Interpolation of state energies and occupations\n(ignores smearing_width) |",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dft.smearing_width": {
      "name": "smearing_width",
      "description": "Specifies the width of the smearing in energy for the electron occupation used to\ncalculate the free energy (see energy_free).\n\n*NOTE:* Not all methods specified in smearing_kind uses this value.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.dft.jacobs_ladder": {
      "name": "jacobs_ladder",
      "description": "Functional classification in line with Jacob's Ladder.\nFor more information, see https://doi.org/10.1063/1.1390175 (original paper);\nhttps://doi.org/10.1103/PhysRevLett.91.146401 (meta-GGA);\nand https://doi.org/10.1063/1.1904565 (hyper-GGA).",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "LDA",
          "GGA",
          "meta-GGA",
          "hyper-GGA",
          "hybrid",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true
    },
    "results.method.simulation.dft.xc_functional_type": {
      "name": "xc_functional_type",
      "description": "Functional classification in line with Jacob's Ladder.\nFor more information, see https://doi.org/10.1063/1.1390175 (original paper);\nhttps://doi.org/10.1103/PhysRevLett.91.146401 (meta-GGA);\nand https://doi.org/10.1063/1.1904565 (hyper-GGA).",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "LDA",
          "GGA",
          "meta-GGA",
          "hyper-GGA",
          "hybrid",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true
    },
    "results.method.simulation.dft.xc_functional_names": {
      "name": "xc_functional_names",
      "description": "The list of libXC functional names that where used in this entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dft.exact_exchange_mixing_factor": {
      "name": "exact_exchange_mixing_factor",
      "description": "Amount of exact exchange mixed in with the XC functional (value range = [0,1]).",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "aggregatable": false
    },
    "results.method.simulation.dft.hubbard_kanamori_model.u_effective": {
      "name": "u_effective",
      "description": "Value of the effective U parameter (u - j).",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.dft.hubbard_kanamori_model.u": {
      "name": "u",
      "description": "Value of the (intraorbital) Hubbard interaction",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.dft.hubbard_kanamori_model.j": {
      "name": "j",
      "description": "Value of the exchange interaction. In rotational invariant systems, j = jh.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.projection.type": {
      "name": "type",
      "description": "Projection type for the virtual orbitals: Wannier or Slater-Koster formalisms, or a\ncustom tight-binding model.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "wannier",
          "slater_koster",
          "custom"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.projection.localization_type": {
      "name": "localization_type",
      "description": "Localization type of the virtual Wannier orbitals.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "single_shot",
          "maximally_localized"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.gw.type": {
      "name": "type",
      "description": "GW Hedin's self-consistency cycle:\n\n| Name      | Description                      | Reference             |\n\n| --------- | -------------------------------- | --------------------- |\n\n| `'G0W0'`  | single-shot                      | PRB 74, 035101 (2006) |\n\n| `'scGW'`  | self-consistent G and W               | PRB 75, 235102 (2007) |\n\n| `'scGW0'` | self-consistent G with fixed W0  | PRB 54, 8411 (1996)   |\n\n| `'scG0W'` | self-consistent W with fixed G0  | -                     |\n\n| `'ev-scGW0'`  | eigenvalues self-consistent G with fixed W0   | PRB 34, 5390 (1986)   |\n\n| `'ev-scGW'`  | eigenvalues self-consistent G and W   | PRB 74, 045102 (2006)   |\n\n| `'qp-scGW0'`  | quasiparticle self-consistent G with fixed W0 | PRL 99, 115109 (2007) |\n\n| `'qp-scGW'`  | quasiparticle self-consistent G and W | PRL 96, 226402 (2006) |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "G0W0",
          "scGW",
          "scGW0",
          "scG0W",
          "ev-scGW0",
          "ev-scGW",
          "qp-scGW0",
          "qp-scGW"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.gw.basis_set_type": {
      "name": "basis_set_type",
      "description": "The used basis set functions.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "(L)APW+lo",
          "gaussians",
          "numeric AOs",
          "plane waves",
          "psinc functions",
          "real-space grid",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.gw.starting_point_type": {
      "name": "starting_point_type",
      "description": "The libXC based xc functional classification used in the starting point DFT simulation.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "LDA",
          "GGA",
          "meta-GGA",
          "hyper-GGA",
          "hybrid",
          "HF",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true
    },
    "results.method.simulation.gw.starting_point_names": {
      "name": "starting_point_names",
      "description": "The list of libXC functional names that where used in this entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.bse.type": {
      "name": "type",
      "description": "Type of BSE hamiltonian solved:\n\n    H_BSE = H_diagonal + 2 * gx * Hx - gc * Hc\n\nwhere gx, gc specifies the type.\n\nOnline resources for the theory:\n- http://exciting.wikidot.com/carbon-excited-states-from-bse#toc1\n- https://www.vasp.at/wiki/index.php/Bethe-Salpeter-equations_calculations\n- https://docs.abinit.org/theory/bse/\n- https://www.yambo-code.eu/wiki/index.php/Bethe-Salpeter_kernel\n\n| Name | Description |\n\n| --------- | ----------------------- |\n\n| `'Singlet'` | gx = 1, gc = 1 |\n\n| `'Triplet'` | gx = 0, gc = 1 |\n\n| `'IP'` | Independent-particle approach |\n\n| `'RPA'` | Random Phase Approximation |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "Singlet",
          "Triplet",
          "IP",
          "RPA"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.bse.basis_set_type": {
      "name": "basis_set_type",
      "description": "The used basis set functions.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "(L)APW+lo",
          "gaussians",
          "numeric AOs",
          "plane waves",
          "psinc functions",
          "real-space grid",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.bse.starting_point_type": {
      "name": "starting_point_type",
      "description": "The libXC based xc functional classification used in the starting point DFT simulation.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "LDA",
          "GGA",
          "meta-GGA",
          "hyper-GGA",
          "hybrid",
          "HF",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true
    },
    "results.method.simulation.bse.starting_point_names": {
      "name": "starting_point_names",
      "description": "The list of libXC functional names that where used in this entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.bse.solver": {
      "name": "solver",
      "description": "Solver algotithm used to diagonalize the BSE Hamiltonian.\n\n| Name | Description | Reference |\n\n| --------- | ----------------------- | ----------- |\n\n| `'Full-diagonalization'` | Full diagonalization of the BSE Hamiltonian | - |\n\n| `'Lanczos-Haydock'` | Subspace iterative Lanczos-Haydock algorithm | https://doi.org/10.1103/PhysRevB.59.5441 |\n\n| `'GMRES'` | Generalized minimal residual method | https://doi.org/10.1137/0907058 |\n\n| `'SLEPc'` | Scalable Library for Eigenvalue Problem Computations | https://slepc.upv.es/ |\n\n| `'TDA'` | Tamm-Dancoff approximation | https://doi.org/10.1016/S0009-2614(99)01149-5 |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "Full-diagonalization",
          "Lanczos-Haydock",
          "GMRES",
          "SLEPc",
          "TDA"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.bse.gw_type": {
      "name": "gw_type",
      "description": "GW Hedin's self-consistency cycle:\n\n| Name      | Description                      | Reference             |\n\n| --------- | -------------------------------- | --------------------- |\n\n| `'G0W0'`  | single-shot                      | PRB 74, 035101 (2006) |\n\n| `'scGW'`  | self-consistent G and W               | PRB 75, 235102 (2007) |\n\n| `'scGW0'` | self-consistent G with fixed W0  | PRB 54, 8411 (1996)   |\n\n| `'scG0W'` | self-consistent W with fixed G0  | -                     |\n\n| `'ev-scGW0'`  | eigenvalues self-consistent G with fixed W0   | PRB 34, 5390 (1986)   |\n\n| `'ev-scGW'`  | eigenvalues self-consistent G and W   | PRB 74, 045102 (2006)   |\n\n| `'qp-scGW0'`  | quasiparticle self-consistent G with fixed W0 | PRL 99, 115109 (2007) |\n\n| `'qp-scGW'`  | quasiparticle self-consistent G and W | PRL 96, 226402 (2006) |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "G0W0",
          "scGW",
          "scGW0",
          "scG0W",
          "ev-scGW0",
          "ev-scGW",
          "qp-scGW0",
          "qp-scGW"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dmft.impurity_solver_type": {
      "name": "impurity_solver_type",
      "description": "Impurity solver method used in the DMFT loop:\n\n| Name              | Reference                            |\n\n| ----------------- | ------------------------------------ |\n\n| `'CT-INT'`        | Rubtsov et al., JEPT Lett 80 (2004)  |\n\n| `'CT-HYB'`        | Werner et al., PRL 97 (2006)         |\n\n| `'CT-AUX'`        | Gull et al., EPL 82 (2008)           |\n\n| `'ED'`            | Caffarrel et al, PRL 72 (1994)       |\n\n| `'NRG'`           | Bulla et al., RMP 80 (2008)          |\n\n| `'MPS'`           | Ganahl et al., PRB 90 (2014)         |\n\n| `'IPT'`           | Georges et al., PRB 45 (1992)        |\n\n| `'NCA'`           | Pruschke et al., PRB 47 (1993)       |\n\n| `'OCA'`           | Pruschke et al., PRB 47 (1993)       |\n\n| `'slave_bosons'`  | Kotliar et al., PRL 57 (1986)        |\n\n| `'hubbard_I'`     | -                                    |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "CT-INT",
          "CT-HYB",
          "CT-AUX",
          "ED",
          "NRG",
          "MPS",
          "IPT",
          "NCA",
          "OCA",
          "slave_bosons",
          "hubbard_I"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dmft.inverse_temperature": {
      "name": "inverse_temperature",
      "description": "Inverse temperature = 1/(kB*T).",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "1 / joule",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.dmft.magnetic_state": {
      "name": "magnetic_state",
      "description": "Magnetic state in which the DMFT calculation is done.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "paramagnetic",
          "ferromagnetic",
          "antiferromagnetic"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.dmft.u": {
      "name": "u",
      "description": "Value of the (intraorbital) Hubbard interaction",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.dmft.jh": {
      "name": "jh",
      "description": "Value of the (interorbital) Hund's coupling.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.dmft.analytical_continuation": {
      "name": "analytical_continuation",
      "description": "Analytical continuation used to continuate the imaginary space Green's functions into\nthe real frequencies space.\n\n| Name           | Description         | Reference                        |\n\n| -------------- | ------------------- | -------------------------------- |\n\n| `'Pade'` | Pade's approximant  | https://www.sciencedirect.com/science/article/pii/0021999173901277?via%3Dihub |\n\n| `'MaxEnt'` | Maximum Entropy method | https://journals.aps.org/prb/abstract/10.1103/PhysRevB.41.2380 |\n\n| `'SVD'` | Singular value decomposition | https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.75.517 |\n\n| `'Stochastic'` | Stochastic method | https://journals.aps.org/prb/abstract/10.1103/PhysRevB.57.10287 |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "Pade",
          "MaxEnt",
          "SVD",
          ""
        ]
      },
      "shape": [],
      "aggregatable": true
    },
    "results.method.simulation.precision.k_line_density": {
      "name": "k_line_density",
      "description": "Amount of sampled k-points per unit reciprocal length along each axis.\nContains the least precise density out of all axes.\nShould only be compared between calulations of similar dimensionality.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.precision.native_tier": {
      "name": "native_tier",
      "description": "The code-specific tag indicating the precision used\nfor the basis set and meshes of numerical routines.\n\nSupported codes (with hyperlinks to the relevant documentation):\n- [`VASP`](https://www.vasp.at/wiki/index.php/PREC)\n- `FHI-aims`\n- [`CASTEP`](http://www.tcm.phy.cam.ac.uk/castep/documentation/WebHelp/CASTEP.html#modules/castep/tskcastepsetelecquality.htm?Highlight=ultra-fine)",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.method.simulation.precision.basis_set": {
      "name": "basis_set",
      "description": "The type of basis set used by the program.\n\n| Value                          |                       Description |\n| ------------------------------ | --------------------------------- |\n| `'APW'`                        | Augmented plane waves             |\n| `'LAPW'`                       | Linearized augmented plane waves  |\n| `'APW+lo'`             | Augmented plane waves with local orbitals |\n| `'LAPW+lo'` | Linearized augmented plane waves with local orbitals |\n| `'(L)APW'`                     |     A combination of APW and LAPW |\n| `'(L)APW+lo'`  | A combination of APW and LAPW with local orbitals |\n| `'plane waves'`                | Plane waves                       |\n| `'gaussians + plane waves'`    | Basis set of the Quickstep algorithm (DOI: 10.1016/j.cpc.2004.12.014) |\n| `'real-space grid'`            | Real-space grid                   |\n| `'suppport functions'`         | Support functions                 |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "atom-centered orbitals",
          "APW",
          "LAPW",
          "APW+lo",
          "LAPW+lo",
          "(L)APW",
          "(L)APW+lo",
          "plane waves",
          "gaussians + plane waves",
          "real-space grid",
          "support functions",
          "unavailable",
          "not processed"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.method.simulation.precision.planewave_cutoff": {
      "name": "planewave_cutoff",
      "description": "Spherical cutoff in reciprocal space for a plane-wave basis set. It is the energy\nof the highest plane-wave ($\\frac{\\hbar^2|k+G|^2}{2m_e}$) included in the basis\nset.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.method.simulation.precision.apw_cutoff": {
      "name": "apw_cutoff",
      "description": "The spherical cutoff parameter for the interstitial plane waves in the LAPW family.\nThis cutoff is unitless, referring to the product of the smallest muffin-tin radius\nand the length of the cutoff reciprocal vector ($r_{MT} * |K_{cut}|$).",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.method.measurement.xrd.diffraction_method_name": {
      "name": "diffraction_method_name",
      "description": "The diffraction method used to obtain the diffraction pattern.\n| X-Ray Diffraction Method                                   | Description                                                                                                                                                                                                 |\n|------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **Powder X-Ray Diffraction (PXRD)**                        | The term \"powder\" refers more to the random orientation of small crystallites than to the physical form of the sample. Can be used with non-powder samples if they present random crystallite orientations. |\n| **Single Crystal X-Ray Diffraction (SCXRD)**               | Used for determining the atomic structure of a single crystal.                                                                                                                                              |\n| **High-Resolution X-Ray Diffraction (HRXRD)**              | A technique typically used for detailed characterization of epitaxial thin films using precise diffraction measurements.                                                                                    |\n| **Small-Angle X-Ray Scattering (SAXS)**                    | Used for studying nanostructures in the size range of 1-100 nm. Provides information on particle size, shape, and distribution.                                                                             |\n| **X-Ray Reflectivity (XRR)**                               | Used to study thin film layers, interfaces, and multilayers. Provides info on film thickness, density, and roughness.                                                                                       |\n| **Grazing Incidence X-Ray Diffraction (GIXRD)**            | Primarily used for the analysis of thin films with the incident beam at a fixed shallow angle.                                                                                                              |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "Powder X-Ray Diffraction (PXRD)",
          "Single Crystal X-Ray Diffraction (SCXRD)",
          "High-Resolution X-Ray Diffraction (HRXRD)",
          "Small-Angle X-Ray Scattering (SAXS)",
          "X-Ray Reflectivity (XRR)",
          "Grazing Incidence X-Ray Diffraction (GIXRD)",
          "unavailable"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.n_calculations": {
      "name": "n_calculations",
      "description": "The number of performed single configuration calculations.'",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.properties.available_properties": {
      "name": "available_properties",
      "description": "Subset of the property names that are present in this entry.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true
    },
    "results.properties.structural.radial_distribution_function.type": {
      "name": "type",
      "description": "Describes if the observable is calculated at the molecular or atomic level.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "molecular",
          "atomic"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.structural.radial_distribution_function.label": {
      "name": "label",
      "description": "Describes the atoms or molecule types involved in determining the property.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.structural.radial_distribution_function.provenance.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.structural.radial_distribution_function.provenance.molecular_dynamics.time_step": {
      "name": "time_step",
      "description": "The timestep at which the numerical integration is performed.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "second",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.structural.radial_distribution_function.provenance.molecular_dynamics.ensemble_type": {
      "name": "ensemble_type",
      "description": "The type of thermodynamic ensemble that was simulated.\n\nAllowed values are:\n\n| Thermodynamic Ensemble          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"NVE\"`           | Constant number of particles, volume, and energy |\n\n| `\"NVT\"`           | Constant number of particles, volume, and temperature |\n\n| `\"NPT\"`           | Constant number of particles, pressure, and temperature |\n\n| `\"NPH\"`           | Constant number of particles, pressure, and enthalpy |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "NVE",
          "NVT",
          "NPT",
          "NPH"
        ]
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.structural.radius_of_gyration.kind": {
      "name": "kind",
      "description": "Kind of the quantity.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.structural.radius_of_gyration.label": {
      "name": "label",
      "description": "Describes the atoms or molecule types involved in determining the property.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.structural.radius_of_gyration.provenance.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.structural.radius_of_gyration.provenance.molecular_dynamics.time_step": {
      "name": "time_step",
      "description": "The timestep at which the numerical integration is performed.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "second",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.structural.radius_of_gyration.provenance.molecular_dynamics.ensemble_type": {
      "name": "ensemble_type",
      "description": "The type of thermodynamic ensemble that was simulated.\n\nAllowed values are:\n\n| Thermodynamic Ensemble          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"NVE\"`           | Constant number of particles, volume, and energy |\n\n| `\"NVT\"`           | Constant number of particles, volume, and temperature |\n\n| `\"NPT\"`           | Constant number of particles, pressure, and temperature |\n\n| `\"NPH\"`           | Constant number of particles, pressure, and enthalpy |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "NVE",
          "NVT",
          "NPT",
          "NPH"
        ]
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.structural.diffraction_pattern.incident_beam_wavelength": {
      "name": "incident_beam_wavelength",
      "description": "The wavelength of the incident beam.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.dynamical.mean_squared_displacement.type": {
      "name": "type",
      "description": "Describes if the correlation function is calculated at the molecular or atomic level.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "molecular",
          "atomic"
        ]
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.dynamical.mean_squared_displacement.label": {
      "name": "label",
      "description": "Describes the atoms or molecule types involved in determining the property.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.dynamical.mean_squared_displacement.provenance.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.dynamical.mean_squared_displacement.provenance.molecular_dynamics.time_step": {
      "name": "time_step",
      "description": "The timestep at which the numerical integration is performed.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "second",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.dynamical.mean_squared_displacement.provenance.molecular_dynamics.ensemble_type": {
      "name": "ensemble_type",
      "description": "The type of thermodynamic ensemble that was simulated.\n\nAllowed values are:\n\n| Thermodynamic Ensemble          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"NVE\"`           | Constant number of particles, volume, and energy |\n\n| `\"NVT\"`           | Constant number of particles, volume, and temperature |\n\n| `\"NPT\"`           | Constant number of particles, pressure, and temperature |\n\n| `\"NPH\"`           | Constant number of particles, pressure, and enthalpy |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "NVE",
          "NVT",
          "NPT",
          "NPH"
        ]
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.structures.structure_original.nperiodic_dimensions": {
      "name": "nperiodic_dimensions",
      "description": "An integer specifying the number of periodic dimensions in the\nstructure, equivalent to the number of non-zero entries in\ndimension_types.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.properties.structures.structure_original.n_sites": {
      "name": "n_sites",
      "description": "An integer specifying the length of the cartesian_site_positions property.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.properties.structures.structure_original.cell_volume": {
      "name": "cell_volume",
      "description": "Volume of the cell.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter ** 3",
      "aggregatable": false
    },
    "results.properties.structures.structure_original.lattice_parameters.a": {
      "name": "a",
      "description": "Length of the first basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_original.lattice_parameters.b": {
      "name": "b",
      "description": "Length of the second basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_original.lattice_parameters.c": {
      "name": "c",
      "description": "Length of the third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_original.lattice_parameters.alpha": {
      "name": "alpha",
      "description": "Angle between second and third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.structures.structure_original.lattice_parameters.beta": {
      "name": "beta",
      "description": "Angle between first and third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.structures.structure_original.lattice_parameters.gamma": {
      "name": "gamma",
      "description": "Angle between first and second basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.nperiodic_dimensions": {
      "name": "nperiodic_dimensions",
      "description": "An integer specifying the number of periodic dimensions in the\nstructure, equivalent to the number of non-zero entries in\ndimension_types.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.n_sites": {
      "name": "n_sites",
      "description": "An integer specifying the length of the cartesian_site_positions property.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.cell_volume": {
      "name": "cell_volume",
      "description": "Volume of the cell.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter ** 3",
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.lattice_parameters.a": {
      "name": "a",
      "description": "Length of the first basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.lattice_parameters.b": {
      "name": "b",
      "description": "Length of the second basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.lattice_parameters.c": {
      "name": "c",
      "description": "Length of the third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.lattice_parameters.alpha": {
      "name": "alpha",
      "description": "Angle between second and third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.lattice_parameters.beta": {
      "name": "beta",
      "description": "Angle between first and third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.structures.structure_conventional.lattice_parameters.gamma": {
      "name": "gamma",
      "description": "Angle between first and second basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.nperiodic_dimensions": {
      "name": "nperiodic_dimensions",
      "description": "An integer specifying the number of periodic dimensions in the\nstructure, equivalent to the number of non-zero entries in\ndimension_types.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.n_sites": {
      "name": "n_sites",
      "description": "An integer specifying the length of the cartesian_site_positions property.",
      "type": {
        "type_kind": "python",
        "type_data": "int"
      },
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.cell_volume": {
      "name": "cell_volume",
      "description": "Volume of the cell.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter ** 3",
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.lattice_parameters.a": {
      "name": "a",
      "description": "Length of the first basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.lattice_parameters.b": {
      "name": "b",
      "description": "Length of the second basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.lattice_parameters.c": {
      "name": "c",
      "description": "Length of the third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.lattice_parameters.alpha": {
      "name": "alpha",
      "description": "Angle between second and third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.lattice_parameters.beta": {
      "name": "beta",
      "description": "Angle between first and third basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.structures.structure_primitive.lattice_parameters.gamma": {
      "name": "gamma",
      "description": "Angle between first and second basis vector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "radian",
      "aggregatable": false
    },
    "results.properties.electronic.band_gap.index": {
      "name": "index",
      "description": "The spin channel index.",
      "type": {
        "type_kind": "numpy",
        "type_data": "int32"
      },
      "aggregatable": false
    },
    "results.properties.electronic.band_gap.value": {
      "name": "value",
      "description": "The actual value of the band gap. Value of zero indicates a vanishing band gap and\nis distinct from sources lacking any band gap measurement or calculation.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.electronic.band_gap.type": {
      "name": "type",
      "description": "Band gap type.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "direct",
          "indirect"
        ]
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.electronic.band_gap.provenance.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.electronic.dos_electronic.spin_polarized": {
      "name": "spin_polarized",
      "description": "Whether the DOS is spin-polarized, i.e. is contains channels for both\nspin values.",
      "type": {
        "type_kind": "python",
        "type_data": "bool"
      },
      "aggregatable": true
    },
    "results.properties.electronic.dos_electronic.band_gap.index": {
      "name": "index",
      "description": "The spin channel index.",
      "type": {
        "type_kind": "numpy",
        "type_data": "int32"
      },
      "aggregatable": false
    },
    "results.properties.electronic.dos_electronic.band_gap.value": {
      "name": "value",
      "description": "The actual value of the band gap. Value of zero indicates a vanishing band gap and\nis distinct from sources lacking any band gap measurement or calculation.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.electronic.dos_electronic.band_gap.type": {
      "name": "type",
      "description": "Band gap type.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "direct",
          "indirect"
        ]
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.electronic.dos_electronic.band_gap.provenance.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.electronic.band_structure_electronic.spin_polarized": {
      "name": "spin_polarized",
      "description": "Whether the band structure is spin-polarized, i.e. is contains channels\nfor both spin values.",
      "type": {
        "type_kind": "python",
        "type_data": "bool"
      },
      "aggregatable": true
    },
    "results.properties.electronic.band_structure_electronic.band_gap.index": {
      "name": "index",
      "description": "The spin channel index.",
      "type": {
        "type_kind": "numpy",
        "type_data": "int32"
      },
      "aggregatable": false
    },
    "results.properties.electronic.band_structure_electronic.band_gap.value": {
      "name": "value",
      "description": "The actual value of the band gap. Value of zero indicates a vanishing band gap and\nis distinct from sources lacking any band gap measurement or calculation.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.electronic.band_structure_electronic.band_gap.type": {
      "name": "type",
      "description": "Band gap type.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "direct",
          "indirect"
        ]
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.electronic.band_structure_electronic.band_gap.provenance.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.optoelectronic.solar_cell.efficiency": {
      "name": "efficiency",
      "description": "Power conversion effciency of a solar cell in percentage %.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.properties.optoelectronic.solar_cell.fill_factor": {
      "name": "fill_factor",
      "description": "Fill factor of a solar cell in absolute values (from 0 to 1).",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "shape": [],
      "aggregatable": false
    },
    "results.properties.optoelectronic.solar_cell.open_circuit_voltage": {
      "name": "open_circuit_voltage",
      "description": "Open circuit voltage of a solar cell.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "volt",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.optoelectronic.solar_cell.short_circuit_current_density": {
      "name": "short_circuit_current_density",
      "description": "Short circuit current density of a solar cell.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "ampere / meter ** 2",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.optoelectronic.solar_cell.illumination_intensity": {
      "name": "illumination_intensity",
      "description": "The light intensity during the IV measurement.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "watt / meter ** 2",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.optoelectronic.solar_cell.device_area": {
      "name": "device_area",
      "description": "The total area of the cell during IV and stability measurements under illumination.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter ** 2",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.optoelectronic.solar_cell.device_architecture": {
      "name": "device_architecture",
      "description": "Device architecture of the solar cell. Examples are:\n`pn-Heterojunction`, `pin`, `nip`, ...",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.optoelectronic.solar_cell.device_stack": {
      "name": "device_stack",
      "description": "Layers of the entire device.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.optoelectronic.solar_cell.absorber": {
      "name": "absorber",
      "description": "Absorber layers used in the solar cell.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.optoelectronic.solar_cell.absorber_fabrication": {
      "name": "absorber_fabrication",
      "description": "Technique describing the fabrication of the absorber layer. Examples are:\n`Spin-coating`, `Evaporation`, `Doctor blading`, ...",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.optoelectronic.solar_cell.electron_transport_layer": {
      "name": "electron_transport_layer",
      "description": "Electron selective contact layers used in the solar cell.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.optoelectronic.solar_cell.hole_transport_layer": {
      "name": "hole_transport_layer",
      "description": "Hole selective contact layers used in the solar cell.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.optoelectronic.solar_cell.substrate": {
      "name": "substrate",
      "description": "Substrate layers used in the solar cell.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.optoelectronic.solar_cell.back_contact": {
      "name": "back_contact",
      "description": "Back contact layers used in the solar cell.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.mechanical.energy_volume_curve.type": {
      "name": "type",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "raw",
          "mie_gruneisen",
          "pack_evans_james",
          "vinet",
          "tait",
          "birch_euler",
          "pourier_tarantola",
          "birch_lagrange",
          "birch_murnaghan",
          "murnaghan"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.mechanical.bulk_modulus.type": {
      "name": "type",
      "description": "Describes the methodology for obtaining the value.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "mie_gruneisen",
          "pack_evans_james",
          "vinet",
          "tait",
          "birch_euler",
          "pourier_tarantola",
          "birch_lagrange",
          "birch_murnaghan",
          "murnaghan",
          "voigt_average",
          "reuss_average",
          "voigt_reuss_hill_average"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.mechanical.bulk_modulus.value": {
      "name": "value",
      "description": "Bulk modulus value.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "pascal",
      "aggregatable": false
    },
    "results.properties.mechanical.shear_modulus.type": {
      "name": "type",
      "description": "Describes the methodology for obtaining the value.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "voigt_average",
          "reuss_average",
          "voigt_reuss_hill_average"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.mechanical.shear_modulus.value": {
      "name": "value",
      "description": "Shear modulus value.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "pascal",
      "aggregatable": false
    },
    "results.properties.thermodynamic.trajectory.available_properties": {
      "name": "available_properties",
      "description": "Subset of the property names that are present in this trajectory.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "temperature",
          "pressure",
          "volume",
          "energy_potential"
        ]
      },
      "shape": [
        "0..*"
      ],
      "aggregatable": true
    },
    "results.properties.thermodynamic.trajectory.provenance.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.thermodynamic.trajectory.provenance.molecular_dynamics.time_step": {
      "name": "time_step",
      "description": "The timestep at which the numerical integration is performed.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "second",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.thermodynamic.trajectory.provenance.molecular_dynamics.ensemble_type": {
      "name": "ensemble_type",
      "description": "The type of thermodynamic ensemble that was simulated.\n\nAllowed values are:\n\n| Thermodynamic Ensemble          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"NVE\"`           | Constant number of particles, volume, and energy |\n\n| `\"NVT\"`           | Constant number of particles, volume, and temperature |\n\n| `\"NPT\"`           | Constant number of particles, pressure, and temperature |\n\n| `\"NPH\"`           | Constant number of particles, pressure, and enthalpy |",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "NVE",
          "NVT",
          "NPT",
          "NPH"
        ]
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.spectroscopic.spectra.type": {
      "name": "type",
      "description": "Identifier for the methodology done to obtain the spectra data: EELS, XAS, XPS, etc.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "EELS",
          "XAS",
          "XANES",
          "EXAFS",
          "XES",
          "XPS",
          "RXIS",
          "unavailable"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.spectroscopic.spectra.label": {
      "name": "label",
      "description": "Identifier for the source of the spectra data, either 'computation' or 'experiment'.",
      "type": {
        "type_kind": "Enum",
        "type_data": [
          "computation",
          "experiment"
        ]
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.spectroscopic.spectra.provenance.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.spectroscopic.spectra.provenance.eels.detector_type": {
      "name": "detector_type",
      "description": "Detector type.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "aggregatable": true,
      "suggestion": true
    },
    "results.properties.spectroscopic.spectra.provenance.eels.resolution": {
      "name": "resolution",
      "description": "Energy resolution of the detector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "aggregatable": false
    },
    "results.properties.spectroscopic.spectra.provenance.eels.max_energy": {
      "name": "max_energy",
      "description": "Maximum energy of the detector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "aggregatable": false
    },
    "results.properties.spectroscopic.spectra.provenance.eels.min_energy": {
      "name": "min_energy",
      "description": "Minimum energy of the detector.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "aggregatable": false
    },
    "results.properties.spectroscopic.spectra.provenance.electronic_structure.label": {
      "name": "label",
      "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [],
      "aggregatable": true
    },
    "results.properties.geometry_optimization.convergence_tolerance_energy_difference": {
      "name": "convergence_tolerance_energy_difference",
      "description": "The input energy difference tolerance criterion.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.geometry_optimization.convergence_tolerance_force_maximum": {
      "name": "convergence_tolerance_force_maximum",
      "description": "The input maximum net force tolerance criterion.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "newton",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.geometry_optimization.final_force_maximum": {
      "name": "final_force_maximum",
      "description": "The maximum net force in the last optimization step.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "newton",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.geometry_optimization.final_energy_difference": {
      "name": "final_energy_difference",
      "description": "The difference in the energy_total between the last two steps during\noptimization.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "joule",
      "shape": [],
      "aggregatable": false
    },
    "results.properties.geometry_optimization.final_displacement_maximum": {
      "name": "final_displacement_maximum",
      "description": "The maximum displacement in the last optimization step with respect to previous.",
      "type": {
        "type_kind": "numpy",
        "type_data": "float64"
      },
      "unit": "meter",
      "shape": [],
      "aggregatable": false
    },
    "results.eln.sections": {
      "name": "sections",
      "description": "The type of sections used in entries to search for. By default these are the names\nof the used section definitions.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true
    },
    "results.eln.tags": {
      "name": "tags",
      "description": "Short tags that are useful to quickly search based on various\nuser defined criteria.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true
    },
    "results.eln.names": {
      "name": "names",
      "description": "Short human readable and descriptive names that appear in\nELN entries.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": false
    },
    "results.eln.descriptions": {
      "name": "descriptions",
      "description": "'Human descriptions that appear in ELN entries.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": false
    },
    "results.eln.instruments": {
      "name": "instruments",
      "description": "The name or type of instrument used in an activity, e.g. process or\nmeasurement.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true
    },
    "results.eln.methods": {
      "name": "methods",
      "description": "The name or the applied method in an activity, e.g. process or measurement",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true
    },
    "results.eln.lab_ids": {
      "name": "lab_ids",
      "description": "The laboratory specific id for any item, e.g. sample, chemical, instrument.",
      "type": {
        "type_kind": "python",
        "type_data": "str"
      },
      "shape": [
        "*"
      ],
      "aggregatable": true,
      "suggestion": true
    },
    "results.material": {
      "name": "material",
      "description": "\n        Section containing information on the material composition and structure.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.material.elemental_composition": {
      "name": "elemental_composition",
      "description": "\n        Section containing information about the concentration of an element,\n        given by its atomic and mass fraction within the system or material.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.material.symmetry": {
      "name": "symmetry",
      "description": "\n        Section containing information about the symmetry of the material. All\n        of these properties are derived by running a symmetry analysis on a\n        representative geometry from the original data. This original geometry\n        is stored in results.properties together with the primitive and\n        conventional structures.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.material.topology": {
      "name": "topology",
      "description": "\n        Describes a a structural part that has been identified within the entry.\n        May be related to other systems.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.material.topology.atoms": {
      "name": "atoms",
      "description": "Describes the atomic structure of the physical system. This includes the atom positions, lattice vectors, etc.",
      "nested": false,
      "repeats": true
    },
    "results.material.topology.elemental_composition": {
      "name": "elemental_composition",
      "description": "\n        Section containing information about the concentration of an element,\n        given by its atomic and mass fraction within the system or material.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.material.topology.system_relation": {
      "name": "system_relation",
      "description": "Contains information about the relation between two different systems.",
      "nested": false,
      "repeats": true
    },
    "results.material.topology.cell": {
      "name": "cell",
      "description": "\n        Properties of a unit cell.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.material.topology.symmetry": {
      "name": "symmetry",
      "description": "\n        Section containing information about the symmetry properties of a\n        conventional cell related to a system.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.material.topology.symmetry.wyckoff_sets": {
      "name": "wyckoff_sets",
      "description": "\n        Section for storing Wyckoff set information. Only available for\n        conventional cells that have undergone symmetry analysis.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.material.topology.metal_coordination": {
      "name": "metal_coordination",
      "description": "Coordination number of an element, which represents the number of atoms directly bonded to the element.",
      "nested": false,
      "repeats": true
    },
    "results.method": {
      "name": "method",
      "description": "\n        Contains a summary of the methodology that has been used in this entry.\n        This methodology applies to all of the reported properties and\n        determines the result of a single energy evalution. The individual\n        properties may be further methodological details affect e.g. the\n        sampling.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.simulation": {
      "name": "simulation",
      "description": "\n        Contains method details for a simulation entry.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.simulation.dft": {
      "name": "dft",
      "description": "\n        Methodology for a DFT calculation.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.simulation.dft.hubbard_kanamori_model": {
      "name": "hubbard_kanamori_model",
      "description": "Setup of the Hubbard model used in DFT+U",
      "nested": true,
      "repeats": true
    },
    "results.method.simulation.projection": {
      "name": "projection",
      "description": "\n        Methodology for a Projection calculation.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.simulation.gw": {
      "name": "gw",
      "description": "\n        Methodology for a GW calculation.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.simulation.bse": {
      "name": "bse",
      "description": "\n        Methodology for a BSE calculation.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.simulation.dmft": {
      "name": "dmft",
      "description": "\n        Methodology for a DMFT calculation.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.simulation.quantum_cms": {
      "name": "quantum_cms",
      "nested": false,
      "repeats": false
    },
    "results.method.simulation.quantum_cms.quantum_circuit": {
      "name": "quantum_circuit",
      "nested": false
    },
    "results.method.simulation.precision": {
      "name": "precision",
      "description": "\n        Contains parameters for controlling or evaluating the convergence of the electronic structure.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.measurement": {
      "name": "measurement",
      "description": "\n        Contains method details for a measurement entry.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.method.measurement.xrd": {
      "name": "xrd",
      "description": "\n        Methodology for an X-Ray Diffraction measurement.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties": {
      "name": "properties",
      "description": "\n        Contains the physical properties that have been calculated or used in\n        this entry.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.structural": {
      "name": "structural",
      "description": "\n        Structural properties.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.structural.radial_distribution_function": {
      "name": "radial_distribution_function",
      "description": "\n        Radial distribution function.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.properties.structural.radial_distribution_function.provenance": {
      "name": "provenance",
      "description": "\n        Contains provenance information for properties derived from molecular\n        dynamics simulations.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.structural.radial_distribution_function.provenance.molecular_dynamics": {
      "name": "molecular_dynamics",
      "description": "\n        Methodology for molecular dynamics.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.structural.radius_of_gyration": {
      "name": "radius_of_gyration",
      "description": "\n        Contains Radius of Gyration values as a trajectory.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.properties.structural.radius_of_gyration.provenance": {
      "name": "provenance",
      "description": "\n        Contains provenance information for properties derived from molecular\n        dynamics simulations.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.structural.radius_of_gyration.provenance.molecular_dynamics": {
      "name": "molecular_dynamics",
      "description": "\n        Methodology for molecular dynamics.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.structural.diffraction_pattern": {
      "name": "diffraction_pattern",
      "description": "\n        Diffraction pattern.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.properties.dynamical": {
      "name": "dynamical",
      "description": "\n        Dynamical properties.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.dynamical.mean_squared_displacement": {
      "name": "mean_squared_displacement",
      "description": "\n        Mean Squared Displacements.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.properties.dynamical.mean_squared_displacement.provenance": {
      "name": "provenance",
      "description": "\n        Contains provenance information for properties derived from molecular\n        dynamics simulations.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.dynamical.mean_squared_displacement.provenance.molecular_dynamics": {
      "name": "molecular_dynamics",
      "description": "\n        Methodology for molecular dynamics.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.structures": {
      "name": "structures",
      "description": "\n        Contains full atomistic representations of the material in different\n        forms.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.structures.structure_original": {
      "name": "structure_original",
      "description": "\n        Describes an atomistic structure.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.structures.structure_original.species": {
      "name": "species",
      "description": "Used to describe the species of the sites of this structure. Species can be pure chemical elements, or virtual-crystal atoms representing a statistical occupation of a\ngiven site by multiple chemical elements.",
      "nested": false,
      "repeats": true
    },
    "results.properties.structures.structure_original.lattice_parameters": {
      "name": "lattice_parameters",
      "description": "\n        Lattice parameters of a cell.\n        ",
      "nested": false
    },
    "results.properties.structures.structure_original.wyckoff_sets": {
      "name": "wyckoff_sets",
      "description": "\n        Section for storing Wyckoff set information. Only available for\n        conventional cells that have undergone symmetry analysis.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.structures.structure_conventional": {
      "name": "structure_conventional",
      "description": "\n        Describes an atomistic structure.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.structures.structure_conventional.species": {
      "name": "species",
      "description": "Used to describe the species of the sites of this structure. Species can be pure chemical elements, or virtual-crystal atoms representing a statistical occupation of a\ngiven site by multiple chemical elements.",
      "nested": false,
      "repeats": true
    },
    "results.properties.structures.structure_conventional.lattice_parameters": {
      "name": "lattice_parameters",
      "description": "\n        Lattice parameters of a cell.\n        ",
      "nested": false
    },
    "results.properties.structures.structure_conventional.wyckoff_sets": {
      "name": "wyckoff_sets",
      "description": "\n        Section for storing Wyckoff set information. Only available for\n        conventional cells that have undergone symmetry analysis.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.structures.structure_primitive": {
      "name": "structure_primitive",
      "description": "\n        Describes an atomistic structure.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.structures.structure_primitive.species": {
      "name": "species",
      "description": "Used to describe the species of the sites of this structure. Species can be pure chemical elements, or virtual-crystal atoms representing a statistical occupation of a\ngiven site by multiple chemical elements.",
      "nested": false,
      "repeats": true
    },
    "results.properties.structures.structure_primitive.lattice_parameters": {
      "name": "lattice_parameters",
      "description": "\n        Lattice parameters of a cell.\n        ",
      "nested": false
    },
    "results.properties.structures.structure_primitive.wyckoff_sets": {
      "name": "wyckoff_sets",
      "description": "\n        Section for storing Wyckoff set information. Only available for\n        conventional cells that have undergone symmetry analysis.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.vibrational": {
      "name": "vibrational",
      "description": "\n        Vibrational properties.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.vibrational.band_structure_phonon": {
      "name": "band_structure_phonon",
      "description": "\n        This section stores information on a vibrational band structure\n        evaluation along one-dimensional pathways in the reciprocal space.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.vibrational.dos_phonon": {
      "name": "dos_phonon",
      "description": "\n        Contains the total phonon density of states.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.vibrational.heat_capacity_constant_volume": {
      "name": "heat_capacity_constant_volume",
      "description": "\n        Contains the values of the specific (per mass) and isochoric (constant\n        volume) heat capacity at different temperatures.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.vibrational.energy_free_helmholtz": {
      "name": "energy_free_helmholtz",
      "description": "\n        Contains the values of the Helmholtz free energy per atom at constant\n        volume and at different temperatures.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.electronic": {
      "name": "electronic",
      "description": "\n        Electronic properties.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.electronic.band_gap": {
      "name": "band_gap",
      "nested": true,
      "repeats": true
    },
    "results.properties.electronic.band_gap.provenance": {
      "name": "provenance",
      "description": "\n    ",
      "nested": false,
      "repeats": true
    },
    "results.properties.electronic.dos_electronic": {
      "name": "dos_electronic",
      "description": "\n        Contains the total electronic density of states.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.electronic.dos_electronic.band_gap": {
      "name": "band_gap",
      "nested": true,
      "repeats": true
    },
    "results.properties.electronic.dos_electronic.band_gap.provenance": {
      "name": "provenance",
      "description": "\n        Contains semantically labelled provenance information.\n        To be stored under PropertySection.provenance or children.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.electronic.band_structure_electronic": {
      "name": "band_structure_electronic",
      "description": "\n        This section stores information on a electonic band structure\n        evaluation along one-dimensional pathways in the reciprocal space.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.electronic.band_structure_electronic.band_gap": {
      "name": "band_gap",
      "nested": true,
      "repeats": true
    },
    "results.properties.electronic.band_structure_electronic.band_gap.provenance": {
      "name": "provenance",
      "description": "\n        Contains semantically labelled provenance information.\n        To be stored under PropertySection.provenance or children.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.electronic.greens_functions_electronic": {
      "name": "greens_functions_electronic",
      "description": "\n        Base class for Green's functions information.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.optoelectronic": {
      "name": "optoelectronic",
      "description": "\n        Optoelectronic properties.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.optoelectronic.solar_cell": {
      "name": "solar_cell",
      "description": "\n        Properties of solar cells.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.mechanical": {
      "name": "mechanical",
      "description": "\n        Mechanical properties.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.mechanical.energy_volume_curve": {
      "name": "energy_volume_curve",
      "description": "\n        Energy volume curve.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.mechanical.bulk_modulus": {
      "name": "bulk_modulus",
      "description": "\n        Contains bulk modulus values calculated with different methodologies.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.properties.mechanical.shear_modulus": {
      "name": "shear_modulus",
      "description": "\n        Contains shear modulus values calculated with different methodologies.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.properties.thermodynamic": {
      "name": "thermodynamic",
      "description": "\n        Thermodynamic properties.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.thermodynamic.trajectory": {
      "name": "trajectory",
      "description": "\n        Thermodynamic properties reported for an ensemble evolving in time.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.properties.thermodynamic.trajectory.provenance": {
      "name": "provenance",
      "description": "\n        Contains provenance information for properties derived from molecular\n        dynamics simulations.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.thermodynamic.trajectory.provenance.molecular_dynamics": {
      "name": "molecular_dynamics",
      "description": "\n        Methodology for molecular dynamics.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.thermodynamic.trajectory.temperature": {
      "name": "temperature",
      "description": "\n        Contains temperature values evaluated at different times.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.thermodynamic.trajectory.pressure": {
      "name": "pressure",
      "description": "\n        Contains pressure values evaluated at different times.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.thermodynamic.trajectory.volume": {
      "name": "volume",
      "description": "\n        Contains volume values evaluated at different times.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.thermodynamic.trajectory.energy_potential": {
      "name": "energy_potential",
      "description": "\n        Contains energy values evaluated at different times.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.spectroscopic": {
      "name": "spectroscopic",
      "description": "\n        Spectroscopic properties.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.properties.spectroscopic.spectra": {
      "name": "spectra",
      "description": "\n        Base class for Spectra calculation information as obtained from an experiment or a computation.\n        ",
      "nested": true,
      "repeats": true
    },
    "results.properties.spectroscopic.spectra.provenance": {
      "name": "provenance",
      "description": "\n        Contains provenance information (mainly the methodology section) for spectra properties\n        derived from an experiment or a calculation.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.spectroscopic.spectra.provenance.eels": {
      "name": "eels",
      "description": "\n        Base class for the EELS methodology.\n        ",
      "nested": false,
      "repeats": true
    },
    "results.properties.spectroscopic.spectra.provenance.electronic_structure": {
      "name": "electronic_structure",
      "description": "\n    ",
      "nested": false,
      "repeats": true
    },
    "results.properties.geometry_optimization": {
      "name": "geometry_optimization",
      "description": "\n        Geometry optimization results and settings.\n        ",
      "nested": false,
      "repeats": false
    },
    "results.eln": {
      "name": "eln",
      "nested": false,
      "repeats": false
    }
  },
  "metainfo": {
    "m_def": "nomad.metainfo.metainfo.Environment",
    "packages": [
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 0,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.simulation.method",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Mesh",
            "description": "Contains the settings for a sampling mesh. Supports uniformly-spaced meshes and symmetry-reduced representations.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "dimensionality",
                "description": "Dimensionality of the mesh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "sampling_method",
                "description": "Method used to generate the mesh:\n\n| Name      | Description                      | Reference             |\n\n| --------- | -------------------------------- | --------------------- |\n\n| `'Gamma-centered'` | Regular mesh is centered around Gamma. No offset. |\n\n| `'Monkhorst-Pack'` | Regular mesh with an offset of half the reciprocal lattice vector. |\n\n| `'Gamma-offcenter'` | Regular mesh with an offset that is neither `'Gamma-centered'`, nor `'Monkhorst-Pack'`. |\n\n| `'Line-path'` | Line path along high-symmetry points. Typically employed for simualting band structures. |\n\n| `'Equidistant'`  | Equidistant 1D grid (also known as 'Newton-Cotes')                      |\n\n| `'Logarithmic'`  | log distance 1D grid               |\n\n| `'Tan'`  | Non-uniform tan mesh for 1D grids. More dense at low abs values of the points, while less dense for higher values |\n\n| `'Gauss-Legendre'` | Quadrature rule for integration using Legendre polynomials |\n\n| `'Gauss-Laguerre'` | Quadrature rule for integration using Laguerre polynomials |\n\n| `'Clenshaw-Curtis'`  | Quadrature rule for integration using Chebyshev polynomials using discrete cosine transformations |\n\n| `'Gauss-Hermite'`  | Quadrature rule for integration using Hermite polynomials |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "Gamma-centered",
                    "Monkhorst-Pack",
                    "Gamma-offcenter",
                    "Line-path",
                    "Equidistant",
                    "Logarithmic",
                    "Tan",
                    "Gauss-Legendre",
                    "Gauss-LaguerreClenshaw-Curtis",
                    "Newton-Cotes",
                    "Gauss-Hermite"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_points",
                "description": "Total number of points in the mesh, accounting for the multiplicities.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "grid",
                "description": "Amount of mesh point sampling along each axis, i.e. [nx, ny, nz].",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "dimensionality"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "points",
                "description": "List of all the points in the mesh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "*",
                  "dimensionality"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "multiplicities",
                "description": "The amount of times the same point reappears. These are accounted for in `n_points`.\nA value larger than 1, typically indicates a symmtery operation that was applied to the mesh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "weights",
                "description": "The frequency of times the same point reappears.\nA value larger than 1, typically indicates a symmtery operation that was applied to the mesh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "LinePathSegment",
            "description": "Contains the settings for a single line path segment in a mesh.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "start_point",
                "description": "Name of the hihg-symmetry starting point of the line path segment.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "end_point",
                "description": "Name of the high-symmetry end point of the line path segment.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_points",
                "description": "Number of points in the line path segment.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "points",
                "description": "List of all the points in the line path segment.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*",
                  3
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "KMesh",
            "description": "Contains the settings for a sampling mesh in 3D reciprocal space. Supports uniformly-spaced meshes, line paths along high-symmetry points,\nas well as symmetry-reduced and full representations.",
            "base_sections": [
              "/packages/0/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "offset",
                "description": "Offset vector shifting the mesh with respect to a Gamma-centered case.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "all_points",
                "description": "Full list of the mesh points without any symmetry operations.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*",
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "high_symmetry_points",
                "description": "Named high symmetry points in the mesh.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "line_path_segments",
                "sub_section": "/packages/0/section_definitions/1",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "FrequencyMesh",
            "description": "Contains the settings for a sampling mesh in 1D frequency space, either real or imaginary.",
            "base_sections": [
              "/packages/0/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "points",
                "description": "List of all the points in the mesh in joules.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_points",
                  "dimensionality"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "smearing",
                "description": "Numerical smearing parameter used for convolutions.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "TimeMesh",
            "description": "Contains the settings for a sampling mesh in 1D time space, either real or imaginary.",
            "base_sections": [
              "/packages/0/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "smearing",
                "description": "Numerical smearing parameter used for convolutions.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "Scf",
            "description": "Section containing the parameters related to self consistency.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "native_tier",
                "description": "The code-specific tag indicating the precision used\nfor the self-consistent cycle.\n\nSupported codes (with hyperlinks to the relevant documentation):\n- `Orca`",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_max_iteration",
                "description": "Specifies the maximum number of allowed self-consistent field (SCF) iterations in\na calculation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.scf_threshold_energy_change"
                  ]
                },
                "name": "threshold_energy_change",
                "description": "Specifies the threshold for the total energy change between two subsequent\nself-consistent field (SCF) iterations. The SCF is considered converged when the\ntotal-energy change between two SCF cycles is below the threshold (possibly in\ncombination with other criteria).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "threshold_density_change",
                "description": "Specifies the threshold for the average charge density change between two\nsubsequent self-consistent field (SCF) iterations. The SCF is considered converged\nwhen the density change between two SCF cycles is below the threshold (possibly in\ncombination with other criteria).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "minimization_algorithm",
                "description": "Specifies the algorithm used for self consistency minimization.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "HubbardKanamoriModel",
            "description": "Setup of the local Hubbard model.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "orbital",
                "description": "Orbital label corresponding to the Hubbard model. The typical orbitals with strong\nHubbard interactions have partially filled '3d', '4d' and '4f' orbitals.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_orbital",
                "description": "Number of non-degenerated orbitals of the same type (s, p, d, f, ...).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.u"
                  ]
                },
                "name": "u",
                "description": "Value of the (intraorbital) Hubbard interaction",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.jh"
                  ]
                },
                "name": "jh",
                "description": "Value of the (interorbital) Hund's coupling.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "up",
                "description": "Value of the (interorbital) Coulomb interaction. In rotational invariant\nsystems, up = u - 2 * jh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.hubbard_kanamori_model.j"
                  ]
                },
                "name": "j",
                "description": "Value of the exchange interaction. In rotational invariant systems, j = jh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.hubbard_kanamori_model.u_effective"
                  ]
                },
                "name": "u_effective",
                "description": "Value of the effective U parameter (u - j).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "slater_integrals",
                "description": "Value of the Slater integrals (F0, F2, F4) in spherical harmonics used to derive\nthe local Hubbard interactions:\n\n    u = ((2.0 / 7.0) ** 2) * (F0 + 5.0 * F2 + 9.0 * F4) / (4.0*np.pi)\n\n    up = ((2.0 / 7.0) ** 2) * (F0 - 5.0 * F2 + 3.0 * 0.5 * F4) / (4.0*np.pi)\n\n    jh = ((2.0 / 7.0) ** 2) * (5.0 * F2 + 15.0 * 0.25 * F4) / (4.0*np.pi)\n\nRef.: Elbio Dagotto, Nanoscale Phase Separation and Colossal Magnetoresistance,\nChapter 4, Springer Berlin (2003).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "umn",
                "description": "Value of the local Coulomb interaction matrix.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_orbital",
                  "n_orbital"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "double_counting_correction",
                "description": "Name of the double counting correction algorithm applied.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "Pseudopotential",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "Native code name of the pseudopotential.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Pseudopotential classification.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "norm_conserving",
                "description": "Denotes whether the pseudopotential is norm-conserving.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "cutoff",
                "description": "Minimum recommended spherical cutoff energy for any plane-wave basis set\nusing the pseudopotential.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "xc_functional_name",
                "description": "Name of the exchange-correlation functional used to generate the pseudopotential.\nFollows the libxc naming convention.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "l_max",
                "description": "Maximum angular momentum of the pseudopotential projectors.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "lm_max",
                "description": "Maximum magnetic momentum of the pseudopotential projectors.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "AtomParameters",
            "description": "Contains method-related information about a kind of atom identified by label. This allows the assignment of an atom-centered basis set or pseudopotential for different\natoms belonging to the same kind.\n\nThrough this section we use the wording \"active\" mainly for defining orbital-related\nquantities. Active refers to the relevant orbital parameters in the atom.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "atom_number",
                "description": "Atomic number (number of protons) of this atom kind, use 0 if not an atom.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "atom_index",
                "description": "The atom index with respect to the parsed system atoms section.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_valence_electrons",
                "description": "Number of valence electrons.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_core_electrons",
                "description": "Number of core electrons.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "String used to identify the atoms of this kind. This should correspond to the\natom labels of the configuration. It is possible for one atom kind to have\nmultiple labels (in order to allow two atoms of the same kind to have two\ndifferently defined sets of atom-centered basis functions or two different pseudo-\npotentials). Atom kind is typically the symbol of the atomic species but it can be\nalso a ghost or pseudo-atom.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "mass",
                "description": "Mass of the atom.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kilogram"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "pseudopotential_name",
                "description": "Name identifying the pseudopotential used.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "n_orbitals",
                "description": "Number of active orbitals of the atom.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "orbitals",
                "description": "Label of the active orbitals of the atoms.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_orbitals"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "onsite_energies",
                "description": "Values of the atomic onsite energy corresponding to each orbital.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_orbitals"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "charge",
                "description": "Total charge of the atom.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "coulomb"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "charges",
                "description": "Values of the charge corresponding to each orbital.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_orbitals"
                ],
                "unit": "coulomb"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "pseudopotential",
                "sub_section": "/packages/0/section_definitions/7",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "hubbard_kanamori_model",
                "sub_section": "/packages/0/section_definitions/6"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "name": "MoleculeParameters",
            "description": "Contains method-related information about a kind of atom identified by label. This allows the assignment of an atom-centered basis set or pseudopotential for different\natoms belonging to the same kind.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "String to identify the molecule.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "Number of atoms in the molecule.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "atom_parameters",
                "sub_section": "/packages/0/section_definitions/8",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "name": "Photon",
            "description": "Section containing the details of the photon field used for spectrum calculations.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "multipole_type",
                "description": "Type used for the multipolar expansion: dipole, quadrupole, NRIXS, Raman, etc.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "polarization",
                "description": "Direction of the photon polarization in cartesian coordinates.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "energy",
                "description": "Photon energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "momentum_transfer",
                "description": "Momentum transfer which would be important for quadrupole or NRIXS or Raman.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 11,
            "m_parent_sub_section": "section_definitions",
            "name": "GaussianBasisGroup",
            "description": "Section that describes a group of Gaussian contractions. Groups allow one to calculate the primitive Gaussian integrals once for several different linear combinations of\nthem. This defines basis functions with radial part $f_i(r) = r^{l_i} \\sum_{j} c_{i j}\nA(l_i, \\alpha_j) exp(-\\alpha_j r^2)$ where $A(l_i, \\alpha_j)$ is a the normalization\ncoefficient for primitive Gaussian basis functions. Here, $\\alpha_j$ is defined in\ngaussian_basis_group_exponents, $l_i$ is given in gaussian_basis_group_ls, and $c_{i\nj}$ is given in gaussian_basis_group_contractions, whereas the radial part is given by\nthe spherical harmonics $Y_{l m}$.\n\nThis section is defined only if the original basis function uses Gaussian basis\nfunctions, and the sequence of radial functions $f_i$ across all\nsection_gaussian_basis_group in section_basis_set_atom_centered should match the one\nof basis_set_atom_centered_radial_functions.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_contractions",
                "description": "Gives the number of different contractions, i.e. resulting basis functions in a\ngaussian_basis_group section.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_exponents",
                "description": "Gives the number of different Gaussian exponents in a section_gaussian_basis_group\nsection.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "contractions",
                "description": "contraction coefficients $c_{i j}$ defining the contracted basis functions with\nrespect to *normalized* primitive Gaussian functions. They define the Gaussian\nbasis functions as described in section_gaussian_basis_group.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_contractions",
                  "n_exponents"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "exponents",
                "description": "Exponents $\\alpha_j$ of the Gaussian functions defining this basis set\n$exp(-\\alpha_j r^2)$. One should be careful about the units of the coefficients.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_exponents"
                ],
                "unit": "1 / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "ls",
                "description": "Azimuthal quantum number ($l$) values (of the angular part given by the spherical\nharmonic $Y_{l m}$ of the various contracted basis functions).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_contractions"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 12,
            "m_parent_sub_section": "section_definitions",
            "name": "BasisSetAtomCentered",
            "description": "This section describes the atom-centered basis set. The main contained information is a short, non unique but human-interpretable, name for identifying the basis set\n(short_name), a longer unique name, the atomic number of the atomic species the\nbasis set is meant for.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "Code-specific, but explicative, base name for the basis set.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "formula",
                "description": "Generalized representation of the basis set, e.g. 'STO-3G', '6-31G(d)', 'cc-pVDZ',\netc.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "atom_number",
                "description": "Atomic number (i.e., number of protons) of the atom for which this basis set is\nconstructed (0 means unspecified or a pseudo atom).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_basis_functions",
                "description": "Gives the number of different basis functions in a basis_set_atom_centered\nsection. This equals the number of actual coefficients that are specified when\nusing this basis set.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "gaussian_basis_group",
                "sub_section": "/packages/0/section_definitions/11",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 13,
            "m_parent_sub_section": "section_definitions",
            "name": "OrbitalAPW",
            "description": "Definiton of a APW wavefunction per orbital.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "State",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "APW",
                    "LAPW",
                    "LO",
                    "spherical Dirac"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_quantum_number",
                "description": "Main quantum number $n$ specifying the orbital.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "l_quantum_number",
                "description": "Angular momentum / azimuthal quantum number $l$ specifying the orbital.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "j_quantum_number",
                "description": "Total angular momentum quantum number $j$ specifying the orbital,\nwhere $j$ ranges from $l-s$ to $l+s$.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "kappa_quantum_number",
                "description": "Relativistic angular momentum quantum number specifying the orbital\n$\\kappa = (l-j)(2j+1)$.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "occupation",
                "description": "Number of electrons populating the orbital.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "core_level",
                "description": "Boolean denoting whether the orbital is treated differently from valence orbitals.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "energy_parameter",
                "description": "Reference energy parameter for the augmented plane wave (APW) basis set.\nIs used to set the energy parameter for each state.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "energy_parameter_n",
                "description": "Reference number of radial nodes for the augmented plane wave (APW) basis set.\nThis is used to derive the `energy_parameter`.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "order",
                "description": "Derivative order of the radial wavefunction term.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "boundary_condition_order",
                "description": "Differential order to which the radial wavefunction is matched at the boundary.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "update",
                "description": "Allow the code to optimize the initial energy parameter.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "updated",
                "description": "Initial energy parameter after code optimization.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 14,
            "m_parent_sub_section": "section_definitions",
            "name": "BasisSetMesh",
            "description": "All geometry-related information of the basis set (mesh).",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "shape",
                "description": "Geometry of the basis set mesh.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "cubic",
                    "rectangular",
                    "spherical",
                    "ellipsoidal",
                    "cylindrical"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "box_lengths",
                "description": "Dimensions of the box containing the basis set mesh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "radius",
                "description": "Radius of the sphere.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "grid_spacing",
                "description": "Grid spacing of a Cartesian mesh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "radius_lin_spacing",
                "description": "The equidistant spacing of the radial grid.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "radius_log_spacing",
                "description": "The logarithmic spacing of the radial grid.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "n_grid_points",
                "description": "Total number of grid points.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "n_radial_grid_points",
                "description": "Number of grid points on the radial grid.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "n_spherical_grid_points",
                "description": "Number of grid points on the spherical grid.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 15,
            "m_parent_sub_section": "section_definitions",
            "name": "BasisSet",
            "description": "This section contains all basis sets used to represent the wavefunction or electron density.",
            "base_sections": [
              "/packages/0/section_definitions/14"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "The type of basis set used by the program.\n\n| Value                          |                                            Description |\n| ------------------------------ | ------------------------------------------------------ |\n| `'numeric AOs'`                | Numerical atomic orbitals                              |\n| `'gaussians'`                  | Gaussian basis set                                     |\n| `'plane waves'`                | Plane waves                                            |\n| `'psinc functions'`            | Pseudopotential sinc functions                         |\n| `'real-space grid'`            | Real-space grid                                        |\n| `'pbeVaspFit2015'`             | Lobster algorithm for projection plane waves onto LCAO |\n| `'Koga'`                       | Lobster algorithm for projection plane waves onto LCAO |\n| `'Bunge'`                      | Lobster algorithm for projection plane waves onto LCAO |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "numeric AOs",
                    "gaussians",
                    "plane waves",
                    "psinc functions",
                    "real-space grid",
                    "pbeVaspFit2015",
                    "Koga",
                    "Bunge"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "scope",
                "description": "The extent of the electronic structure that the basis set encodes.\nThe partitions could be energetic (e.g. `core`, `valence`) in nature,\nspatial (e.g. `muffin-tin`, `interstitial`), or cover\nHamiltonian components (e.g. `kinetic energy`,\n`electron-electron interaction`), etc.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.planewave_cutoff"
                  ]
                },
                "name": "cutoff",
                "description": "Spherical cutoff in reciprocal space for a plane-wave basis set. It is the energy\nof the highest plane-wave ($\\frac{\\hbar^2|k+G|^2}{2m_e}$) included in the basis\nset.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.apw_cutoff"
                  ]
                },
                "name": "cutoff_fractional",
                "description": "The spherical cutoff parameter for the interstitial plane waves in the LAPW family.\nThis cutoff is unitless, referring to the product of the smallest muffin-tin radius\nand the length of the cutoff reciprocal vector ($r_{MT} * |K_{cut}|$).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "frozen_core",
                "description": "Boolean denoting whether the frozen-core approximation was applied.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "spherical_harmonics_cutoff",
                "description": "Maximum angular momentum $l$ for the spherical harmonics.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "atom_parameters",
                "description": "Reference to a particular atom parameter setup further specifying the basis set.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/8"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "atom_centered",
                "sub_section": "/packages/0/section_definitions/12",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "orbital",
                "sub_section": "/packages/0/section_definitions/13",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 16,
            "m_parent_sub_section": "section_definitions",
            "name": "BasisSetContainer",
            "description": "Container class for `BasisSet`",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.native_tier"
                  ]
                },
                "name": "native_tier",
                "description": "The code-specific tag indicating the precision used\nfor the basis set and meshes of numerical routines.\n\nSupported codes (with hyperlinks to the relevant documentation):\n- [`VASP`](https://www.vasp.at/wiki/index.php/PREC)\n- `FHI-aims`\n- [`CASTEP`](http://www.tcm.phy.cam.ac.uk/castep/documentation/WebHelp/CASTEP.html#modules/castep/tskcastepsetelecquality.htm?Highlight=ultra-fine)",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.basis_set",
                    "results.method.simulation.precision.basis_set__suggestion"
                  ]
                },
                "name": "type",
                "description": "The type of basis set used by the program.\n\n| Value                          |                       Description |\n| ------------------------------ | --------------------------------- |\n| `'APW'`                        | Augmented plane waves             |\n| `'LAPW'`                       | Linearized augmented plane waves  |\n| `'APW+lo'`             | Augmented plane waves with local orbitals |\n| `'LAPW+lo'` | Linearized augmented plane waves with local orbitals |\n| `'(L)APW'`                     |     A combination of APW and LAPW |\n| `'(L)APW+lo'`  | A combination of APW and LAPW with local orbitals |\n| `'plane waves'`                | Plane waves                       |\n| `'gaussians + plane waves'`    | Basis set of the Quickstep algorithm (DOI: 10.1016/j.cpc.2004.12.014) |\n| `'real-space grid'`            | Real-space grid                   |\n| `'suppport functions'`         | Support functions                 |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "atom-centered orbitals",
                    "APW",
                    "LAPW",
                    "APW+lo",
                    "LAPW+lo",
                    "(L)APW",
                    "(L)APW+lo",
                    "plane waves",
                    "gaussians + plane waves",
                    "real-space grid",
                    "support functions",
                    "unavailable",
                    "not processed"
                  ]
                },
                "default": "unavailable"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "scope",
                "description": "The extent of the electronic structure that the basis set encodes.\nThe partitions could be energetic (e.g. `core`, `valence`) in nature,\nspatial (e.g. `muffin-tin`, `interstitial`), or cover\nHamiltonian components (e.g. `kinetic energy`,\n`electron-electron interaction`), etc.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "basis_set",
                "sub_section": "/packages/0/section_definitions/15",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 17,
            "m_parent_sub_section": "section_definitions",
            "name": "Interaction",
            "description": "Section containing the parameters of a contribution to a force field model.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Denotes the classification of the potential.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "Specifies the name of the potential. Can contain information on the species,\ncut-offs, potential versions.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "Number of atoms included in the interaction",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "atom_labels",
                "description": "Labels of the atoms described by the interaction.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "atom_indices",
                "description": "Indices of the atoms in the system described by the interaction.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "functional_form",
                "description": "Specifies the functional form of the interaction potential.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "n_parameters",
                "description": "Specifies the number of parameters in the interaction potential.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "parameters",
                "description": "Dictionary of label and parameters of the interaction potential.",
                "type": {
                  "type_kind": "Any"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 18,
            "m_parent_sub_section": "section_definitions",
            "name": "Model",
            "description": "Section containing the parameters of a force field model. If specified, the parameters corresponding to the individual contributions to the model are given in contributions.\nOtherwise, the parameters can also be found in a reference to the published model.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "Identifies the name of the model.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "reference",
                "description": "Reference to the model e.g. DOI, URL.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "contributions",
                "sub_section": "/packages/0/section_definitions/17",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 19,
            "m_parent_sub_section": "section_definitions",
            "name": "Functional",
            "description": "Section containing the parameters of an exchange or correlation functional.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "Provides the name of one of the exchange and/or correlation (XC) functional\nfollowing the libbx convention.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "parameters",
                "description": "Contains an associative list of non-default values of the parameters for the\nfunctional.\n\nFor example, if a calculations using a hybrid XC functional (e.g., HSE06)\nspecifies a user-given value of the mixing parameter between exact and GGA\nexchange, then this non-default value is stored in this metadata.\n\nThe labels and units of these values may be defined in name.\n\nIf this metadata is not given, the default parameter values for the functional\nare assumed.",
                "type": {
                  "type_kind": "Any"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "weight",
                "description": "Provides the value of the weight for the functional.\n\nThis weight is used in the linear combination of the different functionals. If not\nspecified then the default is set to 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 20,
            "m_parent_sub_section": "section_definitions",
            "name": "XCFunctional",
            "description": "Section describing the exchange-correlation functional used in the DFT calculation. The name of the exchange-correlation functional is given by name and the reference to\nthe published functional is provided by reference. Other contributions to the\nfunctional not covered by exchange, correlation or hybrid types may be specified in\ncontributions.",
            "base_sections": [
              "/packages/0/section_definitions/18"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "exchange",
                "sub_section": "/packages/0/section_definitions/19",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "correlation",
                "sub_section": "/packages/0/section_definitions/19",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "hybrid",
                "sub_section": "/packages/0/section_definitions/19",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "contributions",
                "sub_section": "/packages/0/section_definitions/19",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 21,
            "m_parent_sub_section": "section_definitions",
            "name": "DFT",
            "description": "Section containing the various parameters that define a DFT calculation. These include settings for the exchange correlation functionals, LDA+U, etc.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "self_interaction_correction_method",
                "description": "Contains the name for the self-interaction correction (SIC) treatment used to\ncalculate the final energy and related quantities. If skipped or empty, no special\ncorrection is applied.\n\nThe following SIC methods are available:\n\n| SIC method                | Description                       |\n\n| ------------------------- | --------------------------------  |\n\n| `\"\"`                      | No correction                     |\n\n| `\"SIC_AD\"`                | The average density correction    |\n\n| `\"SIC_SOSEX\"`             | Second order screened exchange    |\n\n| `\"SIC_EXPLICIT_ORBITALS\"` | (scaled) Perdew-Zunger correction explicitly on a\nset of orbitals |\n\n| `\"SIC_MAURI_SPZ\"`         | (scaled) Perdew-Zunger expression on the spin\ndensity / doublet unpaired orbital |\n\n| `\"SIC_MAURI_US\"`          | A (scaled) correction proposed by Mauri and co-\nworkers on the spin density / doublet unpaired orbital |",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "xc_functional",
                "sub_section": "/packages/0/section_definitions/20"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 22,
            "m_parent_sub_section": "section_definitions",
            "name": "Wannier",
            "description": "Section containing the various parameters that define a Wannier tight-binding method.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_projected_orbitals",
                "description": "Number of Wannier orbitals used to fit the DFT band structure",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_bands",
                "description": "Number of input Bloch bands to calculate the projection matrix.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "is_maximally_localized",
                "description": "Are the projected orbitals maximally localized or just a single-shot projection?",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "convergence_tolerance_max_localization",
                "description": "Convergence tolerance for maximal localization of the projected orbitals.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "energy_window_outer",
                "description": "Bottom and top of the outer energy window used for the projection.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  2
                ],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "energy_window_inner",
                "description": "Bottom and top of the inner energy window used for the projection.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  2
                ],
                "unit": "electron_volt"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 23,
            "m_parent_sub_section": "section_definitions",
            "name": "Projection",
            "description": "Section containing the various parameters that define a Wannier90-like projection",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "wannier",
                "sub_section": "/packages/0/section_definitions/22",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 24,
            "m_parent_sub_section": "section_definitions",
            "name": "HoppingMatrix",
            "description": "Section containing the hopping/overlap matrix elements between N projected orbitals.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_orbitals",
                "description": "Number of projected orbitals.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_wigner_seitz_points",
                "description": "Number of Wigner-Seitz real points.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "degeneracy_factors",
                "description": "Degeneracy of each Wigner-Seitz grid point.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_wigner_seitz_points"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Real space hopping matrix for each Wigner-Seitz grid point. The elements are\ndefined as follows:\n\n    n_x   n_y   n_z   orb_1   orb_2   real_part + j * imag_part\n\nwhere (n_x, n_y, n_z) define the Wigner-Seitz cell vector in fractional coordinates,\n(orb_1, orb_2) indicates the hopping amplitude between orb_1 and orb_2, and the\nreal and imaginary parts of the hopping in electron_volt.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_wigner_seitz_points",
                  "n_orbitals * n_orbitals",
                  7
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 25,
            "m_parent_sub_section": "section_definitions",
            "name": "LatticeModelHamiltonian",
            "description": "Section containing the parameters of the non-interacting parts of a lattice model Hamiltonian.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "lattice_name",
                "description": "Name of the lattice to identify the model. E.g., 'Square', 'Honeycomb'.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_neighbors",
                "description": "Number of direct neighbors considered for the hopping integrals.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "t_parameters",
                "description": "Hopping parameters for simple models, with [t, t`, t``, etc].",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_neighbors"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "hopping_matrix",
                "sub_section": "/packages/0/section_definitions/24",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "hubbard_kanamori_model",
                "sub_section": "/packages/0/section_definitions/6",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 26,
            "m_parent_sub_section": "section_definitions",
            "name": "CoreHole",
            "description": "Section containing the various parameters that define a core-hole calculation. It can be within BSE as a \"core\" subsection.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "solver",
                "description": "Solver algorithm used for the core-hole spectra.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "edge",
                "description": "Edge to be calculated for the core-hole spectra.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "K",
                    "L1",
                    "L2",
                    "L3",
                    "L23",
                    "M1",
                    "M2",
                    "M3",
                    "M23",
                    "M4",
                    "M5",
                    "M45",
                    "N1",
                    "N2",
                    "N3",
                    "N23",
                    "N4",
                    "N5",
                    "N45"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "mode",
                "description": "Type of spectra to be calculated: absorption or emission.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "absorption",
                    "emission"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "broadening",
                "description": "Core-hole lifetime broadening applied to the edge spectra in full-width at half maximum.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 27,
            "m_parent_sub_section": "section_definitions",
            "name": "ExcitedStateMethodology",
            "description": "Base class containing the common numerical parameters typical of excited-state calculations.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "type",
                    "type__suggestion__suggestion"
                  ]
                },
                "name": "type",
                "description": "Type which allows to identify the excited-state calculation with a\ncommon string.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_states",
                "description": "Number of states used to calculate the excitations.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_empty_states",
                "description": "Number of empty states used to calculate the excitations. This quantity is\ncomplementary to `n_states`.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "broadening",
                "description": "Lifetime broadening applied to the spectra in full-width at half maximum.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "k_mesh",
                "sub_section": "/packages/0/section_definitions/2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "q_mesh",
                "sub_section": "/packages/0/section_definitions/2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "frequency_mesh",
                "sub_section": "/packages/0/section_definitions/3"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 28,
            "m_parent_sub_section": "section_definitions",
            "name": "Screening",
            "description": "Section containing the various parameters that define a screening calculation, as for example, in RPA.",
            "base_sections": [
              "/packages/0/section_definitions/27"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "dielectric_infinity",
                "description": "Value of the static dielectric constant at infinite q. For metals, this is infinite\n(or a very large value), while for insulators is finite.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 29,
            "m_parent_sub_section": "section_definitions",
            "name": "GW",
            "description": "Section containing the various parameters that define a GW calculation.",
            "base_sections": [
              "/packages/0/section_definitions/27"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.gw.type",
                    "results.method.simulation.gw.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "GW Hedin's self-consistency cycle:\n\n| Name      | Description                      | Reference             |\n\n| --------- | -------------------------------- | --------------------- |\n\n| `'G0W0'`  | single-shot                      | PRB 74, 035101 (2006) |\n\n| `'scGW'`  | self-consistent G and W               | PRB 75, 235102 (2007) |\n\n| `'scGW0'` | self-consistent G with fixed W0  | PRB 54, 8411 (1996)   |\n\n| `'scG0W'` | self-consistent W with fixed G0  | -                     |\n\n| `'ev-scGW0'`  | eigenvalues self-consistent G with fixed W0   | PRB 34, 5390 (1986)   |\n\n| `'ev-scGW'`  | eigenvalues self-consistent G and W   | PRB 74, 045102 (2006)   |\n\n| `'qp-scGW0'`  | quasiparticle self-consistent G with fixed W0 | PRL 99, 115109 (2007) |\n\n| `'qp-scGW'`  | quasiparticle self-consistent G and W | PRL 96, 226402 (2006) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "G0W0",
                    "scGW",
                    "scGW0",
                    "scG0W",
                    "ev-scGW0",
                    "ev-scGW",
                    "qp-scGW0",
                    "qp-scGW"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "analytical_continuation",
                "description": "Analytical continuation approximations of the GW self-energy:\n\n| Name           | Description         | Reference                        |\n\n| -------------- | ------------------- | -------------------------------- |\n\n| `'pade'` | Pade's approximant  | J. Low Temp. Phys 29, 179 (1977) |\n\n| `'contour_deformation'` | Contour deformation | PRB 67, 155208 (2003) |\n\n| `'ppm_GodbyNeeds'` | Godby-Needs plasmon-pole model | PRL 62, 1169 (1989) |\n\n| `'ppm_HybertsenLouie'` | Hybertsen and Louie plasmon-pole model | PRB 34, 5390 (1986) |\n\n| `'ppm_vonderLindenHorsh'` | von der Linden and P. Horsh plasmon-pole model | PRB 37, 8351 (1988) |\n\n| `'ppm_FaridEngel'` | Farid and Engel plasmon-pole model  | PRB 47, 15931 (1993) |\n\n| `'multi_pole'` | Multi-pole fitting  | PRL 74, 1827 (1995) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "pade",
                    "contour_deformation",
                    "ppm_GodbyNeeds",
                    "ppm_HybertsenLouie",
                    "ppm_vonderLindenHorsh",
                    "ppm_FaridEngel",
                    "multi_pole"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "interval_qp_corrections",
                "description": "Band indices (in an interval) for which the GW quasiparticle corrections are\ncalculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  2
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "screening",
                "sub_section": "/packages/0/section_definitions/28"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 30,
            "m_parent_sub_section": "section_definitions",
            "name": "BSE",
            "description": "Section containing the various parameters that define a BSE calculation.",
            "base_sections": [
              "/packages/0/section_definitions/27"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.bse.type",
                    "results.method.simulation.bse.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Type of BSE hamiltonian solved:\n\n    H_BSE = H_diagonal + 2 * gx * Hx - gc * Hc\n\nwhere gx, gc specifies the type.\n\nOnline resources for the theory:\n- http://exciting.wikidot.com/carbon-excited-states-from-bse#toc1\n- https://www.vasp.at/wiki/index.php/Bethe-Salpeter-equations_calculations\n- https://docs.abinit.org/theory/bse/\n- https://www.yambo-code.eu/wiki/index.php/Bethe-Salpeter_kernel\n\n| Name | Description |\n\n| --------- | ----------------------- |\n\n| `'Singlet'` | gx = 1, gc = 1 |\n\n| `'Triplet'` | gx = 0, gc = 1 |\n\n| `'IP'` | Independent-particle approach |\n\n| `'RPA'` | Random Phase Approximation |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "Singlet",
                    "Triplet",
                    "IP",
                    "RPA"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.bse.solver",
                    "results.method.simulation.bse.solver__suggestion"
                  ]
                },
                "name": "solver",
                "description": "Solver algotithm used to diagonalize the BSE Hamiltonian.\n\n| Name | Description | Reference |\n\n| --------- | ----------------------- | ----------- |\n\n| `'Full-diagonalization'` | Full diagonalization of the BSE Hamiltonian | - |\n\n| `'Lanczos-Haydock'` | Subspace iterative Lanczos-Haydock algorithm | https://doi.org/10.1103/PhysRevB.59.5441 |\n\n| `'GMRES'` | Generalized minimal residual method | https://doi.org/10.1137/0907058 |\n\n| `'SLEPc'` | Scalable Library for Eigenvalue Problem Computations | https://slepc.upv.es/ |\n\n| `'TDA'` | Tamm-Dancoff approximation | https://doi.org/10.1016/S0009-2614(99)01149-5 |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "Full-diagonalization",
                    "Lanczos-Haydock",
                    "GMRES",
                    "SLEPc",
                    "TDA"
                  ]
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "screening",
                "sub_section": "/packages/0/section_definitions/28"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "core_hole",
                "sub_section": "/packages/0/section_definitions/26"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 31,
            "m_parent_sub_section": "section_definitions",
            "name": "DMFT",
            "description": "Section containing the various parameters that define a DMFT calculation",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_impurities",
                "description": "Number of impurities mapped from the correlated atoms in the unit cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_correlated_orbitals",
                "description": "Number of correlated orbitals per impurity.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_impurities"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_electrons",
                "description": "Initial number of valence electrons per impurity.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_impurities"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.inverse_temperature"
                  ]
                },
                "name": "inverse_temperature",
                "description": "Inverse temperature = 1/(kB*T).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "1 / joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.magnetic_state",
                    "results.method.simulation.dmft.magnetic_state__suggestion"
                  ]
                },
                "name": "magnetic_state",
                "description": "Magnetic state in which the DMFT calculation is done:\n\n| Name                  | State                   |\n\n| --------------------- | ----------------------- |\n\n| `'paramagnetic'`      | paramagnetic state      |\n\n| `'ferromagnetic'`     | ferromagnetic state     |\n\n| `'antiferromagnetic'` | antiferromagnetic state |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "paramagnetic",
                    "ferromagnetic",
                    "antiferromagnetic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.impurity_solver_type",
                    "results.method.simulation.dmft.impurity_solver_type__suggestion"
                  ]
                },
                "name": "impurity_solver",
                "description": "Impurity solver method used in the DMFT loop:\n\n| Name              | Reference                            |\n\n| ----------------- | ------------------------------------ |\n\n| `'CT-INT'`        | Rubtsov et al., JEPT Lett 80 (2004)  |\n\n| `'CT-HYB'`        | Werner et al., PRL 97 (2006)         |\n\n| `'CT-AUX'`        | Gull et al., EPL 82 (2008)           |\n\n| `'ED'`            | Caffarrel et al, PRL 72 (1994)       |\n\n| `'NRG'`           | Bulla et al., RMP 80 (2008)          |\n\n| `'MPS'`           | Ganahl et al., PRB 90 (2014)         |\n\n| `'IPT'`           | Georges et al., PRB 45 (1992)        |\n\n| `'NCA'`           | Pruschke et al., PRB 47 (1993)       |\n\n| `'OCA'`           | Pruschke et al., PRB 47 (1993)       |\n\n| `'slave_bosons'`  | Kotliar et al., PRL 57 (1986)        |\n\n| `'hubbard_I'`     | -                                    |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "CT-INT",
                    "CT-HYB",
                    "CT-AUX",
                    "ED",
                    "NRG",
                    "MPS",
                    "IPT",
                    "NCA",
                    "OCA",
                    "slave_bosons",
                    "hubbard_I"
                  ]
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 32,
            "m_parent_sub_section": "section_definitions",
            "name": "TBModel",
            "description": "Section containing the parameters pertaining to a tight-binding calculation.",
            "base_sections": [
              "/packages/0/section_definitions/18"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "hamiltonian",
                "sub_section": "/packages/0/section_definitions/17",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "overlap",
                "sub_section": "/packages/0/section_definitions/17",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "repulsion",
                "sub_section": "/packages/0/section_definitions/17",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "magnetic",
                "sub_section": "/packages/0/section_definitions/17",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "coulomb",
                "sub_section": "/packages/0/section_definitions/17",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 33,
            "m_parent_sub_section": "section_definitions",
            "name": "TB",
            "description": "Section containing the parameters pertaining to a tight-binding calculation.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "kind",
                "description": "The kind of tight-binding model used. Can be orthogonal or non-orthogonal.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "model",
                "sub_section": "/packages/0/section_definitions/32",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 34,
            "m_parent_sub_section": "section_definitions",
            "name": "NeighborSearching",
            "description": "Section containing the parameters for neighbor searching/lists during a molecular dynamics run.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "neighbor_update_frequency",
                "description": "Number of timesteps between updating the neighbor list.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "neighbor_update_cutoff",
                "description": "The distance cutoff for determining the neighbor list.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 35,
            "m_parent_sub_section": "section_definitions",
            "name": "ForceCalculations",
            "description": "Section containing the parameters for force calculations according to the referenced force field during a molecular dynamics run.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "vdw_cutoff",
                "description": "Cutoff for calculating VDW forces.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "coulomb_type",
                "description": "Method used for calculating long-ranged Coulomb forces.\n\nAllowed values are:\n\n| Barostat Name          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"\"`                   | No thermostat               |\n\n| `\"Cutoff\"`          | Simple cutoff scheme. |\n\n| `\"Ewald\"` | Standard Ewald summation as described in any solid-state physics text. |\n\n| `\"Multi-Level Summation\"` |  D. Hardy, J.E. Stone, and K. Schulten,\n[Parallel. Comput. **35**, 164](https://doi.org/10.1016/j.parco.2008.12.005)|\n\n| `\"Particle-Mesh-Ewald\"`        | T. Darden, D. York, and L. Pedersen,\n[J. Chem. Phys. **98**, 10089 (1993)](https://doi.org/10.1063/1.464397) |\n\n| `\"Particle-Particle Particle-Mesh\"` | See e.g. Hockney and Eastwood, Computer Simulation Using Particles,\nAdam Hilger, NY (1989). |\n\n| `\"Reaction-Field\"` | J.A. Barker and R.O. Watts,\n[Mol. Phys. **26**, 789 (1973)](https://doi.org/10.1080/00268977300102101)|",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "cutoff",
                    "ewald",
                    "multilevel_summation",
                    "particle_mesh_ewald",
                    "particle_particle_particle_mesh",
                    "reaction_field"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "coulomb_cutoff",
                "description": "Cutoff for calculating short-ranged Coulomb forces.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "neighbor_searching",
                "sub_section": "/packages/0/section_definitions/34",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 36,
            "m_parent_sub_section": "section_definitions",
            "name": "ForceField",
            "description": "Section containing the parameters pertaining to a force field calculation.",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "model",
                "sub_section": "/packages/0/section_definitions/18",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "force_calculations",
                "sub_section": "/packages/0/section_definitions/35",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 37,
            "m_parent_sub_section": "section_definitions",
            "name": "Smearing",
            "description": "Section containing the parameters related to the smearing of the electronic density of states at the Fermi level.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.smearing_kind",
                    "results.method.simulation.dft.smearing_kind__suggestion"
                  ]
                },
                "name": "kind",
                "description": "Specifies the kind of smearing on the electron occupation used to calculate the\nfree energy (see energy_free)\n\nValid values are:\n\n| Smearing kind             | Description                       |\n\n| ------------------------- | --------------------------------- |\n\n| `\"empty\"`                 | No smearing is applied            |\n\n| `\"gaussian\"`              | Gaussian smearing                 |\n\n| `\"fermi\"`                 | Fermi smearing                    |\n\n| `\"marzari-vanderbilt\"`    | Marzari-Vanderbilt smearing       |\n\n| `\"methfessel-paxton\"`     | Methfessel-Paxton smearing        |\n\n| `\"tetrahedra\"`            | Interpolation of state energies and occupations\n(ignores smearing_width) |",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.smearing_width"
                  ]
                },
                "name": "width",
                "description": "Specifies the width of the smearing in energy for the electron occupation used to\ncalculate the free energy (see energy_free).\n\n*NOTE:* Not all methods specified in smearing_kind uses this value.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 38,
            "m_parent_sub_section": "section_definitions",
            "name": "Electronic",
            "description": "Section containing the parameters related to the electronic structure.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "spin_target",
                "description": "Stores the target (user-imposed) value of the spin multiplicity $M=2S+1$, where\n$S$ is the total spin. It is an integer number. This value is not necessarily the\nvalue obtained at the end of the calculation. See spin_S2 for the converged value\nof the spin moment.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "charge",
                "description": "Stores the total charge of the system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [],
                "unit": "coulomb"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_bands",
                "description": "Specifies the number of bands used in the calculation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_spin_channels",
                "description": "Gives the number of spin channels.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_electrons",
                "description": "Number of electrons in system",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "method",
                "description": "Non-unique string identifying the used electronic structure method. It is not\nunique in the sense that two calculations with the same\nelectronic structure method string may have not been performed with exactly the\nsame method.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.relativity_method",
                    "results.method.simulation.dft.relativity_method__suggestion"
                  ]
                },
                "name": "relativity_method",
                "description": "Describes the relativistic treatment used for the calculation of the final energy\nand related quantities. If skipped or empty, no relativistic treatment is applied.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "scalar_relativistic",
                    "pseudo_scalar_relativistic",
                    "scalar_relativistic_atomic_ZORA"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.van_der_Waals_method",
                    "results.method.simulation.dft.van_der_Waals_method__suggestion"
                  ]
                },
                "name": "van_der_waals_method",
                "description": "Describes the Van der Waals method. If skipped or an empty string is used, it\nmeans no Van der Waals correction is applied.\n\nAllowed values are:\n\n| Van der Waals method  | Description                               |\n\n| --------------------- | ----------------------------------------- |\n\n| `\"\"`                  | No Van der Waals correction               |\n\n| `\"TS\"`                | A. Tkatchenko and M. Scheffler, [Phys. Rev. Lett.\n**102**, 073005 (2009)](http://dx.doi.org/10.1103/PhysRevLett.102.073005) |\n\n| `\"OBS\"`               | F. Ortmann, F. Bechstedt, and W. G. Schmidt, [Phys. Rev.\nB **73**, 205101 (2006)](http://dx.doi.org/10.1103/PhysRevB.73.205101) |\n\n| `\"G06\"`               | S. Grimme, [J. Comput. Chem. **27**, 1787\n(2006)](http://dx.doi.org/10.1002/jcc.20495) |\n\n| `\"JCHS\"`              | P. Jure\u010dka, J. \u010cern\u00fd, P. Hobza, and D. R. Salahub,\n[Journal of Computational Chemistry **28**, 555\n(2007)](http://dx.doi.org/10.1002/jcc.20570) |\n\n| `\"MDB\"`               | Many-body dispersion. A. Tkatchenko, R. A. Di Stasio Jr,\nR. Car, and M. Scheffler, [Physical Review Letters **108**, 236402\n(2012)](http://dx.doi.org/10.1103/PhysRevLett.108.236402) and A. Ambrosetti, A. M.\nReilly, R. A. Di Stasio Jr, and A. Tkatchenko, [The Journal of Chemical Physics\n**140**, 18A508 (2014)](http://dx.doi.org/10.1063/1.4865104) |\n\n| `\"XC\"`                | The method to calculate the Van der Waals energy uses a\nnon-local functional which is described in section_XC_functionals. |",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "smearing",
                "sub_section": "/packages/0/section_definitions/37"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 39,
            "m_parent_sub_section": "section_definitions",
            "name": "Method",
            "description": "Section containing the various parameters that define the theory and the approximations (convergence, thresholds, etc.) behind the calculation.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "stress_tensor_method",
                "description": "Specifies the method used to calculate stress_tensor for, e.g., molecular dynamics\nand geometry optimization.\n\nThe allowed values are:\n\n* numeric\n\n* analytic",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "starting_method_ref",
                "description": "Links the current section method to a section method containing the starting\nparameters.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/39"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "core_method_ref",
                "description": "Links the current section method to a section method containing the core settings.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/39"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_references",
                "description": "Number of references to the current method.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "methods_ref",
                "description": "Links the section method to other method sections. For instance, one calculation\nis a perturbation performed using a self-consistent field (SCF) calculation as\nstarting point, or a simulated system is partitioned in regions with different but\nconnected Hamiltonians (e.g., QM/MM, or a region treated via Kohn-Sham DFT\nembedded into a region treated via orbital-free DFT).",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/39"
                },
                "shape": [
                  "n_references"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "dft",
                "sub_section": "/packages/0/section_definitions/21"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "projection",
                "sub_section": "/packages/0/section_definitions/23"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "lattice_model_hamiltonian",
                "sub_section": "/packages/0/section_definitions/25",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "gw",
                "sub_section": "/packages/0/section_definitions/29"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "bse",
                "sub_section": "/packages/0/section_definitions/30"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "dmft",
                "sub_section": "/packages/0/section_definitions/31"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "name": "tb",
                "sub_section": "/packages/0/section_definitions/33"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 7,
                "m_parent_sub_section": "sub_sections",
                "name": "force_field",
                "sub_section": "/packages/0/section_definitions/36"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 8,
                "m_parent_sub_section": "sub_sections",
                "name": "core_hole",
                "sub_section": "/packages/0/section_definitions/26"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 9,
                "m_parent_sub_section": "sub_sections",
                "name": "k_mesh",
                "sub_section": "/packages/0/section_definitions/2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 10,
                "m_parent_sub_section": "sub_sections",
                "name": "frequency_mesh",
                "sub_section": "/packages/0/section_definitions/3",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 11,
                "m_parent_sub_section": "sub_sections",
                "name": "time_mesh",
                "sub_section": "/packages/0/section_definitions/4",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 12,
                "m_parent_sub_section": "sub_sections",
                "name": "electronic",
                "sub_section": "/packages/0/section_definitions/38"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 13,
                "m_parent_sub_section": "sub_sections",
                "name": "scf",
                "sub_section": "/packages/0/section_definitions/5"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 14,
                "m_parent_sub_section": "sub_sections",
                "name": "atom_parameters",
                "more": {
                  "label_quantity": "label"
                },
                "sub_section": "/packages/0/section_definitions/8",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 15,
                "m_parent_sub_section": "sub_sections",
                "name": "molecule_parameters",
                "more": {
                  "label_quantity": "label"
                },
                "sub_section": "/packages/0/section_definitions/9",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 16,
                "m_parent_sub_section": "sub_sections",
                "name": "electrons_representation",
                "more": {
                  "label_quantity": "type"
                },
                "sub_section": "/packages/0/section_definitions/16",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 17,
                "m_parent_sub_section": "sub_sections",
                "name": "photon",
                "sub_section": "/packages/0/section_definitions/10",
                "repeats": true
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 1,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.simulation.system",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "AtomsGroup",
            "description": "Describes a group of atoms which may constitute a sub system as in the case of a molecule.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Label of the group.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Type of the group.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "index",
                "description": "Index of the group with respect to its parent group.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "composition_formula",
                "description": "The overall composition of the group with respect to its subgroups.\nThe syntax for a groups composed of X and Y with x and y components of each,\nrespectively, is X(x)Y(y).",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "The total number of atoms in the group.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "atom_indices",
                "description": "Indices of the atoms in the group with respect to the system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "is_molecule",
                "description": "Denotes if the atoms in this group represent a molecule. That is, all atoms\nin the group are connected via bonds, and no other atoms contain bonds\nwith these atoms.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "atoms_group",
                "sub_section": "/packages/1/section_definitions/0",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Atoms",
            "description": "Describes the atomic structure of the physical system. This includes the atom positions, lattice vectors, etc.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "The total number of species (atoms, particles) in the system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "atomic_numbers",
                "description": "List of atomic numbers Z of the atoms identified in labels. If a species cannot\nbe assigned Z, a negative value can also be used to distinguish it.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "equivalent_atoms",
                "description": "Gives a mapping table of atoms to symmetrically independent atoms in the\nstandardized cell. This is used to find symmetrically equivalent atoms.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "wyckoff_letters",
                "description": "Wyckoff letters corresponding to each atom.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "concentrations",
                "description": "Concentrations of the species defined by labels which can be assigned for systems\nwith variable compositions.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "species",
                "description": "Species of the atom (normally the atomic number Z, 0 or negative for unidentifed\nspecies or particles that are not atoms.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "labels",
                "description": "List containing the labels of the atoms. In the usual case, these correspond to\nthe chemical symbols of the atoms. One can also append an index if there is a\nneed to distinguish between species with the same symbol, e.g., atoms of the\nsame species assigned to different atom-centered basis sets or pseudo-potentials,\nor simply atoms in different locations in the structure such as those in the bulk\nand on the surface. In the case where a species is not an atom, and therefore\ncannot be representated by a chemical symbol, the label can simply be the name of\nthe particles.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "positions",
                "description": "Positions of all the species, in cartesian coordinates. This metadata defines a\nconfiguration and is therefore required. For alloys where concentrations of\nspecies are given for each site in the unit cell, it stores the position of the\nsites.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms",
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "velocities",
                "description": "Velocities of the nuclei, defined as the change in cartesian coordinates of the\nnuclei with respect to time.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms",
                  3
                ],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "lattice_vectors",
                "description": "Lattice vectors of the simulation cell in cartesian coordinates. The\nlast (fastest) index runs over the $x,y,z$ Cartesian coordinates, and the first\nindex runs over the 3 lattice vectors.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "lattice_vectors_reciprocal",
                "description": "Reciprocal lattice vectors of the simulation cell, in cartesian coordinates and with the 2 $pi$ pre-factor.\nThe first index runs over the $x,y,z$ Cartesian coordinates, and the second index runs\nover the 3 lattice vectors.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "1 / meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "local_rotations",
                "description": "A rotation matrix defining the orientation of each atom. If the rotation matrix\ncannot be specified for an atom, the remaining atoms should set it to\nthe zero matrix (not the identity!)",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms",
                  3,
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "periodic",
                "description": "Denotes if periodic boundary condition is applied to each of the lattice vectors.'",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": [
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "supercell_matrix",
                "description": "Specifies the matrix that transforms the unit-cell into the super-cell in which\nthe actual calculation is performed.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  3,
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "name": "symmorphic",
                "description": "Specifies if the space group is symmorphic. Set to True if all translations are\nzero.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "Symmetry",
            "description": "Section containing information about the symmetry properties of the atomic system.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "bravais_lattice",
                "description": "Identifier for the Bravais lattice in Pearson notation. The first lowercase letter\nidentifies the crystal family and can be one of the following: a (triclinic), b\n(monoclinic), o (orthorhombic), t (tetragonal), h (hexagonal) or c (cubic). The\nsecond uppercase letter identifies the centring and can be one of the following: P\n(primitive), S (face centred), I (body centred), R (rhombohedral centring) or F\n(all faces centred).",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "choice",
                "description": "String that specifies the centering, origin and basis vector settings of the 3D\nspace group that defines the symmetry group of the simulated physical system (see\nsection system). Values are as defined by spglib.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "crystal_system",
                "description": "Name of the crystal system. Can be one of the following: triclinic, monoclinic,\northorhombic, tetragonal, trigonal, hexagonal or cubic.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "hall_number",
                "description": "The Hall number for this system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "hall_symbol",
                "description": "The Hall symbol for this system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "international_short_symbol",
                "description": "Specifies the International Union of Crystallography (IUC) short symbol of the 3D\nspace group of this system",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "origin_shift",
                "description": "Vector $\\mathbf{p}$ from the origin of the standardized system to the origin of\nthe original system. Together with the matrix $\\mathbf{P}$, found in\nspace_group_3D_transformation_matrix, the transformation between the standardized\ncoordinates $\\mathbf{x}_s$ and original coordinates $\\mathbf{x}$ is then given\nby $\\mathbf{x}_s = \\mathbf{P} \\mathbf{x} + \\mathbf{p}$.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "point_group",
                "description": "Symbol of the crystallographic point group in the Hermann-Mauguin notation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "space_group_number",
                "description": "Specifies the International Union of Crystallography (IUC) number of the 3D space\ngroup of this system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "symmetry_method",
                "description": "Identifies the source of the symmetry information contained within this section.\nIf equal to 'spg_normalized' the information comes from a normalization step.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "transformation_matrix",
                "description": "Matrix $\\mathbf{P}$ that is used to transform the standardized coordinates to the\noriginal coordinates. Together with the vector $\\mathbf{p}$, found in\nspace_group_3D_origin_shift, the transformation between the standardized\ncoordinates $\\mathbf{x}_s$ and original coordinates $\\mathbf{x}$ is then given by\n$\\mathbf{x}_s = \\mathbf{P} \\mathbf{x} + \\mathbf{p}$.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "system_original",
                "sub_section": "/packages/1/section_definitions/1",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "system_primitive",
                "sub_section": "/packages/1/section_definitions/1",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "system_std",
                "sub_section": "/packages/1/section_definitions/1",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Prototype",
            "description": "Information on the prototype corresponding to the current section.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "aflow_id",
                "description": "AFLOW id of the prototype (see\nhttp://aflowlib.org/CrystalDatabase/prototype_index.html) identified on the basis\nof the space_group and normalized_wyckoff.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "aflow_url",
                "description": "Url to the AFLOW definition of the prototype (see\nhttp://aflowlib.org/CrystalDatabase/prototype_index.html) identified on the basis\nof the space_group and normalized_wyckoff.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "assignment_method",
                "description": "Method used to identify the prototype.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Label of the prototype identified on the basis of the space_group and\nnormalized_wyckoff. The label is in the same format as in the read_prototypes\nfunction: <space_group_number>-<prototype_name>-<Pearson's symbol>).",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "SpringerMaterial",
            "description": "Contains results of classification of materials with the same formula according to Springer Materials. These include material and compound classsification, formula,\nid, and references from the Springer Materials database.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "id",
                "description": "Id of the classified material according to Springer Materials.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "alphabetical_formula",
                "description": "The alphabetical formula of the material according to Springer Materials Database",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "url",
                "description": "Url to the source page in Springer Materials describing the current entry",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "compound_class",
                "description": "Name of a class of the current compound, as defined in by Springer Materials. This\nis a property of the chemical formula of the compound",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "N"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "classification",
                "description": "Contains the classification name of the current material according to Springer\nMaterials",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "N"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "Constraint",
            "description": "Section describing a constraint between arbitrary atoms.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "kind",
                "description": "Short and unique name for this constraint type. Could be fix_a where a can be\nx, y, z denoting a constraint along a cartesian direction, xy, xz, yz denoting a\nconstaint along a cartesian plane, xyz denoting a fixed position, distance\ndenoting a fixed distance between two atoms, angle denoting a fixed angle between\nthree atoms, and dihedral denoting a fixed dihedral angle.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_constraints",
                "description": "Number of constraints of this type.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "Number of atoms involved in this constraint.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "atom_indices",
                "description": "List of the indexes involved in this constraint.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_constraints",
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "parameters",
                "description": "Explicit constraint parameters for this kind of constraint (depending on the\nconstraint type, some might be given implicitly through other means).",
                "type": {
                  "type_kind": "Any"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "SOAP",
            "description": "\n        SOAP descritors and representations\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_max",
                "description": "Number of radial basis functions in density expansion",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "l_max",
                "description": "Order of Spherical harmonics.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "r_cut",
                "description": "Cutoff distance defining each local environment.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "atom_sigma",
                "description": "Width of Gaussians used in density expansion",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "soap",
                "description": "Full SOAP stored in array format.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_sites",
                  "*",
                  "*",
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "tr_soap",
                "description": "Normalised, tensor-reduced SOAP stored as a flat vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_sites",
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "global_soap",
                "description": "Full SOAP, c_znlm averaged across sites, stored in array format.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*",
                  "*",
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "global_tr_soap",
                "description": "Normalised, tensor-reduced global, c_znlm averaged across sites, SOAP stored as a flat vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "Descriptors",
            "description": "\n        Contains atomic descriptors and structural representations\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "soap",
                "sub_section": "/packages/1/section_definitions/6",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "System",
            "description": "Contains parameters describing a system of atomic configuration. These inclue the compound name, atomic positions, lattice vectors, contraints on the atoms, etc.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "Specifies the name of the system. This information is provided by the user in some\ncodes and is stored here for debugging or visualization purposes.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Type of the system (atom, bulk, surface, etc.) which is determined by the\nnormalizer.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "configuration_raw_gid",
                "description": "checksum of the configuration_core, i.e. the geometry of the system. The values\nare not normalized in any way so equivalent configurations might have different\nvalues",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "is_representative",
                "description": "Most systems in a run are only minor variations of each other. Systems marked\nrepresentative where chosen to be representative for all systems in the run.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_references",
                "description": "Number of references to the current section system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "sub_system_ref",
                "description": "Links the current section system to a sub system.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "systems_ref",
                "description": "Links the current section system to other section systems. Such a link is\nnecessary for example between the supercell and the reference unit cell in a phonon\ncalculation. The relationship should be described by kind and the referred section\nsystem is given by value. An external url can also be provided in place of value.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                },
                "shape": [
                  "n_references"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "chemical_composition",
                "description": "The full chemical composition of the system, based on atom species.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "chemical_composition_hill",
                "description": "The chemical composition in the hill convention of the system, based on atom species.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "chemical_composition_reduced",
                "description": "The chemical composition as reduced formula of the system, based on atom species.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "chemical_composition_anonymous",
                "description": "The chemical composition without explicit element names of the system, based on\natom species.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "atoms",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/1/section_definitions/1"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "atoms_group",
                "sub_section": "/packages/1/section_definitions/0",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "constraint",
                "sub_section": "/packages/1/section_definitions/5",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "prototype",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/1/section_definitions/3",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "springer_material",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/1/section_definitions/4",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "symmetry",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/1/section_definitions/2",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "name": "descriptors",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/1/section_definitions/7",
                "repeats": false
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 2,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.simulation.calculation",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Atomic",
            "description": "Generic section containing the values and information reqarding an atomic quantity such as charges, forces, multipoles.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "kind",
                "description": "Kind of the quantity.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_orbitals",
                "description": "Number of orbitals used in the projection.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "Number of atoms.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_spin_channels",
                "description": "Number of spin channels.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "AtomicValues",
            "description": "Generic section containing information regarding the values of an atomic quantity.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "spin",
                "description": "Spin channel corresponding to the atomic quantity.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "atom_label",
                "description": "Label of the atomic species corresponding to the atomic quantity.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "atom_index",
                "description": "Index of the atomic species corresponding to the atomic quantity.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "m_kind",
                "description": "String describing what the integer numbers of $m$ lm mean used in orbital\nprojections. The allowed values are listed in the [m_kind wiki page]\n(https://gitlab.rzg.mpg.de/nomad-lab/nomad-meta-info/wikis/metainfo/m-kind).",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "lm",
                "description": "Tuples of $l$ and $m$ values for which the atomic quantity are given. For\nthe quantum number $l$ the conventional meaning of azimuthal quantum number is\nalways adopted. For the integer number $m$, besides the conventional use as\nmagnetic quantum number ($l+1$ integer values from $-l$ to $l$), a set of\ndifferent conventions is accepted (see the [m_kind wiki\npage](https://gitlab.rzg.mpg.de/nomad-lab/nomad-meta-info/wikis/metainfo/m-kind).\nThe adopted convention is specified by m_kind.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  2
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "orbital",
                "description": "String representation of the of the atomic orbital.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "AtomicGroup",
            "description": "Generic section containing the values and information reqarding a molecular or sub-molecular quantity that is a function of an atomic group such as radius of gyration...",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.radius_of_gyration.kind",
                    "results.properties.structural.radius_of_gyration.kind__suggestion"
                  ]
                },
                "name": "kind",
                "description": "Kind of the quantity.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "AtomicGroupValues",
            "description": "Generic section containing information regarding the values of a trajectory property.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.radius_of_gyration.label",
                    "results.properties.structural.radius_of_gyration.label__suggestion"
                  ]
                },
                "name": "label",
                "description": "Describes the atoms or molecule types involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "atomsgroup_ref",
                "description": "References to the atoms_group section containing the molecule for which Rg was calculated.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/0"
                },
                "shape": [
                  1
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "EnergyEntry",
            "description": "Section describing a type of energy or a contribution to the total energy.",
            "base_sections": [
              "/packages/2/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "reference",
                "description": "Value of the reference energy to be subtracted from value to obtain a\ncode-independent value of the energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of the energy of the unit cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "value_per_atom",
                "description": "Value of the energy normalized by the total number of atoms in the simulation\ncell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "values_per_atom",
                "description": "Value of the atom-resolved energies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "potential",
                "description": "Value of the potential energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "kinetic",
                "description": "Value of the kinetic energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "correction",
                "description": "Value of the correction to the energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "short_range",
                "description": "Value of the short range contributions to the energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "long_range",
                "description": "Value of the long range contributions to the energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "Energy",
            "description": "Section containing all energy types and contributions.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "enthalpy",
                "description": "Value of the calculated enthalpy per cell i.e. energy_total + pressure * volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "entropy",
                "description": "Value of the entropy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "chemical_potential",
                "description": "Value of the chemical potential.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "internal",
                "description": "Value of the internal energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "change",
                "description": "Stores the change of total energy with respect to the previous step.",
                "categories": [
                  "/packages/2/category_definitions/5",
                  "/packages/2/category_definitions/3"
                ],
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "fermi",
                "description": "Fermi energy (separates occupied from unoccupied single-particle states)",
                "categories": [
                  "/packages/2/category_definitions/4",
                  "/packages/2/category_definitions/3"
                ],
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "highest_occupied",
                "description": "The highest occupied energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "lowest_unoccupied",
                "description": "The lowest unoccupied energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "total",
                "description": "Contains the value and information regarding the total energy of the system.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "current",
                "description": "Contains the value and information regarding the energy calculated with\ncalculation_method_current. energy_current is equal to energy_total for\nnon-perturbative methods. For perturbative methods, energy_current is equal to the\ncorrection: energy_total minus energy_total of the calculation_to_calculation_ref\nwith calculation_to_calculation_kind = starting_point",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "zero_point",
                "description": "Contains the value and information regarding the converged zero-point\nvibrations energy calculated using the method described in zero_point_method.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "kinetic_electronic",
                "description": "Contains the value and information regarding the self-consistent electronic\nkinetic energy.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "electronic",
                "description": "Contains the value and information regarding the self-consistent electronic\nenergy.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "correlation",
                "description": "Contains the value and information regarding the correlation energy calculated\nusing the method described in XC_functional.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "name": "exchange",
                "description": "Contains the value and information regarding the exchange energy calculated\nusing the method described in XC_functional.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 7,
                "m_parent_sub_section": "sub_sections",
                "name": "xc",
                "description": "Contains the value and information regarding the exchange-correlation (XC)\nenergy calculated with the functional stored in XC_functional.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 8,
                "m_parent_sub_section": "sub_sections",
                "name": "xc_potential",
                "description": "Contains the value and information regarding the exchange-correlation (XC)\npotential energy: the integral of the first order derivative of the functional\nstored in XC_functional (integral of v_xc*electron_density), i.e., the component\nof XC that is in the sum of the eigenvalues. Value associated with the\nconfiguration, should be the most converged value..",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 9,
                "m_parent_sub_section": "sub_sections",
                "name": "electrostatic",
                "description": "Contains the value and information regarding the total electrostatic energy\n(nuclei + electrons), defined consistently with calculation_method.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 10,
                "m_parent_sub_section": "sub_sections",
                "name": "nuclear_repulsion",
                "description": "Contains the value and information regarding the total nuclear-nuclear repulsion\nenergy.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 11,
                "m_parent_sub_section": "sub_sections",
                "name": "coulomb",
                "description": "Contains the value and information regarding the Coulomb energy.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 12,
                "m_parent_sub_section": "sub_sections",
                "name": "madelung",
                "description": "Contains the value and information regarding the Madelung energy.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 13,
                "m_parent_sub_section": "sub_sections",
                "name": "ewald",
                "description": "Contains the value and information regarding the Ewald energy.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 14,
                "m_parent_sub_section": "sub_sections",
                "name": "free",
                "description": "Contains the value and information regarding the free energy (nuclei + electrons)\n(whose minimum gives the smeared occupation density calculated with\nsmearing_kind).",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 15,
                "m_parent_sub_section": "sub_sections",
                "name": "sum_eigenvalues",
                "description": "Contains the value and information regarding the sum of the eigenvalues of the\nHamiltonian matrix.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 16,
                "m_parent_sub_section": "sub_sections",
                "name": "total_t0",
                "description": "Contains the value and information regarding the total energy extrapolated to\n$T=0$, based on a free-electron gas argument.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 17,
                "m_parent_sub_section": "sub_sections",
                "name": "van_der_waals",
                "description": "Contains the value and information regarding the Van der Waals energy. A multiple\noccurence is expected when more than one van der Waals methods are defined. The\nvan der Waals kind should be specified in Energy.kind",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 18,
                "m_parent_sub_section": "sub_sections",
                "name": "hartree_fock_x_scaled",
                "description": "Scaled exact-exchange energy that depends on the mixing parameter of the\nfunctional. For example in hybrid functionals, the exchange energy is given as a\nlinear combination of exact-energy and exchange energy of an approximate DFT\nfunctional; the exact exchange energy multiplied by the mixing coefficient of the\nhybrid functional would be stored in this metadata. Defined consistently with\nXC_method.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 19,
                "m_parent_sub_section": "sub_sections",
                "name": "contributions",
                "description": "Contains other energy contributions to the total energy not already defined.",
                "sub_section": "/packages/2/section_definitions/4",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 20,
                "m_parent_sub_section": "sub_sections",
                "name": "types",
                "description": "Contains other energy types not already defined.",
                "sub_section": "/packages/2/section_definitions/4",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 21,
                "m_parent_sub_section": "sub_sections",
                "name": "double_counting",
                "description": "Double counting correction when performing Hubbard model calculations.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 22,
                "m_parent_sub_section": "sub_sections",
                "name": "correction_entropy",
                "description": "Entropy correction to the potential energy to compensate for the change in\noccupation so that forces at finite T do not need to keep the change of occupation\nin account. Defined consistently with XC_method.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 23,
                "m_parent_sub_section": "sub_sections",
                "name": "correction_hartree",
                "description": "Correction to the density-density electrostatic energy in the sum of eigenvalues\n(that uses the mixed density on one side), and the fully consistent density-\ndensity electrostatic energy. Defined consistently with XC_method.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 24,
                "m_parent_sub_section": "sub_sections",
                "name": "correction_xc",
                "description": "Correction to energy_XC.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 25,
                "m_parent_sub_section": "sub_sections",
                "name": "kinetic",
                "description": "Contains the value and information regarding the kinetic energy.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 26,
                "m_parent_sub_section": "sub_sections",
                "name": "potential",
                "description": "Contains the value and information regarding the potential energy.",
                "sub_section": "/packages/2/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 27,
                "m_parent_sub_section": "sub_sections",
                "name": "pressure_volume_work",
                "description": "Contains the value and information regarding the instantaneous pV work.",
                "sub_section": "/packages/2/section_definitions/4"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "ForcesEntry",
            "description": "Section describing a contribution to or type of atomic forces.",
            "base_sections": [
              "/packages/2/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of the forces acting on the atoms. This is calculated as minus gradient of\nthe corresponding energy type or contribution **including** constraints, if\npresent. The derivatives with respect to displacements of nuclei are evaluated in\nCartesian coordinates.  In addition, these are obtained by filtering out the\nunitary transformations (center-of-mass translations and rigid rotations for\nnon-periodic systems, see value_raw for the unfiltered counterpart).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms",
                  3
                ],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value_raw",
                "description": "Value of the forces acting on the atoms **not including** such as fixed atoms,\ndistances, angles, dihedrals, etc.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms",
                  3
                ],
                "unit": "newton"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "Forces",
            "description": "Section containing all forces types and contributions.",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "total",
                "description": "Contains the value and information regarding the total forces on the atoms\ncalculated as minus gradient of energy_total.",
                "sub_section": "/packages/2/section_definitions/6"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "free",
                "description": "Contains the value and information regarding the forces on the atoms\ncorresponding to the minus gradient of energy_free. The (electronic) energy_free\ncontains the information on the change in (fractional) occupation of the\nelectronic eigenstates, which are accounted for in the derivatives, yielding a\ntruly energy-conserved quantity.",
                "sub_section": "/packages/2/section_definitions/6"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "t0",
                "description": "Contains the value and information regarding the forces on the atoms\ncorresponding to the minus gradient of energy_T0.",
                "sub_section": "/packages/2/section_definitions/6"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "contributions",
                "description": "Contains other forces contributions to the total atomic forces not already\ndefined.",
                "sub_section": "/packages/2/section_definitions/6",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "types",
                "description": "Contains other types of forces not already defined.",
                "sub_section": "/packages/2/section_definitions/6",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "StressEntry",
            "description": "Section describing a contribution to or a type of stress.",
            "base_sections": [
              "/packages/2/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of the stress on the simulation cell. It is given as the functional\nderivative of the corresponding energy with respect to the deformation tensor.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "joule / meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "values_per_atom",
                "description": "Value of the atom-resolved stresses.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "number_of_atoms",
                  3,
                  3
                ],
                "unit": "joule / meter ** 3"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "name": "Stress",
            "description": "Section containing all stress types and contributions.",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "total",
                "description": "Contains the value and information regarding the stress on the simulation cell\nand the atomic stresses corresponding to energy_total.",
                "sub_section": "/packages/2/section_definitions/8"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "contributions",
                "description": "Contains contributions for the total stress.",
                "sub_section": "/packages/2/section_definitions/8",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "types",
                "description": "Contains other types of stress.",
                "sub_section": "/packages/2/section_definitions/8",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "name": "ChargesValue",
            "description": "Contains information on the charge on an atom or projected onto an orbital.",
            "base_sections": [
              "/packages/2/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of the charge projected on atom and orbital.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "coulomb"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_electrons",
                "description": "Value of the number of electrons projected on atom and orbital.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "spin_z",
                "description": "Value of the azimuthal spin projected on atom and orbital.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 11,
            "m_parent_sub_section": "section_definitions",
            "name": "Charges",
            "description": "Section describing the charges on the atoms obtained through a given analysis method. Also contains information on the orbital projection of charges.",
            "base_sections": [
              "/packages/2/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "analysis_method",
                "description": "Analysis method employed in evaluating the atom and partial charges.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of the atomic charges calculated through analysis_method.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms"
                ],
                "unit": "coulomb"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_electrons",
                "description": "Value of the number of electrons on the atoms.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "spins",
                "description": "Value of the atomic spins.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "total",
                "description": "Value of the total charge of the system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "coulomb"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "spin_projected",
                "sub_section": "/packages/2/section_definitions/10",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "orbital_projected",
                "sub_section": "/packages/2/section_definitions/10",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 12,
            "m_parent_sub_section": "section_definitions",
            "name": "BandGapDeprecated",
            "description": "Base class for breaking up circular dependencies between BandGap, Dos, and BandStructure.",
            "base_sections": [
              "/packages/16/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.index"
                  ]
                },
                "name": "index",
                "description": "The spin channel index.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.value"
                  ]
                },
                "name": "value",
                "description": "The actual value of the band gap. Value of zero indicates a vanishing band gap and\nis distinct from sources lacking any band gap measurement or calculation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.type"
                  ]
                },
                "name": "type",
                "description": "Band gap type.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "direct",
                    "indirect"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "energy_highest_occupied",
                "description": "The highest occupied energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "energy_lowest_unoccupied",
                "description": "The lowest unoccupied energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 13,
            "m_parent_sub_section": "section_definitions",
            "name": "BandEnergies",
            "description": "This section describes the eigenvalue spectrum for a set of kpoints given by band_energies_kpoints.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_spin_channels",
                "description": "Number of spin channels.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_bands",
                "description": "Number of bands for which the eigenvalues are evaluated.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_kpoints",
                "description": "Number of kpoints for which the eigenvalues are evaluated.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "kpoints",
                "description": "Fractional coordinates of the $k$ or $q$ points (in the basis of the reciprocal-\nlattice vectors) for which the eigenvalues are evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_kpoints",
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "kpoints_weights",
                "description": "Weights of the $k$ points in the calculation of the band energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_kpoints"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "kpoints_multiplicities",
                "description": "Multiplicities of the $k$ point (i.e., how many distinct points per cell this\nexpands to after applying all symmetries). This defaults to 1. If expansion is\nperformed then each point will have weight\nband_energies_kpoints_weights/band_energies_kpoints_multiplicities.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_kpoints"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "endpoints_labels",
                "description": "Labels of the points along a one-dimensional path sampled in the $k$-space or\n$q$-space, using the conventional symbols, e.g., Gamma, K, L.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  2
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "orbital_labels",
                "description": "Labels corresponding to each band/orbital",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_bands"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "occupations",
                "description": "Values of the occupations of the bands.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "Values of the band energies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "qp_linearization_prefactor",
                "description": "Values of the GW quasi particle linearization pre-factor.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "value_xc_potential",
                "description": "Diagonal matrix elements of the GW exchange-correlation potential.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "value_correlation",
                "description": "Diagonal matrix elements of the GW correlation energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "value_exchange",
                "description": "Diagonal matrix elements of the GW exchange energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "name": "value_xc",
                "description": "Diagonal matrix elements of the GW exchange-correlation energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "name": "value_qp",
                "description": "Diagonal matrix elements of the GW quasi-particle energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "name": "value_ks",
                "description": "Diagonal matrix elements of the Kohn-Sham energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "name": "value_ks_xc",
                "description": "Diagonal matrix elements of the Kohn-Sham exchange-correlation energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_spin_channels",
                  "n_kpoints",
                  "n_bands"
                ],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "band_gap",
                "sub_section": "/packages/2/section_definitions/12",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 14,
            "m_parent_sub_section": "section_definitions",
            "name": "BandStructure",
            "description": "This section stores information on a band structure evaluation along one-dimensional pathways in the $k$ or $q$ (reciprocal) space given in section_band_segment.\nEigenvalues calculated at the actual $k$-mesh used for energy_total evaluations,\ncan be found in the eigenvalues section.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "path_standard",
                "description": "String to specify the standard used for the kpoints path within bravais\nlattice.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "reciprocal_cell",
                "description": "The reciprocal cell within which the band structure is calculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "1 / meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "energy_fermi",
                "description": "Fermi energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "band_gap",
                "sub_section": "/packages/2/section_definitions/12",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "segment",
                "sub_section": "/packages/2/section_definitions/13",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 15,
            "m_parent_sub_section": "section_definitions",
            "name": "DosFingerprint",
            "description": "Section for the fingerprint of the electronic density-of-states (DOS). DOS fingerprints are a modification of the D-Fingerprints reported in Chem. Mater. 2015,\n27, 3, 735\u2013743 (doi:10.1021/cm503507h). The fingerprint consists of a binary\nrepresentation of the DOS, that is used to evaluate the similarity of materials based\non their electronic structure.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "bins",
                "description": "Byte representation of the DOS fingerprint.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "indices",
                "description": "Indices used to compare DOS fingerprints of different energy ranges.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  2
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "stepsize",
                "description": "Stepsize of interpolation in the first step of the generation of DOS fingerprints.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "filling_factor",
                "description": "Proportion of 1 bins in the DOS fingerprint.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "grid_id",
                "description": "Identifier of the DOS grid that was used for the creation of the fingerprint.\nSimilarity can only be calculated if the same grid was used for both fingerprints.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 16,
            "m_parent_sub_section": "section_definitions",
            "name": "DosValues",
            "description": "Section containing information regarding the values of the density of states (DOS).",
            "base_sections": [
              "/packages/2/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "phonon_mode",
                "description": "Phonon mode corresponding to the DOS used for phonon projections.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "normalization_factor",
                "description": "Normalization factor for DOS values to get a cell-independent intensive DOS,\ndefined as the DOS integral from the lowest energy state to the Fermi level for a neutrally charged system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of DOS, i.e. number of states for a given energy. The set of discrete\nenergy values is given in energies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies"
                ],
                "unit": "1 / joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "value_integrated",
                "description": "A cumulative DOS starting from the mimunum energy available up to the energy level specified in `energies`.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 17,
            "m_parent_sub_section": "section_definitions",
            "name": "Dos",
            "description": "Section containing information of an electronic-energy or phonon density of states (DOS) evaluation.",
            "base_sections": [
              "/packages/2/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_energies",
                "description": "Gives the number of energy values for the DOS, see energies.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "Contains the set of discrete energy values for the DOS.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "energy_shift",
                "description": "Value necessary to shift the energies array so that the energy zero corresponds to\nthe highest occupied energy level.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "energy_fermi",
                "description": "Fermi energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "band_gap",
                "sub_section": "/packages/2/section_definitions/12",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "total",
                "sub_section": "/packages/2/section_definitions/16",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "atom_projected",
                "sub_section": "/packages/2/section_definitions/16",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "species_projected",
                "sub_section": "/packages/2/section_definitions/16",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "orbital_projected",
                "sub_section": "/packages/2/section_definitions/16",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "fingerprint",
                "sub_section": "/packages/2/section_definitions/15",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 18,
            "m_parent_sub_section": "section_definitions",
            "name": "ElectronicStructureProvenance",
            "description": "\n    ",
            "base_sections": [
              "/packages/16/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "dos",
                "description": "",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/16"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "band_structure",
                "description": "",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/13"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "methodology",
                "description": "Reference to the specific method section.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/39"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 19,
            "m_parent_sub_section": "section_definitions",
            "name": "BandGap",
            "description": "\n        Contains information for each present spin channel.\n        ",
            "base_sections": [
              "/packages/2/section_definitions/12"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "provenance",
                "sub_section": "/packages/2/section_definitions/18",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 20,
            "m_parent_sub_section": "section_definitions",
            "name": "MultipolesValues",
            "description": "Section containing the values of the multipoles projected unto an atom or orbital.",
            "base_sections": [
              "/packages/2/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of the multipole.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 21,
            "m_parent_sub_section": "section_definitions",
            "name": "MultipolesEntry",
            "description": "Section describing a multipole term. The unit of the values are given by C * m ^ n, where n = 1 for dipole, 2 for quadrupole, etc.",
            "base_sections": [
              "/packages/2/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "origin",
                "description": "Origin in cartesian space.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_multipoles",
                "description": "Number of multipoles.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of the multipoles projected unto the atoms.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms",
                  "n_multipoles"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "total",
                "description": "Total value of the multipoles.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_multipoles"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "orbital_projected",
                "sub_section": "/packages/2/section_definitions/20",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 22,
            "m_parent_sub_section": "section_definitions",
            "name": "Multipoles",
            "description": "Section containing the multipoles (dipoles, quadrupoles, ...) for each atom.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "kind",
                "description": "Kind of the multipoles being described.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "dipole",
                "sub_section": "/packages/2/section_definitions/21",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "quadrupole",
                "sub_section": "/packages/2/section_definitions/21",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "octupole",
                "sub_section": "/packages/2/section_definitions/21",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "higher_order",
                "sub_section": "/packages/2/section_definitions/21",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 23,
            "m_parent_sub_section": "section_definitions",
            "name": "Thermodynamics",
            "description": "Section containing results related to a thermodynamics calculation.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "enthalpy",
                "description": "Value of the calculated enthalpy per cell i.e. energy_total + pressure * volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "entropy",
                "description": "Value of the entropy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "chemical_potential",
                "description": "Value of the chemical potential.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "kinetic_energy",
                "description": "Value of the kinetic energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "potential_energy",
                "description": "Value of the potential energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "internal_energy",
                "description": "Value of the internal energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_free_energy_at_constant_volume",
                "description": "Value of the vibrational free energy per cell unit at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "pressure",
                "description": "Value of the pressure of the system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "temperature",
                "description": "Value of the temperature of the system at which the properties are calculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "volume",
                "description": "Value of the volume of the system at which the properties are calculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacity_c_v",
                "description": "Stores the heat capacity per cell unit at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacity_c_p",
                "description": "Stores the heat capacity per cell unit at constant pressure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "time_step",
                "description": "The number of time steps with respect to the start of the calculation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 24,
            "m_parent_sub_section": "section_definitions",
            "name": "Volumetric",
            "description": "Section defining a set of volumetric data on a uniform real-space grid. Kind should be specified if the data is not explicitly defined by a metainfo class.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "kind",
                "description": "The kind of function if not already defined.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "multiplicity",
                "description": "Number of functions stored.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_x",
                "description": "number of points along x axis",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_y",
                "description": "number of points along y axis",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_z",
                "description": "number of points along z axis",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "displacements",
                "description": "displacement vectors between grid points along each axis; same indexing rules as\nlattice_vectors.  In many cases, displacements and number of points are related to\nlattice_vectors through: [displacement] * [number of points + N] =\n[lattice_vector],where N is 1 for periodic directions and 0 for non-periodic ones",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "origin",
                "description": "location of the first grid point; same coordinate system as atom_positions when\napplicable.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the volumetric data defined by kind.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "multiplicity",
                  "n_x",
                  "n_y",
                  "n_z"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 25,
            "m_parent_sub_section": "section_definitions",
            "name": "PotentialValue",
            "description": "Section containing the values of the potential evaluated on a uniform real-space grid.",
            "base_sections": [
              "/packages/2/section_definitions/24"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the potential evaluated at each grid point.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "multiplicity",
                  "n_x",
                  "n_y",
                  "n_z"
                ],
                "unit": "joule / meter ** 3"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 26,
            "m_parent_sub_section": "section_definitions",
            "name": "Potential",
            "description": "Section containing all potential types.",
            "base_sections": [
              "/packages/2/section_definitions/24"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "effective",
                "sub_section": "/packages/2/section_definitions/25",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "hartree",
                "sub_section": "/packages/2/section_definitions/25",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 27,
            "m_parent_sub_section": "section_definitions",
            "name": "Density",
            "description": "Section containing the values of the density evaluated on a uniform real-space grid.",
            "base_sections": [
              "/packages/2/section_definitions/24"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the potential evaluated at each grid point.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "multiplicity",
                  "n_x",
                  "n_y",
                  "n_z"
                ],
                "unit": "1 / meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value_hdf5",
                "description": "Specifies the HDF5 file and the path to the value in the file .",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._HDF5Reference"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 28,
            "m_parent_sub_section": "section_definitions",
            "name": "Spectra",
            "description": "Section containing the spectra properties.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "A string identifier for the type of spectrum: XAS, RIXS, XES, ARPES, etc.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_energies",
                "description": "Number of excited states.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "excitation_energies",
                "description": "Excitation energies.",
                "categories": [
                  "/packages/2/category_definitions/3"
                ],
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "energy_zero_ref",
                "description": "Reference energy to set the origin of the spectra to 0 eV.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "intensities",
                "description": "Excitation intensities in arbitrary units.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "intensities_units",
                "description": "Units in which the intensities of the spectra are returned by a calculation. The\ntypical units for the dielectric constant are `F/m`.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "oscillator_strengths",
                "description": "Excited states oscillator strengths.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "transition_dipole_moments",
                "description": "Transition dipole moments.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies",
                  3
                ],
                "unit": "coulomb * meter"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "provenance",
                "sub_section": "/packages/2/section_definitions/18",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 29,
            "m_parent_sub_section": "section_definitions",
            "name": "GreensFunctions",
            "description": "Green's functions properties in different time/frequency basis.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Type of Green's function calculated from the mapping of the Hubbard-Kanamori model\ninto the Anderson impurity model. These calculations are converged if both types of\nGreen's functions converge to each other (G_impurity == G_lattice).",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "impurity",
                    "lattice"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "matsubara_freq",
                "description": "Matsubara frequencies (imaginary frequencies). Can be either positives or both positives\nand negatives.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "tau",
                "description": "Imaginary times.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_tau"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "frequencies",
                "description": "Real space frequencies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_frequencies"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "chemical_potential",
                "description": "Chemical potential.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "self_energy_iw",
                "description": "Self-energy tensor in Matsubara frequencies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals",
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "greens_function_iw",
                "description": "Green's function tensor in Matsubara frequencies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals",
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "hybridization_function_iw",
                "description": "Hybridization function tensor in Matsubara frequencies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals",
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "greens_function_tau",
                "description": "Green's function tensor in tau (imaginary time).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals",
                  "n_tau"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "self_energy_freq",
                "description": "Self-energy tensor in real frequencies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals",
                  "n_frequencies"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "greens_function_freq",
                "description": "Green's function tensor in real frequencies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals",
                  "n_frequencies"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "hybridization_function_freq",
                "description": "Hybridization function tensor in real frequencies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "complex128"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals",
                  "n_frequencies"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "orbital_occupations",
                "description": "Orbital occupation per correlated atom in the unit cell and per spin.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "quasiparticle_weights",
                "description": "Quasiparticle weights of each orbital per site and spin. Calculated from:\n    Z = inv(1.0 - d [Re Sigma] / dw at w=0)\nit takes values \u2208 [0.0, 1.0], being Z=1 non-correlated, and Z=0 in a Mott state.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_atoms_per_unit_cell",
                  2,
                  "n_correlated_orbitals"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 30,
            "m_parent_sub_section": "section_definitions",
            "name": "VibrationalFrequenciesValues",
            "description": "Section describing a vibrational spectrum.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "kind",
                "description": "Kind of the vibration.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "description": "Short description of the vibration.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_vibrations",
                "description": "Number of values in the vibration spectrum.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "activity",
                "description": "Describes the activity corresponding to each of the value of the vibration\nspectrum.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_vibrations"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "intensity",
                "description": "Intensity of the vibration.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_vibrations"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 31,
            "m_parent_sub_section": "section_definitions",
            "name": "VibrationalFrequencies",
            "description": "Section containing results related to vibrational frequencies.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_frequencies",
                "description": "Number of vibration frequencies",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of vibrational frequencies (m-1)",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_frequencies"
                ],
                "unit": "1 / meter"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "raman",
                "sub_section": "/packages/2/section_definitions/30",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "infrared",
                "sub_section": "/packages/2/section_definitions/30",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 32,
            "m_parent_sub_section": "section_definitions",
            "name": "RadiusOfGyrationValues",
            "description": "Section containing information regarding the values of radius of gyration (Rg).",
            "base_sections": [
              "/packages/2/section_definitions/3"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of Rg.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 33,
            "m_parent_sub_section": "section_definitions",
            "name": "RadiusOfGyration",
            "description": "Section containing information about the calculation of radius of gyration (Rg).",
            "base_sections": [
              "/packages/2/section_definitions/2"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "radius_of_gyration_values",
                "sub_section": "/packages/2/section_definitions/32",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 34,
            "m_parent_sub_section": "section_definitions",
            "name": "BaseCalculation",
            "description": "Contains computed properties of a configuration as defined by the corresponding section system and with the simulation method defined by section method. The\nreferences to the system and method sections are given by system_ref and method_ref,\nrespectively.\n\nProperties derived from a group of configurations are not included in this section but\ncan be accessed in section workflow.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "system_ref",
                "description": "Links the calculation to a section system.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "method_ref",
                "description": "Links the calculation to a section method.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/39"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "starting_calculation_ref",
                "description": "Links the current section calculation to the starting calculation.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_references",
                "description": "Number of references to the current section calculation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "calculations_ref",
                "description": "Links the current section calculation to other section calculations. Such a link\nis necessary for example if the referenced calculation is a self-consistent\ncalculation that serves as a starting point or a calculation is part of a domain\ndecomposed simulation that needs to be connected.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": [
                  "n_references"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "calculations_path",
                "description": "Links the current section calculation to other section calculations. Such a link\nis necessary for example if the referenced calculation is a self-consistent\ncalculation that serves as a starting point or a calculation is part of a domain\ndecomposed simulation that needs to be connected.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_references"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "calculation_converged",
                "description": "Indicates whether a the calculation is converged.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "hessian_matrix",
                "description": "The matrix with the second derivative of the energy with respect to atom\ndisplacements.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "number_of_atoms",
                  "number_of_atoms",
                  3,
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "spin_S2",
                "description": "Stores the value of the total spin moment operator $S^2$ for the converged\nwavefunctions calculated with the XC_method. It can be used to calculate the spin\ncontamination in spin-unrestricted calculations.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "time_calculation",
                "description": "Stores the wall-clock time needed to complete the calculation i.e. the real time\nthat has elapsed from start to end of calculation.",
                "categories": [
                  "/packages/2/category_definitions/2",
                  "/packages/2/category_definitions/1"
                ],
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "time_physical",
                "description": "The elapsed real time at the end of the calculation with respect to the start of\nthe simulation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "volume",
                "description": "Value of the volume of the system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "density",
                "description": "Value of the density of the system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kilogram / meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "pressure",
                "description": "Value of the pressure of the system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "name": "pressure_tensor",
                "description": "Value of the pressure in terms of the x, y, z components of the simulation cell.\nTypically calculated as the difference between the kinetic energy and the virial.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "name": "virial_tensor",
                "description": "Value of the virial in terms of the x, y, z components of the simulation cell.\nTypically calculated as the cross product between positions and forces.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "name": "enthalpy",
                "description": "Value of the calculated enthalpy per cell i.e. energy_total + pressure * volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "name": "temperature",
                "description": "Value of the temperature of the system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "name": "step",
                "description": "The number of time steps with respect to the start of the simulation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "name": "time",
                "description": "The elapsed simulated physical time since the start of the simulation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "energy",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/2/section_definitions/5"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "forces",
                "sub_section": "/packages/2/section_definitions/7"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "stress",
                "sub_section": "/packages/2/section_definitions/9"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "band_gap",
                "sub_section": "/packages/2/section_definitions/19",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "dos_electronic",
                "sub_section": "/packages/2/section_definitions/17",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "dos_phonon",
                "sub_section": "/packages/2/section_definitions/17",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "name": "eigenvalues",
                "sub_section": "/packages/2/section_definitions/13",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 7,
                "m_parent_sub_section": "sub_sections",
                "name": "band_structure_electronic",
                "sub_section": "/packages/2/section_definitions/14",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 8,
                "m_parent_sub_section": "sub_sections",
                "name": "band_structure_phonon",
                "sub_section": "/packages/2/section_definitions/14",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 9,
                "m_parent_sub_section": "sub_sections",
                "name": "thermodynamics",
                "sub_section": "/packages/2/section_definitions/23",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 10,
                "m_parent_sub_section": "sub_sections",
                "name": "hopping_matrix",
                "sub_section": "/packages/0/section_definitions/24",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 11,
                "m_parent_sub_section": "sub_sections",
                "name": "spectra",
                "sub_section": "/packages/2/section_definitions/28",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 12,
                "m_parent_sub_section": "sub_sections",
                "name": "greens_functions",
                "sub_section": "/packages/2/section_definitions/29",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 13,
                "m_parent_sub_section": "sub_sections",
                "name": "vibrational_frequencies",
                "sub_section": "/packages/2/section_definitions/31",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 14,
                "m_parent_sub_section": "sub_sections",
                "name": "potential",
                "sub_section": "/packages/2/section_definitions/26",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 15,
                "m_parent_sub_section": "sub_sections",
                "name": "multipoles",
                "sub_section": "/packages/2/section_definitions/22",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 16,
                "m_parent_sub_section": "sub_sections",
                "name": "charges",
                "sub_section": "/packages/2/section_definitions/11",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 17,
                "m_parent_sub_section": "sub_sections",
                "name": "density_charge",
                "sub_section": "/packages/2/section_definitions/27",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 18,
                "m_parent_sub_section": "sub_sections",
                "name": "radius_of_gyration",
                "sub_section": "/packages/2/section_definitions/33",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 35,
            "m_parent_sub_section": "section_definitions",
            "name": "ScfIteration",
            "description": "Every scf_iteration section represents a self-consistent field (SCF) iteration, and gives detailed information on the SCF procedure of the specified quantities.",
            "base_sections": [
              "/packages/2/section_definitions/34"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 36,
            "m_parent_sub_section": "section_definitions",
            "name": "Calculation",
            "description": "Every calculation section contains the values computed during a *single configuration calculation*, i.e. a calculation performed on a given\nconfiguration of the system (as defined in section_system) and a given computational\nmethod (e.g., exchange-correlation method, basis sets, as defined in section_method).\n\nThe link between the current section calculation and the related\nsystem and method sections is established by the values stored in system_ref and\nmethod_ref, respectively.\n\nThe reason why information on the system configuration and computational method is\nstored separately is that several *single configuration calculations* can be performed\non the same system configuration, viz. several system configurations can be evaluated\nwith the same computational method. This storage strategy avoids redundancies.",
            "base_sections": [
              "/packages/2/section_definitions/34"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_scf_iterations",
                "description": "Gives the number of performed self-consistent field (SCF) iterations.",
                "categories": [
                  "/packages/2/category_definitions/0"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "scf_iteration",
                "sub_section": "/packages/2/section_definitions/35",
                "repeats": true
              }
            ]
          }
        ],
        "category_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 0,
            "m_parent_sub_section": "category_definitions",
            "name": "ScfInfo",
            "description": "Contains information on the self-consistent field (SCF) procedure, i.e. the number of\nSCF iterations (number_of_scf_iterations) or a section_scf_iteration section with\ndetailed information on the SCF procedure of specified quantities."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 1,
            "m_parent_sub_section": "category_definitions",
            "name": "AccessoryInfo",
            "description": "Information that *in theory* should not affect the results of the calculations (e.g.,\ntiming)."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 2,
            "m_parent_sub_section": "category_definitions",
            "name": "TimeInfo",
            "description": "Stores information on the date and timings of the calculation. They are useful for,\ne.g., debugging or visualization purposes.",
            "categories": [
              "/packages/2/category_definitions/1"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 3,
            "m_parent_sub_section": "category_definitions",
            "name": "EnergyValue",
            "description": "This metadata stores an energy value."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 4,
            "m_parent_sub_section": "category_definitions",
            "name": "EnergyTypeReference",
            "description": "This metadata stores an energy used as reference point.",
            "categories": [
              "/packages/2/category_definitions/3"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 5,
            "m_parent_sub_section": "category_definitions",
            "name": "ErrorEstimateContribution",
            "description": "An estimate of a partial quantity contributing to the error for a given quantity."
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 3,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.simulation.run",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Program",
            "description": "Contains the specifications of the program.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "Specifies the name of the program that generated the data.",
                "categories": [
                  "/packages/3/category_definitions/0",
                  "/packages/3/category_definitions/1"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "version",
                "description": "Specifies the version of the program that was used. This should be the version\nnumber of an official release, the version tag or a commit id as well as the\nlocation of the repository.",
                "categories": [
                  "/packages/3/category_definitions/0",
                  "/packages/3/category_definitions/1"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "compilation_datetime",
                "description": "Contains the program compilation date and time from *Unix epoch* (00:00:00 UTC on\n1 January 1970) in seconds. For date and times without a timezone, the default\ntimezone GMT is used.",
                "categories": [
                  "/packages/3/category_definitions/0",
                  "/packages/3/category_definitions/1"
                ],
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "compilation_host",
                "description": "Specifies the host on which the program was compiled.",
                "categories": [
                  "/packages/3/category_definitions/0",
                  "/packages/3/category_definitions/1"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "TimeRun",
            "description": "Contains information on timing information of the run.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "date_end",
                "description": "Stores the end date of the run as time since the *Unix epoch* (00:00:00 UTC on 1\nJanuary 1970) in seconds. For date and times without a timezone, the default\ntimezone GMT is used.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "date_start",
                "description": "Stores the start date of the run as time since the *Unix epoch* (00:00:00 UTC on 1\nJanuary 1970) in seconds. For date and times without a timezone, the default\ntimezone GMT is used.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "cpu1_end",
                "description": "Stores the end time of the run on CPU 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "cpu1_start",
                "description": "Stores the start time of the run on CPU 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "wall_end",
                "description": "Stores the internal wall-clock time at the end of the run.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "wall_start",
                "description": "Stores the internal wall-clock time from the start of the run.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "MessageRun",
            "description": "Contains warning, error, and info messages of the run.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Type of the message. Can be one of warning, error, info, debug.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of the message of the computational program, given by type.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Run",
            "description": "Every section run represents a single call of a program.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "calculation_file_uri",
                "description": "Contains the nomad uri of a raw the data file connected to the current run. There\nshould be an value for the main_file_uri and all ancillary files.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "clean_end",
                "description": "Indicates whether this run terminated properly (true), or if it was killed or\nexited with an error code unequal to zero (false).",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "raw_id",
                "description": "An optional calculation id, if one is found in the code input/output files.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "starting_run_ref",
                "description": "Links the current section run to a section run containing the calculations from\nwhich the current section starts.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/3/section_definitions/3"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_references",
                "description": "Number of references to the current section calculation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "runs_ref",
                "description": "Links the the current section to other run sections. Such a link is necessary for\nexample for workflows that may contain a series of runs.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/3/section_definitions/3"
                },
                "shape": [
                  "n_references"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "program",
                "sub_section": "/packages/3/section_definitions/0"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "time_run",
                "sub_section": "/packages/3/section_definitions/1"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "message",
                "sub_section": "/packages/3/section_definitions/2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/0/section_definitions/39",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "system",
                "sub_section": "/packages/1/section_definitions/8",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "calculation",
                "sub_section": "/packages/2/section_definitions/36",
                "repeats": true
              }
            ]
          }
        ],
        "category_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 0,
            "m_parent_sub_section": "category_definitions",
            "name": "AccessoryInfo",
            "description": "Information that *in theory* should not affect the results of the calculations (e.g.,\ntiming)."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 1,
            "m_parent_sub_section": "category_definitions",
            "name": "ProgramInfo",
            "description": "Contains information on the program that generated the data, i.e. the program_name,\nprogram_version, program_compilation_host and program_compilation_datetime as direct\nchildren of this field.",
            "categories": [
              "/packages/3/category_definitions/0"
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 4,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.results",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "BandGapDeprecated",
            "base_sections": [
              "/packages/2/section_definitions/12"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Temporary label for GUI generating GUI artifacts.\nCan be left unpopulated.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.index"
                  ]
                },
                "name": "index",
                "description": "The spin channel index.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.value"
                  ]
                },
                "name": "value",
                "description": "The actual value of the band gap. Value of zero indicates a vanishing band gap and\nis distinct from sources lacking any band gap measurement or calculation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.type"
                  ]
                },
                "name": "type",
                "description": "Band gap type.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "direct",
                    "indirect"
                  ]
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "BandGap",
            "base_sections": [
              "/packages/2/section_definitions/19"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Label to identify the band gap data, e.g. the method employed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.index"
                  ]
                },
                "name": "index",
                "description": "The spin channel index.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.value"
                  ]
                },
                "name": "value",
                "description": "The actual value of the band gap. Value of zero indicates a vanishing band gap and\nis distinct from sources lacking any band gap measurement or calculation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.band_gap.type"
                  ]
                },
                "name": "type",
                "description": "Band gap type.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "direct",
                    "indirect"
                  ]
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "ElementalComposition",
            "description": "\n        Section containing information about the concentration of an element,\n        given by its atomic and mass fraction within the system or material.\n        ",
            "more": {
              "label_quantity": "element"
            },
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.elemental_composition.element",
                    "results.material.topology.elemental_composition.element__suggestion.suggestion"
                  ]
                },
                "name": "element",
                "description": "The symbol of the element, e.g. 'Pb'.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "H",
                    "He",
                    "Li",
                    "Be",
                    "B",
                    "C",
                    "N",
                    "O",
                    "F",
                    "Ne",
                    "Na",
                    "Mg",
                    "Al",
                    "Si",
                    "P",
                    "S",
                    "Cl",
                    "Ar",
                    "K",
                    "Ca",
                    "Sc",
                    "Ti",
                    "V",
                    "Cr",
                    "Mn",
                    "Fe",
                    "Co",
                    "Ni",
                    "Cu",
                    "Zn",
                    "Ga",
                    "Ge",
                    "As",
                    "Se",
                    "Br",
                    "Kr",
                    "Rb",
                    "Sr",
                    "Y",
                    "Zr",
                    "Nb",
                    "Mo",
                    "Tc",
                    "Ru",
                    "Rh",
                    "Pd",
                    "Ag",
                    "Cd",
                    "In",
                    "Sn",
                    "Sb",
                    "Te",
                    "I",
                    "Xe",
                    "Cs",
                    "Ba",
                    "La",
                    "Ce",
                    "Pr",
                    "Nd",
                    "Pm",
                    "Sm",
                    "Eu",
                    "Gd",
                    "Tb",
                    "Dy",
                    "Ho",
                    "Er",
                    "Tm",
                    "Yb",
                    "Lu",
                    "Hf",
                    "Ta",
                    "W",
                    "Re",
                    "Os",
                    "Ir",
                    "Pt",
                    "Au",
                    "Hg",
                    "Tl",
                    "Pb",
                    "Bi",
                    "Po",
                    "At",
                    "Rn",
                    "Fr",
                    "Ra",
                    "Ac",
                    "Th",
                    "Pa",
                    "U",
                    "Np",
                    "Pu",
                    "Am",
                    "Cm",
                    "Bk",
                    "Cf",
                    "Es",
                    "Fm",
                    "Md",
                    "No",
                    "Lr",
                    "Rf",
                    "Db",
                    "Sg",
                    "Bh",
                    "Hs",
                    "Mt",
                    "Ds",
                    "Rg",
                    "Cn",
                    "Nh",
                    "Fl",
                    "Mc",
                    "Lv",
                    "Ts",
                    "Og"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "mass",
                "description": "The (average) mass of the element.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "kilogram"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.elemental_composition.atomic_fraction"
                  ]
                },
                "name": "atomic_fraction",
                "description": "The atomic fraction of the element in the system it is contained within.\nPer definition a positive value less than or equal to 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.elemental_composition.mass_fraction"
                  ]
                },
                "name": "mass_fraction",
                "description": "The mass fraction of the element in the system it is contained within.\nPer definition a positive value less than or equal to 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "LatticeParameters",
            "description": "\n        Lattice parameters of a cell.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.lattice_parameters.a"
                  ]
                },
                "name": "a",
                "description": "Length of the first basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.lattice_parameters.b"
                  ]
                },
                "name": "b",
                "description": "Length of the second basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.lattice_parameters.c"
                  ]
                },
                "name": "c",
                "description": "Length of the third basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.lattice_parameters.alpha"
                  ]
                },
                "name": "alpha",
                "description": "Angle between second and third basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "radian"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.lattice_parameters.beta"
                  ]
                },
                "name": "beta",
                "description": "Angle between first and third basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "radian"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.lattice_parameters.gamma"
                  ]
                },
                "name": "gamma",
                "description": "Angle between first and second basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "radian"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "WyckoffSet",
            "description": "\n        Section for storing Wyckoff set information. Only available for\n        conventional cells that have undergone symmetry analysis.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "wyckoff_letter",
                "description": "The Wyckoff letter for this set.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "indices",
                "description": "Indices of the atoms belonging to this group.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "1..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "element",
                "description": "Chemical element at this Wyckoff position.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "x",
                "description": "The free parameter x if present.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "y",
                "description": "The free parameter y if present.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "z",
                "description": "The free parameter z if present.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "Structure",
            "description": "\n        Describes an atomistic structure.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "dimension_types",
                "description": "List of three integers. For each of the three directions indicated by\nthe three lattice vectors (see property lattice_vectors). This list\nindicates if the direction is periodic (value 1) or non-periodic (value\n0). Note: the elements in this list each refer to the direction of the\ncorresponding entry in lattice_vectors and not the Cartesian x, y, z\ndirections.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": [
                  3
                ],
                "default": [
                  0,
                  0,
                  0
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.nperiodic_dimensions"
                  ]
                },
                "name": "nperiodic_dimensions",
                "description": "An integer specifying the number of periodic dimensions in the\nstructure, equivalent to the number of non-zero entries in\ndimension_types.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "lattice_vectors",
                "description": "The three lattice vectors in Cartesian coordinates.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "cartesian_site_positions",
                "description": "Cartesian positions of each site. A site is an atom, a site potentially\noccupied by an atom, or a placeholder for a virtual mixture of atoms\n(e.g., in a virtual crystal approximation).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_sites",
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.n_sites"
                  ]
                },
                "name": "n_sites",
                "description": "An integer specifying the length of the cartesian_site_positions property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "default": 0,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "species_at_sites",
                "description": "Name of the species at each site (where values for sites are specified with the same\norder of the cartesian_site_positions property). The properties of the species are\nfound in the species property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_sites"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structures.structure_primitive.cell_volume"
                  ]
                },
                "name": "cell_volume",
                "description": "Volume of the cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "atomic_density",
                "description": "Atomic density of the material (atoms/volume).'",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "1 / meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "mass_density",
                "description": "Mass density of the material.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "kilogram / meter ** 3"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "species",
                "sub_section": "/packages/20/section_definitions/0",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "lattice_parameters",
                "sub_section": "/packages/4/section_definitions/3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "wyckoff_sets",
                "sub_section": "/packages/4/section_definitions/4",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "Structures",
            "description": "\n        Contains full atomistic representations of the material in different\n        forms.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "structure_original",
                "description": "Contains a selected representative structure from the the original\ndata.",
                "sub_section": "/packages/4/section_definitions/5",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "structure_conventional",
                "description": "Contains the conventional structure that is derived from\nstructure_original. This conventional stucture has been idealized and\nthe conventions employed by spglib are used.",
                "sub_section": "/packages/4/section_definitions/5",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "structure_primitive",
                "description": "Contains the primitive structure that is derived from\nstructure_original. This primitive stucture has been idealized and the\nconventions employed by spglib are used.",
                "sub_section": "/packages/4/section_definitions/5",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "Symmetry",
            "description": "\n        Section containing information about the symmetry of the material. All\n        of these properties are derived by running a symmetry analysis on a\n        representative geometry from the original data. This original geometry\n        is stored in results.properties together with the primitive and\n        conventional structures.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.bravais_lattice",
                    "results.material.symmetry.bravais_lattice__suggestion.suggestion"
                  ]
                },
                "name": "bravais_lattice",
                "description": "Identifier for the Bravais lattice in Pearson notation. The first lowercase letter\nidentifies the crystal family and can be one of the following: a (triclinic), b\n(monoclinic), o (orthorhombic), t (tetragonal), h (hexagonal) or c (cubic). The\nsecond uppercase letter identifies the centring and can be one of the following: P\n(primitive), S (face centred), I (body centred), R (rhombohedral centring) or F\n(all faces centred).",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "aP",
                    "mP",
                    "mS",
                    "oP",
                    "oS",
                    "oF",
                    "oI",
                    "tP",
                    "tI",
                    "hP",
                    "hR",
                    "cP",
                    "cF",
                    "cI"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.crystal_system",
                    "results.material.symmetry.crystal_system__suggestion.suggestion"
                  ]
                },
                "name": "crystal_system",
                "description": "Name of the crystal system.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "triclinic",
                    "monoclinic",
                    "orthorhombic",
                    "tetragonal",
                    "trigonal",
                    "hexagonal",
                    "cubic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.hall_number"
                  ]
                },
                "name": "hall_number",
                "description": "The Hall number for this system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.hall_symbol",
                    "results.material.symmetry.hall_symbol__suggestion.suggestion"
                  ]
                },
                "name": "hall_symbol",
                "description": "The Hall symbol for this system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.point_group",
                    "results.material.symmetry.point_group__suggestion.suggestion"
                  ]
                },
                "name": "point_group",
                "description": "Symbol of the crystallographic point group in the Hermann-Mauguin notation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.space_group_number"
                  ]
                },
                "name": "space_group_number",
                "description": "Specifies the International Union of Crystallography (IUC) number of the 3D space\ngroup of this system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.space_group_symbol",
                    "results.material.symmetry.space_group_symbol__suggestion.suggestion"
                  ]
                },
                "name": "space_group_symbol",
                "description": "The International Union of Crystallography (IUC) short symbol of the 3D\nspace group of this system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.prototype_formula"
                  ]
                },
                "name": "prototype_formula",
                "description": "The formula of the prototypical material for this structure.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.prototype_aflow_id",
                    "results.material.symmetry.prototype_aflow_id__suggestion.suggestion"
                  ]
                },
                "name": "prototype_aflow_id",
                "description": "The identifier of this structure in the AFLOW encyclopedia of\ncrystallographic prototypes:\nhttp://www.aflowlib.org/prototype-encyclopedia/index.html",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.structure_name",
                    "results.material.symmetry.structure_name__suggestion"
                  ]
                },
                "name": "structure_name",
                "description": "A common name for this structure, e.g. fcc, bcc.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "4-member ring",
                    "Heusler",
                    "bcc",
                    "bct",
                    "bct5",
                    "clathrate",
                    "cuprite",
                    "diamond",
                    "fcc",
                    "fct",
                    "half-Heusler",
                    "hcp",
                    "perovskite",
                    "rock salt",
                    "simple cubic",
                    "wurtzite",
                    "zincblende"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.symmetry.strukturbericht_designation",
                    "results.material.symmetry.strukturbericht_designation__suggestion.suggestion"
                  ]
                },
                "name": "strukturbericht_designation",
                "description": "Classification of the material according to the historically grown\n'strukturbericht'.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "Cell",
            "description": "\n        Properties of a unit cell.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.a"
                  ]
                },
                "name": "a",
                "description": "Length of the first basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.b"
                  ]
                },
                "name": "b",
                "description": "Length of the second basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.c"
                  ]
                },
                "name": "c",
                "description": "Length of the third basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.alpha"
                  ]
                },
                "name": "alpha",
                "description": "Angle between second and third basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "radian"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.beta"
                  ]
                },
                "name": "beta",
                "description": "Angle between first and third basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "radian"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.gamma"
                  ]
                },
                "name": "gamma",
                "description": "Angle between first and second basis vector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "radian"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.volume"
                  ]
                },
                "name": "volume",
                "description": "Volume of the cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.atomic_density"
                  ]
                },
                "name": "atomic_density",
                "description": "Atomic density of the material (atoms/volume).'",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "1 / meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.cell.mass_density"
                  ]
                },
                "name": "mass_density",
                "description": "Mass density of the material.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "kilogram / meter ** 3"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "name": "SymmetryNew",
            "description": "\n        Section containing information about the symmetry properties of a\n        conventional cell related to a system.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.bravais_lattice",
                    "results.material.topology.symmetry.bravais_lattice__suggestion.suggestion"
                  ]
                },
                "name": "bravais_lattice",
                "description": "Identifier for the Bravais lattice in Pearson notation. The first lowercase letter\nidentifies the crystal family and can be one of the following: a (triclinic), b\n(monoclinic), o (orthorhombic), t (tetragonal), h (hexagonal) or c (cubic). The\nsecond uppercase letter identifies the centring and can be one of the following: P\n(primitive), S (face centred), I (body centred), R (rhombohedral centring) or F\n(all faces centred).",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "aP",
                    "mP",
                    "mS",
                    "oP",
                    "oS",
                    "oF",
                    "oI",
                    "tP",
                    "tI",
                    "hP",
                    "hR",
                    "cP",
                    "cF",
                    "cI"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.crystal_system",
                    "results.material.topology.symmetry.crystal_system__suggestion.suggestion"
                  ]
                },
                "name": "crystal_system",
                "description": "Name of the crystal system.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "triclinic",
                    "monoclinic",
                    "orthorhombic",
                    "tetragonal",
                    "trigonal",
                    "hexagonal",
                    "cubic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.hall_number"
                  ]
                },
                "name": "hall_number",
                "description": "The Hall number for this system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.hall_symbol",
                    "results.material.topology.symmetry.hall_symbol__suggestion.suggestion"
                  ]
                },
                "name": "hall_symbol",
                "description": "The Hall symbol for this system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.point_group",
                    "results.material.topology.symmetry.point_group__suggestion.suggestion"
                  ]
                },
                "name": "point_group",
                "description": "Symbol of the crystallographic point group in the Hermann-Mauguin notation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.space_group_number"
                  ]
                },
                "name": "space_group_number",
                "description": "Specifies the International Union of Crystallography (IUC) number of the 3D space\ngroup of this system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.space_group_symbol",
                    "results.material.topology.symmetry.space_group_symbol__suggestion.suggestion"
                  ]
                },
                "name": "space_group_symbol",
                "description": "The International Union of Crystallography (IUC) short symbol of the 3D\nspace group of this system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "choice",
                "description": "String that specifies the centering, origin and basis vector settings of the 3D\nspace group that defines the symmetry group of the simulated physical system (see\nsection system). Values are as defined by spglib.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.strukturbericht_designation",
                    "results.material.topology.symmetry.strukturbericht_designation__suggestion.suggestion"
                  ]
                },
                "name": "strukturbericht_designation",
                "description": "Classification of the material according to the historically grown\n'strukturbericht'.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "symmetry_method",
                "description": "Identifies the source of the symmetry information contained within this\nsection. If equal to 'spg_normalized' the information comes from a\nnormalization step.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "origin_shift",
                "description": "Vector $\\mathbf{p}$ from the origin of the standardized system to the origin of\nthe original system. Together with the matrix $\\mathbf{P}$, found in\nspace_group_3D_transformation_matrix, the transformation between the standardized\ncoordinates $\\mathbf{x}_s$ and original coordinates $\\mathbf{x}$ is then given\nby $\\mathbf{x}_s = \\mathbf{P} \\mathbf{x} + \\mathbf{p}$.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "transformation_matrix",
                "description": "Matrix $\\mathbf{P}$ that is used to transform the standardized coordinates to the\noriginal coordinates. Together with the vector $\\mathbf{p}$, found in\nspace_group_3D_origin_shift, the transformation between the standardized\ncoordinates $\\mathbf{x}_s$ and original coordinates $\\mathbf{x}$ is then given by\n$\\mathbf{x}_s = \\mathbf{P} \\mathbf{x} + \\mathbf{p}$.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "symmorphic",
                "description": "Specifies if the space group is symmorphic. Set to True if all\ntranslations are zero.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.prototype_label_aflow",
                    "results.material.topology.symmetry.prototype_label_aflow__suggestion.suggestion"
                  ]
                },
                "name": "prototype_label_aflow",
                "description": "AFLOW label of the prototype (see\nhttp://aflowlib.org/CrystalDatabase/prototype_index.html) identified on the basis\nof the space_group and normalized_wyckoff.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.symmetry.prototype_name",
                    "results.material.topology.symmetry.prototype_name__suggestion"
                  ]
                },
                "name": "prototype_name",
                "description": "A common name for this prototypical structure, e.g. fcc, bcc.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "4-member ring",
                    "Heusler",
                    "bcc",
                    "bct",
                    "bct5",
                    "clathrate",
                    "cuprite",
                    "diamond",
                    "fcc",
                    "fct",
                    "half-Heusler",
                    "hcp",
                    "perovskite",
                    "rock salt",
                    "simple cubic",
                    "wurtzite",
                    "zincblende"
                  ]
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "wyckoff_sets",
                "sub_section": "/packages/4/section_definitions/4",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "name": "Relation",
            "description": "Contains information about the relation between two different systems.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.system_relation.type",
                    "results.material.topology.system_relation.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "The type of relation between a system and it's parent.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'root'` | System representing the entire structure, has no parent system. |\n| `'subsystem'` | A single logical entity extracted from the parent system. |\n| `'group'` | A logical group of subsystems within the parent, e.g. a group of molecules in MD. |\n| `'primitive_cell'` | The conventional cell from which the parent is constructed from. |\n| `'conventional_cell'` | The primitive cell from which the parent is constructed from. |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "root",
                    "subsystem",
                    "group",
                    "primitive_cell",
                    "conventional_cell"
                  ]
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 11,
            "m_parent_sub_section": "section_definitions",
            "name": "Coordination",
            "description": "Coordination number of an element, which represents the number of atoms directly bonded to the element.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "element",
                "description": "Chemical symbol of element, whose coordination number is being determined.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "X",
                    "H",
                    "He",
                    "Li",
                    "Be",
                    "B",
                    "C",
                    "N",
                    "O",
                    "F",
                    "Ne",
                    "Na",
                    "Mg",
                    "Al",
                    "Si",
                    "P",
                    "S",
                    "Cl",
                    "Ar",
                    "K",
                    "Ca",
                    "Sc",
                    "Ti",
                    "V",
                    "Cr",
                    "Mn",
                    "Fe",
                    "Co",
                    "Ni",
                    "Cu",
                    "Zn",
                    "Ga",
                    "Ge",
                    "As",
                    "Se",
                    "Br",
                    "Kr",
                    "Rb",
                    "Sr",
                    "Y",
                    "Zr",
                    "Nb",
                    "Mo",
                    "Tc",
                    "Ru",
                    "Rh",
                    "Pd",
                    "Ag",
                    "Cd",
                    "In",
                    "Sn",
                    "Sb",
                    "Te",
                    "I",
                    "Xe",
                    "Cs",
                    "Ba",
                    "La",
                    "Ce",
                    "Pr",
                    "Nd",
                    "Pm",
                    "Sm",
                    "Eu",
                    "Gd",
                    "Tb",
                    "Dy",
                    "Ho",
                    "Er",
                    "Tm",
                    "Yb",
                    "Lu",
                    "Hf",
                    "Ta",
                    "W",
                    "Re",
                    "Os",
                    "Ir",
                    "Pt",
                    "Au",
                    "Hg",
                    "Tl",
                    "Pb",
                    "Bi",
                    "Po",
                    "At",
                    "Rn",
                    "Fr",
                    "Ra",
                    "Ac",
                    "Th",
                    "Pa",
                    "U",
                    "Np",
                    "Pu",
                    "Am",
                    "Cm",
                    "Bk",
                    "Cf",
                    "Es",
                    "Fm",
                    "Md",
                    "No",
                    "Lr",
                    "Rf",
                    "Db",
                    "Sg",
                    "Bh",
                    "Hs",
                    "Mt",
                    "Ds",
                    "Rg",
                    "Cn",
                    "Nh",
                    "Fl",
                    "Mc",
                    "Lv",
                    "Ts",
                    "Og"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "coordination_number",
                "description": "The number of neighbours directly connected to an atom",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 12,
            "m_parent_sub_section": "section_definitions",
            "name": "System",
            "description": "\n        Describes a a structural part that has been identified within the entry.\n        May be related to other systems.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.system_id"
                  ]
                },
                "name": "system_id",
                "description": "That path of this section within the metainfo that is used as a unique\nidentifier.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.label",
                    "results.material.topology.label__suggestion"
                  ]
                },
                "name": "label",
                "description": "Descriptive label that identifies this structural part.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.method",
                    "results.material.topology.method__suggestion"
                  ]
                },
                "name": "method",
                "description": "The method used for identifying this system.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "parser",
                    "user",
                    "matid",
                    "porosity"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.description"
                  ]
                },
                "name": "description",
                "description": "A short description about this part of the topology.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.material_id"
                  ]
                },
                "name": "material_id",
                "description": "A fixed length, unique material identifier in the form of a hash\ndigest.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.material_name",
                    "results.material.topology.material_name__suggestion"
                  ]
                },
                "name": "material_name",
                "description": "Meaningful names for this a material if any can be assigned.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.structural_type",
                    "results.material.topology.structural_type__suggestion"
                  ]
                },
                "name": "structural_type",
                "description": "Structural class determined from the atomic structure.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "bulk",
                    "surface",
                    "2D",
                    "1D",
                    "molecule / cluster",
                    "atom",
                    "unavailable",
                    "not processed",
                    "group",
                    "molecule",
                    "monomer"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.dimensionality",
                    "results.material.topology.dimensionality__suggestion"
                  ]
                },
                "name": "dimensionality",
                "description": "Dimensionality of the system. For atomistic systems this is\nautomatically evaluated by using the topology-scaling algorithm:\nhttps://doi.org/10.1103/PhysRevLett.118.106101.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'0D'` | Not connected periodically |\n| `'1D'` | Periodically connected in one dimension |\n| `'2D'` | Periodically connected in two dimensions |\n| `'3D'` | Periodically connected in three dimensions |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "0D",
                    "1D",
                    "2D",
                    "3D"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.building_block",
                    "results.material.topology.building_block__suggestion"
                  ]
                },
                "name": "building_block",
                "description": "More exact classification for this system, i.e. the type of \"building\nblock\" it represents.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'surface'` | Structure built from a unit cell that repeats periodically in two directions and at least twice, but not infinitely in a third direction. |\n| `'2D material'` | Structure built from a unit cell that repeats periodically in two directions and only once in a third direction. |\n| `'molecule'` | Molecule defined in the force-field topology |\n| `'monomer'` | Monomer defined in the force-field topology |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "surface",
                    "2D material",
                    "molecule",
                    "monomer"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.functional_type",
                    "results.material.topology.functional_type__suggestion"
                  ]
                },
                "name": "functional_type",
                "description": "Classification based on the functional properties.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.compound_type",
                    "results.material.topology.compound_type__suggestion"
                  ]
                },
                "name": "compound_type",
                "description": "Classification based on the chemical formula.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.elements",
                    "results.material.topology.elements__suggestion.suggestion"
                  ]
                },
                "name": "elements",
                "description": "Names of the different elements present in the structure.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "X",
                    "H",
                    "He",
                    "Li",
                    "Be",
                    "B",
                    "C",
                    "N",
                    "O",
                    "F",
                    "Ne",
                    "Na",
                    "Mg",
                    "Al",
                    "Si",
                    "P",
                    "S",
                    "Cl",
                    "Ar",
                    "K",
                    "Ca",
                    "Sc",
                    "Ti",
                    "V",
                    "Cr",
                    "Mn",
                    "Fe",
                    "Co",
                    "Ni",
                    "Cu",
                    "Zn",
                    "Ga",
                    "Ge",
                    "As",
                    "Se",
                    "Br",
                    "Kr",
                    "Rb",
                    "Sr",
                    "Y",
                    "Zr",
                    "Nb",
                    "Mo",
                    "Tc",
                    "Ru",
                    "Rh",
                    "Pd",
                    "Ag",
                    "Cd",
                    "In",
                    "Sn",
                    "Sb",
                    "Te",
                    "I",
                    "Xe",
                    "Cs",
                    "Ba",
                    "La",
                    "Ce",
                    "Pr",
                    "Nd",
                    "Pm",
                    "Sm",
                    "Eu",
                    "Gd",
                    "Tb",
                    "Dy",
                    "Ho",
                    "Er",
                    "Tm",
                    "Yb",
                    "Lu",
                    "Hf",
                    "Ta",
                    "W",
                    "Re",
                    "Os",
                    "Ir",
                    "Pt",
                    "Au",
                    "Hg",
                    "Tl",
                    "Pb",
                    "Bi",
                    "Po",
                    "At",
                    "Rn",
                    "Fr",
                    "Ra",
                    "Ac",
                    "Th",
                    "Pa",
                    "U",
                    "Np",
                    "Pu",
                    "Am",
                    "Cm",
                    "Bk",
                    "Cf",
                    "Es",
                    "Fm",
                    "Md",
                    "No",
                    "Lr",
                    "Rf",
                    "Db",
                    "Sg",
                    "Bh",
                    "Hs",
                    "Mt",
                    "Ds",
                    "Rg",
                    "Cn",
                    "Nh",
                    "Fl",
                    "Mc",
                    "Lv",
                    "Ts",
                    "Og"
                  ]
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.n_elements"
                  ]
                },
                "name": "n_elements",
                "description": "Number of different elements in the structure as an integer.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "default": 0,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.elements_exclusive"
                  ]
                },
                "name": "elements_exclusive",
                "description": "String containing the chemical elements in alphabetical order and\nseparated by a single whitespace. This quantity can be used for\nexclusive element searches where you want to find entries/materials\nwith only certain given elements.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.chemical_formula_descriptive",
                    "results.material.topology.chemical_formula_descriptive__suggestion"
                  ]
                },
                "name": "chemical_formula_descriptive",
                "description": "The chemical formula for a structure as a string in a form chosen by the API\nimplementation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.chemical_formula_reduced",
                    "results.material.topology.chemical_formula_reduced__suggestion"
                  ]
                },
                "name": "chemical_formula_reduced",
                "description": "Alphabetically sorted chemical formula with reduced integer chemical\nproportion numbers. The proportion number is omitted if it is 1.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.chemical_formula_hill",
                    "results.material.topology.chemical_formula_hill__suggestion"
                  ]
                },
                "name": "chemical_formula_hill",
                "description": "The chemical formula for a structure in Hill form with element\nsymbols followed by non-reduced integer chemical proportion numbers.\nThe proportion number is omitted if it is 1.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.chemical_formula_iupac",
                    "results.material.topology.chemical_formula_iupac__suggestion"
                  ]
                },
                "name": "chemical_formula_iupac",
                "description": "Formula where the elements are ordered using a formal list loosely\nbased on electronegativity as defined in the IUPAC nomenclature of\ninorganic chemistry (2005). Contains reduced integer chemical\nproportion numbers where the proportion number is omitted if it is\n1.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.chemical_formula_anonymous",
                    "results.material.topology.chemical_formula_anonymous__suggestion"
                  ]
                },
                "name": "chemical_formula_anonymous",
                "description": "Formula with the elements ordered by their reduced integer chemical\nproportion number, and the chemical species replaced by\nalphabetically ordered letters. The proportion number is omitted if\nit is 1. E.g.  H2O becomes A2B and H2O2 becomes AB. The letters are\ndrawn from the english alphabet that may be extended by increasing\nthe number of letters, e.g. A, B, ..., Z, Aa, Ab and so on. This\ndefinition is in line with the similarly named OPTIMADE definition.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.chemical_formula_reduced_fragments"
                  ]
                },
                "name": "chemical_formula_reduced_fragments",
                "description": "Alphabetically sorted chemical formula with reduced integer chemical\nproportion numbers. The proportion number is omitted if it is 1.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.parent_system"
                  ]
                },
                "name": "parent_system",
                "description": "Reference to the parent system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.child_systems"
                  ]
                },
                "name": "child_systems",
                "description": "References to the child systems.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.atomic_fraction"
                  ]
                },
                "name": "atomic_fraction",
                "description": "The atomic fraction of this system in the full structure it is contained in.\nPer definition a positive value less than or equal to 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.mass_fraction"
                  ]
                },
                "name": "mass_fraction",
                "description": "The mass fraction of this system in the full structure it is contained within.\nPer definition a positive value less than or equal to 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "name": "atoms_ref",
                "description": "Reference to an atomistic structure that is associated with this\nsystem.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/1"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.n_atoms"
                  ]
                },
                "name": "n_atoms",
                "description": "The total number of species (atoms, particles) in the system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "name": "indices",
                "description": "Indices of the atoms belonging to this group. These indices refer to the\nsystem specified in atoms_ref. Each row represents a new instance.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": [
                  "*",
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.sbu_type",
                    "results.material.topology.sbu_type__suggestion"
                  ]
                },
                "name": "sbu_type",
                "description": "The topological representation of the metal secondary building units (sbus).\nThe shape of most metal sbus are well defined and form the basis of most\n popular MOFs. The most common example is the paddlewheel, rodlike mofs,\n irmofs, uio66",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.largest_cavity_diameter"
                  ]
                },
                "name": "largest_cavity_diameter",
                "description": "The largest cavity diameter is the largest sphere that can be inserted in a porous\nsystem without overlapping with any of the atoms in the system.",
                "more": {
                  "alias": [
                    "lcd",
                    "largest_included_sphere"
                  ]
                },
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.pore_limiting_diameter"
                  ]
                },
                "name": "pore_limiting_diameter",
                "description": "The pore limiting diameter is the largest sphere that can freely\ndiffuse through the porous network without overlapping with any of the\natoms in the system.",
                "more": {
                  "alias": [
                    "pld",
                    "free_sphere"
                  ]
                },
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.largest_included_sphere_along_free_sphere_path"
                  ]
                },
                "name": "largest_included_sphere_along_free_sphere_path",
                "description": "The largest included sphere along free sphere path is\nlargest sphere that can be inserted in the pore.",
                "more": {
                  "alias": [
                    "lfpd"
                  ]
                },
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.accessible_surface_area"
                  ]
                },
                "name": "accessible_surface_area",
                "description": "The surface area accessible is the area that is accessible to guest molecules\nin a porous system. It is generally considered to be the entire surface area\nthat can be spanned by a probe of a specific radius. In NOMAD, by default we use\na probe that has a radius of 1.86 Angstrom, which correspond to the\ncovalent radii of nitrogen gas. For biomolecular system, a radii of\n1.4 Angstrom can be used, which correspond to the covalent radii\nof water.",
                "more": {
                  "alias": [
                    "asa",
                    "sasa",
                    "solvent_accessible_surface_area"
                  ]
                },
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 32,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.accessible_volume"
                  ]
                },
                "name": "accessible_volume",
                "description": "Volume of unoccupied space in a system that can be accessible to\nguest molecules, like solvents.",
                "more": {
                  "alias": [
                    "common_solvent_accessible_volume",
                    "csav",
                    "solvent_accessible_volume",
                    "sav"
                  ]
                },
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 33,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.void_fraction"
                  ]
                },
                "name": "void_fraction",
                "description": "Ratio of the the volume of the unoccupied space in the system\nto the volume of the entire system. It is a good proxy to\ndetermine how porous a system is. Highly porous systems\noften have a larger void fraction, meanwhile compact or dense\nsystems have smaller void fractions.",
                "more": {
                  "alias": [
                    "void_ratio"
                  ]
                },
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 34,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.n_channels"
                  ]
                },
                "name": "n_channels",
                "description": "Number of channels present in the porous system, which correspond to the number of\npores within the system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 35,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.sbu_coordination_number"
                  ]
                },
                "name": "sbu_coordination_number",
                "description": "The number of connecting point in the secondary building units(sbu), which corresponds to\nthe to the number of point of extension in the secondary building unit. Some common\nterminology include\n1 : monotopic\n2 : ditopic\n3 : tritopic\n4 : tetratopic\n5 : pentatopic",
                "more": {
                  "alias": [
                    "n_point_of_extensions"
                  ]
                },
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "atoms",
                "description": "The atomistic structure that is associated with this\nsystem.",
                "sub_section": "/packages/1/section_definitions/1",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "elemental_composition"
                  ]
                },
                "name": "elemental_composition",
                "sub_section": "/packages/4/section_definitions/2",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "system_relation",
                "sub_section": "/packages/4/section_definitions/10",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "cell",
                "sub_section": "/packages/4/section_definitions/8",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "symmetry",
                "sub_section": "/packages/4/section_definitions/9",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "metal_coordination",
                "sub_section": "/packages/4/section_definitions/11",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 13,
            "m_parent_sub_section": "section_definitions",
            "name": "Material",
            "description": "\n        Section containing information on the material composition and structure.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.material_id"
                  ]
                },
                "name": "material_id",
                "description": "A fixed length, unique material identifier in the form of a hash\ndigest.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.material_name",
                    "results.material.material_name__suggestion"
                  ]
                },
                "name": "material_name",
                "description": "Meaningful names for this a material if any can be assigned.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.structural_type",
                    "results.material.structural_type__suggestion"
                  ]
                },
                "name": "structural_type",
                "description": "Structural class determined from the atomic structure.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "bulk",
                    "surface",
                    "2D",
                    "1D",
                    "molecule / cluster",
                    "atom",
                    "unavailable",
                    "not processed"
                  ]
                },
                "default": "not processed"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.dimensionality",
                    "results.material.topology.dimensionality__suggestion"
                  ]
                },
                "name": "dimensionality",
                "description": "Dimensionality of the system. For atomistic systems this is\nautomatically evaluated by using the topology-scaling algorithm:\nhttps://doi.org/10.1103/PhysRevLett.118.106101.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'0D'` | Not connected periodically |\n| `'1D'` | Periodically connected in one dimension |\n| `'2D'` | Periodically connected in two dimensions |\n| `'3D'` | Periodically connected in three dimensions |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "0D",
                    "1D",
                    "2D",
                    "3D"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.topology.building_block",
                    "results.material.topology.building_block__suggestion"
                  ]
                },
                "name": "building_block",
                "description": "More exact classification for this system, i.e. the type of \"building\nblock\" it represents.\n\n| Value | Description |\n| --------- | ----------------------- |\n| `'surface'` | Structure built from a unit cell that repeats periodically in two directions and at least twice, but not infinitely in a third direction. |\n| `'2D material'` | Structure built from a unit cell that repeats periodically in two directions and only once in a third direction. |\n| `'molecule'` | Molecule defined in the force-field topology |\n| `'monomer'` | Monomer defined in the force-field topology |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "surface",
                    "2D material",
                    "molecule",
                    "monomer"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.functional_type",
                    "results.material.functional_type__suggestion"
                  ]
                },
                "name": "functional_type",
                "description": "Classification based on the functional properties.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.compound_type",
                    "results.material.compound_type__suggestion"
                  ]
                },
                "name": "compound_type",
                "description": "Classification based on the chemical formula.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.elements",
                    "results.material.elements__suggestion.suggestion"
                  ]
                },
                "name": "elements",
                "description": "Names of the different elements present in the structure.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "X",
                    "H",
                    "He",
                    "Li",
                    "Be",
                    "B",
                    "C",
                    "N",
                    "O",
                    "F",
                    "Ne",
                    "Na",
                    "Mg",
                    "Al",
                    "Si",
                    "P",
                    "S",
                    "Cl",
                    "Ar",
                    "K",
                    "Ca",
                    "Sc",
                    "Ti",
                    "V",
                    "Cr",
                    "Mn",
                    "Fe",
                    "Co",
                    "Ni",
                    "Cu",
                    "Zn",
                    "Ga",
                    "Ge",
                    "As",
                    "Se",
                    "Br",
                    "Kr",
                    "Rb",
                    "Sr",
                    "Y",
                    "Zr",
                    "Nb",
                    "Mo",
                    "Tc",
                    "Ru",
                    "Rh",
                    "Pd",
                    "Ag",
                    "Cd",
                    "In",
                    "Sn",
                    "Sb",
                    "Te",
                    "I",
                    "Xe",
                    "Cs",
                    "Ba",
                    "La",
                    "Ce",
                    "Pr",
                    "Nd",
                    "Pm",
                    "Sm",
                    "Eu",
                    "Gd",
                    "Tb",
                    "Dy",
                    "Ho",
                    "Er",
                    "Tm",
                    "Yb",
                    "Lu",
                    "Hf",
                    "Ta",
                    "W",
                    "Re",
                    "Os",
                    "Ir",
                    "Pt",
                    "Au",
                    "Hg",
                    "Tl",
                    "Pb",
                    "Bi",
                    "Po",
                    "At",
                    "Rn",
                    "Fr",
                    "Ra",
                    "Ac",
                    "Th",
                    "Pa",
                    "U",
                    "Np",
                    "Pu",
                    "Am",
                    "Cm",
                    "Bk",
                    "Cf",
                    "Es",
                    "Fm",
                    "Md",
                    "No",
                    "Lr",
                    "Rf",
                    "Db",
                    "Sg",
                    "Bh",
                    "Hs",
                    "Mt",
                    "Ds",
                    "Rg",
                    "Cn",
                    "Nh",
                    "Fl",
                    "Mc",
                    "Lv",
                    "Ts",
                    "Og"
                  ]
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.n_elements"
                  ]
                },
                "name": "n_elements",
                "description": "Number of different elements in the structure as an integer.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "default": 0,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.elements_exclusive"
                  ]
                },
                "name": "elements_exclusive",
                "description": "String containing the chemical elements in alphabetical order and\nseparated by a single whitespace. This quantity can be used for\nexclusive element searches where you want to find entries/materials\nwith only certain given elements.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.chemical_formula_descriptive",
                    "results.material.chemical_formula_descriptive__suggestion"
                  ]
                },
                "name": "chemical_formula_descriptive",
                "description": "The chemical formula for a structure as a string in a form chosen by the API\nimplementation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.chemical_formula_reduced",
                    "results.material.chemical_formula_reduced__suggestion"
                  ]
                },
                "name": "chemical_formula_reduced",
                "description": "Alphabetically sorted chemical formula with reduced integer chemical\nproportion numbers. The proportion number is omitted if it is 1.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.chemical_formula_hill",
                    "results.material.chemical_formula_hill__suggestion"
                  ]
                },
                "name": "chemical_formula_hill",
                "description": "The chemical formula for a structure in Hill form with element\nsymbols followed by non-reduced integer chemical proportion numbers.\nThe proportion number is omitted if it is 1.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.chemical_formula_iupac",
                    "results.material.chemical_formula_iupac__suggestion"
                  ]
                },
                "name": "chemical_formula_iupac",
                "description": "Formula where the elements are ordered using a formal list loosely\nbased on electronegativity as defined in the IUPAC nomenclature of\ninorganic chemistry (2005). Contains reduced integer chemical\nproportion numbers where the proportion number is omitted if it is\n1.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.chemical_formula_anonymous",
                    "results.material.chemical_formula_anonymous__suggestion"
                  ]
                },
                "name": "chemical_formula_anonymous",
                "description": "Formula with the elements ordered by their reduced integer chemical\nproportion number, and the chemical species replaced by\nalphabetically ordered letters. The proportion number is omitted if\nit is 1. E.g.  H2O becomes A2B and H2O2 becomes AB. The letters are\ndrawn from the english alphabet that may be extended by increasing\nthe number of letters, e.g. A, B, ..., Z, Aa, Ab and so on. This\ndefinition is in line with the similarly named OPTIMADE definition.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.material.chemical_formula_reduced_fragments"
                  ]
                },
                "name": "chemical_formula_reduced_fragments",
                "description": "Alphabetically sorted chemical formula with reduced integer chemical\nproportion numbers. The proportion number is omitted if it is 1.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "elemental_composition"
                  ]
                },
                "name": "elemental_composition",
                "sub_section": "/packages/4/section_definitions/2",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "symmetry",
                "sub_section": "/packages/4/section_definitions/7",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "topology"
                  ]
                },
                "name": "topology",
                "sub_section": "/packages/4/section_definitions/12",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 14,
            "m_parent_sub_section": "section_definitions",
            "name": "HubbardKanamoriModel",
            "description": "Setup of the Hubbard model used in DFT+U",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "atom_label",
                "description": "String used to identify the atoms of this kind. This should correspond to the\natom labels of the configuration. It is possible for one atom kind to have\nmultiple labels (in order to allow two atoms of the same kind to have two\ndifferently defined sets of atom-centered basis functions or two different pseudo-\npotentials). Atom kind is typically the symbol of the atomic species but it can be\nalso a ghost or pseudo-atom.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "orbital",
                "description": "Orbital label corresponding to the Hubbard model. The typical orbitals with strong\nHubbard interactions have partially filled '3d', '4d' and '4f' orbitals.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.hubbard_kanamori_model.u_effective"
                  ]
                },
                "name": "u_effective",
                "description": "Value of the effective U parameter (u - j).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.u"
                  ]
                },
                "name": "u",
                "description": "Value of the (intraorbital) Hubbard interaction",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.hubbard_kanamori_model.j"
                  ]
                },
                "name": "j",
                "description": "Value of the exchange interaction. In rotational invariant systems, j = jh.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "double_counting_correction",
                "description": "Name of the double counting correction algorithm applied.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 15,
            "m_parent_sub_section": "section_definitions",
            "name": "DFT",
            "description": "\n        Methodology for a DFT calculation.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.basis_set_type",
                    "results.method.simulation.dft.basis_set_type__suggestion"
                  ]
                },
                "name": "basis_set_type",
                "description": "The used basis set functions.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "(L)APW+lo",
                    "gaussians",
                    "numeric AOs",
                    "plane waves",
                    "psinc functions",
                    "real-space grid",
                    "unavailable",
                    "not processed"
                  ]
                },
                "default": "unavailable"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.core_electron_treatment",
                    "results.method.simulation.dft.core_electron_treatment__suggestion"
                  ]
                },
                "name": "core_electron_treatment",
                "description": "How the core electrons are described.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "full all electron",
                    "all electron frozen core",
                    "pseudopotential",
                    "unavailable"
                  ]
                },
                "default": "unavailable"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.spin_polarized"
                  ]
                },
                "name": "spin_polarized",
                "description": "Whether the calculation is spin-polarized.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.scf_threshold_energy_change"
                  ]
                },
                "name": "scf_threshold_energy_change",
                "description": "Specifies the threshold for the total energy change between two subsequent\nself-consistent field (SCF) iterations. The SCF is considered converged when the\ntotal-energy change between two SCF cycles is below the threshold (possibly in\ncombination with other criteria).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.van_der_Waals_method",
                    "results.method.simulation.dft.van_der_Waals_method__suggestion"
                  ]
                },
                "name": "van_der_Waals_method",
                "description": "The used van der Waals method.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.relativity_method",
                    "results.method.simulation.dft.relativity_method__suggestion"
                  ]
                },
                "name": "relativity_method",
                "description": "Describes the relativistic treatment used for the calculation of the final energy\nand related quantities. If skipped or empty, no relativistic treatment is applied.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "scalar_relativistic",
                    "pseudo_scalar_relativistic",
                    "scalar_relativistic_atomic_ZORA"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.smearing_kind",
                    "results.method.simulation.dft.smearing_kind__suggestion"
                  ]
                },
                "name": "smearing_kind",
                "description": "Specifies the kind of smearing on the electron occupation used to calculate the\nfree energy (see energy_free)\n\nValid values are:\n\n| Smearing kind             | Description                       |\n\n| ------------------------- | --------------------------------- |\n\n| `\"empty\"`                 | No smearing is applied            |\n\n| `\"gaussian\"`              | Gaussian smearing                 |\n\n| `\"fermi\"`                 | Fermi smearing                    |\n\n| `\"marzari-vanderbilt\"`    | Marzari-Vanderbilt smearing       |\n\n| `\"methfessel-paxton\"`     | Methfessel-Paxton smearing        |\n\n| `\"tetrahedra\"`            | Interpolation of state energies and occupations\n(ignores smearing_width) |",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.smearing_width"
                  ]
                },
                "name": "smearing_width",
                "description": "Specifies the width of the smearing in energy for the electron occupation used to\ncalculate the free energy (see energy_free).\n\n*NOTE:* Not all methods specified in smearing_kind uses this value.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.jacobs_ladder"
                  ]
                },
                "name": "jacobs_ladder",
                "description": "Functional classification in line with Jacob's Ladder.\nFor more information, see https://doi.org/10.1063/1.1390175 (original paper);\nhttps://doi.org/10.1103/PhysRevLett.91.146401 (meta-GGA);\nand https://doi.org/10.1063/1.1904565 (hyper-GGA).",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "LDA",
                    "GGA",
                    "meta-GGA",
                    "hyper-GGA",
                    "hybrid",
                    "unavailable",
                    "not processed"
                  ]
                },
                "default": "not processed"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.xc_functional_type"
                  ]
                },
                "name": "xc_functional_type",
                "description": "Functional classification in line with Jacob's Ladder.\nFor more information, see https://doi.org/10.1063/1.1390175 (original paper);\nhttps://doi.org/10.1103/PhysRevLett.91.146401 (meta-GGA);\nand https://doi.org/10.1063/1.1904565 (hyper-GGA).",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "LDA",
                    "GGA",
                    "meta-GGA",
                    "hyper-GGA",
                    "hybrid",
                    "unavailable",
                    "not processed"
                  ]
                },
                "default": "not processed"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.xc_functional_names",
                    "results.method.simulation.dft.xc_functional_names__suggestion"
                  ]
                },
                "name": "xc_functional_names",
                "description": "The list of libXC functional names that where used in this entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dft.exact_exchange_mixing_factor"
                  ]
                },
                "name": "exact_exchange_mixing_factor",
                "description": "Amount of exact exchange mixed in with the XC functional (value range = [0,1]).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "hubbard_kanamori_model"
                  ]
                },
                "name": "hubbard_kanamori_model",
                "sub_section": "/packages/4/section_definitions/14",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 16,
            "m_parent_sub_section": "section_definitions",
            "name": "Projection",
            "description": "\n        Methodology for a Projection calculation.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.projection.type",
                    "results.method.simulation.projection.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Projection type for the virtual orbitals: Wannier or Slater-Koster formalisms, or a\ncustom tight-binding model.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "wannier",
                    "slater_koster",
                    "custom"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.projection.localization_type",
                    "results.method.simulation.projection.localization_type__suggestion"
                  ]
                },
                "name": "localization_type",
                "description": "Localization type of the virtual Wannier orbitals.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "single_shot",
                    "maximally_localized"
                  ]
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 17,
            "m_parent_sub_section": "section_definitions",
            "name": "ExcitedStateMethodology",
            "description": "\n        Methodology for a Excited-State calculation.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "type",
                    "type__suggestion__suggestion"
                  ]
                },
                "name": "type",
                "description": "Type which allows to identify the excited-state calculation with a\ncommon string.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.bse.basis_set_type",
                    "results.method.simulation.bse.basis_set_type__suggestion"
                  ]
                },
                "name": "basis_set_type",
                "description": "The used basis set functions.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "(L)APW+lo",
                    "gaussians",
                    "numeric AOs",
                    "plane waves",
                    "psinc functions",
                    "real-space grid",
                    "unavailable",
                    "not processed"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.bse.starting_point_type"
                  ]
                },
                "name": "starting_point_type",
                "description": "The libXC based xc functional classification used in the starting point DFT simulation.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "LDA",
                    "GGA",
                    "meta-GGA",
                    "hyper-GGA",
                    "hybrid",
                    "HF",
                    "unavailable",
                    "not processed"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.bse.starting_point_names",
                    "results.method.simulation.bse.starting_point_names__suggestion"
                  ]
                },
                "name": "starting_point_names",
                "description": "The list of libXC functional names that where used in this entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 18,
            "m_parent_sub_section": "section_definitions",
            "name": "GW",
            "description": "\n        Methodology for a GW calculation.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/17"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.gw.type",
                    "results.method.simulation.gw.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "GW Hedin's self-consistency cycle:\n\n| Name      | Description                      | Reference             |\n\n| --------- | -------------------------------- | --------------------- |\n\n| `'G0W0'`  | single-shot                      | PRB 74, 035101 (2006) |\n\n| `'scGW'`  | self-consistent G and W               | PRB 75, 235102 (2007) |\n\n| `'scGW0'` | self-consistent G with fixed W0  | PRB 54, 8411 (1996)   |\n\n| `'scG0W'` | self-consistent W with fixed G0  | -                     |\n\n| `'ev-scGW0'`  | eigenvalues self-consistent G with fixed W0   | PRB 34, 5390 (1986)   |\n\n| `'ev-scGW'`  | eigenvalues self-consistent G and W   | PRB 74, 045102 (2006)   |\n\n| `'qp-scGW0'`  | quasiparticle self-consistent G with fixed W0 | PRL 99, 115109 (2007) |\n\n| `'qp-scGW'`  | quasiparticle self-consistent G and W | PRL 96, 226402 (2006) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "G0W0",
                    "scGW",
                    "scGW0",
                    "scG0W",
                    "ev-scGW0",
                    "ev-scGW",
                    "qp-scGW0",
                    "qp-scGW"
                  ]
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 19,
            "m_parent_sub_section": "section_definitions",
            "name": "BSE",
            "description": "\n        Methodology for a BSE calculation.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/17"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.bse.type",
                    "results.method.simulation.bse.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Type of BSE hamiltonian solved:\n\n    H_BSE = H_diagonal + 2 * gx * Hx - gc * Hc\n\nwhere gx, gc specifies the type.\n\nOnline resources for the theory:\n- http://exciting.wikidot.com/carbon-excited-states-from-bse#toc1\n- https://www.vasp.at/wiki/index.php/Bethe-Salpeter-equations_calculations\n- https://docs.abinit.org/theory/bse/\n- https://www.yambo-code.eu/wiki/index.php/Bethe-Salpeter_kernel\n\n| Name | Description |\n\n| --------- | ----------------------- |\n\n| `'Singlet'` | gx = 1, gc = 1 |\n\n| `'Triplet'` | gx = 0, gc = 1 |\n\n| `'IP'` | Independent-particle approach |\n\n| `'RPA'` | Random Phase Approximation |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "Singlet",
                    "Triplet",
                    "IP",
                    "RPA"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.bse.solver",
                    "results.method.simulation.bse.solver__suggestion"
                  ]
                },
                "name": "solver",
                "description": "Solver algotithm used to diagonalize the BSE Hamiltonian.\n\n| Name | Description | Reference |\n\n| --------- | ----------------------- | ----------- |\n\n| `'Full-diagonalization'` | Full diagonalization of the BSE Hamiltonian | - |\n\n| `'Lanczos-Haydock'` | Subspace iterative Lanczos-Haydock algorithm | https://doi.org/10.1103/PhysRevB.59.5441 |\n\n| `'GMRES'` | Generalized minimal residual method | https://doi.org/10.1137/0907058 |\n\n| `'SLEPc'` | Scalable Library for Eigenvalue Problem Computations | https://slepc.upv.es/ |\n\n| `'TDA'` | Tamm-Dancoff approximation | https://doi.org/10.1016/S0009-2614(99)01149-5 |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "Full-diagonalization",
                    "Lanczos-Haydock",
                    "GMRES",
                    "SLEPc",
                    "TDA"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.bse.gw_type",
                    "results.method.simulation.bse.gw_type__suggestion"
                  ]
                },
                "name": "gw_type",
                "description": "GW Hedin's self-consistency cycle:\n\n| Name      | Description                      | Reference             |\n\n| --------- | -------------------------------- | --------------------- |\n\n| `'G0W0'`  | single-shot                      | PRB 74, 035101 (2006) |\n\n| `'scGW'`  | self-consistent G and W               | PRB 75, 235102 (2007) |\n\n| `'scGW0'` | self-consistent G with fixed W0  | PRB 54, 8411 (1996)   |\n\n| `'scG0W'` | self-consistent W with fixed G0  | -                     |\n\n| `'ev-scGW0'`  | eigenvalues self-consistent G with fixed W0   | PRB 34, 5390 (1986)   |\n\n| `'ev-scGW'`  | eigenvalues self-consistent G and W   | PRB 74, 045102 (2006)   |\n\n| `'qp-scGW0'`  | quasiparticle self-consistent G with fixed W0 | PRL 99, 115109 (2007) |\n\n| `'qp-scGW'`  | quasiparticle self-consistent G and W | PRL 96, 226402 (2006) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "G0W0",
                    "scGW",
                    "scGW0",
                    "scG0W",
                    "ev-scGW0",
                    "ev-scGW",
                    "qp-scGW0",
                    "qp-scGW"
                  ]
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 20,
            "m_parent_sub_section": "section_definitions",
            "name": "DMFT",
            "description": "\n        Methodology for a DMFT calculation.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.impurity_solver_type",
                    "results.method.simulation.dmft.impurity_solver_type__suggestion"
                  ]
                },
                "name": "impurity_solver_type",
                "description": "Impurity solver method used in the DMFT loop:\n\n| Name              | Reference                            |\n\n| ----------------- | ------------------------------------ |\n\n| `'CT-INT'`        | Rubtsov et al., JEPT Lett 80 (2004)  |\n\n| `'CT-HYB'`        | Werner et al., PRL 97 (2006)         |\n\n| `'CT-AUX'`        | Gull et al., EPL 82 (2008)           |\n\n| `'ED'`            | Caffarrel et al, PRL 72 (1994)       |\n\n| `'NRG'`           | Bulla et al., RMP 80 (2008)          |\n\n| `'MPS'`           | Ganahl et al., PRB 90 (2014)         |\n\n| `'IPT'`           | Georges et al., PRB 45 (1992)        |\n\n| `'NCA'`           | Pruschke et al., PRB 47 (1993)       |\n\n| `'OCA'`           | Pruschke et al., PRB 47 (1993)       |\n\n| `'slave_bosons'`  | Kotliar et al., PRL 57 (1986)        |\n\n| `'hubbard_I'`     | -                                    |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "CT-INT",
                    "CT-HYB",
                    "CT-AUX",
                    "ED",
                    "NRG",
                    "MPS",
                    "IPT",
                    "NCA",
                    "OCA",
                    "slave_bosons",
                    "hubbard_I"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.inverse_temperature"
                  ]
                },
                "name": "inverse_temperature",
                "description": "Inverse temperature = 1/(kB*T).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "1 / joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.magnetic_state",
                    "results.method.simulation.dmft.magnetic_state__suggestion"
                  ]
                },
                "name": "magnetic_state",
                "description": "Magnetic state in which the DMFT calculation is done.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "paramagnetic",
                    "ferromagnetic",
                    "antiferromagnetic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.u"
                  ]
                },
                "name": "u",
                "description": "Value of the (intraorbital) Hubbard interaction",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.jh"
                  ]
                },
                "name": "jh",
                "description": "Value of the (interorbital) Hund's coupling.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.dmft.analytical_continuation"
                  ]
                },
                "name": "analytical_continuation",
                "description": "Analytical continuation used to continuate the imaginary space Green's functions into\nthe real frequencies space.\n\n| Name           | Description         | Reference                        |\n\n| -------------- | ------------------- | -------------------------------- |\n\n| `'Pade'` | Pade's approximant  | https://www.sciencedirect.com/science/article/pii/0021999173901277?via%3Dihub |\n\n| `'MaxEnt'` | Maximum Entropy method | https://journals.aps.org/prb/abstract/10.1103/PhysRevB.41.2380 |\n\n| `'SVD'` | Singular value decomposition | https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.75.517 |\n\n| `'Stochastic'` | Stochastic method | https://journals.aps.org/prb/abstract/10.1103/PhysRevB.57.10287 |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "Pade",
                    "MaxEnt",
                    "SVD",
                    ""
                  ]
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 21,
            "m_parent_sub_section": "section_definitions",
            "name": "QuantumCircuit",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "processors",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "number_of_registers",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "simulated",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 22,
            "m_parent_sub_section": "section_definitions",
            "name": "QuantumCMS",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "transformation",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "quantum_computer_system",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "quantum_computing_libraries",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "computation_datetime",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "number_of_shots",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "quantum_volume",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "quantum_circuit",
                "sub_section": "/packages/4/section_definitions/21"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 23,
            "m_parent_sub_section": "section_definitions",
            "name": "Precision",
            "description": "\n        Contains parameters for controlling or evaluating the convergence of the electronic structure.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.k_line_density"
                  ]
                },
                "name": "k_line_density",
                "description": "Amount of sampled k-points per unit reciprocal length along each axis.\nContains the least precise density out of all axes.\nShould only be compared between calulations of similar dimensionality.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.native_tier"
                  ]
                },
                "name": "native_tier",
                "description": "The code-specific tag indicating the precision used\nfor the basis set and meshes of numerical routines.\n\nSupported codes (with hyperlinks to the relevant documentation):\n- [`VASP`](https://www.vasp.at/wiki/index.php/PREC)\n- `FHI-aims`\n- [`CASTEP`](http://www.tcm.phy.cam.ac.uk/castep/documentation/WebHelp/CASTEP.html#modules/castep/tskcastepsetelecquality.htm?Highlight=ultra-fine)",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.basis_set",
                    "results.method.simulation.precision.basis_set__suggestion"
                  ]
                },
                "name": "basis_set",
                "description": "The type of basis set used by the program.\n\n| Value                          |                       Description |\n| ------------------------------ | --------------------------------- |\n| `'APW'`                        | Augmented plane waves             |\n| `'LAPW'`                       | Linearized augmented plane waves  |\n| `'APW+lo'`             | Augmented plane waves with local orbitals |\n| `'LAPW+lo'` | Linearized augmented plane waves with local orbitals |\n| `'(L)APW'`                     |     A combination of APW and LAPW |\n| `'(L)APW+lo'`  | A combination of APW and LAPW with local orbitals |\n| `'plane waves'`                | Plane waves                       |\n| `'gaussians + plane waves'`    | Basis set of the Quickstep algorithm (DOI: 10.1016/j.cpc.2004.12.014) |\n| `'real-space grid'`            | Real-space grid                   |\n| `'suppport functions'`         | Support functions                 |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "atom-centered orbitals",
                    "APW",
                    "LAPW",
                    "APW+lo",
                    "LAPW+lo",
                    "(L)APW",
                    "(L)APW+lo",
                    "plane waves",
                    "gaussians + plane waves",
                    "real-space grid",
                    "support functions",
                    "unavailable",
                    "not processed"
                  ]
                },
                "default": "unavailable"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.planewave_cutoff"
                  ]
                },
                "name": "planewave_cutoff",
                "description": "Spherical cutoff in reciprocal space for a plane-wave basis set. It is the energy\nof the highest plane-wave ($\\frac{\\hbar^2|k+G|^2}{2m_e}$) included in the basis\nset.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.precision.apw_cutoff"
                  ]
                },
                "name": "apw_cutoff",
                "description": "The spherical cutoff parameter for the interstitial plane waves in the LAPW family.\nThis cutoff is unitless, referring to the product of the smallest muffin-tin radius\nand the length of the cutoff reciprocal vector ($r_{MT} * |K_{cut}|$).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 24,
            "m_parent_sub_section": "section_definitions",
            "name": "Simulation",
            "description": "\n        Contains method details for a simulation entry.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.program_name",
                    "results.method.simulation.program_name__suggestion"
                  ]
                },
                "name": "program_name",
                "description": "The name of the used program.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "not processed"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.simulation.program_version",
                    "results.method.simulation.program_version__suggestion"
                  ]
                },
                "name": "program_version",
                "description": "The version of the used program.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "not processed"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "dft",
                "sub_section": "/packages/4/section_definitions/15",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "projection",
                "sub_section": "/packages/4/section_definitions/16",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "gw",
                "sub_section": "/packages/4/section_definitions/18",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "bse",
                "sub_section": "/packages/4/section_definitions/19",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "dmft",
                "sub_section": "/packages/4/section_definitions/20",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "quantum_cms",
                "sub_section": "/packages/4/section_definitions/22",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "name": "precision",
                "sub_section": "/packages/4/section_definitions/23",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 25,
            "m_parent_sub_section": "section_definitions",
            "name": "XRDMethod",
            "description": "\n        Methodology for an X-Ray Diffraction measurement.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.measurement.xrd.diffraction_method_name",
                    "results.method.measurement.xrd.diffraction_method_name__suggestion"
                  ]
                },
                "name": "diffraction_method_name",
                "description": "The diffraction method used to obtain the diffraction pattern.\n| X-Ray Diffraction Method                                   | Description                                                                                                                                                                                                 |\n|------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **Powder X-Ray Diffraction (PXRD)**                        | The term \"powder\" refers more to the random orientation of small crystallites than to the physical form of the sample. Can be used with non-powder samples if they present random crystallite orientations. |\n| **Single Crystal X-Ray Diffraction (SCXRD)**               | Used for determining the atomic structure of a single crystal.                                                                                                                                              |\n| **High-Resolution X-Ray Diffraction (HRXRD)**              | A technique typically used for detailed characterization of epitaxial thin films using precise diffraction measurements.                                                                                    |\n| **Small-Angle X-Ray Scattering (SAXS)**                    | Used for studying nanostructures in the size range of 1-100 nm. Provides information on particle size, shape, and distribution.                                                                             |\n| **X-Ray Reflectivity (XRR)**                               | Used to study thin film layers, interfaces, and multilayers. Provides info on film thickness, density, and roughness.                                                                                       |\n| **Grazing Incidence X-Ray Diffraction (GIXRD)**            | Primarily used for the analysis of thin films with the incident beam at a fixed shallow angle.                                                                                                              |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "Powder X-Ray Diffraction (PXRD)",
                    "Single Crystal X-Ray Diffraction (SCXRD)",
                    "High-Resolution X-Ray Diffraction (HRXRD)",
                    "Small-Angle X-Ray Scattering (SAXS)",
                    "X-Ray Reflectivity (XRR)",
                    "Grazing Incidence X-Ray Diffraction (GIXRD)",
                    "unavailable"
                  ]
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 26,
            "m_parent_sub_section": "section_definitions",
            "name": "MeasurementMethod",
            "description": "\n        Contains method details for a measurement entry.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "xrd",
                "sub_section": "/packages/4/section_definitions/25",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 27,
            "m_parent_sub_section": "section_definitions",
            "name": "Method",
            "description": "\n        Contains a summary of the methodology that has been used in this entry.\n        This methodology applies to all of the reported properties and\n        determines the result of a single energy evalution. The individual\n        properties may be further methodological details affect e.g. the\n        sampling.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.method_id"
                  ]
                },
                "name": "method_id",
                "description": "Identifier for the used method. Only available for a subset of entries\nfor which the methodology has been identified with precision.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "equation_of_state_id",
                "description": "Identifier that can be used to group entries within an equation of\nstate calculation. Only available for a subset of entries for which the\nstructure and methodology have been identified with precision.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "parameter_variation_id",
                "description": "Identifier that can be used to group entries that target the same\nstructure but with varying parameter settings. Only available for a\nsubset of entries for which the structure and methodology have been\nidentified with precision.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.method_name",
                    "results.method.method_name__suggestion"
                  ]
                },
                "name": "method_name",
                "description": "Common name for the used method.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "DFT",
                    "Projection",
                    "GW",
                    "DMFT",
                    "CoreHole",
                    "BSE",
                    "EELS",
                    "XPS",
                    "XRD",
                    "unavailable"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.method.workflow_name",
                    "results.method.workflow_name__suggestion"
                  ]
                },
                "name": "workflow_name",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "simulation",
                "sub_section": "/packages/4/section_definitions/24",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "measurement",
                "sub_section": "/packages/4/section_definitions/26",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 28,
            "m_parent_sub_section": "section_definitions",
            "name": "MolecularDynamics",
            "description": "\n        Methodology for molecular dynamics.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.thermodynamic.trajectory.provenance.molecular_dynamics.time_step"
                  ]
                },
                "name": "time_step",
                "description": "The timestep at which the numerical integration is performed.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.thermodynamic.trajectory.provenance.molecular_dynamics.ensemble_type"
                  ]
                },
                "name": "ensemble_type",
                "description": "The type of thermodynamic ensemble that was simulated.\n\nAllowed values are:\n\n| Thermodynamic Ensemble          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"NVE\"`           | Constant number of particles, volume, and energy |\n\n| `\"NVT\"`           | Constant number of particles, volume, and temperature |\n\n| `\"NPT\"`           | Constant number of particles, pressure, and temperature |\n\n| `\"NPH\"`           | Constant number of particles, pressure, and enthalpy |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "NVE",
                    "NVT",
                    "NPT",
                    "NPH"
                  ]
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 29,
            "m_parent_sub_section": "section_definitions",
            "name": "MDProvenance",
            "description": "\n        Contains provenance information for properties derived from molecular\n        dynamics simulations.\n        ",
            "base_sections": [
              "/packages/16/section_definitions/0"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "molecular_dynamics",
                "sub_section": "/packages/4/section_definitions/28",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 30,
            "m_parent_sub_section": "section_definitions",
            "name": "MDPropertySection",
            "description": "\n        Base class for referring to molecular dynamics properties.\n        ",
            "base_sections": [
              "/packages/16/section_definitions/1"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "provenance",
                "sub_section": "/packages/4/section_definitions/29",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 31,
            "m_parent_sub_section": "section_definitions",
            "name": "DOS",
            "description": "\n        Base class for density of states information.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "Array containing the set of discrete energy values for the density of\nstates (DOS).",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/17/quantities/1"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "total",
                "description": "Density of states (DOS) values for the entire system and all species.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/16"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 32,
            "m_parent_sub_section": "section_definitions",
            "name": "DOSPhonon",
            "description": "\n        Contains the total phonon density of states.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/31"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 33,
            "m_parent_sub_section": "section_definitions",
            "name": "DOSElectronic",
            "description": "\n        Contains the total electronic density of states.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/31"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Label to identify the DOS data, e.g. the method employed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.dos_electronic.spin_polarized"
                  ]
                },
                "name": "spin_polarized",
                "description": "Whether the DOS is spin-polarized, i.e. is contains channels for both\nspin values.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "energy_fermi",
                "description": "Fermi energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "band_gap"
                  ]
                },
                "name": "band_gap",
                "sub_section": "/packages/4/section_definitions/0",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 34,
            "m_parent_sub_section": "section_definitions",
            "name": "BandStructure",
            "description": "\n        Base class for band structure information.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Label to identify the bandstructure data, e.g. the method employed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "reciprocal_cell",
                "description": "The reciprocal cell within which the band structure is calculated.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/14/quantities/1"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "segment",
                "description": "Collection of linear path segments in the reciprocal space. The\nsegments are represented as third-order tensors: one dimension for the\nspin channels, one for the sequence of reciprocal space points for the\nsegment, and one for the sequence of eigenvalues at a given point.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/13"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "path_standard",
                "description": "String that identifies the possible standard used in sampling the\nreciprocal space.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 35,
            "m_parent_sub_section": "section_definitions",
            "name": "BandStructurePhonon",
            "description": "\n        This section stores information on a vibrational band structure\n        evaluation along one-dimensional pathways in the reciprocal space.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/34"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 36,
            "m_parent_sub_section": "section_definitions",
            "name": "BandStructureElectronic",
            "description": "\n        This section stores information on a electonic band structure\n        evaluation along one-dimensional pathways in the reciprocal space.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/34"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.electronic.band_structure_electronic.spin_polarized"
                  ]
                },
                "name": "spin_polarized",
                "description": "Whether the band structure is spin-polarized, i.e. is contains channels\nfor both spin values.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "energy_fermi",
                "description": "Fermi energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "band_gap"
                  ]
                },
                "name": "band_gap",
                "sub_section": "/packages/4/section_definitions/0",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 37,
            "m_parent_sub_section": "section_definitions",
            "name": "GreensFunctionsElectronic",
            "description": "\n        Base class for Green's functions information.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Type of Green's function calculated from the mapping of the Hubbard-Kanamori model\ninto the Anderson impurity model. These calculations are converged if both types of\nGreen's functions converge to each other (G_impurity == G_lattice).",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "impurity",
                    "lattice"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Label to identify the Greens functions data, e.g. the method employed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "tau",
                "description": "Array containing the set of discrete imaginary times.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/2"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "matsubara_freq",
                "description": "Array containing the set of discrete imaginary (Matsubara) frequencies.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/1"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "frequencies",
                "description": "Array containing the set of discrete real frequencies.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/3"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "greens_function_tau",
                "description": "Green's functions values in imaginary times.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/8"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "greens_function_iw",
                "description": "Green's functions values in imaginary (Matsubara) frequencies.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/6"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "self_energy_iw",
                "description": "Self-energy values in imaginary (Matsubara) frequencies.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/5"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "greens_function_freq",
                "description": "Green's function values in real frequencies.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/10"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "self_energy_freq",
                "description": "Self-energy values in real frequencies.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/9"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "hybridization_function_freq",
                "description": "Hybridization function values in real frequencies.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/11"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "orbital_occupations",
                "description": "Orbital occupation per correlated atom in the unit cell and per spin.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/12"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "quasiparticle_weights",
                "description": "Quasiparticle weights of each orbital per site and spin. Calculated from:\n    Z = inv(1.0 - d [Re Sigma] / dw at w=0)\nit takes values \u2208 [0.0, 1.0], being Z=1 non-correlated, and Z=0 in a Mott state.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/13"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "chemical_potential",
                "description": "Chemical potential.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/2/section_definitions/29/quantities/4"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 38,
            "m_parent_sub_section": "section_definitions",
            "name": "HeatCapacityConstantVolume",
            "description": "\n        Contains the values of the specific (per mass) and isochoric (constant\n        volume) heat capacity at different temperatures.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacities",
                "description": "Specific heat capacity values at constant volume.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/18/section_definitions/5/quantities/5"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "temperatures",
                "description": "The temperatures at which heat capacities are calculated.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/18/section_definitions/5/quantities/1"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 39,
            "m_parent_sub_section": "section_definitions",
            "name": "EnergyFreeHelmholtz",
            "description": "\n        Contains the values of the Helmholtz free energy per atom at constant\n        volume and at different temperatures.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "The Helmholtz free energies per atom at constant volume.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/18/section_definitions/5/quantities/7"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "temperatures",
                "description": "The temperatures at which Helmholtz free energies are calculated.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/18/section_definitions/5/quantities/1"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 40,
            "m_parent_sub_section": "section_definitions",
            "name": "VibrationalProperties",
            "description": "\n        Vibrational properties.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "band_structure_phonon",
                "sub_section": "/packages/4/section_definitions/35",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "dos_phonon",
                "sub_section": "/packages/4/section_definitions/32",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "heat_capacity_constant_volume",
                "sub_section": "/packages/4/section_definitions/38",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "energy_free_helmholtz",
                "sub_section": "/packages/4/section_definitions/39",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 41,
            "m_parent_sub_section": "section_definitions",
            "name": "EnergyVolumeCurve",
            "description": "\n        Energy volume curve.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.mechanical.energy_volume_curve.type",
                    "results.properties.mechanical.energy_volume_curve.type__suggestion"
                  ]
                },
                "name": "type",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "raw",
                    "mie_gruneisen",
                    "pack_evans_james",
                    "vinet",
                    "tait",
                    "birch_euler",
                    "pourier_tarantola",
                    "birch_lagrange",
                    "birch_murnaghan",
                    "murnaghan"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "volumes",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/18/section_definitions/56/quantities/1"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "energies_raw",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/18/section_definitions/56/quantities/2"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "energies_fit",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/18/section_definitions/55/quantities/1"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 42,
            "m_parent_sub_section": "section_definitions",
            "name": "BulkModulus",
            "description": "\n        Contains bulk modulus values calculated with different methodologies.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.mechanical.bulk_modulus.type",
                    "results.properties.mechanical.bulk_modulus.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Describes the methodology for obtaining the value.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "mie_gruneisen",
                    "pack_evans_james",
                    "vinet",
                    "tait",
                    "birch_euler",
                    "pourier_tarantola",
                    "birch_lagrange",
                    "birch_murnaghan",
                    "murnaghan",
                    "voigt_average",
                    "reuss_average",
                    "voigt_reuss_hill_average"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.mechanical.bulk_modulus.value"
                  ]
                },
                "name": "value",
                "description": "Bulk modulus value.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "pascal"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 43,
            "m_parent_sub_section": "section_definitions",
            "name": "ShearModulus",
            "description": "\n        Contains shear modulus values calculated with different methodologies.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.mechanical.shear_modulus.type",
                    "results.properties.mechanical.shear_modulus.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Describes the methodology for obtaining the value.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "voigt_average",
                    "reuss_average",
                    "voigt_reuss_hill_average"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.mechanical.shear_modulus.value"
                  ]
                },
                "name": "value",
                "description": "Shear modulus value.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "pascal"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 44,
            "m_parent_sub_section": "section_definitions",
            "name": "GeometryOptimization",
            "description": "\n        Geometry optimization results and settings.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "trajectory",
                "description": "List of references to each section_single_configuration_calculation in\nthe optimization trajectory.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "List of energy_total values gathered from the single configuration\ncalculations that are a part of the optimization trajectory.",
                "type": {
                  "type_kind": "quantity_reference",
                  "type_data": "/packages/18/section_definitions/12/quantities/1"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "system_optimized",
                "description": "Contains the optimized geometry that is the result of a geometry optimization.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "type",
                "description": "A name of the task. Will be used as a label for the input or output in workflow representations.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.convergence_tolerance_energy_difference"
                  ]
                },
                "name": "convergence_tolerance_energy_difference",
                "description": "The input energy difference tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.convergence_tolerance_force_maximum"
                  ]
                },
                "name": "convergence_tolerance_force_maximum",
                "description": "The input maximum net force tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.final_force_maximum"
                  ]
                },
                "name": "final_force_maximum",
                "description": "The maximum net force in the last optimization step.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.final_energy_difference"
                  ]
                },
                "name": "final_energy_difference",
                "description": "The difference in the energy_total between the last two steps during\noptimization.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.final_displacement_maximum"
                  ]
                },
                "name": "final_displacement_maximum",
                "description": "The maximum displacement in the last optimization step with respect to previous.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 45,
            "m_parent_sub_section": "section_definitions",
            "name": "MechanicalProperties",
            "description": "\n        Mechanical properties.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "energy_volume_curve",
                "sub_section": "/packages/4/section_definitions/41",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "bulk_modulus"
                  ]
                },
                "name": "bulk_modulus",
                "sub_section": "/packages/4/section_definitions/42",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "shear_modulus"
                  ]
                },
                "name": "shear_modulus",
                "sub_section": "/packages/4/section_definitions/43",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 46,
            "m_parent_sub_section": "section_definitions",
            "name": "ElectronicProperties",
            "description": "\n        Electronic properties.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "band_gap"
                  ]
                },
                "name": "band_gap",
                "sub_section": "/packages/4/section_definitions/1",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "dos_electronic",
                "sub_section": "/packages/4/section_definitions/33",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "band_structure_electronic",
                "sub_section": "/packages/4/section_definitions/36",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "greens_functions_electronic",
                "sub_section": "/packages/4/section_definitions/37",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 47,
            "m_parent_sub_section": "section_definitions",
            "name": "QuantityDynamic",
            "description": "\n        Contains the values for a quantity at different times.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "time",
                "description": "The explicit times at which the values are evaluated. Provide either\nthis or time_step and time_start.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "time_step",
                "description": "The time step between successive evaluations. Provide either\nthis and time_start or the explicit times.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "time_start",
                "description": "The time at which the evaluation started. Provide either this and\ntime_step or the explicit times.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "second"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 48,
            "m_parent_sub_section": "section_definitions",
            "name": "VolumeDynamic",
            "description": "\n        Contains volume values evaluated at different times.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/47"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "The volume values.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 3"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 49,
            "m_parent_sub_section": "section_definitions",
            "name": "PressureDynamic",
            "description": "\n        Contains pressure values evaluated at different times.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/47"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "The pressure values.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 50,
            "m_parent_sub_section": "section_definitions",
            "name": "TemperatureDynamic",
            "description": "\n        Contains temperature values evaluated at different times.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/47"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "The temperature value.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 51,
            "m_parent_sub_section": "section_definitions",
            "name": "EnergyDynamic",
            "description": "\n        Contains energy values evaluated at different times.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/47"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "The energy values.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 52,
            "m_parent_sub_section": "section_definitions",
            "name": "Trajectory",
            "description": "\n        Thermodynamic properties reported for an ensemble evolving in time.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/30"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.thermodynamic.trajectory.available_properties"
                  ]
                },
                "name": "available_properties",
                "description": "Subset of the property names that are present in this trajectory.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "temperature",
                    "pressure",
                    "volume",
                    "energy_potential"
                  ]
                },
                "shape": [
                  "0..*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "temperature",
                "sub_section": "/packages/4/section_definitions/50",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "pressure",
                "sub_section": "/packages/4/section_definitions/49",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "volume",
                "sub_section": "/packages/4/section_definitions/48",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "energy_potential",
                "sub_section": "/packages/4/section_definitions/51",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 53,
            "m_parent_sub_section": "section_definitions",
            "name": "ThermodynamicProperties",
            "description": "\n        Thermodynamic properties.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "trajectory"
                  ]
                },
                "name": "trajectory",
                "sub_section": "/packages/4/section_definitions/52",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 54,
            "m_parent_sub_section": "section_definitions",
            "name": "RadiusOfGyration",
            "description": "\n        Contains Radius of Gyration values as a trajectory.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/47",
              "/packages/4/section_definitions/30"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.radius_of_gyration.kind",
                    "results.properties.structural.radius_of_gyration.kind__suggestion"
                  ]
                },
                "name": "kind",
                "description": "Kind of the quantity.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.radius_of_gyration.label",
                    "results.properties.structural.radius_of_gyration.label__suggestion"
                  ]
                },
                "name": "label",
                "description": "Describes the atoms or molecule types involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "atomsgroup_ref",
                "description": "References to the atoms_group section containing the molecule for which Rg was calculated.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/0"
                },
                "shape": [
                  1
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Value of Rg.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 55,
            "m_parent_sub_section": "section_definitions",
            "name": "RadialDistributionFunction",
            "description": "\n        Radial distribution function.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/30"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.radial_distribution_function.type",
                    "results.properties.structural.radial_distribution_function.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Describes if the observable is calculated at the molecular or atomic level.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "molecular",
                    "atomic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.radial_distribution_function.label",
                    "results.properties.structural.radial_distribution_function.label__suggestion"
                  ]
                },
                "name": "label",
                "description": "Describes the atoms or molecule types involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "bins",
                "description": "Distances along which the rdf was calculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_bins"
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_bins",
                "description": "Number of bins.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the property.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_bins"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "frame_start",
                "description": "Trajectory frame number where the ensemble averaging starts.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "frame_end",
                "description": "Trajectory frame number where the ensemble averaging ends.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 56,
            "m_parent_sub_section": "section_definitions",
            "name": "DiffractionPattern",
            "description": "\n        Diffraction pattern.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.diffraction_pattern.incident_beam_wavelength"
                  ]
                },
                "name": "incident_beam_wavelength",
                "description": "The wavelength of the incident beam.",
                "links": [
                  "https://manual.nexusformat.org/classes/base_classes/NXbeam.html#nxbeam-incident-wavelength-field"
                ],
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "two_theta_angles",
                "description": "Array containing the set of 2-theta angles.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ],
                "unit": "degree"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "intensity",
                "description": "Array containing the set of intensities.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "q_vector",
                "description": "The scattering vector *Q*.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ],
                "unit": "1 / meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 57,
            "m_parent_sub_section": "section_definitions",
            "name": "StructuralProperties",
            "description": "\n        Structural properties.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "radial_distribution_function"
                  ]
                },
                "name": "radial_distribution_function",
                "sub_section": "/packages/4/section_definitions/55",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "radius_of_gyration"
                  ]
                },
                "name": "radius_of_gyration",
                "sub_section": "/packages/4/section_definitions/54",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "diffraction_pattern"
                  ]
                },
                "name": "diffraction_pattern",
                "sub_section": "/packages/4/section_definitions/56",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 58,
            "m_parent_sub_section": "section_definitions",
            "name": "MeanSquaredDisplacement",
            "description": "\n        Mean Squared Displacements.\n        ",
            "base_sections": [
              "/packages/4/section_definitions/30"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.dynamical.mean_squared_displacement.type",
                    "results.properties.dynamical.mean_squared_displacement.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Describes if the correlation function is calculated at the molecular or atomic level.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "molecular",
                    "atomic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "direction",
                "description": "Describes the direction in which the correlation function was calculated.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "x",
                    "y",
                    "z",
                    "xy",
                    "yz",
                    "xz",
                    "xyz"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this correlation function.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.dynamical.mean_squared_displacement.label",
                    "results.properties.dynamical.mean_squared_displacement.label__suggestion"
                  ]
                },
                "name": "label",
                "description": "Describes the atoms or molecule types involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_times",
                "description": "Number of times windows for the calculation of the correlation function.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "times",
                "description": "Time windows used for the calculation of the msds.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_times"
                ],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Msd values.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_times"
                ],
                "unit": "meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "errors",
                "description": "Error associated with the determination of the msds.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "diffusion_constant_value",
                "description": "Values of the diffusion constants.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 2 / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "diffusion_constant_error_type",
                "description": "Describes the type of error reported for this observable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "diffusion_constant_errors",
                "description": "Error associated with the determination of the diffusion constant.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 59,
            "m_parent_sub_section": "section_definitions",
            "name": "DynamicalProperties",
            "description": "\n        Dynamical properties.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "mean_squared_displacement"
                  ]
                },
                "name": "mean_squared_displacement",
                "sub_section": "/packages/4/section_definitions/58",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 60,
            "m_parent_sub_section": "section_definitions",
            "name": "SolarCell",
            "description": "\n        Properties of solar cells.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.efficiency"
                  ]
                },
                "name": "efficiency",
                "description": "Power conversion effciency of a solar cell in percentage %.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.fill_factor"
                  ]
                },
                "name": "fill_factor",
                "description": "Fill factor of a solar cell in absolute values (from 0 to 1).",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.open_circuit_voltage"
                  ]
                },
                "name": "open_circuit_voltage",
                "description": "Open circuit voltage of a solar cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.short_circuit_current_density"
                  ]
                },
                "name": "short_circuit_current_density",
                "description": "Short circuit current density of a solar cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "ampere / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.illumination_intensity"
                  ]
                },
                "name": "illumination_intensity",
                "description": "The light intensity during the IV measurement.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "watt / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.device_area"
                  ]
                },
                "name": "device_area",
                "description": "The total area of the cell during IV and stability measurements under illumination.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.device_architecture",
                    "results.properties.optoelectronic.solar_cell.device_architecture__suggestion"
                  ]
                },
                "name": "device_architecture",
                "description": "Device architecture of the solar cell. Examples are:\n`pn-Heterojunction`, `pin`, `nip`, ...",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.device_stack",
                    "results.properties.optoelectronic.solar_cell.device_stack__suggestion"
                  ]
                },
                "name": "device_stack",
                "description": "Layers of the entire device.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.absorber",
                    "results.properties.optoelectronic.solar_cell.absorber__suggestion"
                  ]
                },
                "name": "absorber",
                "description": "Absorber layers used in the solar cell.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.absorber_fabrication",
                    "results.properties.optoelectronic.solar_cell.absorber_fabrication__suggestion"
                  ]
                },
                "name": "absorber_fabrication",
                "description": "Technique describing the fabrication of the absorber layer. Examples are:\n`Spin-coating`, `Evaporation`, `Doctor blading`, ...",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.electron_transport_layer",
                    "results.properties.optoelectronic.solar_cell.electron_transport_layer__suggestion"
                  ]
                },
                "name": "electron_transport_layer",
                "description": "Electron selective contact layers used in the solar cell.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.hole_transport_layer",
                    "results.properties.optoelectronic.solar_cell.hole_transport_layer__suggestion"
                  ]
                },
                "name": "hole_transport_layer",
                "description": "Hole selective contact layers used in the solar cell.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.substrate",
                    "results.properties.optoelectronic.solar_cell.substrate__suggestion"
                  ]
                },
                "name": "substrate",
                "description": "Substrate layers used in the solar cell.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.optoelectronic.solar_cell.back_contact",
                    "results.properties.optoelectronic.solar_cell.back_contact__suggestion"
                  ]
                },
                "name": "back_contact",
                "description": "Back contact layers used in the solar cell.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 61,
            "m_parent_sub_section": "section_definitions",
            "name": "OptoelectronicProperties",
            "description": "\n        Optoelectronic properties.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "solar_cell",
                "sub_section": "/packages/4/section_definitions/60",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 62,
            "m_parent_sub_section": "section_definitions",
            "name": "EELSInstrument",
            "description": "\n        Base class for an EELS instrument.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.eels.detector_type",
                    "results.properties.spectroscopic.spectra.provenance.eels.detector_type__suggestion"
                  ]
                },
                "name": "detector_type",
                "description": "Detector type.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.eels.max_energy"
                  ]
                },
                "name": "max_energy",
                "description": "Maximum energy of the detector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.eels.min_energy"
                  ]
                },
                "name": "min_energy",
                "description": "Minimum energy of the detector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "guntype",
                "description": "Gun type of the detector.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "beam_energy",
                "description": "Incoming beam energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "beam_current",
                "description": "Incoming beam current.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.eels.resolution"
                  ]
                },
                "name": "resolution",
                "description": "Energy resolution of the detector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "step_size",
                "description": "Step size for axes in units of energy / pixel.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "acquisition_mode",
                "description": "Acquisition mode for the counts in the detector.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "dark_current",
                "description": "Is dark current or noise to be substract included in the output?",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 63,
            "m_parent_sub_section": "section_definitions",
            "name": "EELSMethodology",
            "description": "\n        Base class for the EELS methodology.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.eels.detector_type",
                    "results.properties.spectroscopic.spectra.provenance.eels.detector_type__suggestion"
                  ]
                },
                "name": "detector_type",
                "description": "Detector type.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.eels.resolution"
                  ]
                },
                "name": "resolution",
                "description": "Energy resolution of the detector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.eels.max_energy"
                  ]
                },
                "name": "max_energy",
                "description": "Maximum energy of the detector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.eels.min_energy"
                  ]
                },
                "name": "min_energy",
                "description": "Minimum energy of the detector.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "joule"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 64,
            "m_parent_sub_section": "section_definitions",
            "name": "SpectraProvenance",
            "description": "\n        Contains provenance information (mainly the methodology section) for spectra properties\n        derived from an experiment or a calculation.\n        ",
            "base_sections": [
              "/packages/16/section_definitions/0"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "eels",
                "sub_section": "/packages/4/section_definitions/63"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "electronic_structure",
                "sub_section": "/packages/2/section_definitions/18",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 65,
            "m_parent_sub_section": "section_definitions",
            "name": "Spectra",
            "description": "\n        Base class for Spectra calculation information as obtained from an experiment or a computation.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.type",
                    "results.properties.spectroscopic.spectra.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Identifier for the methodology done to obtain the spectra data: EELS, XAS, XPS, etc.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "EELS",
                    "XAS",
                    "XANES",
                    "EXAFS",
                    "XES",
                    "XPS",
                    "RXIS",
                    "unavailable"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.label",
                    "results.properties.spectroscopic.spectra.label__suggestion"
                  ]
                },
                "name": "label",
                "description": "Identifier for the source of the spectra data, either 'computation' or 'experiment'.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "computation",
                    "experiment"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_energies",
                "description": "Number of excitation energies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "Excitation energies for which the spectra is obtained.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "intensities",
                "description": "Intensitites obtained at each excitation energy. This can be computationally calculated,\nor electron counts coming from an experiment. In arbitrary units.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_energies"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "intensities_units",
                "description": "Units in which the intensities of the spectra are returned. It can be `F/m` as for\nthe dielectric constant, or `counts` for the data of a CCD device.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "provenance",
                "sub_section": "/packages/4/section_definitions/64"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 66,
            "m_parent_sub_section": "section_definitions",
            "name": "SpectroscopicProperties",
            "description": "\n        Spectroscopic properties.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "spectra"
                  ]
                },
                "name": "spectra",
                "sub_section": "/packages/4/section_definitions/65",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 67,
            "m_parent_sub_section": "section_definitions",
            "name": "Properties",
            "description": "\n        Contains the physical properties that have been calculated or used in\n        this entry.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.n_calculations"
                  ]
                },
                "name": "n_calculations",
                "description": "The number of performed single configuration calculations.'",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.available_properties"
                  ]
                },
                "name": "available_properties",
                "description": "Subset of the property names that are present in this entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ],
                "default": [],
                "virtual": true
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "structural",
                "sub_section": "/packages/4/section_definitions/57",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "dynamical",
                "sub_section": "/packages/4/section_definitions/59",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "structures",
                "sub_section": "/packages/4/section_definitions/6",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "vibrational",
                "sub_section": "/packages/4/section_definitions/40",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "electronic",
                "sub_section": "/packages/4/section_definitions/46",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "optoelectronic",
                "sub_section": "/packages/4/section_definitions/61",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "name": "mechanical",
                "sub_section": "/packages/4/section_definitions/45",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 7,
                "m_parent_sub_section": "sub_sections",
                "name": "thermodynamic",
                "sub_section": "/packages/4/section_definitions/53",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 8,
                "m_parent_sub_section": "sub_sections",
                "name": "spectroscopic",
                "sub_section": "/packages/4/section_definitions/66",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 9,
                "m_parent_sub_section": "sub_sections",
                "name": "geometry_optimization",
                "sub_section": "/packages/4/section_definitions/44",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 68,
            "m_parent_sub_section": "section_definitions",
            "name": "ELN",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.eln.sections"
                  ]
                },
                "name": "sections",
                "description": "The type of sections used in entries to search for. By default these are the names\nof the used section definitions.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.eln.tags"
                  ]
                },
                "name": "tags",
                "description": "Short tags that are useful to quickly search based on various\nuser defined criteria.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.eln.names"
                  ]
                },
                "name": "names",
                "description": "Short human readable and descriptive names that appear in\nELN entries.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.eln.descriptions"
                  ]
                },
                "name": "descriptions",
                "description": "'Human descriptions that appear in ELN entries.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.eln.instruments"
                  ]
                },
                "name": "instruments",
                "description": "The name or type of instrument used in an activity, e.g. process or\nmeasurement.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.eln.methods"
                  ]
                },
                "name": "methods",
                "description": "The name or the applied method in an activity, e.g. process or measurement",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.eln.lab_ids",
                    "results.eln.lab_ids__suggestion"
                  ]
                },
                "name": "lab_ids",
                "description": "The laboratory specific id for any item, e.g. sample, chemical, instrument.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 69,
            "m_parent_sub_section": "section_definitions",
            "name": "Results",
            "description": "\n        Contains a summary of the entry contents.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "material",
                "sub_section": "/packages/4/section_definitions/13",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/4/section_definitions/27",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "properties",
                "sub_section": "/packages/4/section_definitions/67",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "eln",
                "sub_section": "/packages/4/section_definitions/68",
                "repeats": false
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 5,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.eln.perovskite_solar_cell_database",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "800px"
                }
              ]
            },
            "name": "Ref",
            "description": "Information about the source of the data. It describes who curated the data, the journal in which the data was published,\nthe DOI number of the publication, the lead author and the publication date.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "internal_sample_id",
                "description": "This is your own unique cell identifier. With this text string alone, you should be able to identify this cell in your own internal data management system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "RichTextEditQuantity"
                    }
                  ]
                },
                "name": "free_text_comment",
                "description": "This could be anything given additional description to the cell that is not captured by any other field.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "ID",
                "description": "",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "ID_temp",
                "description": "",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "name_of_person_entering_the_data",
                "description": "Your name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "data_entered_by_author",
                "description": "TRUE if you how enter the data also was involved in making the device or if you are a co-author of the paper where the data is presented.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": []
                      }
                    }
                  ]
                },
                "name": "DOI_number",
                "description": "The DOI number referring to the published paper or dataset where the data can be found. If the data is unpublished, enter \u201cUnpublished\u201d\nExamples:\n10.1021/jp5126624\n10.1016/j.electacta.2017.06.032\nUnpublished",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": []
                      }
                    }
                  ]
                },
                "name": "lead_author",
                "description": "The surname of the first author. If several authors, end with et al. If the DOI number is given correctly, this will be extracted automatically from www.crossref.org",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "publication_date",
                "description": "Publication date. If the DOI number is given correctly, this will be extracted automatically from www.crossref.org",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "journal",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "part_of_initial_dataset",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "original_filename_data_upload",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Cell",
            "description": "General information about the solar cell. It includes information about the device area, the layer stack sequence and the device architecture.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "42P2O5-22Li2O-22ZnO-12Sm2O3-2CeO2 | FTO | Perovskite | Metal",
                          "A.R.C. | SLG | FTO | TiO2-c | Perovskite | PTAA | Au",
                          "A.R.C. | SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "A.R.C. | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | Au | A.R.C.",
                          "A.R.C. | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "A.R.C. | SLG | ITO | 2PACz | Perovskite | C60 | BCP | Cu",
                          "A.R.C. | SLG | ITO | PTAA | Perovskite | C60 | BCP | Cu",
                          "A.R.C. | SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "Ag-np | SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Al",
                          "Ag-nw; GFRHybrimer; ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "Ag-nw; Graphene; Polycarbonate; Polystyrene | MoO3 | Perovskite | PCBM-60 | BCP | Ag",
                          "Au | 4-methoxythiophenol | Perovskite | 4-chlorothiophenol | Au",
                          "Au | Ni | Al | Ti | GaN | Perovskite | Graphene aerogel | Spiro-MeOTAD | Au",
                          "Au | Ni | Al | Ti | GaN | Perovskite | Spiro-MeOTAD | Au",
                          "Au | Ni | Al | Ti | GaN | Perovskite | hexagonal-BN | Perovskite | Graphene aerogel | Spiro-MeOTAD | Au",
                          "Au | Ni | Al | Ti | GaN | Perovskite | hexagonal-BN | Perovskite | Spiro-MeOTAD | Au",
                          "Au | Perovskite | C60 | BCP | Au",
                          "Au | Perovskite | PCBM-60 | Ag",
                          "Au | ZnO-c | Perovskite | Cu2O | Au",
                          "Carbon-np | SLG | ITO | Graphene oxide | Perovskite | PCBM-60 | BCP | Ag",
                          "Carbon-nt-fiber | TiO2-c | TiO2-mp | Perovskite | P3HT; SWCNTs | Ag-nw",
                          "Carbon-nt-fiber | TiO2-c | TiO2-mp | Perovskite | P3HT; SWCNTs | Ag-nw | PMMA",
                          "Carbon-nt-yarn | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Pt-Carbon-nt",
                          "CdSeS-QDs | SLG | ITO | NiO-c | Perovskite | ADAHCl | C60 | BCP | Ag",
                          "Cellophane | TiO2-c | Ag | TiO2-c | CPTA | Perovskite | Spiro-MeOTAD | Au",
                          "Cellulose paper | Carbon black | Perovskite | C60 | BCP | Cu | Au",
                          "Cu | CuI | Perovskite | ZnO-np | Ag-nw",
                          "Cu-nw; GFRHybrimer; ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "Epoxy | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "Eu(TTA)2(Phen)MAA | SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "Eu(TTA)2(Phen)MAA | SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | NiO | Ag | NiO | NaYF4 | Ag",
                          "Eu-complex LDL | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "FPA-PDMS | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "FTO | TiO2-c | Perovskite | Carbon",
                          "Flexible | IZO | PEIE | C60 | 3TPYMB | Perovskite | Spiro-MeOTAD | Au",
                          "Flexible | IZO | PEIE | C60 | B4PyMPM | Perovskite | Spiro-MeOTAD | Au",
                          "Flexible | IZO | PEIE | C60 | BCP | Perovskite | Spiro-MeOTAD | Au",
                          "Flexible | IZO | PEIE | C60 | LiF | Perovskite | Spiro-MeOTAD | Au",
                          "Foil | AZO | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "Foil | AZO | LiF | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "Foil | AZO | PEIE | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "Graphite | Perovskite | CdS | ITO",
                          "HCLaminate | IZO | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "INVAR | ITO | SiO2 | ITO | NiO-c | Perovskite | PCBM-60 | IZTO",
                          "ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "ITO | PEN | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "ITO | PEN | SnO2-np | Perovskite | PEDOT:PSS | Carbon",
                          "ITO | PEN | WOx | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "ITO | PET | ZnO2-c | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "ITO | PTAA | Perovskite | PCBM-60 | Ti | Au",
                          "ITO | ZnO-c | Perovskite | Cu2O | ITO",
                          "MgF2 | PET | ITO | 1\u2010benzyl\u20103\u2010methylimidazolium chloride | Perovskite | Spiro-MeOTAD | Au",
                          "MgF2 | PET | ITO | Perovskite | Spiro-MeOTAD | Au",
                          "MgF2 | Quartz | ITO | PTAA | CuSCN | Perovskite | PCBM-60 | AZO-np | PEI | Ag",
                          "MgF2 | Quartz | ITO | PTAA | Perovskite | PCBM-60 | AZO-np | PEI | Ag",
                          "MgF2 | SLG | FTO | TiO2-c | Perovskite | Perovskite-QD | PTAA | Au",
                          "MgF2 | SLG | FTO | TiO2-c | TiO2-mp | PCBM-60; PMMA | Perovskite | Spiro-MeOTAD | ITO | Au-grid | MgF2",
                          "MgF2 | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | Au",
                          "MgF2 | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "MgF2 | SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoOx | ITO | Au | MgF2",
                          "MgF2 | Willow glass | AZO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "MgF2 | Willow glass | ITO | PTAA | Perovskite | C60 | BCP | Cu",
                          "MgF2 | Willow glass | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "MgF2 | Willow glass | IZO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "Mica | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "Mn:CsPbCl3-QDs | SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "Moth eye PDMS | SLG | ITO | PTAA | Perovskite | C60 | BCP | Cu",
                          "N-Graphene-QDs | SLG | FTO | TiO2-c | Perovskite | PTAA | Au",
                          "NOA63 | Au | PEDOT:PSS | Perovskite | PCBM-60 | MoO3 \u2223 Au \u2223 Ag \u2223 MoO3 | Alq3",
                          "NOA63 | ITO | PEDOT:PSS | Perovskite | PCBM-60 | MoO3 | Au | Ag | MoO3 | Alq3",
                          "NOA63 | MoO3 | Au | PEDOT:PSS | Perovskite | PCBM-60 | MoO3 | Au | Ag | MoO3 | Alq3",
                          "NOA63 | PEDOT:PSS | Perovskite | PCBM-60 | GaIn",
                          "NOA88 | PEI | Au | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "NOA88 | PEI | Au | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "NaYF4:Eu-np | SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "Nanopaper | TiO2 | Ag | TiO2-c | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "Nb:SrTiO3 | Perovskite | ITO",
                          "PAA-PEG | Ti | PANI | Perovskite | PCBM-60 | Ti-grid",
                          "PAA-PEG | Ti | PANI | Ti | Perovskite | PCBM-60 | Ti",
                          "PDMS | Graphene | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PDMS | PEDOT:PSS | Perovskite | PCBM-60 | PEI | PEDOT:PSS | PDMS",
                          "PDMS | PET | Au-grid | PEDOT:PSS | Perovskite | C60 | BCP | Cu",
                          "PDMS | PET | PEDOT:PSS | Perovskite | C60 | BCP | Cu | Parylene-film",
                          "PDMS | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PDMS | SLG | ITO | PTAA | Perovskite | C60 | BCP | Cu",
                          "PEG | ITO | PEDOT:PSS | Perovskite | bis-C60 | BCP | Ag",
                          "PEG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "PEI | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | AZO | ZnO-c | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | Ag-grid | ZnO-c | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Ag",
                          "PEN | Ag-nw | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "PEN | FTO | PEI | PCBM-60 | Perovskite | PTAA\uff5cAu",
                          "PEN | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | FTO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | Graphene | MoO3 | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "PEN | Graphene | Perovskite | PCBM-60 | Ag",
                          "PEN | Graphene; MoO3 | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "PEN | ITO | Al2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | Au-np | NiO-c | Perovskite | PCBM-60 | PEI | Ag",
                          "PEN | ITO | Black P-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | C60 | C60-np | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | C60 | PAA | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "PEN | ITO | CdSe | PCBM-60 | Perovskite | CuPc | Carbon",
                          "PEN | ITO | CuPc | PEI | Perovskite | PCBM-60 | BCP | Ag",
                          "PEN | ITO | HfO2 | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | LiQ; PEIE | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | MC8-9-NPC | Perovskite | PCBM-60 | LiF | Al",
                          "PEN | ITO | MFGO | Perovskite | PCBM-60 | BCP | Ag",
                          "PEN | ITO | NiO-c | Perovskite | CSCNT@Al2O3-c | CSCNT@SnO2",
                          "PEN | ITO | NiO-c | Perovskite | PCBM-60 | Ag",
                          "PEN | ITO | NiO-c | Perovskite | PCBM-60 | Au | ITO | PEN",
                          "PEN | ITO | NiO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "PEN | ITO | NiO-c | Perovskite | PCBM-60 | BCP | Bi2Te3",
                          "PEN | ITO | NiO-np | Perovskite | C60 | BCP | Ag",
                          "PEN | ITO | NiO-np | Perovskite | PCBM-60 | Ag",
                          "PEN | ITO | NiO-np | Perovskite | PCBM-60 | Al",
                          "PEN | ITO | NiO-np | Perovskite | PCBM-60 | BCP | Ag",
                          "PEN | ITO | NiO-np | Perovskite | PCBM-60 | TiO2-c | Ag",
                          "PEN | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | Al",
                          "PEN | ITO | NiO-np | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "PEN | ITO | PCBM-60 | Perovskite | PTAA | Au",
                          "PEN | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Ag",
                          "PEN | ITO | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "PEN | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "PEN | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PEN | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "PEN | ITO | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Ag",
                          "PEN | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Ag",
                          "PEN | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Au",
                          "PEN | ITO | PEIE | PCBM-60 | Perovskite | P3HT | Au",
                          "PEN | ITO | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "PEN | ITO | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | PhNa-1T | Perovskite | PCBM-60 | Ag",
                          "PEN | ITO | PyCEE | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | SnO2 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-QDs | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-c | Perovskite | PTAA | Au",
                          "PEN | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-c | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-np | CPTA | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-np | Perovskite | P3HT; Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-np | Perovskite | PTAA | NiO-c | Au | PEN",
                          "PEN | ITO | SnO2-np | Perovskite | PTAA | NiO-c | ITO | PEN",
                          "PEN | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-np | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnO2-np | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | SnS2 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | Ti(OiPr)4 | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | TiO2-c | Perovskite | Carbon-nt",
                          "PEN | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | TiO2-c | SnO2-c | Perovskite | Graphene; P3HT | Carbon",
                          "PEN | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | TiO2-np | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | TiO2-np | C70 | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | TiO2-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | WOx | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | WOx | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | X1 | Perovskite | PCBM-60 | C3-CBL | Ag",
                          "PEN | ITO | Zn2SnO4 | Perovskite | PTAA | Au",
                          "PEN | ITO | ZnO | PEIE | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | ZnO-c | Perovskite | Carbon",
                          "PEN | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PEN | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "PEN | ITO | ZnO-np | Perovskite | PTAA | Au",
                          "PEN | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | nTi-MOF | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | ITO | rGO | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "PEN | PEDOT:PSS | PEI | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | Planarization | SiN | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PEN | SWCNTs | MoO3 | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "PES | AZO | CuNW | AZO | SnO2-np | Perovskite | P3HT; Spiro-MeOTAD | Au",
                          "PES | FTO | Perovskite | Spiro-MeOTAD | Au",
                          "PES | ITO | Perovskite | Spiro-MeOTAD | Au",
                          "PES | PEDOT:PSS | Ag | PEI | PCBM-60 | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "PES | Ti | Graphene | NiO-c | Perovskite | PCBM-60 | AZO | Ag | AZO",
                          "PET | APTES | AuCl3; Graphene | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | APTES; Graphene | PCBM-60 | Perovskite | PTAA | Au",
                          "PET | AZO | Ag | AZO | PEDOT:PSS | Perovskite | PCBM-60 | Au",
                          "PET | AZO | Ag | AZO | PEDOT:PSS | PolyTPD | Perovskite | PCBM-60 | Au",
                          "PET | AZO | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "PET | Ag | MoOx | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Cu | Ag | MoO3",
                          "PET | Ag-grid | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | Ag-grid | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Al",
                          "PET | Ag-grid | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Ag",
                          "PET | Ag-grid | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | Al",
                          "PET | Ag-grid | PEDOT:PSS; PEI | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Ag",
                          "PET | Ag-grid | ZnO-c | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Ag",
                          "PET | Ag-mesh | PH1000 | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | Ag-mesh:PH1000 | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | Ag-nw | FZO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | Ag-nw | Graphene | ZnO-np | Perovskite | PTAA | Au",
                          "PET | Ag-nw | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | Ag-nw; Graphene oxide | PEDOT:PSS | Perovskite | PCBM-60 | PFN-P1 | Ag",
                          "PET | Ag-nw; PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | Al2O3 | Ti | C60 | Perovskite | NiO-c | Ni | Al2O3 | PET",
                          "PET | Au | PEDOT:PSS | NPB | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | Au-np; Graphene; TFSA | Graphene-QDs | Perovskite | PCBM-60 | Al",
                          "PET | AuCl3; Graphene | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | Carbon-nt; P3HT | PEDOT:PSS | Perovskite | Carbon-nt:PCBM-60",
                          "PET | FTO | NiO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | FTO | NiO-np | Perovskite | C60 | bis-C60 | Ag",
                          "PET | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "PET | Graphene | PEDOT:PSS | Perovskite | C60 | BCP | Ag",
                          "PET | Graphene | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | Graphene | PTAA | PEDOT:PSS | Perovskite | ZnO-np | Graphene | PET",
                          "PET | Graphene | PTAA | PEDOT:PSS | Perovskite | ZnO-np | TETA-Graphene | PET",
                          "PET | Graphene | TiO2-c | PCBM-60 | Perovskite | Carbon-nt",
                          "PET | Graphene | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Carbon-nt",
                          "PET | Graphene | ZnO-np | Perovskite | PTAA | PEDOT:PSS | Graphene | PET",
                          "PET | Graphene | ZnO-np | Perovskite | PTAA | PEDOT:PSS | TFSA-Graphene | PET",
                          "PET | Graphene; TETA | PTAA | PEDOT:PSS | Perovskite | ZnO-np | Graphene | PET",
                          "PET | Graphene; TETA | PTAA | PEDOT:PSS | Perovskite | ZnO-np | Graphene; TETA | PET",
                          "PET | Graphene; TETA | PTAA | PEDOT:PSS | Perovskite | ZnO-np | Graphene; TETA | PET | Ag",
                          "PET | Graphene; TETA | ZnO-np | Perovskite | PTAA | PEDOT:PSS | Graphene | PET",
                          "PET | Graphene; TETA | ZnO-np | Perovskite | PTAA | PEDOT:PSS | Graphene; TFSA | PET",
                          "PET | Graphene; TETA | ZnO-np | Perovskite | PTAA | PEDOT:PSS | Graphene; TFSA | PET | Ag",
                          "PET | ITO | Ag-nw | ZnO-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "PET | ITO | Ag-nw | ZnO-c | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "PET | ITO | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | CPTA | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | CdS | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | CuPc | PEI | Perovskite | C60 | BCP | Ag",
                          "PET | ITO | CuPc | PEI | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | ITO | CzPAF-TPA | Perovskite | PCBM-60 | ZnO | Ag",
                          "PET | ITO | CzPAF-TPA | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "PET | ITO | FPI-PEIE | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | Graphene | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | Graphene | ZnO-QDs | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | LiCoO2 | Perovskite | C60 | BCP | Ca | Al",
                          "PET | ITO | N-PDI | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | Nb2O5 | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | Nb2O5; TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | NiO-c | NiO-nw | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | ITO | NiO-c | Perovskite | C60 | BCP | Ag",
                          "PET | ITO | NiO-c | Perovskite | C60 | bis-C60 | Ag",
                          "PET | ITO | NiO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | ITO | NiO-c | Perovskite | PCBM-60 | LiF | Ag",
                          "PET | ITO | NiO-c | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "PET | ITO | NiO-c | Perovskite | TPA-3CN | BCP | Al",
                          "PET | ITO | NiO-np | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | ITO | P3CT-CH3NH2 | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "PET | ITO | P3CT-Na | Perovskite | PCBM-60 | Ag",
                          "PET | ITO | P3CT-Na | Perovskite | PCBM-60 | HDAC | Ag",
                          "PET | ITO | PANI | Perovskite | PCBM-60 | Au",
                          "PET | ITO | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | PEDOT:PSS | 3-aminopropanoic acid-SAM | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "PET | ITO | PEDOT:PSS | NiO-c | Perovskite | PCBM-60 | TIPD | Al",
                          "PET | ITO | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | ITO | PEDOT:PSS | PEI-HI | Perovskite | PCBM-60 | LiF | Ag",
                          "PET | ITO | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | C60 | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Ca | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | EVA | PCBM-60 | BCP | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | F8BT | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | P(NDI2DT-TTCN) | BCP | Au",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Au",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Au",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ca | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Cu",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Cu-ribbon",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | PEDOT:PSS",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PPy | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | C60 | Rhodamine 101 | LiF | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TiO2 | Al",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO | Ag",
                          "PET | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "PET | ITO | PEDOT:PSS | Perovsktie | ZnO-np | Al",
                          "PET | ITO | PEI | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | PEIE | CDIN | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | PFN | C60; PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | PTAA | Perovskite | Fluorosilane | C60 | BCP | Al",
                          "PET | ITO | PTAA | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "PET | ITO | PTAA | Perovskite | PCBM-60 | C60 | BCP | Cu",
                          "PET | ITO | PTAA | Perovskite | PVDF-TrFE | C60 | BCP | Al",
                          "PET | ITO | PTAA | Perovskite | Plastic foam | C60 | BCP | Al",
                          "PET | ITO | PTAA | Perovskite | Polystyrene | C60 | BCP | Al",
                          "PET | ITO | PTAA | Perovskite | Teflon | C60 | BCP | Al",
                          "PET | ITO | PTCA | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | Perovskite | PCBM-60 | Ag",
                          "PET | ITO | Perovskite | PCBM-60 | Al",
                          "PET | ITO | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | SnO2-c | Al2O3-np | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | SnO2-c | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | SnO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | SnO2-c | SnO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | Au | MoO3",
                          "PET | ITO | SnO2-np | KCl | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | SnO2-np | Perosvkite | P3HT | Ag",
                          "PET | ITO | SnO2-np | Perosvkite | Spiro-MeOTAD | Ag",
                          "PET | ITO | SnO2-np | Perovskite | PCPD2FBT:BCF | PEDOT:PSS | ITO | PET",
                          "PET | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | SnO2-np | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | TPA-BP-OXD | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "PET | ITO | Ti | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | TiO2-c | Perovskite | PTAA | Au",
                          "PET | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | TiS2 | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | VB-DAAF | Perovskite | C60 | BCP | Al",
                          "PET | ITO | VOx | Cu phtalocyanine | Perovskite | C60 | BCP | Ag",
                          "PET | ITO | ZSO-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | ZnO-c | Perovskite | PTAA | Au",
                          "PET | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "PET | ITO | ZnO-c | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "PET | ITO | ZnO-c | Urea | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | ZnO-c | ZnO-nanospheres | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | ITO | ZnO-c | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | ZnO-np | PCBM-60 | Perovskite | P3HT | PEDOT:PSS | Ag",
                          "PET | ITO | ZnO-np | Perovskite | P3HT | Ag",
                          "PET | ITO | ZnO-np | Perovskite | PB(NAP-Th)TBT | Ag",
                          "PET | ITO | ZnO-np | Perovskite | PTAA | Au",
                          "PET | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "PET | ITO | ZnO-np | p-(F)-PO-TAZ | Perovskite | PB(NAP-Th)TBT | Ag",
                          "PET | ITO | c-TCTA | Perovskite | c-HATNA | bis-C60 | Ag",
                          "PET | IWO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | IZO | PTAA | Perovskite | C60 | BCP | Ag",
                          "PET | IZO | PTAA | Perovskite | PCBC6 | BCP | Ag",
                          "PET | IZO | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | IZO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PET | IZO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PET | IZO | TiO2-c | TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | IZO | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "PET | IZO | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "PET | In2O3 | ZnO-c | Perovskite | Spiro-MeOTAD | Ag",
                          "PET | MSA-PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | C60 | Rhodamine 101 | LiF | Ag",
                          "PET | Ni-mesh:PH1000 | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "PET | PEDOT:PSS | Ag-nw | SnO2-np | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "PET | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | TiO2 | Al",
                          "PET | PEDOT:PSS | PEI | Perovskite | Spiro-MeOTAD | Au",
                          "PET | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "PET | PEDOT:PSS | Perovskite | PCBM-60 | GaIn",
                          "PET | PEDOT:PSS | Perovskite | PCTDI | Cr | Au",
                          "PET | PEDOT:PSS | Perovskite | PCTDI | Cr | Cu",
                          "PET | PEDOT:PSS | ZnO-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "PET | SWCNTs | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "PET | SnO2-c | Au | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "PET | TCE | ZnO-c | Perovskite | P3HT | Ag",
                          "PET | TCE | ZnO-c | Perovskite | PEDOT:PSS | Ag",
                          "PET | TiO2-c | Ag | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PET | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PET | WO3 | Ag | WO3 | PEDOT:PSS | Perovskite | C60 | Bphen | Ag",
                          "PET | Zeocoat | Graphene | P3HT | Perovskite | PCBM-60 | Ag",
                          "PET | ZnO-c | Ag | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PETUG | C60 | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "PI | Ag-np | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Ag",
                          "PI | Cu-grid | Graphene | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "PI | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Ag",
                          "PI | PEDOT:PSS | ZnO-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "PS | ZnO | Perovskite | Spiro-MeOTAD | Ag",
                          "Paper | Au | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | Au | MoO3",
                          "Perovskite | C60 | BCP | Au",
                          "Phosphor-in-glass | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "Polyester-satin textile | Polyurethane | Carbon-nt; PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "Polyimide | ITO | ZnO-np | Perovskite | PTAA | Au",
                          "Polyimide | In2O3:H | PTAA | Perovskite | PCBM-60 | ZnO-np | AZO | Ni | Al",
                          "Polyimide | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "Pt | Perovskite | Al",
                          "Quartz | Graphene | C60 | Perovskite | Carbon",
                          "Quartz | TaN | TaS2 | Perovskite | CdS | ITO",
                          "Regenerated cellulose film | Ag-nw | PEDOT:PSS | Perovskite | PCBM-60 | Au",
                          "SLD | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Ag",
                          "SLG  FTO | TiO2-c | TiO2-mp | Perovskite | BTX-OMeTAD | Au",
                          "SLG  FTO | TiO2-c | TiO2-mp | Perovskite | BX-OMeTAD | Au",
                          "SLG  FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | APTES; Graphene | PCBM-60 | Perovskite | PTAA | Au",
                          "SLG | AZO | Ag-grid | AZO | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | Ag-nw | AZO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | Au | AZO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | Ba(OH)2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | Cu-nw | AZO | ZnO-c | PEI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | Cu@Ni-nw | ZnO-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | AZO | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | AZO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | AZO | Perovskite | P3HT | Au",
                          "SLG | AZO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | SnO2-c | SnO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | ZnO-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | ZnO-c | ZTO | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | AZO | ZnO-nw | Perovskite | Carbon",
                          "SLG | AZO | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | Ag | MoOx | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Cu | Ag | MoO3",
                          "SLG | Ag | MoOx | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | ITO",
                          "SLG | Ag | PCBM-60 | Perovskite | PTAA | Ag",
                          "SLG | Ag | TiO2-c | Perovskite | Au",
                          "SLG | Ag-nw | AZO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | Ag-nw | Graphene oxide | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | Ag-nw | Graphene | ZnO-np | Perovskite | PTAA | Au",
                          "SLG | Ag-nw | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | Ag-nw; Chitosan | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | Ag-nw; Graphene oxide | PEDOT:PSS | Perovskite | PCBM-60 | PFN-P1 | Ag",
                          "SLG | Au | OMeTP-SAM | Perovskite | CITP-SAM | Au",
                          "SLG | Au-np; Graphene | Graphene-QDs | Perovskite | PCBM-60 | Al",
                          "SLG | Au-np; Graphene; TFSA | Graphene-QDs | Perovskite | PCBM-60 | Al",
                          "SLG | Au-np; Graphene; TFSA | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | Au; NiO-c | Perovskite | C60 | BCP | Al",
                          "SLG | Cd2SnO4 | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | Cu | NiO-c | Perovskite | PCBM-60 | PEIE | Cu",
                          "SLG | Cu | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Cu",
                          "SLG | Cu-BHT | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | Cu-nw | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | CuS | Perovskite | PCBM-60 | Rhodamine 101 | Ag",
                          "SLG | DWCNTs | PTAA | PFN-P2 | Perovskite | C60 | BCP | Cu",
                          "SLG | FAZO | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FGZO | SnO2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | (RhCp*Cp)2 | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | (RhCp*Cp)2 | PTCBI | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | 1-ethyl-3-methylimidazolium iodide | C60 | 1-ethyl-3-methylimidazolium iodide | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | 1-ethyl-3-methylimidazolium iodide | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | 1-ethyl-3-methylimidazolium iodide | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | 2H-TaS2 | Perovskite | P3HT | Ag",
                          "SLG | FTO | AZO-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | AZO-np | Perovskite | PCE-10 | MoO3 | Al",
                          "SLG | FTO | AZO-np | Perovskite | PTB7 | MoO3 | Al",
                          "SLG | FTO | Ag-nancubes | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Ag-np | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Ag-np; PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | Ag-np; TiO2-c | TiO2-mp | Perovskite | Au",
                          "SLG | FTO | Ag-np; TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Ag-np; TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | Ag:CuO-nanofibers | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | AgAu-np | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Al2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Al2O3-c | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Al2O3-mp | Perovskite | Au",
                          "SLG | FTO | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Al2O3; TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | Al:ITO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Al:ITO-c | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Au-grid | TiO2-c | SnO2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Au-np | NiO-c | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Au-np | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Au-np; SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Au-nw | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | BCP | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | BaCoF4 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | BaSnO3 | Perovskite | NiO | FTO | SLG",
                          "SLG | FTO | BaSnO3-mp | Perovskite | Spiro-MeOTAD | Carbon",
                          "SLG | FTO | BaSnO3-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | BaSnO3-nw | Perovskite | Spiro-MeOTAD | Carbon",
                          "SLG | FTO | BenMeIM-Cl | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | BenMeIM-Cl | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | BiFeO3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Black P-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | C3N5 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | C60 | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | C60 | BenMeIM-Cl | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | C60 | PAA | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | C60 | Perovskite | Carbon",
                          "SLG | FTO | C60 | Perovskite | CuPc | Au",
                          "SLG | FTO | C60 | Perovskite | F4-TCNQ | CuPc | Au",
                          "SLG | FTO | C60 | Perovskite | FU7 | Au",
                          "SLG | FTO | C60 | Perovskite | P3HT | Au",
                          "SLG | FTO | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | C60 | Perovskite | Spiro-MeOTAD | Al",
                          "SLG | FTO | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | C60 | Perovskite | Thiophene | Spiro-MeOTAD | Au",
                          "SLG | FTO | C60 | [EMIM]PF6-IL | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | C70 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | CF-Sp-BTh | Perovskite | PCBM-60 | Au",
                          "SLG | FTO | CIGS | Perovskite | PCBM-60 | Zr(Acac) | Ag",
                          "SLG | FTO | CL1-2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | CZTS | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Carbon | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Carbon-mp | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | CdS | Perovskite | Carbon | Ag",
                          "SLG | FTO | CdS | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | CdS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | CdS-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | CdS-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | CdSe | PCBM-60 | Perovskite | CuPc | Carbon",
                          "SLG | FTO | CdSe | Perovskite | CuPc | Carbon",
                          "SLG | FTO | CeO2-c | Perovskite | CuSCN | Au",
                          "SLG | FTO | CeO2-c | TiO2-c | Perovskite | CuSCN | Au",
                          "SLG | FTO | CeOx | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | CeOx | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | CoCuO | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | CoO | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | CoOx | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Cr2O3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | CrO2 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | CrOx | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | CrOx | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | Cu0.2Cr0.8O2 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Cu0.33Cr0.67O2 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Cu0.5Cr0.5O2 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Cu0.67Cr0.33O2 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Cu0.8Cr0.2O2 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Cu2BaSnS4 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Cu2O | Perovskite | SiO2-c | ZnO-c | Ag",
                          "SLG | FTO | Cu3PS4-np | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | CuCrO2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | CuGaO2-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | CuI | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | CuI | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | CuI | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | FTO | CuInS2 | Al2O3-np | Perovskite | Ag",
                          "SLG | FTO | CuO | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | CuO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | CuO2 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | CuSCN | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | CuSCN | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | ETM | Perovskite | HTM | Metal",
                          "SLG | FTO | F4-TCNQ | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | Fe2O3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | Fe2O3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Fe2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Fe2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Fe2O3-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | FeO | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | GO-nanoribbons | Perovskite | ZnO-np | Al",
                          "SLG | FTO | GaN | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Graphene oxide | Perovskite | Graphene oxide | Al",
                          "SLG | FTO | Graphene oxide | Perovskite | Graphene oxide; TiO2-c | Al",
                          "SLG | FTO | Graphene oxide | Perovskite | TiO2-c | Al",
                          "SLG | FTO | Graphene oxide | Perovskite | ZnO-np | Al",
                          "SLG | FTO | Graphene oxide; TiO2-np | Perovskite | Au",
                          "SLG | FTO | Graphene | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Graphene | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Graphene-QDs | Perovskite | Carbon",
                          "SLG | FTO | Graphene; NDI; SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Graphene; TiO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | IDIC | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ITIC | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | IZO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | In2O3 | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | In2O3 | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | FTO | In2S3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | In2S3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | In2S3 | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | KY7F22-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Li4SiW12O40 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | LiMgNiO-c | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | LiMgNiO-c | Perovskite | PCBM-60 | Carbon-QDs | Ag",
                          "SLG | FTO | LiNiO-c | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | MTDATA | Perovskite | C60 | BCP | Cu",
                          "SLG | FTO | Mg0.05Zn0.95O-np | Perovskite | P3HT | Au",
                          "SLG | FTO | Mg0.15Zn0.85O-np | Perovskite | P3HT | Au",
                          "SLG | FTO | Mg0.1Zn0.9O-np | Perovskite | P3HT | Au",
                          "SLG | FTO | Mg0.25Zn0.75O-np | Perovskite | P3HT | Au",
                          "SLG | FTO | Mg0.2Zn0.8O-np | Perovskite | P3HT | Au",
                          "SLG | FTO | MgO | NiO-mp | Perovskite | Carbon",
                          "SLG | FTO | MgO | SnO2-np | Ethanol amine | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | MgO | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | MgO | TiO2-mp | NiO-mp | Perovskite | Carbon",
                          "SLG | FTO | MgO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | MgO-c | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | MgO-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | MoS2 | Perovskite | C60 | BCP | Ag",
                          "SLG | FTO | MoS2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | MoS2-nanosheets | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | N-PDI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | NDI; SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nafion; PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | Nb2O3-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5 | (EMIM)PF6 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5 | PCBM-60 | (EMIM)PF6 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5 | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5 | Perovskite | Carbon",
                          "SLG | FTO | Nb2O5 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | Nb2O5 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5 | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5-c | Nb2O5-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5-c | Perovskite | CuPc | Carbon",
                          "SLG | FTO | Nb2O5-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Nb2O5; TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | NbOH5 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | NbOx | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | NiCoO4 | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | FTO | NiMgLiO | 5-AVA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | 2-acetylpyridine | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | 3-acetylpyridine | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | 4-DMABA | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | 4-acetylpyridine | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | CeOx-np | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | In2O3-c | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | PCBM-60 | CeOx-np | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | PCBM-60 | TiO2-c | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | SnO2-c | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | TiO2-c | Ag",
                          "SLG | FTO | NiMgLiO | Perovskite | TiO2-np | Sb",
                          "SLG | FTO | NiMgLiO | Perovskite | ZnO-c | Ag",
                          "SLG | FTO | NiMgLiO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiMgLiO-c | Perovskite | PCBM-60 | BCP | Bi | Au",
                          "SLG | FTO | NiMgLiO-c | Perovskite | PCBM-60 | TiO2-c | Ag",
                          "SLG | FTO | NiMgLiO-c | Perovskite | SFX-PDI4 | TiO2-c | Ag",
                          "SLG | FTO | NiMgO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO | Perovskite | C60 | BCP | Ag",
                          "SLG | FTO | NiO | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | NiO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | FTO | NiO | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | FTO | NiO | Perovskite | PCBM-60:PS | Al",
                          "SLG | FTO | NiO | Perovskite | PTEG-1 | Ag",
                          "SLG | FTO | NiO | Perovskite | Q10 | BCP | Ag",
                          "SLG | FTO | NiO-c | Al2O3-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | Al2O3-mp | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | NiO-c | Al2O3-mp; Au@SnO2-np | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | NiO-c | Al2O3-mp; Au@SnO2-nw | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | NiO-c | BMIMBF4 | Perovskite | PCBM-60 | BCP | Cr | Au",
                          "SLG | FTO | NiO-c | CuGaO2-c | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | CuGaO2-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | CuI | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | DEA | Perovskite | PCBM-60 | PN4N | Al",
                          "SLG | FTO | NiO-c | MoOx | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | NiO-c | MoOx | Perovskite | ZrO2-c | PCBM-60 | Al",
                          "SLG | FTO | NiO-c | N719 dye | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | NiO-mp | Perovsite | C60 | BCP | Al",
                          "SLG | FTO | NiO-c | NiO-mp | Perovsite | ZnO | Al",
                          "SLG | FTO | NiO-c | NiO-mp | Perovskite | Acetyl acetate; I2; LiI | Pt | FTO | SLG",
                          "SLG | FTO | NiO-c | NiO-mp | Perovskite | Ethyl acetate; I2; LiI; TBP; Urea | Pt | FTO | SLG",
                          "SLG | FTO | NiO-c | NiO-mp | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | NiO-mp | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | NiO-c | NiO-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | NiO-mp | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | NiO-c | PMMA | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | PS | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | PTAA | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | NiO-c | PTZ-1 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | PTZ-2 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | (4AMP)I2 | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | Ag",
                          "SLG | FTO | NiO-c | Perovskite | Au",
                          "SLG | FTO | NiO-c | Perovskite | BCP | Au",
                          "SLG | FTO | NiO-c | Perovskite | C5-NCMA | bis-C60 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | C60 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | C60 | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | C60-BPy | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | C60-HPy | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | C60-MPy | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | C60; PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | CSCNT@Al2O3-c | CSCNT",
                          "SLG | FTO | NiO-c | Perovskite | CSCNT@Al2O3-c | CSCNT@SnO2",
                          "SLG | FTO | NiO-c | Perovskite | CSCNT@SnO2",
                          "SLG | FTO | NiO-c | Perovskite | Carbon",
                          "SLG | FTO | NiO-c | Perovskite | CdS-np | Au",
                          "SLG | FTO | NiO-c | Perovskite | CeOx | Ag",
                          "SLG | FTO | NiO-c | Perovskite | FA-PDI2 | TiO2-c | Ag",
                          "SLG | FTO | NiO-c | Perovskite | Fulleropyrrolidinium Iodide | Ag",
                          "SLG | FTO | NiO-c | Perovskite | Graphitic carbon nitride | PCBM-60; Graphene | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | MAI | PCBM-60 | PEI | Ag",
                          "SLG | FTO | NiO-c | Perovskite | MoOx | Au",
                          "SLG | FTO | NiO-c | Perovskite | NMPFP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | AZO-c",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | Au",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | BCP | Cr | Au",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | BCP | Ga2O3 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | C60 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | Carbon-nt; PEI | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | CeOx | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | PCBDAN | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | PEIE | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | PFN-Br | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | PN4N | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | PN4N | Al",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | PPDIN6 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | SnO2-c | AZO-c",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | TIPD | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | TiO2-c | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | [BMIM]BF4 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60; Graphene | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PCBM-60; Zn0.8Cd0.2S-np | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PEAI | PCBM-60 | PEI | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PMMA | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PPA | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PPEA | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | Perovskite | PS | PCBM-60 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | SnO2-c | AZO-c",
                          "SLG | FTO | NiO-c | Perovskite | TEABr | PCBM-60 | PEI | Ag",
                          "SLG | FTO | NiO-c | Perovskite | TEACl | PCBM-60 | PEI | Ag",
                          "SLG | FTO | NiO-c | Perovskite | TEAI | PCBM-60 | PEI | Ag",
                          "SLG | FTO | NiO-c | Perovskite | TPA-3CN | BCP | Al",
                          "SLG | FTO | NiO-c | Perovskite | TiO2 | Ag",
                          "SLG | FTO | NiO-c | Perovskite | ZnO | C60 | Au",
                          "SLG | FTO | NiO-c | Perovskite | ZnO-c | Ag",
                          "SLG | FTO | NiO-c | Perovskite | ZnO-np | Al",
                          "SLG | FTO | NiO-c | Perovskite | ZnO-np | C60 | Ag",
                          "SLG | FTO | NiO-c | SDSB | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-c | TiO2-c | Perovskite | Carbon",
                          "SLG | FTO | NiO-c | n-Butylamine | Perovskite | C60 | BCP | Ag",
                          "SLG | FTO | NiO-mp | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-mp | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | FTO | NiO-mp | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | FTO | NiO-nanowalls | Diethanolamine | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | FTO | NiO-nanowalls | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | FTO | NiO-np | Graphene oxide | Perovskite | GO-Li | TiO2-c | Al",
                          "SLG | FTO | NiO-np | Perovskite | C60 | bis-C60 | Ag",
                          "SLG | FTO | NiO-np | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | NiO-np | Perovskite | PCBM-60 | Au",
                          "SLG | FTO | NiO-np | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | NiO-np | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | NiO-np | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | FTO | Oxo-Graphene | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | FTO | P1-2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PANI | Perovskite | PCBM-60 | Au",
                          "SLG | FTO | PCBCB | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | PCBCB | Perovskite | Thiophene | Spiro-MeOTAD | Au",
                          "SLG | FTO | PCBM-60 | BCP | Perovskite | CuO | Ag",
                          "SLG | FTO | PCBM-60 | BCP | Perovskite | NiO-np | Ag",
                          "SLG | FTO | PCBM-60 | Carbon | Perovskite | PEDOT:PSS | Ag",
                          "SLG | FTO | PCBM-60 | Perovskite | CuPc | Carbon",
                          "SLG | FTO | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | FTO | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | PCBM-60-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | PCBM-60; TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | PEDOT | Perovskite | PCBM-60 | Au",
                          "SLG | FTO | PEDOT:PSS | CuSCN | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | NPB | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | PTAA | Perovskite | Me4NBr | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | 1,2-diaminoethane | C60 | BCP | Ag | Au",
                          "SLG | FTO | PEDOT:PSS | Perovskite | 2-HI-PVK | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | 4-HI-PVK | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | B-DIPBI | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | C60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | C60 | BCP | Ag | Au",
                          "SLG | FTO | PEDOT:PSS | Perovskite | C60 | BCP | Cu",
                          "SLG | FTO | PEDOT:PSS | Perovskite | Cytop | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | D-C60 | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | DMEC-60 | LiF | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | DMEC-70 | LiF | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | F8TBT | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | H-DIPBI | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | MABr | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | Me4NBr | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | Me4NI | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PC61BEH | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | Au",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | C3-CBL | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Ag | Au",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | Ca | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | Carbon | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | TIPD | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | TiO2 | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | TiO2 | BCP | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | TiO2-c | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60; F8TBT | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-60; PCDTBT | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-70 | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCBM-70 | LiF | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PCPDT-PDI | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PDBS-PDI | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PSe-PDI | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PT-PDI | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | PV-PDI | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | Ru(acac) | Au",
                          "SLG | FTO | PEDOT:PSS | Perovskite | ZnO-c | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskite | ZnO-np | Al",
                          "SLG | FTO | PEDOT:PSS | Perovskite | Zr(acac)4 | Au",
                          "SLG | FTO | PEDOT:PSS | Perovskte | PCBM-60 | Ag",
                          "SLG | FTO | PEDOT:PSS | Perovskte | PCBM-60 | Cr2O3 | Ag",
                          "SLG | FTO | PEDOT:PSS | TPA-NAP-TPA | Perovskite | PCBM-70 | Ag",
                          "SLG | FTO | PEDOT:PSS\uff5cPerovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEG; PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PEI | PCBM-60 | Perovskite | PTAA | Au",
                          "SLG | FTO | PEI | PCBM-60 | Perovskite | PTAA\uff5cAu",
                          "SLG | FTO | PTAA | CuGaO2-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PTAA | PFN | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PTAA | Perovskite | C60 | Ag",
                          "SLG | FTO | PTAA | Perovskite | C60 | BCP | Cu",
                          "SLG | FTO | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PTAA | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | PTAA | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | FTO | PTCA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | PTCBI | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | PTEG-1 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | PTO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | PTPD | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PbZrTiO3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Perovskite | Ag",
                          "SLG | FTO | Perovskite | Au",
                          "SLG | FTO | Perovskite | BCP | Au",
                          "SLG | FTO | Perovskite | Carbon",
                          "SLG | FTO | Perovskite | CuPc | Carbon",
                          "SLG | FTO | Perovskite | Graphene | Ag",
                          "SLG | FTO | Perovskite | HTM | Ag",
                          "SLG | FTO | Perovskite | KY7F22-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | Perovskite | Metal",
                          "SLG | FTO | Perovskite | P3HT | Ag",
                          "SLG | FTO | Perovskite | P3HT | Au",
                          "SLG | FTO | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | Perovskite | PCBM-60 | C60 | BCP | Cu",
                          "SLG | FTO | Perovskite | PCBM-60 | C60 | BCP | Cu | Au | BCP",
                          "SLG | FTO | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | FTO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | Perovskite | Spiro-MeOTAD | Al",
                          "SLG | FTO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Perovskite | Spiro-MeOTAD | CANP | Spiro-MeOTAD | Au",
                          "SLG | FTO | Poly-EDOT-C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | PolyTPD | PFN | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PolyTPD | Perovskite | C60 | BCP | Ag",
                          "SLG | FTO | PolyTPD | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | PyCEE | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2 | Perovskite | Spiro-MeOTAD | MoOx | Ag",
                          "SLG | FTO | SnO2 | Perovskite | Spiro-MeOTAD | MoOx | IAI",
                          "SLG | FTO | SnO2-QDs | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-QDs | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-QDs | Perovskite | Au@CdS | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-QDs | Perovskite | Carbon",
                          "SLG | FTO | SnO2-QDs | Perovskite | CsBiBr3-QDs | Carbon",
                          "SLG | FTO | SnO2-QDs | Perovskite | CsCuBr3-QDs | Carbon",
                          "SLG | FTO | SnO2-QDs | Perovskite | CsSnBr3-QDs | Carbon",
                          "SLG | FTO | SnO2-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | 1\u2010butyl\u20103\u2010methylimidazolium bromide | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | 3-(1-pyridinio)-1-propanesulfonate | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | 3-(1-pyridinio)-1-propanesulfonate | Perovskite | asy-PBTBDT | Au",
                          "SLG | FTO | SnO2-c | APTES-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Al2O3-mp | NiO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | BMIMBF4 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | C60 | Perovskite | N4,N4'-(4,10-dimethyl-6H,12H-5,11-methanodibenzo[b,f][1,5]diazocine-2,8-diyl)bis(N4,N4',N4'-tris(4-methoxyphenyl)-[1,1'-biphenyl]-4,4'-diamine) | Ag",
                          "SLG | FTO | SnO2-c | C60 | Perovskite | PMMA | DTPC8-ThDTPA | Au",
                          "SLG | FTO | SnO2-c | C60 | Perovskite | PMMA | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | C60 | Perovskite | TRUX-E-T | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | CZ-STA | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | CZ-STA; CZ-TA | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | CZ-TA | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | PMMA | DTP-C6Th | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | PMMA | DTPC13-ThTPA | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | PMMA | DTPC8-ThTPA | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | PMMA | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | MoOx | ITO",
                          "SLG | FTO | SnO2-c | C60-SAM | Perovskite | TET | Au",
                          "SLG | FTO | SnO2-c | Carbon-QDs | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | Cs2SnO4 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Graphene | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | KCl | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | CuMe2Pc | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | CuMe32c | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | CuPc | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | FBT-TH4 | CuxO | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | IDT-TPA | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | IDTC4-TPA | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | IDTC6-TPA | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | IDTT-TPA | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | M111 | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | M112 | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | M113 | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | M114 | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | PTAA | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | PTZ-TPA | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | PbS | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | PdMe2Pc | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | PbS | Au",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | XDB | MoO3 | Ag",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | XMP | MoO3 | Ag",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | XOP | MoO3 | Ag",
                          "SLG | FTO | SnO2-c | PCBM-60 | Perovskite | XPP | MoO3 | Ag",
                          "SLG | FTO | SnO2-c | PCBM-60; PMMA | Perovskite | PMMA | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | PMMA | Perovskite | PMMA | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovsite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | 1\u2010adamantylamine hydrochloride | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | 2,7-Bis(4,4\u2032-dimethoxydiphenylamine)-9- (bis(methylsulfanyl)methylene)fluorene | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Alkoxy-PTEG | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Carbon",
                          "SLG | FTO | SnO2-c | Perovskite | Carbon | CuSCN",
                          "SLG | FTO | SnO2-c | Perovskite | Choline chloride | Spiro-MeOTAD | SWCNTs | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuBuPc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuEtPc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuHePc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuMePc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuMePy | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuPc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuPc | Carbon",
                          "SLG | FTO | SnO2-c | Perovskite | CuPrPc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuSCN | Au",
                          "SLG | FTO | SnO2-c | Perovskite | CuSCN | Carbon",
                          "SLG | FTO | SnO2-c | Perovskite | EVA; MWCNTs | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | EVA; SWCNTs | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | H6Bu-ZnPc | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | HMe2Pc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | HOFP | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | ME6Bu-ZnPc | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | Mo(tfd-COCF3)3 | SWCNTs | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | N,N-bis-[7-(4,4\u2032-dimethoxydiphenylamine)-9- (bis(methylsulfanyl)methylene)fluoren-2-yl]-4-methoxyaniline | Au",
                          "SLG | FTO | SnO2-c | Perovskite | N-CuMe2Pc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | N-CuMe2Pc; P3HT | Au",
                          "SLG | FTO | SnO2-c | Perovskite | NP-SC6-TiOPc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | NiO-c | Ni",
                          "SLG | FTO | SnO2-c | Perovskite | Ome-DPA-CuPc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Ome-TPA-CuPc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | P-OR | Au",
                          "SLG | FTO | SnO2-c | Perovskite | P-R | Au",
                          "SLG | FTO | SnO2-c | Perovskite | P-SC6-TiOPc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | P1C1 | Au",
                          "SLG | FTO | SnO2-c | Perovskite | P3HT | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | P3HT | Au",
                          "SLG | FTO | SnO2-c | Perovskite | P3HT | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | P3HT; SWCNTs | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | PBDTP-DTDPP | Au",
                          "SLG | FTO | SnO2-c | Perovskite | PTAA | Au",
                          "SLG | FTO | SnO2-c | Perovskite | PTEG | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | PdMePy | Au",
                          "SLG | FTO | SnO2-c | Perovskite | PtMePy | Au",
                          "SLG | FTO | SnO2-c | Perovskite | RCP | Au",
                          "SLG | FTO | SnO2-c | Perovskite | RE-ZnBu4Pc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | SM09 | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | SWCNTs | PMMA | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | SWCNTs | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | SWCNTs | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Ag | ITO",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Carbon",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Carbon | Al",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Carbon | Graphite",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Cu",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Cu1.75S | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | FTO | SLG",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | MoO2 | ITO",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | P3HT | FTO | SLG",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | PDPP4T | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS | FTO | SLG",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | PTAA | FTO | SLG",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Rubrene | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | SWCNTs | Au",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | TL- PEDOT:PSS | FTO | SLG",
                          "SLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD:P3HT | Au",
                          "SLG | FTO | SnO2-c | Perovskite | TAT-t BuSTy | Au",
                          "SLG | FTO | SnO2-c | Perovskite | V1050 | Au",
                          "SLG | FTO | SnO2-c | Perovskite | V1061 | Au",
                          "SLG | FTO | SnO2-c | Perovskite | WO3 | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | Perovskite | ZnBu4Pc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | ZnMe2Pc | Au",
                          "SLG | FTO | SnO2-c | Perovskite | asy-PBTBDT | Au",
                          "SLG | FTO | SnO2-c | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | SnO2-c | Perovskite | V1056 | Au",
                          "SLG | FTO | SnO2-c | SnO2-c | Perovskite | V1091 | Au",
                          "SLG | FTO | SnO2-c | SnO2-c | Perovskite | V1102 | Au",
                          "SLG | FTO | SnO2-c | SnO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | SnO2-mp | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | SnO2-np | Perovskite | Spiro-MeOTAD | Al2O3-c | Au",
                          "SLG | FTO | SnO2-c | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | SnO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | SnO2-nw | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | TiO2-c | Perovskite | CuPc | Carbon",
                          "SLG | FTO | SnO2-c | TiO2-c | Perovskite | PTAA | Au",
                          "SLG | FTO | SnO2-c | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | TiO2-mp | PbI2 | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | SnO2-c | TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-mp | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-n | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-nanosheets | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-nanosheets | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-nanospheres | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | APTES-SAM | Perovskite | PTAA | Au",
                          "SLG | FTO | SnO2-np | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | C60 | Perovskite | V950 | Au",
                          "SLG | FTO | SnO2-np | CPTA | Perovskite | P3CT | Au",
                          "SLG | FTO | SnO2-np | CPTA | Perovskite | PTAA | Au",
                          "SLG | FTO | SnO2-np | CPTA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Choline Chloride | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Ethanol amine | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Graphene-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | OTES:APTES-SAM | Perovskite | PTAA | Au",
                          "SLG | FTO | SnO2-np | PCBM-60 | Perovskite | M107 | Au",
                          "SLG | FTO | SnO2-np | PCBM-60 | Perovskite | M108 | Au",
                          "SLG | FTO | SnO2-np | PCBM-60 | Perovskite | M109 | Au",
                          "SLG | FTO | SnO2-np | PCBM-60 | Perovskite | M110 | Au",
                          "SLG | FTO | SnO2-np | PCBM-60 | Perovskite | Selenium | Au",
                          "SLG | FTO | SnO2-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | PCBM-60 | Perovskite | X25 | Au",
                          "SLG | FTO | SnO2-np | PFN-Br | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Perovskite | CZTS | Carbon",
                          "SLG | FTO | SnO2-np | Perovskite | Carbon",
                          "SLG | FTO | SnO2-np | Perovskite | CsPbBr3-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Perovskite | Cu3SbS4-np | Au",
                          "SLG | FTO | SnO2-np | Perovskite | Cz-OMeTAD | Au",
                          "SLG | FTO | SnO2-np | Perovskite | EH44 | MoO3 | Al",
                          "SLG | FTO | SnO2-np | Perovskite | Hexamethyl-substituted subphthalocyanine | Au",
                          "SLG | FTO | SnO2-np | Perovskite | NiO-c | FTO",
                          "SLG | FTO | SnO2-np | Perovskite | PABA | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Perovskite | PBDT(2F)T | Ag",
                          "SLG | FTO | SnO2-np | Perovskite | PBDT(2H)T | Ag",
                          "SLG | FTO | SnO2-np | Perovskite | PBDT(T)(2F)T | Ag",
                          "SLG | FTO | SnO2-np | Perovskite | PTAA | Au",
                          "SLG | FTO | SnO2-np | Perovskite | PTAA | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | Carbon black",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | Graphen",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | Graphene | PEDOT",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | Graphite",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | PEDOT:PSS | PDMS",
                          "SLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | PEDOT:PSS | PEDOT:PSS | PDMS",
                          "SLG | FTO | SnO2-np | Preovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | Sinapoyl malate | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | TiO2-c | Perovskite | Carbon",
                          "SLG | FTO | SnO2-np | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np; TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-np; TiO2-np; MXene | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-nt | Perovskite | P3HT | Au",
                          "SLG | FTO | SnO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-nw | SnO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnO2-nw | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SnS2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SrGeO3 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | SrSnO3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SrTiO3 | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SrTiO3 | Graphene; Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SrTiO3 | TiO2-mp | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SrTiO3 | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | SrTiO3-c | SrTiO3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TCl-PDI | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | FTO | TMAH | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2 | Perovskite | MEH-PPV | Carbon",
                          "SLG | FTO | TiO2-3D | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-a | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-a | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-bulk | Perovskite | Spiro-MeOTAD | Graphite",
                          "SLG | FTO | TiO2-c | (3-Aminopropyl)trimethoxysilane | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | 1-OMe-SAM | Perovskite | P3HT | MoO3 | Au",
                          "SLG | FTO | TiO2-c | 2-OMe-SAM | Perovskite | P3HT | MoO3 | Au",
                          "SLG | FTO | TiO2-c | 2-PA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | 3-OMe-SAM | Perovskite | P3HT | MoO3 | Au",
                          "SLG | FTO | TiO2-c | 3-PA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | AAO | Perovskite | MoOx | ITO",
                          "SLG | FTO | TiO2-c | AAO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Ag-np | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Ag@TiO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | AgInS2-QDs; TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Al2O3-c | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | Al2O3-c | TiO2-mp | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | NiO-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | Al2O3-mp | NiO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | AS44 | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Al2O3-mp | Me2N-DATPA | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Al2O3-mp | MeO-DATPA | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Al2O3-mp | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Au-np; NiO",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | CBP | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | EH44 | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | IPFB | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | P3HT | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | P3HT | SWCNTs | PMMA | Cu",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | P3HT; SWCNTs | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | P3HT; SWCNTs | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | P3HT; SWCNTs; Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | PCBM-60 | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | PDI | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | PEDOT | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | SWCNTs | PMMA | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | PEDOT:PSS | PEDOT:PSS:PSA",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | TPD | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | TTB-TTQ | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Perovskite | Th-PDI | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp | Pervskite | CuSCN | Au",
                          "SLG | FTO | TiO2-c | Al2O3-mp; Ag@TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Al2O3-nt | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Al2O3-nt | Perovskite | Spiro-MeOTAD | MoOx | ITO",
                          "SLG | FTO | TiO2-c | Alq3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Au-np | Perovskite | P3HT | Ag",
                          "SLG | FTO | TiO2-c | Au-np; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Au@Ag-np | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Au@SiO2-np; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Au@SiO2-nw; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Au@TiO2-np; TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | BZnTPP | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Ba(La)SnO3 | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | Ba0.5Sr0.5SnO3-np | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | Ba0.8Sr0.2SnO3-np | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | Ba0.9Sr0.1SnO3-np | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | BaSnO3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | BaSnO3-np | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | C60 | Perovskite | Crosslinked TCTA-BVP | Ag",
                          "SLG | FTO | TiO2-c | C60 | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | C60 | Perovskite | TCTA-BVP | Ag",
                          "SLG | FTO | TiO2-c | C60-BCT | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | C60-BCT-Au-NP | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | C60-ETA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | C60-NH2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | C60-SAM | Perovskite | HTM3 | Ag",
                          "SLG | FTO | TiO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | CO2CO3 | Perovskite | PolyTPD | Au",
                          "SLG | FTO | TiO2-c | CSOE | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Carbon-nt; TiO2-mp | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | CdS | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | CeO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | CoCr | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | CsAc | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | CsBr | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | CsCl | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | CsPbBr3-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | CsPbCl3-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | CsPbI3-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | CuI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | D35 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Dimethylbiguanide | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Graphene | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Graphene-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Graphene-np; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Graphene; SrTiO3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Graphite-nf | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Graphydine-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | H3PW12O4; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Heparin-Na | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ITIC | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | KH550 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | KH560 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | KH570 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | KY7F22-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | MCA | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | MPMIC60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | MgO | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | MgO | TiO2-mp | ZrO2-mp | NiO-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | MgO | TiO2-nw | Perovskite | Spiro-MeOTAD | AgAl",
                          "SLG | FTO | TiO2-c | MoOx | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | NaYF4-np; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | NaYF4:Yb:Er-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | NaYF4:Yb:Er-np; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | NaYF4:Yb:Tm-np | Perovskite | NaYF4:Yb:Tm-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | NaYF4:Yb:Tm-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | NiO-np | Perovskite | NiO-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | NiO-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | OTS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | OTS | Perovskite | Spiro-MeOTAD | Ni-grid",
                          "SLG | FTO | TiO2-c | PCBA | Perobskite | Hexakis[4-(N,N-di-p-methoxyphenylamino)phenyl]benzene | Ag",
                          "SLG | FTO | TiO2-c | PCBA | Perobskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | PCBA | Perovskite | Au",
                          "SLG | FTO | TiO2-c | PCBA | Perovskite | DTB | Au",
                          "SLG | FTO | TiO2-c | PCBA | Perovskite | P1 | Au",
                          "SLG | FTO | TiO2-c | PCBA | Perovskite | P2 | Au",
                          "SLG | FTO | TiO2-c | PCBA | Perovskite | P3 | Au",
                          "SLG | FTO | TiO2-c | PCBA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PCBA | Perovskite | Spiro-OMeOTAD | Ag",
                          "SLG | FTO | TiO2-c | PCBDAN | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | C60-ETA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | C60-SAM | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | PCBM-60 | PbI2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perosvkite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | ACR-TPA | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | COTT-1 | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | COTT-1 | COTT-2 | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | COTT-2 | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | CzP | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | CzPF | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | P3HT | WO3 | Ag",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | PCDTBT1 | MoO3 | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | PDPPT-TT | Ag",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | PTAA\uff5cAu",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | PCBM-60 | Perovskite | V997 | Au",
                          "SLG | FTO | TiO2-c | PCBSD | Perovskite | HFB-OMeDPA | Au",
                          "SLG | FTO | TiO2-c | PCBSD | Perovskite | HPB-OMeDPA | Au",
                          "SLG | FTO | TiO2-c | PCBSD | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PCBSD:GD | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PEO | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | PS | Perovskite | PTAA | PEDOT:PSS | ITO | SLG",
                          "SLG | FTO | TiO2-c | PS:TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perosvkite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 0F | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 2,4-spiro | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 2,5\u2010bis(4,4\u2032\u2010bis(methoxyphenyl)aminophen\u20104\u2032\u2032\u2010yl)\u20103,4\u2010ethylenedioxythiophene | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 2D-PT | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 2F | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 2mF-X59 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 3,4-spiro | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 3-Butylthiophene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 3-Dodecylthiophene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 3-Ethylthiophene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 3-Hexylthiophene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 3-Methylthiophene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 3-hydroxypyridine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | 5,5',5''-(5,5',5''-(nitrilotris(benzene-4,1-diyl))tris(furan-5,2-diyl))tris(2-octylisoindoline-1,3-dione) | MoOx | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | 9,9'-([1,2,5]thiadiazolo[3,4-c]pyridine-4,7-diylbis(4,1- phenylene))bis(N3,N3,N6,N6-tetrakis(4-methoxyphenyl)-9H-carbazole-3,6-diamine) | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Al2O3 | CuPc(tBu)4 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Al2O3-c | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Aniline | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Au-np; P3HT | Au",
                          "SLG | FTO | TiO2-c | Perovskite | BDT-C1 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | BP | CuSCN | Au",
                          "SLG | FTO | TiO2-c | Perovskite | BP-DC | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | BTT(DPP)3-C8 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | BTT(DPP)3-EH | Au",
                          "SLG | FTO | TiO2-c | Perovskite | BTT(DPP-Th)3-EH | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Benzylamine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | C101 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | C102 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | C201 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | C60 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CBP | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CGS | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CIGS-np | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CMO | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CMP | Au",
                          "SLG | FTO | TiO2-c | Perovskite | COPV1 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | COPV2 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | COPV3 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | COPV4 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | COPV5 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | COPV6 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | COPV7 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CTZS | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CZTS | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | Perovskite | Carbon black",
                          "SLG | FTO | TiO2-c | Perovskite | Carbon-QDs | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Carbon-nanowalls",
                          "SLG | FTO | TiO2-c | Perovskite | Cu12Sb4S13 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Cu2CoSn4-np | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Cu2MnSn4-np | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Cu2NiSn4-np | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Cu2ZnSn4-np | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Cu2ZnSnS4 | Al",
                          "SLG | FTO | TiO2-c | Perovskite | CuGaO2 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuI | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuI | Graphite",
                          "SLG | FTO | TiO2-c | Perovskite | CuO2 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuPc | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuPc | Carbon",
                          "SLG | FTO | TiO2-c | Perovskite | CuPc | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuPc(tBu)4 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuSCN | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | CuSCN | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuSCN | Graphene | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuSCN | Graphite | Cu-tape",
                          "SLG | FTO | TiO2-c | Perovskite | CuSCN | ITO",
                          "SLG | FTO | TiO2-c | Perovskite | CuSCN | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | CuSeCN | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DCZ-OMeTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | DCZ-OMeTPA | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | DFBT(DTS-FBTTh2)2 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DIP-C6 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DIQ-C12 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DIQ-C6 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DR3T | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DR3TBDTT | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DR3TBDTT; PDMS | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DTS | Au",
                          "SLG | FTO | TiO2-c | Perovskite | DTS(IIThThHEX)2 | MoOx | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Diazo-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Dispiro-OMeTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | EDOT-MPH | Au",
                          "SLG | FTO | TiO2-c | Perovskite | EDOT-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | F16CuPc | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | F22 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | F33 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | F4-TCNQ | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Florinated polymer | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Fu-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Graphene",
                          "SLG | FTO | TiO2-c | Perovskite | Graphite",
                          "SLG | FTO | TiO2-c | Perovskite | H-PheDOT | Au",
                          "SLG | FTO | TiO2-c | Perovskite | H101 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | HTM | Au",
                          "SLG | FTO | TiO2-c | Perovskite | HTM | Metal",
                          "SLG | FTO | TiO2-c | Perovskite | I2; LiI; Methoxypropionitrile | Pt | FTO",
                          "SLG | FTO | TiO2-c | Perovskite | IEICO | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | IEICO-4F | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | IEICO; PBDTTT-E-T | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | ITIC | Au",
                          "SLG | FTO | TiO2-c | Perovskite | InP-np | Au",
                          "SLG | FTO | TiO2-c | Perovskite | InP-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | JY5 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | JY5 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | JY6 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | JY7 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | KY7F22-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | MEH-PPV | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | MEH-PPV | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | MWCNTs",
                          "SLG | FTO | TiO2-c | Perovskite | MWCNTs; Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | MeO-PheDOT | Au",
                          "SLG | FTO | TiO2-c | Perovskite | MeO-TPD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | MeOAc-Spiro-OMeTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | MoO2-np | Au",
                          "SLG | FTO | TiO2-c | Perovskite | MoO3 | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | NaYF4:Yb:Tm-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | NiCoO | Al | Al203",
                          "SLG | FTO | TiO2-c | Perovskite | NiO | Au",
                          "SLG | FTO | TiO2-c | Perovskite | NiO-c | Ni",
                          "SLG | FTO | TiO2-c | Perovskite | NiO-np | Au",
                          "SLG | FTO | TiO2-c | Perovskite | NiO-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | NiO@C",
                          "SLG | FTO | TiO2-c | Perovskite | NiPc | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Oleylamine | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Oleylmine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | P | Au",
                          "SLG | FTO | TiO2-c | Perovskite | P(VDF-TrFE) | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | Au | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | Cu",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | Graphite",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | MoO3 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | PEDOT:PSS | ITO",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT:Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT; SWCNTs | PEDOT:PSS | Ni-grid",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT; Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | P3HT; Spiro-MeOTAD | Au | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PBDTTT-CT | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PBDTTT-E-T | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PBTTTV-h | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PCBM-60 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PCBM-60 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PCE-10 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PCP-TPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PCPD2FBT:BCF | PEDOT:PSS | ITO | SLG",
                          "SLG | FTO | TiO2-c | Perovskite | PDMS | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PEDOT:PSS | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PEG | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PHPT-py | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PIDT-DFBT | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PIF8-TAA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PMMA | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PO-Spiro | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PPDI | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PPDT2FBT | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PT-DC | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PT3HT | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PTAA | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PTAA | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PTAA | MoOx | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PTAA | PEDOT:PSS | ITO",
                          "SLG | FTO | TiO2-c | Perovskite | PTAA | Pd",
                          "SLG | FTO | TiO2-c | Perovskite | PTAA | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PTB7 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PTB7-Th | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PTB7:Th | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PTZ2 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PVK | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | PVP | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PbS-QDs | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PbS-QDs | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Ph-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Ph-inv-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Phenethylamine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Poly-N-vinylcarbazole | SP-11 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Poly-N-vinylcarbazole | SP-12 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Poly-N-vinylcarbazole | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PolyTPD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | PolyTPD | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Pyridine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | SAF-5 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | SCZF-5 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | SP-01 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | SP-02 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | SP-11 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | SP-12 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | SWCNTs",
                          "SLG | FTO | TiO2-c | Perovskite | SWCNTs | PEDOT:PSS | Ni-grid",
                          "SLG | FTO | TiO2-c | Perovskite | SWCNTs | PMMA",
                          "SLG | FTO | TiO2-c | Perovskite | SWCNTs | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | SWCNTs | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag | ITO",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag | Ni",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag-nw",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | AgAl",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Al",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Al2O3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au | Ag-nw",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au | FTO",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au | Ni",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Carbon | FTO",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Carbon | FTO | SLG",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Cr | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Graphene",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Graphene | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MWCNTs; Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MnOx | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Au | MoO3",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Ag | Mox",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Au | Cu | MoOx",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Au | MoOx",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Cu | MoOx",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | ITO",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ni",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ni-grid",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | NiO | Ag | NiO",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | P3HT; SWCNTs | PEDOT:PSS | Ni-grid",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS | Graphene",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS | Graphene | PMMA | PDMS",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Pb",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Pt",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | TS-CuPc | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD-F | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD-I | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-MeTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-PT-OMeTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Spiro-tBuBED | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | T30P | Au",
                          "SLG | FTO | TiO2-c | Perovskite | T40P | Au",
                          "SLG | FTO | TiO2-c | Perovskite | T60P | Au",
                          "SLG | FTO | TiO2-c | Perovskite | T80P | Au",
                          "SLG | FTO | TiO2-c | Perovskite | TAE1 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | TAE3 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | TAE4 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | TFB | Au",
                          "SLG | FTO | TiO2-c | Perovskite | TPA-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | TPDCN | Au",
                          "SLG | FTO | TiO2-c | Perovskite | TPE-4DPA | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | TPE-NMe | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | TPE-Nme | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | TPE-W1 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | TPE-W2 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | TPE-W4 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | TPFPB | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | TTz-1 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Th-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Th-PDI | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Thiophene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | V885 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | V886 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | V911 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | WO3 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | X51 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | X59 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Yih-1 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | Yih-2 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | ZnPc | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Perovskite | [Fe(bpyPY4)](OTf)2.5 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | di-TPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | dly-1 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | dly-2 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | p-DTS(FBTTh2)2 | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | p-DTS(FBTTh2)2 | MoOx | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | pBBTa\u2010BDT1 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | pBBTa\u2010BDT2 | Au",
                          "SLG | FTO | TiO2-c | Perovskite | pPh-2MODPACz | Au",
                          "SLG | FTO | TiO2-c | Perovskite | pm-TPE-4DPA | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | po-TPE-4DPA | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | pp-TPE-4DPA | Ag",
                          "SLG | FTO | TiO2-c | Perovskite | rGO | FTO | SLG",
                          "SLG | FTO | TiO2-c | Perovskite | tetra-TPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | tri-TPA | Au",
                          "SLG | FTO | TiO2-c | Perovskite | tris(4-(5-hexylthiophen-2-yl)phenyl)amine | MoOx | Ag",
                          "SLG | FTO | TiO2-c | Perovskite-QDs | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Polystyrene-ns | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SAED | Perovskite | ZnPc | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | STHNP | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SWCNTs; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Si-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiO2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiO2-IO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | SiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | SiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiO2-nanocolumns | TiO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiO2-np | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiO2-np | TiO2-c | SiO2-np | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiO2-np | TiO2-c | SiO2-np | TiO2-c | SiO2-np | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiO2-np; TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SiW11O39-POM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SnO2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SnO2-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SnO2-c | Perovskite | CuPc | Carbon",
                          "SLG | FTO | TiO2-c | SnO2-c | Perovskite | Graphene; P3HT | Carbon",
                          "SLG | FTO | TiO2-c | SnO2-c | Perovskite | P3HT | Carbon",
                          "SLG | FTO | TiO2-c | SnO2-c | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | SnO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SnO2-c | SnO2-np | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | SnO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | SnO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | SnO2-mp | Perovskite | P1 | Au",
                          "SLG | FTO | TiO2-c | SnO2-mp | Perovskite | P2 | Au",
                          "SLG | FTO | TiO2-c | SnO2-mp | Perovskite | P3 | Au",
                          "SLG | FTO | TiO2-c | SnO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SnO2-nanosheets | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SnO2-np | BSO-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SnO2-np | Perovskite | PDO1 | Au",
                          "SLG | FTO | TiO2-c | SnO2-np | Perovskite | PDO2 | Au",
                          "SLG | FTO | TiO2-c | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SnO2-np | Perovskite | Spiro-MeOTAD | Carbon | FTO",
                          "SLG | FTO | TiO2-c | SnO2@TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Sr2CeO4:Eu | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Sr2CeO4:Sm | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SrTiO3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | SrTiO3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | SrTiO3-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | SrTiO3-np; TiO2-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | Thiourea | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiBaO-nanosphere | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-IO | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-IO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-c | Perovskite | Au",
                          "SLG | FTO | TiO2-c | TiO2-c | Perovskite | Cu2O | Au",
                          "SLG | FTO | TiO2-c | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-helices | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-hollow spheres; TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | 3-aminopropanoic acid-SAM | Perovskite | P3HT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | 4-Aminobenzoic acid | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | 4-Aminobutyric acid | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | 4-aminobenzoic acid-SAM | Perovskite | P3HT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | 4Pa-SAM | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | 5-aminovaleric acid | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-c | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-c | Perovskite | Ethyl acetate; I2; LiI; NMBI; Urea | Pt | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-c | Perovskite | Spiro-MeOTAD | Ag | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-c | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | NiO | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | NiO-mp | Perovskite",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | NiO-mp | Perovskite | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | NiO-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | NiO-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | AgAu-mp",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Au-np; NiO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Carbon black; Graphite",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Carbon black; Graphite | MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Carbon-nt",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Carbon; WO2-np",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Carbon; WO3-np",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Graphite ribbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | H:MoO3-nanobelts",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | NiO-mp | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | NiO-mp | SWNCTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | Perovskite | Spiro-MeOTAD | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-mp | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Au | MoOx",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-np | Perovskite | B-MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Al2O3-np | Perovskite | MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Aminocaproic acid | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Aminocaproic acid; Caproic acid | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Au-np | MgO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Au-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Au@Ag-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Au@SiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | B2Pin2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | BaTiO3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Bacteriorhodopsin | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | C60 | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | C60-SAM | Perovskite | P3HT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | C60-SAM | Perovskite | PCPDTBT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | C60-SAM | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | CBA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | CO2CO3 | Perovskite | PolyTPD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | CaTiO3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | CaTiO3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Carbon-QDs | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Carbon-QDs | Perovskite | Carbon | Perovskite | Carbon-QDs | TiO2-mp | TiO2-c | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Carbon-QDs | Perovskite | Carbon-QDs | Carbon | Carbon-QDs | Perovskite | Carbon-QDs | TiO2-mp | TiO2-c | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Carbon-QDs | Perovskite | Phosphor-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Carbon-QDs | Perovskite | Red Phosphorous-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Carbon-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Carbon-np:Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Carpoic acid | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | CdS | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | CdSe-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Cs2CO3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | CsI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | D149 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | D149 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | D205 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | ETPM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | GABAHI | Perovskite | Spiro-MeOTAD | Ag | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Glycine | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Graphen Oxide | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Graphene | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Graphene-QDs | Perovskite | CISZ-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Graphene-QDs | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Graphene-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | HOOC-C11H22-SH | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | HOOC-Ph-SH | Perovskite | Pentafluorobenzenethiol | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | HOOC-Ph-SH | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | In2O3 | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | L-alanine | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | La2O3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Li-GO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | MAI | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | MBA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | MPTS-SAM | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | MXene | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | MgO | Perovskite | Montmorillonite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | MgO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | MgO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | N719 | Perovskite | Pt | SLG | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | NBA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | NH4I | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | NaPTH | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | NaYF2@SiO2-np | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | NiO-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PABA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60 | Perovskite | Co-porphyrin | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60 | Perovskite | Spiro-MeOTAD | ITO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60 | Perovskite | Spiro-MeOTAD | ITO | MgF2",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60 | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60; PMMA | BAI | Perovskite | BAI | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60; PMMA | Perovskite | PDPP-3T | MoOx | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60; PMMA | Perovskite | PMMA | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60; PMMA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60; PS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60; PTAA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PCBM-60; Poly(N-vinylcarbazole) | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PTDPQ | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | PbI2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PbI2 | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | PbS-QDs | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | PbS-QDs | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | PbSe | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | PbTiO3 | Perovskite | Carbon-nt",
                          "SLG | FTO | TiO2-c | TiO2-mp | PcM-Cou | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (1,6-di{3-[2-(4- methylphenyl)vinyl]carbazol-9-yl}hexane | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (10-butyl-3,7-diphenylphenoxazine) | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (2Z,2'Z)-2,2'-(((2,4-dimethylphenyl) azanediyl) bis([1,1'-biphenyl]-4',4-diyl)) bis(3-(4-(diphenylamino) phenyl) acrylonitrile | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (2Z,2'Z)-2,2'-((10-(2-ethylhexyl)-10H-phenothiazine-3,7-diyl) bis(4,1- phenylene)) bis(3-(4-(diphenylamino) phenyl) acrylonitrile | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (BMPA-EDOT)3-TPA | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (CH3)3SPbI3 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (OctPhO)8CuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (OctPhO)8ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | (n-BuO)4ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1,2-Bis[3,6-(4,4`-dimethoxydiphenylamino)-9H-carbazol-9-methyl]benzene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1,3,6,8-tetrakis-(N,N-di-p-methoxyphenylamine)pyrene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1,3-disubstituted azulene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1-(N,N-di-p-methoxyphenylamine)pyrene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1-Donecyl Mercaptan | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1a | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1b | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1c | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1d | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 1\u2010adamantylamine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2,2'-[(4,5-Bis(2-ethylhexyl)-dithieno[2,3-d:2',3'-d']thieno[3,2-b:4,5-b']dipyrrole-2,7-diyl)-bis(3-hexylthien-5,5'-diyl)bis(methane-1-yl-1-ylidine)]dimalononitrile | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2,2'-[(4,5-Bis(2-ethylhexyl)-dithieno[2,3-d:2',3'-d']thieno[3,2-b:4,5-b']dipyrrole-2,7-diyl)-bis(4,3'-dihexyl-2,2'-bithien-5,5'-diyl)bis(methane-1-yl-1-ylidine)]dimalononitrile | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2,7 BCz-OMeTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2,7-Ben | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2,7-Cbz-EDOT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2,7-Pyr | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2,8-bis-[2,2-bis(4-methoxyphenyl)ethenyl]-5,11-diethyl-5,11-dihidroindolo[3,2-b]carbazole | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2-((2-(4-(2-ethylhexyl)-4H-dithieno[3,2-b:2\u2032,3\u2032-d]pyrrol-2-yl) thiazol-5-yl)methylene) malononitrile | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2-((5-(4-(2-ethylhexyl)-4H-dithieno[3,2-b:2\u2032,3\u2032-d]pyrrol-2-yl) thiophen-2-yl)methylene) malononitrile | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2FBTA-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2FBTA-2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2H-MoS2 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2TPA-1-DP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2TPA-2-DP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2TPA-3-DP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 2TPA-4-DP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,3'-(2,7-bis(bis(4-methoxyphenyl)amino)-9H-fluorene-9,9-diyl)bis(N-ethyl-N,N- dimethylpropan-1-aminium) bis(trifluoromethanesulfonyl)imide | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,3\u2032,5,5\u2032-tetrasubstituted 1,1\u2032-biphenyl | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,6 BCz-OMeTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,6-Ben | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,6-Cbz-EDOT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,6-Pyr | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,6-cbz-EDOT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,6-tris-(N,N-di-p-methoxyphenylamine)pyrene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,6Cz-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 3,8,13-tris[2,2-bis(4-methoxyphenyl)ethenyl]-5,10,15-triethyl-10,15-dihydro-5H-indolo-[3,2-a:3\u2032,2\u2032-c]carbazole | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 4,4\u2032-(9-Methyl-9H-naphtho[2,1-c]carbazole-2,12-diyl)bis(N,N-bis(4-methoxyphenyl)aniline) | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 4,8-bis-\n(5-bromothiophene-2-yl)-benzo thiadiazole | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 4-(2-(4-(Bis(4-(hexyloxy)phenyl)methyl)phenyl)-9-methyl-9H-naphtho[2,1-c]carbazol-12-yl)-N,N-bis(4-(hexyloxy)phenyl)aniline | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 4-(4-Phenyl-4-alfa-naphthylbutadienyl)-N,N-di(4-tolyl)-phenylamine | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 4-(4-phenyl-4-alfa-naphthylbutadienyl)-N,N-di(4-methoxyphenyl)-phenylamine | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 4b | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 5,7-disubstituted azulene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 9,9-bis(3-(dimethylamino)propyl)-N2,N2,N7,N7-tetrakis(4-methoxyphenyl)-9H-fluorene- 2,7-diamine | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | 9,9\u2019-di{6-[3-(2-(4-methylphenyl)vinyl)-9-carbazol9-yl]hexyl}-[3,3\u2019]bicarbazole) | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | A101 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | A102 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ACE-QA-ACE | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ACE\u2010ANT\u2010ACE | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ADAHI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | AIGS-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | AQ | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | AQ310 | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | AS37 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ATT-OBu | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ATT-ODec | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ATT-OHex | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ATT-OMe | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | AV-Carbon; MAI",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | AZ1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | AZ2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Acetonitrile; B2; LiBr | Pt | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Adamantane | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ag-nw | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ag-sheet",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ag@SnO2-nw | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | AgAu-mp",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Al2O3 | CuSCN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Al2O3 | Ethyl acetate; I2; LiI; NMBI; Urea | Pt | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Al2O3 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Al2O3 | Sym-HTPCH | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Al2O3-c | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Al2O3-np | CuBuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Al2O3-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Asy-PBTBDT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Azomethine | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Azu-Bu | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Azu-EH | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Azu-Hex | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Azu-Me | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Azu-Oct | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B-MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B186 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B58 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B63 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B74 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BAI | DM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BChl-1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BChl-2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BChl-3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BDT-2D | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BDT-4D | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BDT-4MeOTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BDT0FMeDPA | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BDT:TT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BDTT:DPPD:TT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BEDCE | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BEDN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BF002 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BF003 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BI25 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BL07 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BL08 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BPZTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BT-BTH | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BT41 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTBDT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTDTP | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTF-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTP-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTPA-3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTPA-4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTPA-5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTPA-6 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTSe-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-Me | Au | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-OMe | Au | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTT-TPA | Au | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTTP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BTTP-CN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | B[BMPDP]2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Bi2Te3 | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Bis-amide-TTF | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Black phosphorous nanosheets | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Black phosphorous nanosheets | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BuO-DATPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | BzTA | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | C12-carbazole | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | C12-silane-SAM | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | C13-FAS | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | C5PcH2 | MoOx | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | C6TBPH2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CAS | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CBP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CDTh 1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CDTh-EtHex 2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CIGGSe-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CJ-01 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CJ-02 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CS01 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CS03 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CT1 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CT2 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CT3 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CT4 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CW3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CW4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CW5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CZTS-QDs | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CZTS0.25Se0.75; rGO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CZTS0.5Se0.5; rGO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CZTS; rGO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CZTSSe; rGO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CZTSe-QDs | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Cabon | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Candle soot | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbazole-based HTM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon Black | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon Paper",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon black; Carbon-nt; Graphite",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon black; Graphite",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon black; MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | Al",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | Carbon | Al",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | CsAc",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | FAAc",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | Graphite",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | IPA",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | KAc",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | MAAc",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | PANI | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | Perovskite | TiO2-mp | TiO2-c | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | Silica-gel-electrolyte | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon | Sn",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon-QDs | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon-epoxy | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon-nt",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon-nt | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon-nt | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon-nt | PMMA",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon-nt | PMMA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon-nt; P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon; Graphite; PANI",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon; MAI | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon; NiO-np",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon; NiS",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon; PEMA",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CdSe-QD | CsPbI3-QD | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CdSe-QD | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CdSe-QDs | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CdZnSe@ZnSe-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Chl-1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Chl-2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Co-porphyrins | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CoPcNO2-COU | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CoTh-TTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Cr",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Cs-oleate | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsAc | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsPbBr2I-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsPbBr3-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsPbBrI2-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsPbI3-QD | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsPbI3-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsSnBr2I-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsSnBr3-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsSnBrI2-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsSnI2.95F0.05 | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CsSnI3-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Cu",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Cu2O | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Cu2ZnSnS4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuBuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuCrO2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuCrO2-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuFeO2-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuH | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuI | Cr | Pt | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuI | Cu",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuI | Pt | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuInS | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuInS2 | ZnS-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuInS2-QDs | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuInS2@ZnS-QDs | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuInS2@ZnS-QDs | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuInS2@ZnS-QDs | Carbon; LPP",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuMePc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPc | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPc | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPc-Bu | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPc-DMP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPc-OBu | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPcNO2-OBFPh | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPcNO2-OMFPh | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPcNO2-OPh | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPc\u2010OTPAtBu | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuPs-TIPS | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuS | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuSCN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuSCN | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuSCN | Carbon-nt",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuSCN | ITO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | CuSCN | rGO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Cz-N | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Cz-Pyr | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | D1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | D205 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DAHI | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DAI | DM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DBC-OMeDPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DBT(QT-TPA)2 | Au | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DDOF | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DEH | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DEPT-SC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DFTAB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DHPT-SC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DIB; SeS2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DIPO-Ph4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DM1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DM1P | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DM2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DMF; I2; PVA; TBAI | Pt | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DMFA-FA | AU",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DMFA-FA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DMFA-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DNA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DOPT-SC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPA-ANT-DPA | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPA-QA-DPA | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPA-TPM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPBTD-B[BMPDP]2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPEDOT-B[BMPDP]2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPIE | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPIO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPP-F | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPP-Ome | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DPPS | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DTB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | DTBT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Decaphenylcyclopentasilane | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | EH44 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | EH44 | MoO3 | Al",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | EP02 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | EtO-DATPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | EtheneDTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | EtheneTTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ethyl acetate; I2; LiI; TBP; Urea | Pt | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | F-graphene; P3HT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | F101 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | F8T2e | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FA-CN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FA-MeOPh | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FDT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FEH | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FH-0 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FH-3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FT37 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FT55 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FT73 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FU7 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Fe3O4-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FePc-Cou | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | FeS2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Fluorene-dithiophene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Fused-F (Tris[[4-[3,3'-dihexylsilylene-2,2'-bithiophene]-7-[5\u2032\u2032-n-hexyl-(2,2\u2032; 5\u2032,2\u2032\u2032-terthiophen\ne)-5-yl]-benzo[c]-[1,2,5]thiadiazole]-2,6,10-yl]-4,4,8,8,12,12-hexamethyl-4H,8H,12\nHbenzo[1,9]quinolizino [3,4,5,6,7,-defg]acridine ) | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | G1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | G2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | GD; P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene oxide | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene oxide | CuBuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene oxide | P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene oxide | PMMA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene oxide | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene oxide; NiO-c | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene oxide; NiO-c | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphene; TSHBC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphite | Cu",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphite | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Graphite | Pt",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H-2,5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H-3,4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H-Bi | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H-Ca | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H-Di | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H-Fl | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H-Tetra | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H-Tri | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H11 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H111 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H112 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H16 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H18 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H2Pc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H2Pc-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H64 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H65 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | H66 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HA1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HA2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HBT-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HBZ-70 | Carbon | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HBZ-71 | Carbon | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HL-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HL-2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HMDI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HMPDI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HPDI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HPPHT | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HS-Ph-CN | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HS-Ph-NO2 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HS-Ph-OCH3 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HS-Ph-SCH3 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HT-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM-1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM-2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM-M1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM-P1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | HTM5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | I2; LiI; Methoxyacetonitrile | Pt | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | IDT1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | IDT2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | IEICO; PBDB-T | MoOx | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ITO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Imidazolium iodide | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | J61-ITIC | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | JK-216D | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | JK-217D | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KIPIG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KM03 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KM05 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KM07 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR122 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR131 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR133 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR145 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR216 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR321 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR353 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR355 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR360 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR373 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KR378 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | KTM3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | LCS01 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | LD22 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | LD29 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | LHTM-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | LHTM-2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Li-TFSI; TBPAu",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Li4Ti5O12 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M101 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M102 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M103 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M104 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M104 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M105 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M106 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M3; PCBM-60 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M4; PCBM-60 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M6 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M7-BR | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M7-TFSI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M:ON | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | M:OO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MAI | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MEH-PPV | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MTA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MWCNTs; ONC1",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MWCNTs; ONC2",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MWCNTs; ONC3",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MWCNTs; Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Me-BPZTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Me-QTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MeO-BPZTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MeO-DATPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MeO-TPD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Metal",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MnS | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MnS | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MoO3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MoO3 | CuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MoOx | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MoS2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MoS2 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MoS2-QDs | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | MoS2-QDs; rGO-flakes | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Montmorillonite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | N-Graphene",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | N2,N2,N12,N12-Tetrakis(4-methoxyphenyl)-9-methyl-9H-naphtho[2,1-c]carbazole-2,12-diamine | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | N3,N3,N9,N9\u2010tetrakis(4\u2010methoxyphenyl)xantheno[2,1,9,8\u2010klmna]xanthene\u20103,9\u2010diamine | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NH-2,6 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NH-2,7 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NP1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NP2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NaYF4:Yb:Er-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ni",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiCo2O4-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiCo2O4-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO | CuSCN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO | MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO-c | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO-c | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO-np | CuSCN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiO@C | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiPc | V2O5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiPc-Cou | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | NiS | Cr | Pt | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | O5H-OMeDPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | OAI | DM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ODA-FeS2-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | OIPC-Br | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | OIPC-I | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | OMeTPA-BDT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | OMeTPA-DPP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | OMeTPA-FA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | OMeTPA-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | OTPA-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P(BDTT-SePPD) | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P(BDTT-tPPD) | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P(BDTT-ttPPD) | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P1Z1 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P1Z2 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P2Z1 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | Ag | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | Au | Pt",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | Carbon-nt | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | Cu",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | MoO3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT | PEDOT:PSS",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT-MoS2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT; PCBM-60 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3HT; SWCNTs-PhOMe | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P3TI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P6 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P:ON | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | P:OO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PAH 1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PAH 2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PANI | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PANI | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PARA1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PBDTT-FTTE | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PBDTTT-C | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PBT1-C | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PCDTBT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PCPDTBT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PCPDTBT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PCPDTBT | PEDOT:PSS | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PD-10-DTTE-7 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PDBD-T | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PDI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PDPP-3T | MoOx | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PDPP3T | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PDPP3T | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PDPPDBTE | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PDVT-10 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEA2PBI4 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEDOT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEDOT | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEDOT | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEDOT:PSS | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEDOT:PSS | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEDOT:PSS | ITO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEDOT; Graphene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEH-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEH-2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEH-3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEH-8 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEH-9 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PEO; KI; I2 | Pt | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PET-OMeDPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PF8-TAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PFB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PFO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PIF8-TAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PM-Spiro | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PMMA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PMMA | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PO-Spiro | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | POSS-NH2 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | POSS-SH | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | POZ10 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | POZ2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | POZ3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | POZ6-2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | POZ9 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PP-Spiro | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PPV | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PPy | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PST1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PT3HT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | AU",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | Au | pV3d3 | Al2O3",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | MoO3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | MoO3 | ITO | MgF2",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | TPFB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA-1F | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA-2F | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA; TPFB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTB-BO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTB-DCB21 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTB1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTB7 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTB7 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTB7-TH | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTBT-th | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTEG | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTPD | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTPD2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTZ1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTh; Graphene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PVAc | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PVAc | Graphene oxide | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PVCz-OMeDPD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PVDF-HFP | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PVK | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PVP | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PbPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PbS-QDs | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ph-TPA-2A | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ph-TPA-4A | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ph-TPA-6A | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ph-TPM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PhCz-4MeOTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PiF8-TAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Poly(ethylene oxide) | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PolyTPD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Poly[4,8-bis(2-(4-(2-ethylhexyloxy)3,5-fluorophenyl)-5-thienyl)benzo[1,2-b:4,5-b']dithiophenealt-1,3-bis(4-octylthien-2-yl)-5-(2-ethylhexyl)thieno[3,4-c]pyrrole-4,6-dione | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Poly[4,8-bis(2-(4-(2-ethylhexyloxy)3-fluorophenyl)-5-thienyl)benzo[1,2-b:4,5-b'] dithiophenealt-1,3-bis(4-octylthien-2-yl)-5-(2-ethylhexyl)thieno[3,4-c]pyrrole-4,6-dione | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Poly[4,8-bis(2-(4-(2-ethylhexyloxy)phenyl)-5-thienyl)benzo[1,2-b:4,5b\u2019]dithiophene-alt-1,3-bis(4-octylthien-2-yl)-5-(2-ethylhexyl)thieno[3,4-c]pyrrole-4,6-dione | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Polymer1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Polypseudorotaxane | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Polyrotaxane | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Polystyrene | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Polystyrene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Porphyrin-H1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Porphyrin-H2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Pt",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Pt | Si",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Pt-sheet",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | PyThTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Pyridine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Pyrimidine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Q197 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Q198 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Q205 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Q216 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Q219 | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Q221 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Q222 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | RCP-BTT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S,N-Heteroacene 1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S,N-Heteroacene 2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S,N-heteropentacene based HTM 1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S,N-heteropentacene based HTM 2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S,N-heteropentacene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S,Si\u2010heteropentacene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S101 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S12 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S14 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S197 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S2 | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S7 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S9 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | S:DIB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SBFCz2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SCPDT-BiT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SDTCz2F | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SDTFCz2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SFXDAnCBZ | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-404 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-405 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-407 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-409 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-410 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-411 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-420 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-421 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SGT-422 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SM-1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SM01 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SM09 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SM13 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SO10 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SO7 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SO8 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SO9 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SQ2 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ST1 (4-(4-(bis(4-(4-(dibutylamino)styryl)phenyl)amino)styryl)-N,N-dibutylaniline) | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SWCNTs | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SWCNTs | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SWCNTs | Graphene oxide | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SWCNTs | Graphene oxide | PMMA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SWCNTs | PMMA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SYN1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Si-PO-2CN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Si-QDs | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SiO2 | MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SnS | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SnS-np | NiO-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SnS-np; ZnS-np | NiO-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-029 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-CPDT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | AU",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | AV-Carbon; MAI",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag | Al",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag | ITO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag,",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag-nw",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag-nw | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | AgAl",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au | Al2O3-c",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au | ITO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au | ITO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Carbon | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Carbon | Carbon-fiber",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Carbon | FTO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Carbon | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Cr",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Cu",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Cu | Cu2O | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Cu; Cu2O",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | CuOxNy | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Graphite",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | ITO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | ITO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | IZO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | IZO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Metal",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Mo",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Mo | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | AZO | NiAl -grid | MgF2",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | CuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | IZO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoOx | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoOx | ITO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoOx | IZO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoOx | IZO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | NbS2",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ni",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | ODA-FeS2-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | PEDOT:PSS | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | PEDOT:PSS | Ag-nw | PDMS",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | PEDOT:PSS | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | PEDOT:PSS; Sorbitol | Ag-grid | PET",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Pt",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | SWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | SWCNTs | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | V2O5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | W",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | rGO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD; X60 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-OMeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-TPM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-mF | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SrCl2 | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | SubPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Sym-HTPCH | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | T(EDOT-TPA)2 | Au | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | T-MWCNTs",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | T101 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | T102 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | T103 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | T5H-OMeDPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TAA14 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TAZ-[MeOTPATh]2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TAZ-[MeOTPA]2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TB-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TB4-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TBC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TBC-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TBC-2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TBC-3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TBP | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TBP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TCP-OC8 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TCP-OH | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TDAB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TDAC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TDT-OMeTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TFB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TFDIB | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | THY-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | THY-2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | THY-3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | THY-4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | THY-5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TIPS-Pentacene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TP1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-AZO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-BP-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-BPFN-TPA | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-BPV-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-CN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-MeOPh | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-Pc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-QA-TPA | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA-TPM | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPA\u2010ANT\u2010TPA | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPB | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPB-2-MOTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPB-4-MOTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPBC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPBS | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPD | HAT-CN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPD-4EtCz | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPD-4MeOTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPD-4MeTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPDI | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TPE-TPA-8A | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TQ1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TQ1d | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TQ2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TSHBC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TSHBC-CF3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TSHBC-tBu | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TT-2,5-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TT-3,6-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TT0 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TT1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TT80 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTA1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTA2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTA3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTB1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTB2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTB3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTBCPE | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTF1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTPA-BDT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTPA-DBQT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTPA-DSQT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTPA-DTP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TTPA-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TbT-1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TbT-2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TbT-3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Tetra-substituted azulene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Tetracene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Tetracene | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Tetrakis(4-methoxyphenyl)spiro[cyclopenta[1,2-b:5,4-b']dipyridine-5,9'-fluorene]-2',7'-diamine | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Tetrakis-Triphenylamine | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Th-PDI | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Th101 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Ti3C2",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | TiS2-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Titanylphthalocyanine | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Triazine | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Triazine-Flu | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Triazine-Ph-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Triazine-Th-OMeTPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Trux1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Trux2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V1207 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V1209 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V1221 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V1225 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V2O5 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V852 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V859 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V862 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V886 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | V950 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | WT3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | WT3 | MoOx | Al",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | WY-1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | WY-2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | WY-3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X14 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X18 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X19 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X21 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X22 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X23 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X25 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X26 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X36 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X50 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X51 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X51 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X54 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X55 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X59 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X60 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X60(TFSI)2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X61 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | X62 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | XY1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Y1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Y2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Y2A2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Y3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Y4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YC-1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YC-2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YC-3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YC01 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YC02 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YC03 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YC04 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YC06 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YK1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YK2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YKP03 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YKP06 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YN1 | Cu",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YN2 | Cu",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YN3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YR3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YT1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YT2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | YT3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z1011 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z1012 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z1013 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z2 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z25 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z26 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z28 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z29 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z30 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z33 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z34 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Z35 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZPPHT | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnBChl | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnChl | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnChl-1 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnChl-2 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnChl-3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnChl-4 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnNc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc(tBu)4 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc-DPP-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc-flu-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc-p-ZnPc 1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc-p-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPc-th-ZnPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPcNO2-OBFPh | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPcNO2-OPh | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPor | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | ZnPy | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | [BMMIm]Cl | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | [BMPA-BTD]3-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | [BMPA-EDOT]3-TPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | alfa-NPD | MoO3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | apv-EC | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | apv-T | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | asy-PBTBDT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | cyclopenta[2,1-b; 3,4-b\u2032]dithiophene | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | cyclopenta[2,1-b; 3,4-b\u2032]dithiophene | MoOx | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | cyclopenta[2,1-b; 3,4-b\u2032]dithiophene | MoOx | SLG | ITO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | cyclopenta[2,1-b; 3,4-b\u2032]dithiophene | SLG | ITO",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | iDM1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | iPrO-DATPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | m-MTDATA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | mGO | P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | mm-SFX-2PA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | mm-SFX-3PA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | mp-SFX-2PA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | mp-SFX-3PA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | n-CuBuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | nPrO-DATPA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | poly(DTSTPD-r-BThTPD) | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | quart-p-phenylene1 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | rGO | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | rGO-flakes | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | rGO:CZTS0.75Se0.25 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | tert-CuBuPc | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite | tetra{4-[N,N-(4,4'-dimethoxydiphenylamino)]phenyl}ethene | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite-IO | Carbon-QDs | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Perovskite-IO | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | Pervskite | P3TAA-co-P3HT | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | PhCOOH | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Poly(TA) | Perovskite | Poly(TA) | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Poly(TA) | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Preovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SQ2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Sb2S3 | Perovskite | CuSCN | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SbI3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Si-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SiO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | SiO2-mp | Perovskite | CuPc | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | Sinapoyl malate | Perovskite | Co(II)P | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Sinapoyl malate | Perovskite | Co(II)P; Co(III)P | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Sinapoyl malate | Perovskite | Co(III)P | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Sinapoyl malate | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Sinapoyl malate | Perovskite | ZnP | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2 | Perovskite | V1160 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | BL25 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | BL38 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | BL40 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | BL50 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | BL51 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | BL52 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | CS02 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | CS04 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | CS05 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | HTM3 | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | V1000 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | V1004 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | V1012 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | V1013 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | V1021 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-c | Perovskite | V950 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | SnO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Spiro-MeOTAD | NaYF4-np | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | TiN | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Trimethylamine oxide | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | Y2O3-c | Perovskite | Spiro-MeOTAD | Ag | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZIF-8 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZIF-8 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZIF-8-10 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZIF-8-20 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZIF-8-40 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZnO-mp | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZnS | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZnS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Carbon | Perovskite",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Carbon-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Co3O4-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | NiO-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | PbTiO3 | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | AV-Carbon; MAI",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon | Graphite",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon | Spiro-MeOTAD",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon-mp",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon-nt | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon; MAI",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon; TiO2-np",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Cu:NiO-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Graphite",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | NiO-c | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | NiO-np | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | PEDOT:PSS | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | TOPO | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | VOx | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Silane-SAM | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | ZrO2@TiO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-mp | beta-Alanine-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | beta-alanine | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp | n-dimethyloxamic acid | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-mp; YVO4:Eu:Bi-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-mp; ZrO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-nanoballs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanoballs | SiO2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanobeads | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanocones | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanofibers | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanofibers | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanoflowers | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanoflowers | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanosphere | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nanosphere | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-nanosphere | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-nanowalls | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nc | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-nc | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-np | PEO; KI; I2 | Pt | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-np | Perovskite | Au",
                          "SLG | FTO | TiO2-c | TiO2-np | Perovskite | Graphene oxide | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-np | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nt | Perovskite | Au",
                          "SLG | FTO | TiO2-c | TiO2-nt | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nt | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-nw | Al2O3 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-nw | CdS | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | Ethyl acetate; I2; LiI; TBP; Urea | Pt | FTO | SLG",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | HTM | Ag",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | Spiro-MeOTAD | AgAl",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | Spiro-MeOTAD | Pd",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | TPA1C | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | TPA2C | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | TPA3C | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | Perovskite | TPA4C | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | SiO2-nanocolumns | TiO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2-nw | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2-nw | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | TiO2; Al2O3-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | TiO2; Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2; CoCr-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiO2; SiO2-IO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | TiOZn-nanosphere | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | WO3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | WOx | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZIF-8 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | ZIF-8 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZTO-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Zn2SnO4-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | Zn2Ti3O8-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnCdS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnO-c | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnO-c | Perovskite | CZTS-np | Au",
                          "SLG | FTO | TiO2-c | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnO-c | Perovskite | Spiro-MeOTAD | H2PtCl6",
                          "SLG | FTO | TiO2-c | ZnO-c | Perovskite | Spiro-MeOTAD | Pt | SLG | FTO",
                          "SLG | FTO | TiO2-c | ZnO-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnO-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | ZnO-nw | AZO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnO-nw | Al2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnO-nw | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZnPtriazine(gly)2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | ZnSe | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | ZrO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-c | ZrO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-c | ZrO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | [BMIM]BF4 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | [EMIM]PF6-IL | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | bis-PCBM; DMC | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | TiO2-c | rGO:TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-c | rGO; TiO2-nanofibers | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-fibres | Perovskite | Au",
                          "SLG | FTO | TiO2-macroporous | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-mp | D35 | Perovskite | Pt | SLG | FTO",
                          "SLG | FTO | TiO2-mp | LPP | N719 | Perovskite | I2; KI; Propylene carbonate; Polyethylene glycol | Pt | FTO",
                          "SLG | FTO | TiO2-mp | MK2 | Perovskite | Pt | SLG | FTO",
                          "SLG | FTO | TiO2-mp | MgO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-mp | N719 | Perovskite | Dye | I2; KI; Propylene carbonate; Polyethylene glycol | Pt | FTO",
                          "SLG | FTO | TiO2-mp | N719 | Perovskite | Pt | SLG | FTO",
                          "SLG | FTO | TiO2-mp | Pbs-QDs | Perovskite | P3HT | Pt",
                          "SLG | FTO | TiO2-mp | Perovskite | Ag",
                          "SLG | FTO | TiO2-mp | Perovskite | Carbon | FTO | SLG",
                          "SLG | FTO | TiO2-mp | Perovskite | Carbon | PEDOT:PSS | FTO | SLG",
                          "SLG | FTO | TiO2-mp | Perovskite | CuSCN | Carbon | FTO",
                          "SLG | FTO | TiO2-mp | Perovskite | CuSCN | Carbon | FTO | SLG",
                          "SLG | FTO | TiO2-mp | Perovskite | Ethyl acetate; I2; LiI; TBP | Pt | FTO | SLG",
                          "SLG | FTO | TiO2-mp | Perovskite | Ethyl acetate; I2; LiI; TBP; Urea | Pt | FTO | SLG",
                          "SLG | FTO | TiO2-mp | Perovskite | HfO2 | Acetonitrile; I2; LiI; PMII; Propylene glycol; TBP | Graphite",
                          "SLG | FTO | TiO2-mp | Perovskite | HfO2 | Acetonitrile; I2; LiI; TBP | Graphite",
                          "SLG | FTO | TiO2-mp | Perovskite | HfO2 | CuI | Graphite",
                          "SLG | FTO | TiO2-mp | Perovskite | HfO2 | PTAA | Graphite",
                          "SLG | FTO | TiO2-mp | Perovskite | HfO2 | Spiro-MeOTAD | Graphite",
                          "SLG | FTO | TiO2-mp | Perovskite | I2-electrolyte | Pt | FTO",
                          "SLG | FTO | TiO2-mp | Perovskite | I2; KI; Propylene carbonate; Polyethylene glycol | Pt | FTO",
                          "SLG | FTO | TiO2-mp | Perovskite | NiO | Au",
                          "SLG | FTO | TiO2-mp | Perovskite | P3HT | Pt",
                          "SLG | FTO | TiO2-mp | Perovskite | PTAA | Au",
                          "SLG | FTO | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-mp | Perovskite | Spiro-MeOTAD | Metal",
                          "SLG | FTO | TiO2-mp | Perovskite | V841 | Au",
                          "SLG | FTO | TiO2-mp | Perovskite | V842 | Au",
                          "SLG | FTO | TiO2-mp | Perovskite | V873 | Au",
                          "SLG | FTO | TiO2-mp | SAM1 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-mp | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-mp | Z907 | Perovskite | Pt | SLG | FTO",
                          "SLG | FTO | TiO2-mp | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | TiO2-mp | ZrO2-mp | Perovskite | Carbon | Galinstan",
                          "SLG | FTO | TiO2-nanobundles | Perovskite | CF-BTz-ThR | Au",
                          "SLG | FTO | TiO2-nanofibers | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nanoleaves | MgO | Perovskite | Spiro-MeOTAD | Graphite",
                          "SLG | FTO | TiO2-nanoleaves | Perovskite | Spiro-MeOTAD | Graphite",
                          "SLG | FTO | TiO2-nanoplatelets | Perovskite | Au",
                          "SLG | FTO | TiO2-nanoplatelets | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nanosphere | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nanosphere | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nc | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-nc | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nc | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-np | CsBr | Perovskite | Carbon",
                          "SLG | FTO | TiO2-np | NiO-np | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | FTO | TiO2-np | PCBM-60 | Perovskite | PDCBT | MoO3 | Ag",
                          "SLG | FTO | TiO2-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-np | Perovskite | Al2O3-np | TPA-ZnPc | Au",
                          "SLG | FTO | TiO2-np | Perovskite | Au",
                          "SLG | FTO | TiO2-np | Perovskite | NiO-np | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-np | Perovskite | P3HT | Au",
                          "SLG | FTO | TiO2-np | Perovskite | PDCBT | MoO3 | Ag",
                          "SLG | FTO | TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-np | Perovskite | Spiro-MeOTAD | Graphite",
                          "SLG | FTO | TiO2-np | Perovskite | TPA-ZnPc | Au",
                          "SLG | FTO | TiO2-nt | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nt | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | FTO | TiO2-nt | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nw | CuInS2-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nw | N719 | Perovskite | Au@CZTS-np | Au",
                          "SLG | FTO | TiO2-nw | N719 | Perovskite | CZTS-np | Au",
                          "SLG | FTO | TiO2-nw | N719 | Perovskite | Pt-np | Au",
                          "SLG | FTO | TiO2-nw | Perovskite | Carbon",
                          "SLG | FTO | TiO2-nw | Perovskite | CuI | Au",
                          "SLG | FTO | TiO2-nw | Perovskite | CuSCN | Carbon",
                          "SLG | FTO | TiO2-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nw | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | FTO | TiO2-nw | Sb2O3-np; SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiO2-nw | TiO2-c | Perovskite | Carbon",
                          "SLG | FTO | TiO2-nw | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2-nw | TiO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiO2; WOx | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | TiS2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | TiZnO12-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | VO | Perovskite | PCBM-60 | Al",
                          "SLG | FTO | VOx | PEI | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | VOx | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | FTO | WO3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | WO3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | WO3 | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | WO3-c | Cs2CO3 | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | FTO | WO3-c | Perovskite | P3HT | Au",
                          "SLG | FTO | WO3-c | WO3-nw | Cs2CO3 | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | FTO | WO3-c | WO3-nw | Perovskite | P3HT | Au",
                          "SLG | FTO | WOx | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | WOx | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | WOx | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | WOx | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | X1 | Perovskite | PCBM-60 | Ag",
                          "SLG | FTO | X1 | Perovskite | PCBM-60 | C3-CBL | Ag",
                          "SLG | FTO | YVO4:Eu | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZTO | TiO2-mp | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | Zn2SnO4 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Zn2SnO4 | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Zn2SnO4 | Zn2SnO4-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Zn2SnO4-c | Zn2SnO4-fiber | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Zn2SnO4-c | Zn2SnO4-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Zn2SnO4-c | rGO; Zn2SnO4-fiber | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | Zn:SnO2 | Perovskite | CuPc | Carbon",
                          "SLG | FTO | ZnO | Au-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO | MgO | EA | TiO2-mp | Perovskite | Spiro-MeOTAD | CuI | Au",
                          "SLG | FTO | ZnO | PEIE | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO | Perovskite | Spiro-MeOTAD | Mo2O3 | Ag",
                          "SLG | FTO | ZnO-c | AZO-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | ZnO-c | AZO-mp | Perovskite | Au",
                          "SLG | FTO | ZnO-c | AZO-mp | Perovskite | Carbon",
                          "SLG | FTO | ZnO-c | AZO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | Al2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | Al2O3-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | CdS | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | CdSO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | EMIM-PF6 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | Ethyl acetate | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | FTO | ZnO-c | MgO | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | MgO | TiO2-mp | Perovskite | TPB(2-MeOTAD) | Au",
                          "SLG | FTO | ZnO-c | MgO | TiO2-mp | Perovskite | TPB(2-TPTZ) | Au",
                          "SLG | FTO | ZnO-c | Nb2O5 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | FTO | ZnO-c | PCBM-60 | Perovskite | PTAA | Au",
                          "SLG | FTO | ZnO-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | PEI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | Perovskite | Au",
                          "SLG | FTO | ZnO-c | Perovskite | Carbon",
                          "SLG | FTO | ZnO-c | Perovskite | Co-Porphyrin | Au",
                          "SLG | FTO | ZnO-c | Perovskite | CuI | Au",
                          "SLG | FTO | ZnO-c | Perovskite | FDT | Ag",
                          "SLG | FTO | ZnO-c | Perovskite | Graphene oxide | Ag",
                          "SLG | FTO | ZnO-c | Perovskite | P3HT | Ag",
                          "SLG | FTO | ZnO-c | Perovskite | P3HT | Au",
                          "SLG | FTO | ZnO-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | ZnO-c | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | FTO | ZnO-c | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | FTO | ZnO-c | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | FTO | ZnO-c | TiO2-mp | Perovskite | 18-crown-6 ether | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-c | Perovskite | CuI | Carbon",
                          "SLG | FTO | ZnO-c | ZnO-mp | PEI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-mp | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | ZnO-c | ZnO-nanodisks | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-nanofibers | PEI | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | ZnO-nanofibers | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | ZnO-nanowells | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | Al2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | Au-np | Perovskite | Graphene",
                          "SLG | FTO | ZnO-c | ZnO-nw | Au-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | Perovskite | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | Perovskite | Graphene",
                          "SLG | FTO | ZnO-c | ZnO-nw | Perovskite | NiO | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | Perovskite | P3HT | Ag",
                          "SLG | FTO | ZnO-c | ZnO-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | FTO | ZnO-c | ZnO-nw | SnO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | ZnO-nw | TiO2-c | Perovskite | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-c | ZnO-nw | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnO-nw | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | FTO | ZnO-c | ZnO-nw | TiO2-c | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | ZnO-c | ZnO-nw | TiO2-np | Perovskite | P3HT | Ag",
                          "SLG | FTO | ZnO-c | ZnO-nw | ZrO2-mp | Perovskite | Carbon",
                          "SLG | FTO | ZnO-c | ZnOS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-c | ZnOS | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-mp | Perovskite | Spiro-MeOTAD | Carbon",
                          "SLG | FTO | ZnO-mp | Perovskite | Ta2O5 | Spiro-MeOTAD | Carbon",
                          "SLG | FTO | ZnO-np | EA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | Graphene | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | Mg-EA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | MgO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | MgO | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | MgO-EA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | MgO-EA | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | Perovskite | Ag",
                          "SLG | FTO | ZnO-np | Perovskite | Au",
                          "SLG | FTO | ZnO-np | Perovskite | Carbon",
                          "SLG | FTO | ZnO-np | Perovskite | P3HT | Ag",
                          "SLG | FTO | ZnO-np | Perovskite | P3HT | Au",
                          "SLG | FTO | ZnO-np | Perovskite | P3TAA | Ag",
                          "SLG | FTO | ZnO-np | Perovskite | P3TAA-co-P3HT | Ag",
                          "SLG | FTO | ZnO-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | ZnO-np | Perovskite | YT3 | MoO3 | Ag",
                          "SLG | FTO | ZnO-np | Sinapoyl malate | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-np | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-nw | Perovskite | Graphite | FTO",
                          "SLG | FTO | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO-nw | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnO@SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | FTO | ZnO@rQD-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnOS | Perovskite | Carbon | Au",
                          "SLG | FTO | ZnSO | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnSO4-c | ZnSO4-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnSe | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZnSnO4-c | ZnSnO4-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | ZrO2-c | TiO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | FTO | ZrO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | [EMIM]PF6-IL | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | [EMIM]PF6-IL | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | FTO | c-OTPD | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | Graphene | Graphene-QDs | Perovskite | PCBM-60 | Al",
                          "SLG | Graphene | MoO3 | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "SLG | Graphene | PCBM-60 | Perovskite | PTAA | Au",
                          "SLG | Graphene | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | Graphene | Perovskite | PCBM-60 | Ag",
                          "SLG | Graphene | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | Graphene; TFSA | Graphene-QDs | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | (RuCp*mes)2 | C60 | Perovskite | TaTm | F6-TCNNQ; TaTm | Au",
                          "SLG | ITO | 1F-SAM | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | 2,7-PCzTPA | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | 2-F-br-4C | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | 2D-Sb | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | 2EGO-PPV | PFN-P2 | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | 2EGO-PPV | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | 2F-SAM | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | 2PACz | MeO-2PACz | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | 2PACz | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | 3,6-2,7-PCzTPA | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | 3,6-PCzTPA | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | 3-F-br-4C | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | 3C | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | 3EGO-PPV | PFN-P2 | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | 3EGO-PPV | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | 3F-SAM | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | 4-F-br-4C | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | 4C | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | 5,6,11,12-Tetraphenylnaphthacene | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | A-PDTON | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | ATO | TiO2-c | TiO2-mp | Perovskite | PTAA | Au",
                          "SLG | ITO | ATO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | AZO-c | Perovskite | Ag",
                          "SLG | ITO | AZO-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | AZO-c | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | AZO-np | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | ITO | AZO-np | Perovskite | P3HT | Au",
                          "SLG | ITO | AZO-np | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | ITO | Ag-Nws | Spiro-MeOTAD | Perovskite | ZnO-np | ITO | SLG",
                          "SLG | ITO | Ag-grid | AZO | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Ag-grid | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Ag-np; NiO-c | Perovskite | PCBM-60 | AgAl",
                          "SLG | ITO | Ag-np; NiO-c | Perovskite | Poly(9-vinylcarbazole) | PCBM-60 | AgAl",
                          "SLG | ITO | Ag-np; PEDOT:PSS | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | Ag-nw; PEDOT:PSS | Perovskite | PCBM-60; CTAB | Ag",
                          "SLG | ITO | AgI-QDs | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Al-np; PEDOT:PSS | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | Aniline; rGO | CsCO3 | Perovskite | PffBT4T-2OD | Ag",
                          "SLG | ITO | Au-np | NiO-c | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | Au-np; Graphene oxide | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Au-np; PEDOT:PSS | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | Au-np; TiO2-np | C-PCBOD | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Au-np; TiO2-np | C-PCBSD | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Au-np; TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Au@TiO2-np; TiO2-np | Perovskte | Spiro-MeOTAD | Au",
                          "SLG | ITO | Au@TiO2-nw; TiO2-np | Perovskte | Spiro-MeOTAD | Au",
                          "SLG | ITO | B-\u03b3-CsSnI3 | Cs2SnI6 | Au",
                          "SLG | ITO | BCP | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | BDT-POZ | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | BDT-PTZ | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | BPADF | PEDOT:PSS | Perovskite | C60 | Ag",
                          "SLG | ITO | BTF1 | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | BTF2 | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | BTF3 | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | BTF4 | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | BTPA | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | BV-FNPD | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Bphen | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | C-PDTON | ZnO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | C60 | C60 | Perovskite | TaTm | F6-TCNNQ; TaTm | Au",
                          "SLG | ITO | C60 | C60-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | C60 | Perovskite | BTF2 | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | Carbon",
                          "SLG | ITO | C60 | Perovskite | F22 | Au",
                          "SLG | ITO | C60 | Perovskite | F23 | Au",
                          "SLG | ITO | C60 | Perovskite | FBA1 | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | FBA2 | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | FBA3 | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | FTA1 | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | FTA2 | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | H1 | Au",
                          "SLG | ITO | C60 | Perovskite | H2 | Au",
                          "SLG | ITO | C60 | Perovskite | IDF-DiDPA | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | IDF-SFXPh | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | IDF-TeDPA | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | PH3T | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | SWCNTs",
                          "SLG | ITO | C60 | Perovskite | SWCNTs | P3HT",
                          "SLG | ITO | C60 | Perovskite | SWCNTs | PTAA",
                          "SLG | ITO | C60 | Perovskite | SWCNTs | Spiro-MeOTAD",
                          "SLG | ITO | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | C60 | Perovskite | Spiro-MeOTAD | Cu",
                          "SLG | ITO | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Au | MoO3",
                          "SLG | ITO | C60 | Perovskite | TAPC | MoO3; TAPC | MoO3 | Ag",
                          "SLG | ITO | C60 | Perovskite | TaTm | F6-TCNNQ; TaTm | Au",
                          "SLG | ITO | C60 | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | C60(OH)16 | C60 | Perovskite | PH3T | MoO3 | Ag",
                          "SLG | ITO | C60-SAM | Perovskite | PDCBT | Au",
                          "SLG | ITO | C60-SAM | Perovskite | PDCBT | MoOx | Au",
                          "SLG | ITO | C60-SAM | Perovskite | PDCBT | WOx | Au",
                          "SLG | ITO | C60-SAM | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | C60-SAM | SnO2-c | PCBM-60 | Perovskite | P3HT | WOx | Au",
                          "SLG | ITO | C60-SAM | SnO2-c | PCBM-60 | Perovskite | PDBT-T1 | WOx | Au",
                          "SLG | ITO | C60-SAM | SnO2-c | PCBM-60 | Perovskite | PDCBT | WOx | Au",
                          "SLG | ITO | C60-SAM | SnO2-c | PCBM-60 | Perovskite | PTB7 | WOx | Au",
                          "SLG | ITO | C60-SAM | SnO2-c | PCBM-60 | Perovskite | PffBT4T-2OD | WOx | Au",
                          "SLG | ITO | C60-SAM | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | MoOx | Au",
                          "SLG | ITO | C60-SAM | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | WOx | Au",
                          "SLG | ITO | C60-SAM | SnO2-c | PCBM-60 | Perovskite | pDPP5T-2 | WOx | Au",
                          "SLG | ITO | C60-lactone | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | C60:Phlm | C60 | Perovskite | TaTm | TaTm:F6-TCNNQ | Au",
                          "SLG | ITO | C60; C70 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | C60; PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | C60; PhIm | C60 | Perovskite | F6-TCNNQ; TaTm | Ag",
                          "SLG | ITO | C60; PhIm | C60 | Perovskite | TaTm | F6-TCNNQ; TaTm | Ag",
                          "SLG | ITO | C60; PhIm | Perovskite | TaTm | F6-TCNNQ; TaTm | Ag",
                          "SLG | ITO | C60; Phlm | C60 | Perovskite | F6-TCNNQ; TaTm | Ag",
                          "SLG | ITO | C60; Phlm | C60 | Perovskite | TaTm | F6-TCNNQ; TaTm | Ag",
                          "SLG | ITO | C60; Phlm | C60 | Perovskite | TaTm | F6-TCNNQ; TaTm | Au",
                          "SLG | ITO | C60; Phlm | Perovskite | TaTm | F6-TCNNQ; TaTm | Ag",
                          "SLG | ITO | C70 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | C8-BTBT | Perovskite | PCBM-60 | BCP I Ag",
                          "SLG | ITO | CA-Br | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | CA-Br; TPA-PT-C6 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | CA-Br; TPA-PT-C6 | Perovskite | Polyimid | PCBM-60 | BCP | Ag",
                          "SLG | ITO | CONs | PEDOT:PSS | Perovskite | PCBM-60 | TiO2 | Al",
                          "SLG | ITO | CPE-K | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | CPE-Na | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | CPEPh-Na | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | CPTA | BACl | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | CPTA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | CZTS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Ca | C60 | Perovskite | TAPC | MoO3; TAPC | Ag",
                          "SLG | ITO | Ca | C60 | Perovskite | TAPC | MoO3; TAPC | MoO3 | Ag",
                          "SLG | ITO | Ca | C60 | Perovskite | TPTPA | MoO3 | Ag",
                          "SLG | ITO | Ca | C60 | Perovskite | TPTPA | TPTPA; MoO3 | MoO3 | Ag",
                          "SLG | ITO | Ca | Perovskite | TAPC | MoO3; TAPC | MoO3 | Ag",
                          "SLG | ITO | Carbon-QDs; SnO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | Carbon-QDs; TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Carbon-np; PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Carbon-np; SnO2-np | Perovskite | CTAB | Spiro-MeOTAD | Au",
                          "SLG | ITO | Carbon-np; SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Carbon-nt | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | Carbon-nt | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Carbon-nt; Graphene oxide | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CdS | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | CdS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | CdS | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | CdS-nw | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | CdSe-Qds | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | CoOx | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Cobalt\u2013porphyrin | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | CrO3 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | Cs2CO3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Cu0.67Cr0.33O2 | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Cu2O | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Cu2O | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | Cu2O | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Cu2O | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | Cu2O | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | Cu2O | Perovskite | PCBM-60 | Ca | Al",
                          "SLG | ITO | Cu:Ni-acetate | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | Cu:NiO | Perovskite | PC(70)BM | AZO | Al",
                          "SLG | ITO | CuAlO2 | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CuAlO2 | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CuAlO2; CuO | Perovskite | PCBM-70 | AZO-np | Al",
                          "SLG | ITO | CuCo2O4 | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | CuCrO2 | C60; PCBM-60 | Perovskite | Zr(acac)4 | Ag",
                          "SLG | ITO | CuCrO2 | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | CuCrO2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | CuCrO2-np | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | CuGaO2-np | Perovskite | PCBM-70 | Al",
                          "SLG | ITO | CuI | Cu@CuI-nw | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CuI | Cu@CuI-nw | Perovskite | PCBM-60; ZnO-np | Ag",
                          "SLG | ITO | CuI | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | CuI | PbPc | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | CuI | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | CuI | Perovskite | ICBA | BCP | Ag",
                          "SLG | ITO | CuI | Perovskite | PCBM-60 | AZO-np | Ag",
                          "SLG | ITO | CuI | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CuI | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | CuI | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | CuI | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | ITO | CuI | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | CuI-np | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | CuI; CuSCN | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | CuInS2 | Al2O3-mp | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CuInS2 | Al2O3-mp | Perovsktie | PCBM-60 | Ag",
                          "SLG | ITO | CuInS2 | Al2O3-np | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CuInS2 | Al2O3-np | Perovskite | PCBM-60 | TIPD; ZnO-np | Ag",
                          "SLG | ITO | CuInS2 | Al2O3-np | Perovskite | TIPD; ZnO-np | Ag",
                          "SLG | ITO | CuO | Perovskite | PC(70)BM | AZO | Al",
                          "SLG | ITO | CuO | Perovskite | PCBM-60 | Ca | Al",
                          "SLG | ITO | CuO | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | CuO | Perovskite | PCBM-70 | AZO | Al",
                          "SLG | ITO | CuO-nw | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | CuOx | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | CuOx | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | CuOx | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CuOx | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | CuPc | PEI | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | CuPc | PEI | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | CuPc | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | CuS-np | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | CuSCN | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | CuSCN | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | AZO-np | Ag",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | AZO-np | Ag-nw",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | PDINO | Al",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | CuSCN | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | CuSCN-2D | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | CuSCN-3D | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | CuSCN-nw | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | CzPAF-TPA | Perovskite | PCBM-60 | ZnO | Ag",
                          "SLG | ITO | CzPAF-TPA | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | ITO | DA-PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | DBFMT | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | DBTMT | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | DFH | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | DFTAB | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | DH-MeO-FDPA | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | DMZ | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | DNA-CTMA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | DPA-ANR-DPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | DPC60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | EDTA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | EGO-PPV | PFN-P2 | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | EGO-PPV | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | F6-TCNNQ | TaTm | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | F6-TCNNQ | TaTm | Perovskite | C60 | C60; Phlm | Ag",
                          "SLG | ITO | F6-TCNNQ; TaTm | Perovskite | C60 | C60; PhIm | Ag",
                          "SLG | ITO | F6-TCNNQ; TaTm | Perovskite | C60 | C60; Phlm | Ag",
                          "SLG | ITO | F6-TCNNQ; TaTm | TaTm | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | F6-TCNNQ; TaTm | TaTm | Perovskite | C60 | C60; PhIm | Ag",
                          "SLG | ITO | F6-TCNNQ; TaTm | TaTm | Perovskite | C60 | C60; Phlm | Ag",
                          "SLG | ITO | F6-TCNNQ; TaTm | TaTm | Perovskite | C60; PhIm | Ag",
                          "SLG | ITO | F6-TCNNQ; TaTm | TaTm | Perovskite | C60; Phlm | Ag",
                          "SLG | ITO | FB-OMeTPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | FDPI | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | FPDI | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | FPI-PEIE | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | FPI-PEIE | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | FT-OMeTPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | FrGO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Fullerene-SAM | Perovskite | CuSCN | Carbon",
                          "SLG | ITO | Fullerene-SAM | Perovskite | CuSCN | Ta:Wox-np | Carbon",
                          "SLG | ITO | Fullerene-SAM | Perovskite | P3HT | Carbon",
                          "SLG | ITO | Fullerene-SAM | Perovskite | P3HT | Ta:Wox-np | Carbon",
                          "SLG | ITO | GeO2 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | Grafted rGO; Polyacrylonitrile | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Graphene oxide | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | Graphene oxide | PEDOT:PSS | Perovskite | PCBM-60 | Carbon-tape",
                          "SLG | ITO | Graphene oxide | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | Graphene oxide | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | ITO | Graphene oxide | PFNBr | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | Graphene oxide | PTAA | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | Graphene oxide | PTFTS | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | Graphene oxide | Perovskite | C60 | BCP | Au",
                          "SLG | ITO | Graphene oxide | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | Graphene oxide | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Graphene oxide | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Graphene oxide | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | Graphene oxide | Perovskite | PCBM-60 | BCP | LiF | Al",
                          "SLG | ITO | Graphene oxide | Perovskite | PCBM-60 | Carbon-tape",
                          "SLG | ITO | Graphene oxide | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | Graphene oxide | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | Graphene oxide; MoOx-np | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Graphene oxide; PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Graphene oxide; PEDOT:PSS | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | Graphene oxide; ZnO-np | Perovskite | Au",
                          "SLG | ITO | Graphene | AuCl3 | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | Graphene | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | Graphene | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Graphne oxide | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | H1 | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | H2 | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | H3 | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | H4 | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | H5 | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | H6 | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | H7 | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | HTM-1 (bifluorenylidene-based) | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | HTM-2 (bifluorenylidene-based) | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | HTM-3 (bifluorenylidene-based) | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | IBF-Ep | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ICMA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | IDTT2FPDI | Perovskite | PTAA | Ag",
                          "SLG | ITO | ITO | NiO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | ITO-nw | TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | In2O3 | Perovskite | PTAA | Au",
                          "SLG | ITO | In2O3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | In2O3-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | In2O3-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | In2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | In2O3-c | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | IrTiOx-c | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | JW6 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | JW7 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | JW8 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | L-F | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | L-H | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | LiF | PEDOT:PSS | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | LiQ; PEIE | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | Lignosulfonate; PEDOT:PSS; PDA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | M115 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | M116 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | M117 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | M118 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | MC-43 | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | MC6Cz-9-NPC | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | MC6Cz-TPA | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | MC8-9-NPC | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | MC8-TPA | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | MEH-PPV-20 | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MEH-PPV; PFN | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | MFGO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | MPA-BTI | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MPA-BTTI | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MSAPBS | Perovskite | Spiro-MeOTAD | Au | Ag",
                          "SLG | ITO | MeO-2PACz | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | MeO-2PACz | Perovskite | C60 | SnO2-c | Cu",
                          "SLG | ITO | MeO-FDPA | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | MeO-PPV | PFN-P2 | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | MeO-PPV | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | MeO-TPD | PEDOT:PSS | Perovskite | C60 | Ag",
                          "SLG | ITO | MgO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | MgO-c | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | MgZnO | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | ITO | MoO3 | Au | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | MoO3 | CH3NH3PbI3 | C60 | TmPyPB | Ag",
                          "SLG | ITO | MoO3 | NPB | PbI2 | C60 | BCP | Al",
                          "SLG | ITO | MoO3 | NPB | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | MoO3 | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "SLG | ITO | MoO3 | PEDOT:PSS | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | MoO3 | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | MoO3 | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | MoO3 | PTAA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MoO3 | Perovskite | Alq3; C60 | LiF | Ag",
                          "SLG | ITO | MoO3 | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MoO3 | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | MoO3 | Perovskite | C60 | Ca | Al",
                          "SLG | ITO | MoO3 | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | MoO3 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | MoO3 | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | MoO3 | TBDI | Perovskite | IPH | PDINO | Ag",
                          "SLG | ITO | MoO3 | TPA-2,7-FLTPA-TPA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MoO3 | TPA-3,6-FLTPA-TPA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MoO3 | TPBi | TaTm | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MoO3 | TPTPA | Perovskite | 3TPYMB | C60 | TmPyPB | Ag",
                          "SLG | ITO | MoO3 | TPTPA | Perovskite | B4PyMPM | C60 | TmPyPB | Ag",
                          "SLG | ITO | MoO3 | TPTPA | Perovskite | C60 | TmPyPB | Ag",
                          "SLG | ITO | MoO3 | TPTPA | Perovskite | TmPyPB | C60 | TmPyPB | Ag",
                          "SLG | ITO | MoO3 | TaTm | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MoO3 | TaTm | Perovskite | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MoOx | F4-TCNQ | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | MoOx | PEDOT:PSS | Perovskite | PCBM-60 | TOPD | Ag",
                          "SLG | ITO | MoOx | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | MoOx | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | MoOx | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | MoOx | TPTPA | Perovskite | C60 | Al",
                          "SLG | ITO | MoOx | TPTPA | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | MoOx | TaTm | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | MoS2 | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | MoS2 | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | MoS2 | Perovskite | PCBM-60 | BCP | LiF | Al",
                          "SLG | ITO | MoS2 | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | MoS2; PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | MoS2; TiO2-np | Perovskite | Au",
                          "SLG | ITO | N,N\u2010di\u2010p\u2010methylthiophenylamine | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | N1,N3,N5-tris(4-n-butylphenyl)-N1,N3,N5-triphenylbenzene-1,3,5-triamine | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | NBNDD | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | NBP-BC | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NDI-P | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | NO-Graphene-QDs | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NP-BC | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NPB | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | NPB | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | NPB | Perovskite | PCBM-60 | PDI-Br | Ag",
                          "SLG | ITO | NPB; PTAA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | NTPA | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Nb2O5 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Ni | NiMgO | PVP | Perovskite | PCBM-60 | ZnMgO | Al",
                          "SLG | ITO | Ni | NiMgO | Perovskite | PCBM-60 | ZnMgO | Al",
                          "SLG | ITO | Ni | PEDOT:PSS | Perovskite | C60 | Al",
                          "SLG | ITO | Ni-acetate | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | NiCo2O4 | Perovskite | C60; PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | NiCo2O4 | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | NiCo2O4 | Perovskite | PS | C60 | BCP | Ag",
                          "SLG | ITO | NiCo2O4-np | Perovskite | PCBM-70 | Al",
                          "SLG | ITO | NiMgLiO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiMgO | PVP | Perovskite | PCBM-60 | ZnMgO | Al",
                          "SLG | ITO | NiMgO | Perovskite | PCBM-60 | ZnMgO | Al",
                          "SLG | ITO | NiO | BrBA | Perovskite | PCBM-60 | C60 | Ag",
                          "SLG | ITO | NiO | PS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | NiO | PS | Perovskite | PS | PCBM-60 | Ag",
                          "SLG | ITO | NiO | Perovskite | C60 | Zr(AcAc) | Ag",
                          "SLG | ITO | NiO | Perovskite | C60 | bis-C60 | Ag",
                          "SLG | ITO | NiO | Perovskite | C60; PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | NiO | Perovskite | Nb2O5 | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBBz | BCP | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBM-60 | CD | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBM-60 | PEOz | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBM-60 | PN6 | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBM-60 | ZSO-np | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBM-60:C60 | bis-C60 | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBPy | BCP | Ag",
                          "SLG | ITO | NiO | Perovskite | PCBTh | BCP | Ag",
                          "SLG | ITO | NiO-c | 1ab | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | 1bb | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | Al2O3-mp | Perovskite | PCBM-60 | Rhodamine 101 | Ag | Au",
                          "SLG | ITO | NiO-c | Al2O3-mp | Perovskite | PCBM-60 | Rhodamine 101 | Au | Al",
                          "SLG | ITO | NiO-c | Au-np | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | NiO-c | BBA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | CuGaO2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | Cysteine | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | ITO | NiO-c | DEA | Perovskite | C60 | Ag",
                          "SLG | ITO | NiO-c | DEA | Perovskite | C60 | PN4N | Ag",
                          "SLG | ITO | NiO-c | DEA | Perovskite | PCBM-60 | PN4N | Ag",
                          "SLG | ITO | NiO-c | EPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | FAD | Perovskite | PCBM-70 | AgAl",
                          "SLG | ITO | NiO-c | MOF-808 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | Mercaptoethylamine chlorate | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | ITO | NiO-c | Mg(AcO)2 | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | NiO-c | N749 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | NBP-BC | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | NP-BC | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | NiO-c | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | NiO-c | NiO-mp | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | NiO-c | NiO-mp | Perovskite | PCBM-70 | BCP | Al",
                          "SLG | ITO | NiO-c | NiO-mp | Perovskite | ZnO-mp | ZnO-np | Ag",
                          "SLG | ITO | NiO-c | NiO-mp | Perovskite | ZnO-np | Ag",
                          "SLG | ITO | NiO-c | NiO-np | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | NiO-c | NiO-nw | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | PCDTBT | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | NiO-c | PEAI | Perovskite | PCBM-60 | AgAl",
                          "SLG | ITO | NiO-c | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | NiO-c | PEDOT:PSS | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | NiO-c | PFN-P2 | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | NiO-c | PNP-BC | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | PTAA | Perovskite | C60 | SnO2 | BCP | Cu",
                          "SLG | ITO | NiO-c | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | PTAA | Perovskite | PCBM-60 | Mg | Ag",
                          "SLG | ITO | NiO-c | Perovskite | 2,6-Py | PCBM-60 | PEI | Ag",
                          "SLG | ITO | NiO-c | Perovskite | ADAHCl | C60 | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | BCP; PCBM-60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | Bi2S3 | Au",
                          "SLG | ITO | NiO-c | Perovskite | C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | NiO-c | Perovskite | C60 | BCP | Au",
                          "SLG | ITO | NiO-c | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | NiO-c | Perovskite | C60 | SnO2-c | ITO",
                          "SLG | ITO | NiO-c | Perovskite | C60 | SnO2-c | ITO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | C60 | SnO2-c | ITO | Au",
                          "SLG | ITO | NiO-c | Perovskite | C60 | SnO2-c | ITO | Cu",
                          "SLG | ITO | NiO-c | Perovskite | C60 | SnO2-np | Ag",
                          "SLG | ITO | NiO-c | Perovskite | C60 | SnS | Ag",
                          "SLG | ITO | NiO-c | Perovskite | C60 | TmPyPB | Ag",
                          "SLG | ITO | NiO-c | Perovskite | C60 | ZnO-c | Al",
                          "SLG | ITO | NiO-c | Perovskite | C60 | ZnSe | Ag",
                          "SLG | ITO | NiO-c | Perovskite | C60 | bis-C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | CdZnSeS-QDs | C60 | BCP | Cu",
                          "SLG | ITO | NiO-c | Perovskite | CeOx | Ag",
                          "SLG | ITO | NiO-c | Perovskite | FAD | PCBM-70 | AgAl",
                          "SLG | ITO | NiO-c | Perovskite | FSIP | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | HATNA-F6 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | HATNAS3C7 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | HATNAS3C7-C3h | Ag",
                          "SLG | ITO | NiO-c | Perovskite | HATNAS3C7-Cs | Ag",
                          "SLG | ITO | NiO-c | Perovskite | HATNASO2C7-Cs | Ag",
                          "SLG | ITO | NiO-c | Perovskite | HATNASOC7-Cs | Ag",
                          "SLG | ITO | NiO-c | Perovskite | ICBA | Al",
                          "SLG | ITO | NiO-c | Perovskite | ICBA | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | ICBA; PCBM-60 | Al",
                          "SLG | ITO | NiO-c | Perovskite | ITIC | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | LiF | C60 | SnO2-c | ITO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | LiF | C60 | SnO2-c | ZnSnO2-c | ITO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | LiF | C60 | TmPyPB | Ag",
                          "SLG | ITO | NiO-c | Perovskite | N2200 | bis-C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | N2200; PFN-Ox | bis-C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | Nb2O5 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | Nb2O5 | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | AZO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | AZO-np | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | AZO-np | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | AZO-np | ITO",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | AgAl",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | AgAl-np | Au-np | LiF | AgAl",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | AgAl-np | LiF | AgAl",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | BCP | AZO-c | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | BCP | TeO2 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | BCP | TiO2-c | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Bis-FIMG | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Bis-FITG | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Ca | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Ca(acac)2 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Cu",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | DPO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | IZTO",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Mg | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | PEIE | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | PEIE | Cu",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Phen-NaDPO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Phen-NaDPO; Sn(SCN)2 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | PrCMA | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Rhodamine 101 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Rhodamine 101 | Au | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Rodhamine 101 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | SnO2-c | ITO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | SnO2-c | SnZnO | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | SnO2-c | SnZnO | ITO",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | TiO2 | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | TiO2-c | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | TiO2-c | Al | Au",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnMgO | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnO | ITO",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnO | IZTO",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnO-np | DPO | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnO-np | DPO | ITO",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | ZnO-np | ITO",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Zr(acac)4 | Al",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | Zr(acac)4 | Au",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60 | bis\u2010C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60-MCM | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60-PCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60; ICBA | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60; PDI-DA | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-60; PDI-DA | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-70 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PCBM-70 | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PEAI | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PEAI | PCBM-60 | BCP | SnO2-c | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PEAI | PCBM-60 | BCP | SnO2-c | ITO | LiF",
                          "SLG | ITO | NiO-c | Perovskite | PEAI | PCBM-60 | BCP | TeO2 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PN | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PN-F25 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PN-F50 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PTEG-1 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | PbS | PCBM-60 | Al",
                          "SLG | ITO | NiO-c | Perovskite | SnO2-c | AZO | Au",
                          "SLG | ITO | NiO-c | Perovskite | SnO2-c | AZO | Ni | Al | Ni",
                          "SLG | ITO | NiO-c | Perovskite | SnO2-c | Au",
                          "SLG | ITO | NiO-c | Perovskite | SnO2-np | Ag",
                          "SLG | ITO | NiO-c | Perovskite | ZnO | PTFE | Ag",
                          "SLG | ITO | NiO-c | Perovskite | ZnO-c | Ag",
                          "SLG | ITO | NiO-c | Perovskite | ZnO-np | Ag",
                          "SLG | ITO | NiO-c | Perovskite | ZnO-np | Al",
                          "SLG | ITO | NiO-c | Perovskite | ZnO-np | Au",
                          "SLG | ITO | NiO-c | Perovskite | ZnO-np | BCP | Ag",
                          "SLG | ITO | NiO-c | Perovskite | ZnO-np | C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | bis-C60 | Ag",
                          "SLG | ITO | NiO-c | Perovskite | c-HATNA | bis-C60 | Ag",
                          "SLG | ITO | NiO-c | PhNa-1T | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | NiO-c | SY1 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | SY2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | SY3 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | SY4 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | Sb2O3-QDs | Perovskite | Sn2O3-ns | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | NiO-c | Sn2O3-QDs | Perovskite | PCBM-60 | C60 | Ag",
                          "SLG | ITO | NiO-c | UiO-66 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-c | YC-1 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-mp | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | ITO | NiO-np | 2,2\u2019-BiPy | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | NiO-np | 2,2\u2019-BiPy | Perovskite | PCBM-60 | Zr(acac)4 | Ag | CsF",
                          "SLG | ITO | NiO-np | Al2O3-mp | Perovskite | PCBM-60 | Rhodamine 101 | Ag",
                          "SLG | ITO | NiO-np | Br-BPA-SAM | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | NiO-np | Choline chloride | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | Choline chloride; Glycerol | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | Glycerol | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | KCl | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | NiO-np | M2 | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-np | M3 | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-np | ME1 | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-np | ME2 | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-np | ME3 | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-np | NaCl | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | NiO-np | PAS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | PMMA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | PSS | Perovskite | PSS | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | PSS | Perovskite | PSS | PCBM-60 | ZnO-np | ITO",
                          "SLG | ITO | NiO-np | PTAA | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-np | PTAA | Perovskite | PCBM-60 | ZnO-np | ZnO | ITO | MgF2",
                          "SLG | ITO | NiO-np | Perovskite | Ag",
                          "SLG | ITO | NiO-np | Perovskite | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | NiO-np | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | NiO-np | Perovskite | C60 | bis-C60 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | C60 | bis-C60 | ITO | Ni | Al",
                          "SLG | ITO | NiO-np | Perovskite | C60; PCBM-60 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | C60; PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | C60; PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | C60; PCBM-60 | Zr(acac)4 | Cu",
                          "SLG | ITO | NiO-np | Perovskite | C60; PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | COi8DFIC | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | CeOx | Ag",
                          "SLG | ITO | NiO-np | Perovskite | Choline chloride | C60 | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | EVA | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | ICBA | PrC60MAI | Ag",
                          "SLG | ITO | NiO-np | Perovskite | IT-4f | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | ITIC | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | NDI-BiSe | Ag",
                          "SLG | ITO | NiO-np | Perovskite | NDI-Se | Ag",
                          "SLG | ITO | NiO-np | Perovskite | NDI-TriSe | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Ag | Ta2O5",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Ag-nw",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Ag-nw | C60",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Ag-nw | PCBM-60",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | BCP | Ag | SiO2 | ZnS | Ag | ZnS",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | F-R-COOK | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | PDINO | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Ppz | Al",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | PrC60MAI | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | PrCMA | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Rhodamine 101 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | TiO2-c | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-c | Al",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | ITO | MgF2",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | PEI | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | PEI | D-Sorbito; PEDOT:PSSl | Ag-nw | PET",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | ZnO-c | Al",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | ZnO-c | ITO | Al",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | ZnO-c | ITO | MgF2",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Zr(acac)4 | Ag | CsF",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Zr(acac)4 | Au",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Zr(acac)4 | PEI | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-60 | Zr(acac)4 | PEI | Ag | Ta2O5",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-70 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PCBM-70 | Rhodamine 101 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | PEAI | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | Perovskite | TiO2-np | Ag",
                          "SLG | ITO | NiO-np | Perovskite | TiO2-np | C60; PCBM-60 | Ag",
                          "SLG | ITO | NiO-np | Perovskite | ZnO | C60 | Ag",
                          "SLG | ITO | NiO-np | Spiro-MeOTAD | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | NiO-np | TPI | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | TPI-2MEO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | TPI-4MEO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiO-np | TPI-6MEO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiPc | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | NiPcS4 | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | NiPcS4 | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | OCNR; PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | P3CT | Perovskite | C60 | Al",
                          "SLG | ITO | P3CT | Perovskite | CPTA-E | Al",
                          "SLG | ITO | P3CT | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | P3CT | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | P3CT | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | P3CT | Perovskite | PFPDI | Ag",
                          "SLG | ITO | P3CT-CH3NH2 | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-K | CuZnS | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | P3CT-K | Perovskite | PCBM-60 | C60 | Al",
                          "SLG | ITO | P3CT-K | Perovskite | PCBM-60 | SnO2-c | Al",
                          "SLG | ITO | P3CT-K | Perovskite | PCBM-60 | ZnO | Ag",
                          "SLG | ITO | P3CT-K | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | P3CT-K | Perovskite | PCBM-60 | ZnO-c | Al",
                          "SLG | ITO | P3CT-K | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | P3CT-N | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-N | Perovskite | IT-4F | s-Bphen | Ag",
                          "SLG | ITO | P3CT-N | Perovskite | IT-4H | s-Bphen | Ag",
                          "SLG | ITO | P3CT-N | Perovskite | IT-4M | s-Bphen | Ag",
                          "SLG | ITO | P3CT-N | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | P3CT-N | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | P3CT-N | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-N | Perovskite | PCBM-60 | C60 | BCP | Cu",
                          "SLG | ITO | P3CT-N | Perovskite | PCBM-60 | C60 | TPBi | Cu",
                          "SLG | ITO | P3CT-N | Perovskite | TMTA | PCBM-60 | C60 | TPBi | Cu",
                          "SLG | ITO | P3CT-Na | PASP | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | B2F | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | C60; PDI | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | IDT6CN | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | IDT6CN | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | IDT6CN-4F | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | IDT6CN-4F | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | IDT6CN-TM | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | IDT6CN-TM | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | IDTCN | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | IDTCN | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCP-M | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCPTC | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCPTC | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCPTC-Se | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCPTC-Se | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCPTC-Se | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCPTC-Th | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCPTC-Th | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | ITCPTC-Th | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | NDP-V | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | NDP-V | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | PCBM-60 | C60 | Al",
                          "SLG | ITO | P3CT-Na | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | PCBM-60 | HDAC | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | PCBM-60 | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | PDI | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | PDI-T | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | PDI-V | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | TPE-DPP12 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | TPE-DPP16 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | TPE-DPP4 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | TPE-DPP6 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | TPE-DPP8 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | TPE-ISO4 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | TPE-PDI4 | C60 | BCP | Ag",
                          "SLG | ITO | P3CT-Na | Perovskite | TPE-PDI4 | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | P3Ct | Perovskite | PCBM-60 | C60 | BCP | Au",
                          "SLG | ITO | P3HT | Al2O3-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | P3HT | Perovskite | C60 | BCP | CU",
                          "SLG | ITO | P3HT | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | P3HT | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | P3HT | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | P3HT | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | P3HT; PFN | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | P3OT | Perovskite | C60 | BCP | CU",
                          "SLG | ITO | P8TTT | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PAF-68 | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PANI | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | PANI-PAMPSA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PANI-PAMSA | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | PANI:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PANI:PSS | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | PASQ-IDT | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PB2T-O | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | PB2T-S | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | PB2T-SO | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | PBT | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PCBDAN | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PCBM-60 | BCP | Perovskite | PEDOT:PSS | Ag",
                          "SLG | ITO | PCBM-60 | BCP | Perovskite | PEDOT:PSS | Al | Ag",
                          "SLG | ITO | PCBM-60 | EGME | Perovskite | PTAA | Au",
                          "SLG | ITO | PCBM-60 | ICL | Perovskite | PTAA | Au",
                          "SLG | ITO | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | ITO | PCBM-60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | PCBM-60 | Perovskite | PEDOT:PSS | Ag",
                          "SLG | ITO | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag | MoO3",
                          "SLG | ITO | PCBM-60; PCBDAN | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PCBM-60; PDI-DA | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | PCBM-60; PEI | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | PCBM-60; PEI | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "SLG | ITO | PCBM-70 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | PCBM-70 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | PCBZANT | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | PCDTBT | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PCDTBT; PFN | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PCP-Na | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PCT | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PDTON35 | SnO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | PEDOS:PSS | Perovskite | C60; C70 | Ag",
                          "SLG | ITO | PEDOS:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOS:PSS | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | PEDOS:PSS | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | PEDOT | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | PEDOT:GSL | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | PEDOT:LS | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | PEDOT:MNSF | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:P(SS-co-TFPMA) | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | 4-bromobenzenediazonium tetrafluoroborate | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | 5,6,11,12-Tetraphenylnaphthacene | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Ag@SnO2-nw | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | Al2O3-mp | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Al2O3-np | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Au-nanobipyramide; VOxs | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Au-np; VOx | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Au-nw; VOx | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Au@SiO2-np | Perovskite | PCBM-60 | Rhodamine 101 | Ag",
                          "SLG | ITO | PEDOT:PSS | Au@poly(4-styrenesulfonate) | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | PEDOT:PSS | AuAg@SiO2-np | Perovskite | TPCBM | PFN | Ag",
                          "SLG | ITO | PEDOT:PSS | Black phosphorous QDs | Perovskite | PCBM-60 | ZrAcac | Ag",
                          "SLG | ITO | PEDOT:PSS | Carbon-nt | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | CrO3 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | CuI | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | PEDOT:PSS | DPP-DTT | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Dex-CB-MA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | Etylene glycol | Perovskite | Liq | Al",
                          "SLG | ITO | PEDOT:PSS | FASnI3 | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | GeO2 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Graphene oxide | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Graphene oxide | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Graphene oxide; PEG | Perovskite | PCBM-60 | MoS2 | Ag",
                          "SLG | ITO | PEDOT:PSS | MoO3 | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | MoO3 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | MoS2 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Na3C6H5O7 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | NaI | Perovskite | PCBM-60 | AZO | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | NiO-c | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | NiO-c | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | NiPcS4 | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | P3HT | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | PBDB\u2010T; ITIC | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | PCDTBT | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | PCDTBT | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | PCPDTBT | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | PCP\u2010Na | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | PEDOT:GSL | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | C60 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | PEG | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | PEI | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | PEI | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | PEI-HI | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | PFI | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | PFN | Perovskite | PCBM-60 | Zr(acac)4 | Al",
                          "SLG | ITO | PEDOT:PSS | PFN-P1 | Perovskite | PCBM-60 | PFN-P2 | Ag",
                          "SLG | ITO | PEDOT:PSS | PSS-Na | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | PSS-Na | Perovskite | PCBM-60 | Ag-nw",
                          "SLG | ITO | PEDOT:PSS | PSS-Na | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | PSS-Na | Perovskite | PCBM-60 | PEI | Ag-nw",
                          "SLG | ITO | PEDOT:PSS | PSS-Na | Perovskite | PCBM-60 | PEI | Al",
                          "SLG | ITO | PEDOT:PSS | PSS-Na | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | PEDOT:PSS | PSS-Na | Perovskite | PCBM-60 | ZnO | PEI | Al",
                          "SLG | ITO | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | C60 | BCP | Cu",
                          "SLG | ITO | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | FPyBr | Al",
                          "SLG | ITO | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | TiO2 | Al",
                          "SLG | ITO | PEDOT:PSS | PTB7 | Perovskite | PCBM-70 | C70 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | PTMA-BP | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | PTPADCF3FSONa | Perovskite | PCBM-60 | PN4N | Ag",
                          "SLG | ITO | PEDOT:PSS | PTPAFSONa | Perovskite | PCBM-60 | PN4N | Ag",
                          "SLG | ITO | PEDOT:PSS | PTPD | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | ITO | PEDOT:PSS | PbI2 | PDPP3T; PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | PbI2 | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovsite | Boron subphthalocyanine chloride | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovsite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskire | PCBM-60 | CIL | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | (2Z,2\u2032Z)-3,3\u2032- (5,5\u2032-(2,7-dioctyl-1,3,6,8-tetraoxo-1,2,3,6,7,8-hexahydrobenzo [lmn][3,8]phenanthroline-4,9-diyl)bis (thiophene-5,2-diyl))bis(2-(4-(trifluoromethyl)phenyl) acrylonitrile) | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | (2Z,2\u2032Z)-3,3\u2032-(5,5\u2032-(2,7-dioctyl-1,3,6,8-tetraoxo-1,2,3,6,7,8-hexahydrobenzo[lmn][3,8] phenanthroline-4,9-diyl)bis(thiophene-5,2-diyl))bis(2-(3,5-bis (trifluoroomethyl)phenyl) acrylonitrile) | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | (DTYM-NDI-DTYA)2 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | B2F | C60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | B2T | C60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | BAFB | ZnO-np | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | BCP | C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | BCP; PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | BPB-M | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | BPTI | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | BPTI | PDI-C4 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Br-PDI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Br-PDI | ZnO-np | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | BrTPA-PCBM | bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | B4PyMPM | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Ag | Alq3",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Ag | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | Bphen | Ca | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | ITO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | LiF | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | SnO2-c | ITO | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | SnO2-c | IZO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | TmPyPB | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | ZnO-c | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | Zr(acac)4 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60 | bis\u2010C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60-N | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60; PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60; PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C60; PCBM-60-DPM-OE | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C70 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C70 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C70 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | C70 | TmPyPB | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | CNTPA-PCBM | bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | CYTOP | PCBM-60 | PEIE | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Carbon | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | CdSe | LiF | Au | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | CdSe-QDs; PCBM-60 | Rhodamine 101 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Corannulene-derivative | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | DBP | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | DNDIF3 | C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | DS1 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | DS2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | F-PDI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | F-PDI | ZnO-np | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | F1 | BCP | Mg | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | F16CuPc | Bphen | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | F2 | BCP | Mg | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | F3 | BCP | Mg | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | F4 | BCP | Mg | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | F8BT | C60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | FNCA | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Fullerene-2a | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Fullerene-2b | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Fullerene-2c | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | GDY-Tz-CH2(CH2)16CH3; PCBM-60 | C60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Graphene | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | H-PDI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | H-PDI | ZnO-np | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | HAT-CN | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | IBF-Ep | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | IC60BA | bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ICBA | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ICBA | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ICBA | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ICBA | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ICBA | bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ICBA | bis\u2010C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ICTA | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | IPH | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ITIC | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ITIC | PCBM-60 | PEIE | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ITIC | PEI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ITIC | PEIE | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ITIC; PCBM-60 | PEI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | LiF | Au | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | LiSPS | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Liq | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | MPMIC60 | ZnO-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Mix-DMEC70 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | MoO3 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Mono-PCBOE | ZnO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | N2200 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | N2200 | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | N2200 | ZnO-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDI-BTH1 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDI-BTH2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDI-ID | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDI-ID(RR) | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDI-ID(RS) | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDI-PM | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDI-PhE | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDI3HU-DTYM2 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDIF1 | C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | NDIF2 | C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | OCA | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P(NDI2DT-T2) | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P(NDI2DT-TTCN) | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P(NDI2OD-T2) | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P(NDI2OD-T2) | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P(NDI2OD-T2); PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P(NDI2OD-TET) | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P1 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P3 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P3HT | MoO3 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | P4 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PC(70)BM | AZO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | Ag | SnO2-c",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | Ag-nw",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | Al | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | ITO | MgF2",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | SnO2-c | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | SnO2-c | Ag | SnO2-c",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AZO-np | SnO2-c | Cu | SnO2-c",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag | ITO | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag | MoO3",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag | PMMA",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag | PMMA | Teflon",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag | Teflon",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag-nanocubes | BCP | Ag | MoO3",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag-np | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag-nw",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag-nw | ZnO-np",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AgAl",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | AgZn | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Alq3 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Au | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP I Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | AZO | ITO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag | MoO3",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag | V2O5",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Al | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Cu",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Mg | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP; TZ-1 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP; TZ-2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP; TZ-3 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP; TZ-4 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BMIM-OTF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BMIM-OTF | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BMIM-OTF | Cu",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BMIM-OTF | ITO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ba | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Cs2CO3 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Cs2CO3; MoO3 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Bphen; Ir(MDQ)2(acac) | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60 | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60-ETA | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60-N | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C60SB; TBAI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C70 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C70 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | C70 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | CTAB | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ca",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ca | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Carbon-tape",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Cr | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Cr2O3:Cr",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Cs2CO3 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Cs2CO3 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Cu",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | DEME-BF4 | ITO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | DEME-TFSI | ITO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | DMAPA-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | DTAB | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | EFGnPs-F | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | EFGnPs-H | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Et2PrNMe-CF3BF3 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | F-60; bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | F-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | FPI-PEIE | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Field's metal",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | GaIn",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ITO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | LiF | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Lif | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | MATS | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | MUTAB | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Mg | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Mg | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | MoS2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ni | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | P3HT; PCBM-60Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | P3TMAHT | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | P4V4 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PCBC | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PCBC | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PCBDANI | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PCBDANI | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PCBM-60 | TmPyPB | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PDI-Br | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PDINO | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PDINO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | PEDOT:PSS | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEI | PH 1000",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Ag | MoO3",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Ag | MoO3 | Back-reflector",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Cu",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PEL | PH 1000",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PFN | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PFN-Br | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PFN-Br | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PFN-P1 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PFN-P2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PFN; ZnO-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PH 1000",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PN4N | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PN4N | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PTCBI | Ag | WO3 | PTCBI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | PVP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Phen-NaDPO | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Phen\u2010NaDPO | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Phosphoniumfluorene | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Poly(2-ethyl-2-oxazoline) | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Rhodamin 101 | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | C60 | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Rodhamine 101 | C60 | Rodhamine 101 | LiF | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TBAI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TIPD | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TOPD | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TPBi | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TPBi | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TPPI | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TiO2 -np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TiO2 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TiO2-c | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TiO2-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | TmPyPB | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnMgO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-c | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-c | Ag-nw",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | AZO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Ag-nw",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Ag-nw | Dielectric-Mirror",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Zr(acac)4 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZrAcac | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | bis-C70 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | bis\u2010C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | bis\u2010C60 | ITO",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | pi-PFE1 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | pi-PFE2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | pi-PFE3 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | pi-PFE4 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60; F8BT | C60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60; ICBA | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60; PMMA | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60; PS-b-PEO | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60; PTP-DFBT | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-60; TDPP-CN4 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | AZO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | AZO-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | AZO-np | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | C60 | AUH | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | C60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | C70 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | Fe2O3 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | PN4N | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | TiO2 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | TiO2-c | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | ZnO-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70 | ZrO2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-70; ZnO-np | TiO2-c | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-derivate10 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-derivate11 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-derivate12 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCBM-derivate13 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCTDI | Cr | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PCTDI | Cr | Cu",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PDI | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PDI | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PDI-EH | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PDPP3T; PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PDPP3T; PCBM-60 | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PDPT | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PDTP-DFBT:PCBM-60 | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PEAI | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PMDPT | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PNDI-2T | PEIE | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PNDI20D-TT | ZnO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PNVT-8 | ZnO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PPDIDTT | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PS | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PTCBI | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PTCBI | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PTCDI | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PTEG-1 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PTEG-1 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PTTI-1 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PTTI-2 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | PYPH | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Phenyltrichlorosilane | PCBM-60 | Ca | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Polystyrene | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | QCAPZ | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | S-acetylthiocholine chlorde | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | S-acetylthiocholine chloride | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | TDPP-CN4 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | TDTP | LiF | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | TMPA-Cl | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | TPA-PCBM | bis-C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | TPCBM | PFN | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | Ti | Au",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ZnO-c | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ZnO-c | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ZnO-np | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | ZnO-np | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | a-DMEC70 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | a-PTCDI | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | bis-C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | bis-PCBM | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | bis-PCBOE | ZnO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | bis\u2010C60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | d-PCBM-60; PCBM-60 | Ca | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | diPDI | TiO2 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | diPDI:DMBI | TiO2 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | pBTT | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | pBTTz | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | pSNT | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskite | t-BPTI | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | t-BPTI | PDI-C4 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskite | tris-PCBOE | ZnO | Al",
                          "SLG | ITO | PEDOT:PSS | Perovsksite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskte | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | Perovskte | PCBM-60 | BCP | IZO",
                          "SLG | ITO | PEDOT:PSS | Perovskte | PCBM-60 | TIPD | Al",
                          "SLG | ITO | PEDOT:PSS | Perovskte | PCBM-70 | Ag",
                          "SLG | ITO | PEDOT:PSS | Perylene | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Perylene | Perovskite | PCBM-70 | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | 3TPYMB | Au",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | Au",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | C60 | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | IPH | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | IPH | PDINO | Ag",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | IPH | PFNBr | Ag",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | PCBM-60 | Au | LiF",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | PEDOT:PSS | PolyTPD | Perovskite | PCBM-60 | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | Porphyrin | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Propionic acid | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEDOT:PSS | Pyrene | Perovskite | PCBM-70 | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | Rubrene | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | Si-np | Perovsksite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | SrGO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | TPD | Perovskite | PCBM-60 | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | TS-CuPc | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | V2O5 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PEDOT:PSS | V2Ox | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS | VB-DAAF | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:PSS | VB-MeO-FDPA | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | PEDOT:PSS | VOx | Perovskire | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | VOx | Perovskire | PCBM-60 | CIL | Al",
                          "SLG | ITO | PEDOT:PSS | VOx | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | Vox | Perovskite | N2200; PCBM-70; TT | Al",
                          "SLG | ITO | PEDOT:PSS | Vox | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | X-OTPD | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | X-QUPD | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS | pTPD | Perovskite | IPB | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | pTPD | Perovskite | IPH | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | pTPD | Perovskite | PCBB | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | pTPD | Perovskite | PCBH | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS | pTPD | Perovskite | PCBM-60 | Ba | Ag",
                          "SLG | ITO | PEDOT:PSS-NH2-OH | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PEDOT:PSS; PEG | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PEDOT:PSS\uff5cPerovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | PEDOT:SAF | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PEDOT:SSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PEG; SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEG; ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEI | ICBA | Perovskite | PTAA | MoO3 | Ag",
                          "SLG | ITO | PEI | ICBA | Perovskite | PTAA | MoO3 | Au",
                          "SLG | ITO | PEI | PCBM-60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | PEI | PCBM-60 | Perovskite | PCDTBT | MoO3 | Ag",
                          "SLG | ITO | PEI | PCBM-60 | Perovskite | PTAA | Ag",
                          "SLG | ITO | PEI | PCBM-60 | Perovskite | PTAA | MoO3 | Ag",
                          "SLG | ITO | PEI | PCBM-60 | Perovskite | PTAA | MoO3 | Au",
                          "SLG | ITO | PEI | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | PEI | PCBM-60 | Perovskite | T1 | MoO3 | Ag",
                          "SLG | ITO | PEI | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | PEIE | C60 | Perovskite | P3HT | MoO3 | Cu",
                          "SLG | ITO | PEIE | C60 | Perovskite | P3HT | MoOx | Cu",
                          "SLG | ITO | PEIE | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEIE | CDIN | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | PEIE | NDI-H | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEIE | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | ITO | PEIE | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEIE | PCBM-60 | Perovskite | Spiro-MeOTAD | MoOx | IO | ITO | Au",
                          "SLG | ITO | PEIE | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEIE | SnO2-np | ITIC | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEIE | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEIE | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEIE | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PEIE | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PETDOT:PSS | Perovskite | PCBM-60 | AZO-np | Ag",
                          "SLG | ITO | PFB | Al2O3-np | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PFBT-Na | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PFI-PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PFN | C60; PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PFN | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PFN | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PFN-2TNDI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PFN-OX | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PFN-OX; ZnO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PFN; PTPD | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PFN; PTPD | Perovskite | PCBM-60 | TiO2 | Al",
                          "SLG | ITO | PFN; TT | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PFN; ZnO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PFO | Al2O3-np | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PII2T8T | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PII2T8TSi | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PMA | Perovskite | C60 | BCP | Au",
                          "SLG | ITO | PMA | TaTm | Perovskite | C60 | BCP | Au",
                          "SLG | ITO | PMT | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PN-P | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PNP-BC | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PPN | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PPP | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PSS-g-PANI | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PSS-g-PANI:PFI | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PT | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PTAA | Al2O3-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PTAA | Car-ETTA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PTAA | LiF | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PTAA | LiF | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | MoS2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PTAA | MoS2 | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | PTAA | PFN | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PTAA | PFN | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PTAA | PFN | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | PTAA | PFN | Perovskite | PCBM-60 | BCP | Cu",
                          "SLG | ITO | PTAA | PFN | Perovskite | PCBM-60 | BCP | Cu | Ag",
                          "SLG | ITO | PTAA | PFN | Perovskite | PCBM-60 | PFN | Ag",
                          "SLG | ITO | PTAA | PFN | Perovskite | PCBM-60 | PFN | Cu-CFNs",
                          "SLG | ITO | PTAA | PFN-Br | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | PFN-P2 | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | PFN-P2 | Perovskite | C60 | LiF | BCP | Cu",
                          "SLG | ITO | PTAA | PFN-P2 | Perovskite | LiF | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | PFNBr | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PTAA | PMMA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PTAA | PMMA | Perovskite | HPDT | PCBM-60 | Bphen | Al",
                          "SLG | ITO | PTAA | PMMA | Perovskite | IDTT2FPDI | PCBM-60 | Bphen | Al",
                          "SLG | ITO | PTAA | PMMA | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | ITO | PTAA | PMMA | Perovskite | PEAI | PCBM-60 | Bphen | Al",
                          "SLG | ITO | PTAA | PS | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | ITO | PTAA | Perovskite | 2PDI-0S | PEIE | Ag",
                          "SLG | ITO | PTAA | Perovskite | 2PDI-2S | PEIE | Ag",
                          "SLG | ITO | PTAA | Perovskite | 2PDI-3S | PEIE | Ag",
                          "SLG | ITO | PTAA | Perovskite | 2PDI-4S | PEIE | Ag",
                          "SLG | ITO | PTAA | Perovskite | Ag",
                          "SLG | ITO | PTAA | Perovskite | Au",
                          "SLG | ITO | PTAA | Perovskite | C60 | Ag",
                          "SLG | ITO | PTAA | Perovskite | C60 | B4PyMPM | Ag",
                          "SLG | ITO | PTAA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PTAA | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | PTAA | Perovskite | C60 | BCP | CU",
                          "SLG | ITO | PTAA | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | C60 | BCP | Graphene",
                          "SLG | ITO | PTAA | Perovskite | C60 | BCP | IZO",
                          "SLG | ITO | PTAA | Perovskite | C60 | PEI | Ag",
                          "SLG | ITO | PTAA | Perovskite | C60 | SnO2 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | C60 | SnO2 | ITO | Ag-grid",
                          "SLG | ITO | PTAA | Perovskite | C60 | SnO2 | IZO",
                          "SLG | ITO | PTAA | Perovskite | C60 | SnO2 | ZTO | IZO",
                          "SLG | ITO | PTAA | Perovskite | C60 | SnO2-c | ZTO | IZO",
                          "SLG | ITO | PTAA | Perovskite | C60 | SnS | Ag",
                          "SLG | ITO | PTAA | Perovskite | C60 | ZnSe | Ag",
                          "SLG | ITO | PTAA | Perovskite | C60-SAM | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | C60; C70 | BCP | Ag",
                          "SLG | ITO | PTAA | Perovskite | C60MC12 | AZO-np | Ag",
                          "SLG | ITO | PTAA | Perovskite | C70 | BCP | Ag",
                          "SLG | ITO | PTAA | Perovskite | CMB | AZO | Ag",
                          "SLG | ITO | PTAA | Perovskite | CMB-vTA | AZO | Ag",
                          "SLG | ITO | PTAA | Perovskite | CMB-vTA | PCBM-60 | AZO | Ag",
                          "SLG | ITO | PTAA | Perovskite | CdI2 | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | Choline chloride | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | Cu",
                          "SLG | ITO | PTAA | Perovskite | ICBA | C60 | BCP | Al",
                          "SLG | ITO | PTAA | Perovskite | ICBA | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | ICBA | bis-C60 | Ag",
                          "SLG | ITO | PTAA | Perovskite | ICBA-tran3 | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | ICTA | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | IDIC | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | IT-M | Zn(acac)2 | Ag",
                          "SLG | ITO | PTAA | Perovskite | ITIC | Zn(acac)2 | Ag",
                          "SLG | ITO | PTAA | Perovskite | ITIC-Th | BCP | Ag",
                          "SLG | ITO | PTAA | Perovskite | ITIC-Th | Zn(acac)2 | Ag",
                          "SLG | ITO | PTAA | Perovskite | LiF | C60 | BCP | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCB-C12 | AZO | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCB-C4 | AZO | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCB-C8 | AZO | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBB-3N | PCBM-60 | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBB-3N-3I | PCBM-60 | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBB-OEG; PCBM-60 | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBB-S-N | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBB-S-N | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBB-S-N | PCBM-60 | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBB-S-N | PCBM-60 | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | AZO | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | AZO-np | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | AZO-np | ITO",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | AZO-np | SnO2-c | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | AZO-np | SnO2-c | Ag-nw",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | AZO-np | SnO2-c | ITO",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Ag-nw",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Ag@Au-np",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | BCP | cu",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Bphen | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Bphen | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | C60 | BCP | Au",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | CMB | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | CMB-vTA | AZO | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | CMB-vTA | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Cr | Au",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Mg | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | PDIN | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | PEIE | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | PFN | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | PFN | Au",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | PFN | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Polyethylimine | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Ti | Au",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | TrNBr | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | Zn(acac)2 | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | ZnO-np | AZO | Ni | Al | MgF2",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | ZnO-np | AZO | NiAl | MgF2",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60 | m-PYBrZnPor | Ag",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60-np | PrC60MA | PEI | Au",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60; MAI | Cu",
                          "SLG | ITO | PTAA | Perovskite | PCBM-60; Sb-Carbon-nw | BCP | Au",
                          "SLG | ITO | PTAA | Perovskite | PCBM-70 | ZnO-np | Al",
                          "SLG | ITO | PTAA | Perovskite | PDIN | Ag",
                          "SLG | ITO | PTAA | Perovskite | PS | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | PTCDA | PO-T2T | Cu",
                          "SLG | ITO | PTAA | Perovskite | Polystyrene | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovskite | SiPc-Py-2 | PTCDA | PO-T2T | Cu",
                          "SLG | ITO | PTAA | Perovskite | TTC | C60 | BCP | Ag",
                          "SLG | ITO | PTAA | Perovskite | Ti | Au",
                          "SLG | ITO | PTAA | Perovskite | Ti | Cu",
                          "SLG | ITO | PTAA | Perovskite-sc | C60 | BCP | Cu",
                          "SLG | ITO | PTAA | Perovsktie | ZnO-np | Al",
                          "SLG | ITO | PTAA | TFPPy-ETTA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PTAA | perovkite | PCBM-60 | Bphen | Cu",
                          "SLG | ITO | PTB7 | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | PTB7-Th | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | PTB7-Th; PFN | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | PTEBS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PTPAANT | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | PTPD | PFN | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | PTPD | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PTPD | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | PTPD | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | PTTh | Perovskite | PCBM-60 | AZO-np | Au",
                          "SLG | ITO | PVBT-SB | Perovskite | PCBM-60 | C60-N | Ag",
                          "SLG | ITO | PVBT-SO3 | Perovskite | C60/C70-N | Ag",
                          "SLG | ITO | PVBT-SO3 | Perovskite | PCBM-60 | C60-N | Ag",
                          "SLG | ITO | PVBT-SO3 | Perovskite | PCBM-60 | C60/C70-N | Ag",
                          "SLG | ITO | PVBT-TMA | Perovskite | PCBM-60 | C60-N | Ag",
                          "SLG | ITO | PVK | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | PbI2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | PbS-QDs | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | Pentacene | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | Perovskite | Au",
                          "SLG | ITO | Perovskite | C60 | Ag",
                          "SLG | ITO | Perovskite | C60 | Al",
                          "SLG | ITO | Perovskite | C60 | B4PyMPM | Ag",
                          "SLG | ITO | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | Perovskite | C60 | Bphen | Ag",
                          "SLG | ITO | Perovskite | C60 | Bphen | Al",
                          "SLG | ITO | Perovskite | Carbon-nt | Ag",
                          "SLG | ITO | Perovskite | Carbon-nt | PFN-Br | Ag",
                          "SLG | ITO | Perovskite | Diketopyrrolopyrrole | MoO3 | Ag",
                          "SLG | ITO | Perovskite | ICBA | BCP | Ag",
                          "SLG | ITO | Perovskite | P3HT | Ag",
                          "SLG | ITO | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | Perovskite | PCBM-60 | Ca | Al",
                          "SLG | ITO | Perovskite | PCBM-60 | Ethanl-hydroquinolatolithium | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | Isopropanol-hydroquinolatolithium | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | Perovskite | PCBM-60 | Methanol-hydroquinolatolithium | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | Perovskite | PCBM-60 | Rhodamine 101 | Ag",
                          "SLG | ITO | Perovskite | PCBM-60 | ZnO | Al",
                          "SLG | ITO | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | Perovskite | PCBM-60 | bis-C60 | Ag",
                          "SLG | ITO | Perovskite | PCBM-70; PTB7-Th | Ca | Al",
                          "SLG | ITO | Perovskite | Polyimid | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Perovskite | Spiro-MeOTAD | Au | Ag",
                          "SLG | ITO | Poly TPD-NPD | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PolyTPD | Al2O3-mp | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PolyTPD | PFN | Perovskite | LiF | C60 | BCP | Au",
                          "SLG | ITO | PolyTPD | PFN | Perovskite | LiF | C60 | PEIE | SnO2-c | ZTO | Au",
                          "SLG | ITO | PolyTPD | PFN | Perovskite | LiF | C60 | SnO2-c | ZTO | Au",
                          "SLG | ITO | PolyTPD | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | PolyTPD | Perovskite | C60 | BCP | CU",
                          "SLG | ITO | PolyTPD | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | PolyTPD | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | PolyTPD | Perovskite | PCBM-60 | BCP | Al",
                          "SLG | ITO | PolyTPD | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | PolyTPD | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | PolyTPD | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | PolyTPD | Perovskite | PCBM-60 | C60 | BCP | Au",
                          "SLG | ITO | PolyTPD | Perovskite | PCBM-60 | Zr(acac)4 | Ag",
                          "SLG | ITO | Polyacrylonitrile | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Polythiophene | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | Porphyrin | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Py-COF | PTAA | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | Rubrene | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | Rubrene | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | SFT-TPA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | SFT-TPAM | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | SFX-TPA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | SFX-TPAM | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | SWCNTs | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | SY1 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | SY2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | SY3 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | SY4 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Si-OMeTPA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | Si-OMeTPA | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | SiTP-OMeTPA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | SnO2 | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2 | Perovskite | Au",
                          "SLG | ITO | SnO2 | Perovskite | P3HT | Au",
                          "SLG | ITO | SnO2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | SnO2 | Perovskite | Spiro-MeOTAD | MoO3 \u2223 ITO",
                          "SLG | ITO | SnO2-QDs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | ABA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | Au | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | BA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | Ba(OH)2 | Perovskite | PDCBT | MoOX | Au",
                          "SLG | ITO | SnO2-c | C3-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60 | Perovskite | PPyra-ACD | MoO3 | Ag",
                          "SLG | ITO | SnO2-c | C60 | Perovskite | PPyra-TXA | MoO3 | Ag",
                          "SLG | ITO | SnO2-c | C60 | Perovskite | PPyra-XA | MoO3 | Ag",
                          "SLG | ITO | SnO2-c | C60 | Perovskite | PTAA | Au",
                          "SLG | ITO | SnO2-c | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | SnO2-c | C60-5a | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60-5b | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60-5d | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60-5e | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60-5f | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60-5g | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | MoO3 | Au | MoO3",
                          "SLG | ITO | SnO2-c | C9 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | CBA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | IDTT2FPDI | Perovskite | PTAA | Ag",
                          "SLG | ITO | SnO2-c | KCl | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | MgO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | NPC60 OH | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | NiCl2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | PA-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | PCBM-60 | Perovskite | DPPZnP-TSEH; PCBM-60 | BCP | Ag",
                          "SLG | ITO | SnO2-c | PCBM-60 | Perovskite | PDCBT | Ta:WOx | Au",
                          "SLG | ITO | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | PCBM-60-np | Perovskite | PDCBT | Ta-Wox | Au",
                          "SLG | ITO | SnO2-c | PEIE | PCBM-60 | Perovskite | Spiro-MeOTAD | MoOx | IO | ITO | Au",
                          "SLG | ITO | SnO2-c | Perovskite | 4,4'-((2-Hexyl-2H-benzo[d][1,2,3]triazole-4,7-diyl)bis(thiophene5,2-diyl))bis(N,N-bis(4-(hexyloxy)phenyl)aniline) | Au",
                          "SLG | ITO | SnO2-c | Perovskite | 4,4'-((2-Hexyl-2H-benzo[d][1,2,3]triazole-4,7-diyl)bis(thiophene5,2-diyl))bis(N,N-bis(4-methoxyphenyl)aniline) | Au",
                          "SLG | ITO | SnO2-c | Perovskite | 4,4'-(5,10,11-Trihexyl-10,11-dihydro-5H-thieno[2\u2032,3':4,5]pyrrolo [3,2-g]thieno[3,2-b][1,2,3]triazolo[4,5-e]indole-2,8-diyl)bis(N,N-bis(4- (hexyloxy)phenyl)aniline) | Au",
                          "SLG | ITO | SnO2-c | Perovskite | 4,4'-(5,10,11-Trihexyl-10,11-dihydro-5H-thieno[2\u2032,3':4,5]pyrrolo [3,2-g]thieno[3,2-b][1,2,3]triazolo[4,5-e]indole-2,8-diyl)bis(N,N-bis(4- methoxyphenyl)aniline) | Au",
                          "SLG | ITO | SnO2-c | Perovskite | CZTPA-1 | MoO3 | Au",
                          "SLG | ITO | SnO2-c | Perovskite | CZTPA-2 | MoO3 | Au",
                          "SLG | ITO | SnO2-c | Perovskite | Carbon",
                          "SLG | ITO | SnO2-c | Perovskite | Carbon-nt | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | Carbon-nt | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | Perovskite | CdTe@MAPbI3-QDs | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | HPB-OMe | Au",
                          "SLG | ITO | SnO2-c | Perovskite | HTB-OMe | Au",
                          "SLG | ITO | SnO2-c | Perovskite | HZ1 | Au",
                          "SLG | ITO | SnO2-c | Perovskite | HZ2 | Au",
                          "SLG | ITO | SnO2-c | Perovskite | HZ3 | Au",
                          "SLG | ITO | SnO2-c | Perovskite | IT-4F; PBDB-T-SF | MoO3 | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | NDT | Au",
                          "SLG | ITO | SnO2-c | Perovskite | NiO-c | ITO | SLG",
                          "SLG | ITO | SnO2-c | Perovskite | OMe-TATPyr | Au",
                          "SLG | ITO | SnO2-c | Perovskite | P3HT | Au",
                          "SLG | ITO | SnO2-c | Perovskite | PBT | Au",
                          "SLG | ITO | SnO2-c | Perovskite | PDCBT | MoOX | Au",
                          "SLG | ITO | SnO2-c | Perovskite | PDMS | CuSCN | Au",
                          "SLG | ITO | SnO2-c | Perovskite | PEAI | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | Perovskite | PEDOT:PSS | MoO3 | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | PMMA | Carbon",
                          "SLG | ITO | SnO2-c | Perovskite | PTAA | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | Py-C | Au",
                          "SLG | ITO | SnO2-c | Perovskite | SDF-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro p-xylene | Au",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | Au | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | MoOx | ICO",
                          "SLG | ITO | SnO2-c | Perovskite | Spiro-MeOTAD | MoOx | ITO",
                          "SLG | ITO | SnO2-c | Perovskite | TATCz3 | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | TATF8HBP | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | TATSFHBP | Ag",
                          "SLG | ITO | SnO2-c | Perovskite | TFAP | Au",
                          "SLG | ITO | SnO2-c | Perovskite | X2 | Au",
                          "SLG | ITO | SnO2-c | Perovskite | Z1 | Au",
                          "SLG | ITO | SnO2-c | Perovskite | Z2 | Au",
                          "SLG | ITO | SnO2-c | Perovskte | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | SnO2-c | Perovskite | Au",
                          "SLG | ITO | SnO2-c | SnO2-c | Perovskite | NiO-np | Ag",
                          "SLG | ITO | SnO2-c | SnO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | SnO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | SnO2-mp | Perovskite | PTAA | Au",
                          "SLG | ITO | SnO2-c | SnO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | SnO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c | TiS2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-c | ZnTiO3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-c; SWCNTs | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | B2Cat2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | BBA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | BTF1 | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | BTF2 | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | BTF3 | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | BTF4 | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | Spiro-MeOTAD | VOx | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | Spiro-MeOTAD | VOx | ITO",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | Spiro-TTB | VOx | Au",
                          "SLG | ITO | SnO2-np | C60 | Perovskite | Spiro-TTB | VOx | ITO",
                          "SLG | ITO | SnO2-np | C60-SAM | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | CPTA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | DPC60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | DTPA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Dompamin-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | EPA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | ImAcHcl | Perovskite | PTAA | Au",
                          "SLG | ITO | SnO2-np | ImAcHcl | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Li-TFSI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | LiF | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | MSAPBS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | OEABS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | PCBA | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | SnO2-np | PCBA-60 | Perovskite | PTA | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | PCBM-60 | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | BTPA | MoO3 | Au",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | BTPA-TCNE | MoO3 | Au",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | PTA | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | PTAA | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | TZ1 | Ag",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | TZ2 | Ag",
                          "SLG | ITO | SnO2-np | PCBM-60 | Perovskite | TZ3 | Ag",
                          "SLG | ITO | SnO2-np | PCBM-60; PCBA | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | SnO2-np | PEG; SnO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | PN4N | Perovskite | PDCBT | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | PN4N | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | PbF2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovsite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | Perovsite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | 2,7-triphenylamine-carbazole | Au",
                          "SLG | ITO | SnO2-np | Perovskite | 2-MP | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | 2\u2010aminoterephthalic acid | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | 3,6-triphenylamine-carbazole | Au",
                          "SLG | ITO | SnO2-np | Perovskite | AL2O3-c | Spiro-MeOTAD | MoOx | ITO | MgF2",
                          "SLG | ITO | SnO2-np | Perovskite | Aminothiazolium iodide | P3HT | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Au",
                          "SLG | ITO | SnO2-np | Perovskite | BMIMBF4 | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | BTTI-C12 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | BTTI-C6 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | BTTI-C8 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Bp-OMe | Au",
                          "SLG | ITO | SnO2-np | Perovskite | C12H10B2O4 | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | CH3-PEAI | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | CH3O-PEAI | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | CI-GO | PTAA | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Caffeine | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | Carbon",
                          "SLG | ITO | SnO2-np | Perovskite | Co3O4 | Carbon",
                          "SLG | ITO | SnO2-np | Perovskite | CuGaO2-np | CuSCN | Au",
                          "SLG | ITO | SnO2-np | Perovskite | CuIn1.5Se3-QDs | Au",
                          "SLG | ITO | SnO2-np | Perovskite | CuInS2-QDs | Au",
                          "SLG | ITO | SnO2-np | Perovskite | CuInSe2-QDs | Au",
                          "SLG | ITO | SnO2-np | Perovskite | CuSCN | Au",
                          "SLG | ITO | SnO2-np | Perovskite | CuSCN | MoOx | Au-grid",
                          "SLG | ITO | SnO2-np | Perovskite | D101 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | D102 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | D103 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | EH44 | MoOx | Al",
                          "SLG | ITO | SnO2-np | Perovskite | EHCz-2EtCz | MoOx | Al",
                          "SLG | ITO | SnO2-np | Perovskite | EHCz-3EtCz | MoOx | Al",
                          "SLG | ITO | SnO2-np | Perovskite | EHCz-MeFl | MoOx | Al",
                          "SLG | ITO | SnO2-np | Perovskite | Graphene oxide | PTAA | Au",
                          "SLG | ITO | SnO2-np | Perovskite | IEICO; PBDTTT-E-T | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | Imidazolium iodide | P3HT | Au",
                          "SLG | ITO | SnO2-np | Perovskite | MEAI | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | NH2-POSS | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | NO2-PEAI | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | NiO-np | Au",
                          "SLG | ITO | SnO2-np | Perovskite | NiO-np | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | OMe-TATPyr | Au",
                          "SLG | ITO | SnO2-np | Perovskite | P3HT | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | P3HT | Au",
                          "SLG | ITO | SnO2-np | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | PBDB-T | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | PBDTT | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | PDCBT | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | PEAI | PTAA | Au",
                          "SLG | ITO | SnO2-np | Perovskite | PEAI | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | PEDOT | Au",
                          "SLG | ITO | SnO2-np | Perovskite | PEDOT:PSS | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | PMAA; Spiro-MeOTAD | Spiro-MeOTAD | AgAu",
                          "SLG | ITO | SnO2-np | Perovskite | PMAA; Spiro-MeOTAD | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | PTAA | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | PTAA | Au",
                          "SLG | ITO | SnO2-np | Perovskite | PTAA | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | PTAA | MoO3 | Al",
                          "SLG | ITO | SnO2-np | Perovskite | PTAA | NiO-c | Au | PEN",
                          "SLG | ITO | SnO2-np | Perovskite | PTAA | NiO-c | ITO | PEN",
                          "SLG | ITO | SnO2-np | Perovskite | PTAA; Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | PTQ10 | PTAA | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | PTT | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Py | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Py-C | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Py-OMe | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Cu9S5-np | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MnO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag | WO3",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | AuAg | MoO3",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MoOx | ITO | MgF2",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD; PEDOT | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Spiro-MeTAD | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | TCPBr | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | TCPI | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | TFB | P3HT | Au",
                          "SLG | ITO | SnO2-np | Perovskite | TTE-1 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | TTE-2 | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Theobromine | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | Theophylline | PTAA | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | Theophylline | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | YD2-o-C8 | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | Perovskite | Zn-ChL | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | Zn-ChL | H2-Chl | Ag",
                          "SLG | ITO | SnO2-np | Perovskite | pentaerythritol tetrakis(3-mercaptopropionate) | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | SnO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np | TPPO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | TiO2-np | Perovskite | PTAA | Au",
                          "SLG | ITO | SnO2-np | ZnO-c | Perovskite | PTAA | MoO3 | Ag",
                          "SLG | ITO | SnO2-np | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | SnO2-np | ZnO-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | SnO2-np; ZnO-np | Al2O3-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-np; ZnO-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | SnO2-nw | Perovskite | PTAA | Au",
                          "SLG | ITO | SnO2-nw; Zn2SnO4-np | Perovskite | PTAA | Au",
                          "SLG | ITO | SnS2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | Spiro-E | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | Spiro-MeO-TPD | PEDOT:PSS | Perovskite | C60 | Ag",
                          "SLG | ITO | Spiro-MeOTAD | PEDOT:PSS | Perovskite | C60 | Ag",
                          "SLG | ITO | Spiro-MeOTAD | Perovskite | Au",
                          "SLG | ITO | Spiro-MeOTAD | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | Spiro-MeOTAD | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Spiro-MeOTAD | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | Spiro-MeOTAD | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | Spiro-MeOTAD | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | Spiro-N | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | Spiro-TAD | PEDOT:PSS | Perovskite | C60 | Ag",
                          "SLG | ITO | Spiro-TAD | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Spiro-TBB | Perovskite | C60 | Ag",
                          "SLG | ITO | Spiro-TBB | Spiro-TBB | Perovskite | C60 | Ag",
                          "SLG | ITO | Spiro-TTB | PEDOT:PSS | Perovskite | C60 | Ag",
                          "SLG | ITO | Spiro-TTB | Perovskite | C60 | TmPyPB | Ag",
                          "SLG | ITO | Spiro-TTB | Perovskite | LiF | C60 | SnO2-c | IZO | Ag",
                          "SLG | ITO | Spiro-TTB | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Spiro-s | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | SrGO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | SrTiO3 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TAE | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | TAPC | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | TAPC | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | TAPC | Perovskite | PCBM-60 | BCB | Ag",
                          "SLG | ITO | TAPC | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | TAPC | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | TB(MA) | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | TBASBP | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | TBDI | Perovskite | IPH | PDINO | Ag",
                          "SLG | ITO | TFB | Al2O3-np | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | TFB | Perovskite | C60 | B4PyMPM | Ag",
                          "SLG | ITO | TFM | Perovskite | Carbon | BCP | Ag",
                          "SLG | ITO | TN-P | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TP-FTzF-TP | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | TPA | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | TPA-ANR-TPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | TPA-BP-OXD | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | ITO | TPA-NADT-TPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | TPA-NAP-TPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | TPA-TVT-TPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | TPAC-SAM | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | TPAC0M | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | TPAC2M | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | TPAC3M | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | TPASB | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | TPASBP | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | TPE-S | Perovskite | PCBM-60 | ZnO | Ag",
                          "SLG | ITO | TPL | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | TPP-OMeTAD | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | TPP-SMeTAD | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | TRUX1 | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | TRUX2 | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | TS-CuPc | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | TTA | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | ITO | TZ1 | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | TZ2 | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | TZ3 | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | TaTm | Perovskite | C60 | Ag",
                          "SLG | ITO | TaTm | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | TaTm | Perovskite | C60 | C60; Phlm | Ag",
                          "SLG | ITO | TaTm | Perovskite | PCBM-60 | AZO-np | Au",
                          "SLG | ITO | TcTa | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | Ti3C2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | Ti3C2Tx | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | Ag-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | Ag-nw; TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | Benzoic acid | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | PDTSTTz | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | PDTSTTz-4 | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | PEO | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | PS | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | PTAA | Ag",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | PTAA | Au",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | PTAA | Au | Organosilicate",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | TOPO | TaTm | MoO3 | Au",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | TaTm | F6-TCNNQ; TaTm | Au",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | TaTm | MoO3 | Au",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | TaTm | TPBi | MoO3 | Au",
                          "SLG | ITO | TiO2-c | C60 | Perovskite | TaTm | TaTm:F6-TCNNQ | Au",
                          "SLG | ITO | TiO2-c | C60-SAM | Al2O3-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | C60-SAM | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | C60-SAM | SiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | CdS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | CdSe-tetrapod | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | CsBr | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | DMF | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | Fullerenol | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | IPH | Perovskite | TaTm | F6-TCNNQ; TaTm | Au",
                          "SLG | ITO | TiO2-c | In2O3-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | NAMF-Br | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | NAMF-Cl | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | NAMF-H | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | Na2SO4 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | PBCM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | PCBA | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | ITO | TiO2-c | PCBB-2CN-2C8 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | PCBM  Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | Al2O3 | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | MeoTPD | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | NPD | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | P3HT | MoO3 | Al",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | PCDTBT | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | PCDTBT | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | PCDTBT1 | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | PCDTBTB | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | PEDOT | Ag",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | Spiro TAD | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | Spiro TTB | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | ITO | TiO2-c | PCBM-60 | Perovskite | TPD | MoO3 | Au",
                          "SLG | ITO | TiO2-c | PCBM-60 | WS-C60 | Perovskite | P3HT | MoO3 | Al",
                          "SLG | ITO | TiO2-c | PDI2 | Perovskite | PCDTBT | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | PDI2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | PDI2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | PNP | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | PPDI-F3N | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | (N2,N2,N2',N2',N7,N7,N7',N7'-octakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-2,2',7,7'-tetraamine) | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Al2O3-c | PEDOT:PSS | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Al2O3-c | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Au",
                          "SLG | ITO | TiO2-c | Perovskite | C201 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | C202 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Carbon",
                          "SLG | ITO | TiO2-c | Perovskite | CsOAc | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | CuSCN | Au",
                          "SLG | ITO | TiO2-c | Perovskite | DOR3T-TBDT | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | DOR3T-TBDT; PCBM-70 | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Graphene",
                          "SLG | ITO | TiO2-c | Perovskite | HAB1 | Au",
                          "SLG | ITO | TiO2-c | Perovskite | HB-Cz | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | J1 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | J2 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | MEH; PPV | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | N2',N2',N7',N7'-tetrakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-2',7'-diamine | Au",
                          "SLG | ITO | TiO2-c | Perovskite | N2,N2,N3',N3',N6',N6',N7,N7-octakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-2,3',6',7-tetraamine | Au",
                          "SLG | ITO | TiO2-c | Perovskite | N2,N2,N7,N7-tetrakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-2,7-diamine | Au",
                          "SLG | ITO | TiO2-c | Perovskite | N3',N3',N6',N6'-tetrakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-3',6'-diamine | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Na@Carbon-nanowalls",
                          "SLG | ITO | TiO2-c | Perovskite | P3DDT | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | P3DT | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | P3HT | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | P3HT | Au",
                          "SLG | ITO | TiO2-c | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | P3HT | MoO3 | Al",
                          "SLG | ITO | TiO2-c | Perovskite | P3OT | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | PBDTT-SeDPP | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | PBDTT-SeDPP; PCBM-70 | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | PCA-1 | Au",
                          "SLG | ITO | TiO2-c | Perovskite | PCA-2 | Au",
                          "SLG | ITO | TiO2-c | Perovskite | PCDTBT | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | PCz | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | PDTSTTz | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | PDTSTTz-4 | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | PEDOT:PSS | Au",
                          "SLG | ITO | TiO2-c | Perovskite | PTAA | Au",
                          "SLG | ITO | TiO2-c | Perovskite | PTAA | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | PTAA | MoO3 | Au",
                          "SLG | ITO | TiO2-c | Perovskite | PTB7 | Au",
                          "SLG | ITO | TiO2-c | Perovskite | PTZDPP-2 | Au",
                          "SLG | ITO | TiO2-c | Perovskite | PVP | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | SAF\u2010OMe | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Al",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Au | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Au | MoO3",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Cu",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | ITO",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | ITO | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | ITO | Al",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | ITO | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | ITO | MWCNTs",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | MWCNTs",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag | ZnS",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Au | MoO3",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | ITO | MgF2",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Au | Ag | MoOx",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS | Al",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS | In",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-OBuTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-OEtTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-OiPrTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | Spiro-OprTAD | Au",
                          "SLG | ITO | TiO2-c | Perovskite | TPADPP-1 | Au",
                          "SLG | ITO | TiO2-c | Perovskite | TPADPP-2 | Au",
                          "SLG | ITO | TiO2-c | Perovskite | TaTm | F6-TCNNQ; TaTm | Au",
                          "SLG | ITO | TiO2-c | Perovskite | rGO-4FPH | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | SnO2-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | TiO2-mp | Al2O3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | BaTiO3-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | TiO2-mp | MgO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Nb2O5-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Au-np | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | CuI | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | CuPc | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Oleic-acid | P3HT | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | P3HT | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | PCA-1 | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | PTAA | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | IZO",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | PEDOT:PSS | ITO | SLG",
                          "SLG | ITO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | WO3 | Ag",
                          "SLG | ITO | TiO2-c | TiO2-mp | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | TiO2-nw | N-[3-(Trimethoxysilyl)propyl]ethylenediamine-SAM | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | TiO2-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-c | TiO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-c | ZnO-nanoflake | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-mp | Perovskite | 2,5-bis (5-(5-(5-hexylthiophen-2-yl) thiophen2-yl) thiophen-2-yl) thiazolo[5,4-d]thiazole | Au",
                          "SLG | ITO | TiO2-mp | Perovskite | 2,5-bis (5-(5-(5-hexylthiophen-2-yl)thiophen-2-yl) furan-2-yl) thiazolo[5,4-d] thiazole | Au",
                          "SLG | ITO | TiO2-mp | Perovskite | 4-(5-(5-(5-(5-(5-hexylthiophen-2-yl) thiophen-2-yl) thiophene-2-yl) thiazolo[5,4-d]thiazol-2-yl) thiophene2-yl)-N,N-diphenyl-benzenamine | Au",
                          "SLG | ITO | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-nanocones | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-np | C-PCBOD | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-np | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-np | C70 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-np | PCBM-70 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-np | Perovskite | BDTS-2DPP | Au",
                          "SLG | ITO | TiO2-np | Perovskite | DERDTS-TBDT | MoO3 | Ag",
                          "SLG | ITO | TiO2-np | Perovskite | DORDTS\u2013TFBT | MoO3 | Ag",
                          "SLG | ITO | TiO2-np | Perovskite | P3HT | Au",
                          "SLG | ITO | TiO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | TiO2-np | Perovskte | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiO2-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | TiS2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | Trux-OMeTAD | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | ITO | Ts-CuPc | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | V1036 | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | V1036:C2 | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | V1036:C4 | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | V2O5 | P3CT-K | Perovskite | PCBM-60 | ZnO | Ag",
                          "SLG | ITO | V2O5 | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | V2O5 | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | V2O5 | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | V2O5 | Perovskite | PCBM-60 | ZnO | Ag",
                          "SLG | ITO | V2Ox | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | V2Ox | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | VB-DAAF | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | VB-Me-FDPA | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | VB-MeO-FDPA | Perovskite | PCBM-60 | PEI | Ag",
                          "SLG | ITO | VOx | APPA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | VOx | Cu phtalocyanine | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | VOx | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | VOx | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | VOx | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | VOx | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | VOx | X-DVTPD | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | VOx | X-DVTPD | Perovskite | PCBM-60 | FPI | Ag",
                          "SLG | ITO | WO3 | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | WO3 | Perovskite | PCBM-60 | LiF | Al",
                          "SLG | ITO | WO3-np | Cs2CO3 | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | WO3-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | WO3-nw | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | WO3-nw@PEDOT | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | WO3-nw@PEDOT | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | WOx | I-Ph-PA_C60-C6-PA | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | WOx | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | WOx | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | WOx | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | WS2 | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | WS2 | Perovskite | PCBM-60 | BCP | LiF | Al",
                          "SLG | ITO | X-DVTPD | Perovskite | PC6BM | Bphen | Ag",
                          "SLG | ITO | X-DVTPD | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | X-DVTPD | Perovskite | PCBM-60 | FPI | Ag",
                          "SLG | ITO | XSln1453 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | XSln847 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | XY1 | Perovskite | C60 | BCP | Cu",
                          "SLG | ITO | YC-1 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | YC-2 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | YC-3 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Z10 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Z7 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Z7@MWCNTs | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Z8 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | Z9 | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | ZSO-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZTO | SnO2-c | C60 | Perovskite | PTAA | Au",
                          "SLG | ITO | ZTO | SnO2-c | PCBM-60 | Perovskite | PTAA | Au",
                          "SLG | ITO | ZTO | SnO2-c | Perovskite | PTAA | Au",
                          "SLG | ITO | Zn2SnO4 | Perovskite | PTAA | Au",
                          "SLG | ITO | Zn2SnO4-np | Perovskite | PTAA | Au",
                          "SLG | ITO | ZnCsO | PCBA | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnCsO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnLiO | PCBA | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnLiO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO | MgZnO | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | ITO | ZnO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO | Perovskite | Spiro-MeOTAD | MoO3 | Au",
                          "SLG | ITO | ZnO | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "SLG | ITO | ZnO | ZnO-nw | Perovskite | P3HT | Au",
                          "SLG | ITO | ZnO-c | 1,2 ethanedithio | Perovskite | PZn-2FTPA | Au",
                          "SLG | ITO | ZnO-c | 1,2 ethanedithio | Perovskite | PZn-3FTPA | Au",
                          "SLG | ITO | ZnO-c | 1,2 ethanedithio | Perovskite | PZn-FTPA | Au",
                          "SLG | ITO | ZnO-c | 1,2-ethanedithiol | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | 3-aminopropanioc acid-SAM | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | APTES-SAM | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | ZnO-c | C-PCBSD | Perovskite | PBTTT-14 | Au",
                          "SLG | ITO | ZnO-c | C-PCBSD | Perovskite | PDBT-co-TT | Au",
                          "SLG | ITO | ZnO-c | C-PCBSD | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | C3-SAM | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | C60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | CPTA; PbI2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | CsCO3 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | Graphene; ZnO-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | Hexamethylenetetramine | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | JTCA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | PCBA | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | PCBM-60 | Perovskite | LGC-D013 | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | PCBM-60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | PCBM-60 | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | PCBM-70 | Perovskite | Ag",
                          "SLG | ITO | ZnO-c | PCBM-70 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | PCBM-70 | Perovskite | benzo[1,2b:4,5b\u2032]-dithiophene | Ag",
                          "SLG | ITO | ZnO-c | PO-TAZ | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | PVP | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | Au",
                          "SLG | ITO | ZnO-c | Perovskite | Bifluo-OMeTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | CuSCN | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | CuSCN | NPB | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | CzPAF\u2010SBF | Au",
                          "SLG | ITO | ZnO-c | Perovskite | CzPAF\u2010SBFN | Au",
                          "SLG | ITO | ZnO-c | Perovskite | EDT; PbS | Au",
                          "SLG | ITO | ZnO-c | Perovskite | Graphite | FTO",
                          "SLG | ITO | ZnO-c | Perovskite | P3HT | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | P3HT | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PBTTT-14 | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PDBT-co-TT | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PDQT | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PQT-12 | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PTAA | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PTB7-Th | MoOx | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | PZn-DPPA | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PZn-DPPA-O | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PZn-TPA | Au",
                          "SLG | ITO | ZnO-c | Perovskite | PZn-TPA-O | Au",
                          "SLG | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "SLG | ITO | ZnO-c | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | SnO2; TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | T2CA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | TiO2-c | PCBM-60 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | TiO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-c | Urea | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | WPF-6-oxy-F | Perovskite | pDPA-DBTP | Au",
                          "SLG | ITO | ZnO-c | WPF\u20106\u2010oxy\u2010F | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | WPF\u20106\u2010oxy\u2010F | Perovskite | mDPA-DBTP | Au",
                          "SLG | ITO | ZnO-c | WPF\u20106\u2010oxy\u2010F | Perovskite | pDPA-DBTP | Au",
                          "SLG | ITO | ZnO-c | WPF\u20106\u2010oxy\u2010F | Perovskite | pTPA-DBTP | Au",
                          "SLG | ITO | ZnO-c | ZnMgO-c | ZnO-nw | PCBM-60 | Perovskite | PEDOT:PSS | Ag",
                          "SLG | ITO | ZnO-c | ZnO-c | Ba(OH)2 | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | ZnO-c | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | ZnO-mp | PEI | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | ZnO-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | ZnO-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-c | ZnO-nw | CdS-QDs | Perovskite | MEH-PPV | PEDOT:PSS | Au",
                          "SLG | ITO | ZnO-c | ZnO-nw | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | ITO | ZnO-c | ZnO-nw | Perovskite | Cu2O | ITO",
                          "SLG | ITO | ZnO-c | ZnO-nw | Perovskite | MDMO-PPV | MoO3 | Al",
                          "SLG | ITO | ZnO-c | ZnO-nw | Perovskite | MEH-PPV | PEDOT:PSS | Au",
                          "SLG | ITO | ZnO-c | ZnO-nw | Perovskite | P3HT | Ag",
                          "SLG | ITO | ZnO-c | ZnO-nw | Perovskite | Rubene | P3HT | Ag",
                          "SLG | ITO | ZnO-c | ZnO-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-c | ZnO-nw | TiO2-np | Perovskite | P3HT | Ag",
                          "SLG | ITO | ZnO-c | p-amino-benzoic acid-SAM | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-c; Graphene-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-nanoflake | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-nanospheres | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-np | ATAA | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | C60 | Perovskite | PEDOT:PSS | FrGO | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | C60 | Perovskite | PEDOT:PSS | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | NH4Cl | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | PCBM-60 | Perovskite | P3HT | Au",
                          "SLG | ITO | ZnO-np | PCBM-60 | Perovskite | P3HT | PEDOT:PSS | Ag",
                          "SLG | ITO | ZnO-np | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-np | PEI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-np | PFS-FC | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-np | PFS-FTEG | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | Au",
                          "SLG | ITO | ZnO-np | Perovskite | Bifluo | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | P3HT | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | P3HT | Au",
                          "SLG | ITO | ZnO-np | Perovskite | P3HT | P3HT; PMMA | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | P3HT | P3HT; PMMA | Au",
                          "SLG | ITO | ZnO-np | Perovskite | P3ODDT | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | P3OEGT | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | P3OFHT | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | P3OHT | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | PTAA | Au",
                          "SLG | ITO | ZnO-np | Perovskite | PTAA | PEDOT:PSS | Au",
                          "SLG | ITO | ZnO-np | Perovskite | PbS-QDs | MoO3 | Au | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | Ag-Nws",
                          "SLG | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | MoOx | Ag",
                          "SLG | ITO | ZnO-np | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "SLG | ITO | ZnO-np | SnO2-np | C60-SAM | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | H-Z1 | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | H-Z2 | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | H-Z3 | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | P3 | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | PSQ1 | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | PSQ2 | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnO-np | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | ITO | ZnO-np | ZnO-nanospheres | PEI | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-np | ZnO-nanospheres | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-np | ZnO-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-nw | PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | ZnO-nw | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnO-nw | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnPc | Perovskite | C60 | BCP | Al",
                          "SLG | ITO | ZnS | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | ZnSO | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | ITO | ZnTiO3-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | br-4C | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | c-OTPD | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | c-OTPD; TPACA | Perovskite | PCBM-60 | C60 | BCP | Al",
                          "SLG | ITO | c-TCTA | Perovskite | c-HATNA | bis-C60 | Ag",
                          "SLG | ITO | f-C60 | C60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | f-C60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | f-C70 | C60 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | f-C70 | Perovskite | P3HT | MoO3 | Ag",
                          "SLG | ITO | m-MTDATA | Perovskite | C60 | BCP | Ag",
                          "SLG | ITO | nTi-MOF | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | nTi-MOF | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ITO | p-PFP-O | PTAA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | p-PFP-O | PTAA | Perovskite | PCBM-60 | PFN | Ag",
                          "SLG | ITO | p-PFP-O | PTAA | Perovskite | PCBM-60 | PFN | Al",
                          "SLG | ITO | p-PFP-O | PTAA | Perovskite | PCBM-60 | PFN | Au",
                          "SLG | ITO | p-PFP-O | PTAA | Perovskite | PCBM-60 | PFN | Cu",
                          "SLG | ITO | pBDT-BODIPY | PFN | Perovskite | PCBM-60 | Zr(acac)4 | Al",
                          "SLG | ITO | poly(1,4-phenylenevinylene) | Perovskite | PCBM-60 | LiF | Ag",
                          "SLG | ITO | poly(2-ethyl-2-oxazoline); PEDOT:PSS | Perovskite | PCBM-60 | Bphen | Ag",
                          "SLG | ITO | r-GO-BH | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | r-GO-HBS | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | r-GO-NH | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | rGO | CuSCN | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | rGO | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | rGO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | rGO | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | rGO | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | rGO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | rGO; PMMA | Perovskite | PCBM-60 | Al",
                          "SLG | ITO | s-PANI:PSS | Perovskite | PCBM-60 | Au",
                          "SLG | ITO | sGO | Perovskite | PCBM-60 | Ag",
                          "SLG | ITO | sGO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO | styryl-functionalized GO | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | ITO-HMDS Scaffold | TiO2-c | C60 | Perovskite | PTAA | Ag",
                          "SLG | ITO:ATO | TiO2-c | Perovskite | Perylene | Au",
                          "SLG | ITO:ATO | TiO2-c | TiO2-mp | Perovskite | Perylene | Au",
                          "SLG | IWO | SnO2-c | KCl | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | IZO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG | In2O3:H | PTAA | Perovskite | PCBM-60 | ZnO-np | AZO | AlNi-grid",
                          "SLG | In2O3:H | PTAA | Perovskite | PCBM-60 | ZnO-np | AZO-c | Ni | Al",
                          "SLG | MPTMS-SMA | Ag | MUTAB-SAM | PCBM-60 | Perovskite | PTAA | Ag",
                          "SLG | MSA-PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | C60 | BCP | Ag",
                          "SLG | MSA-PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | C60 | Unknown | Rhodamine 101 | LiF | Ag",
                          "SLG | MSA-PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | C60 | Rhodamine 101 | LiF | Ag",
                          "SLG | MSA-PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | C60 | Rhodamine 101 | LiF | Ag",
                          "SLG | Ni | Au | Cu | Perovskite | C60 | BCP | Al",
                          "SLG | Ni | Au | Perovskite | C60 | BCP | Al",
                          "SLG | Ni | NiO-c | Perovskite | PCBM-60 | PEIE | Cu",
                          "SLG | Ni | PEDOT:PSS | Perovskite | PCBM-60 | PEIE | Cu",
                          "SLG | Ni:Au-grid | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | PEDOT:PSS | Ag | PEI | PCBM-60 | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "SLG | PEDOT:PSS | ITO | Perovskite | PCBM-60 | Al",
                          "SLG | PEDOT:PSS | NiO-c | Perovskite | C60 | bis-C60 | Ag",
                          "SLG | PEDOT:PSS | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | PEDOT:PSS | PEI | PCBM-60 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | PEDOT:PSS | PEI | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | PEDOT:PSS | PTAA | Perovskite | PCBM-60 | BCP | Ag",
                          "SLG | PEDOT:PSS | Perovskite | C60 | bis-C60 | Ag",
                          "SLG | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | PEDOT:PSS | Perovskite | PCBM-60 | Rhodamine 101 | Ag",
                          "SLG | PEDOT:PSS | ZnO-c | Perovskite | Spiro-MeOTAD | PEDOT:PSS",
                          "SLG | PEI | Au | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SLG | PEI | Au | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Ag",
                          "SLG | PEIE | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | PET | Graphene oxide | PTFTS | Perovskite | PCBM-60 | BCP | Au",
                          "SLG | PET | ZnO@rQD-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | SMPTMS-SMA | Ag | MUTAB-SAM | PCBM-60 | Perovskite | PTAA | Ag",
                          "SLG | SU-8 | MoO3 | Au | PEDOT:PSS | Perovskite | PCBM-60 | Ca | Ag",
                          "SLG | SWCNTs | MoO3 | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "SLG | SWCNTs | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "SLG | SWCNTs-HNO3 | PEDOT:PSS | Perovskite | C60 | BCP | LiF | Al",
                          "SLG | SnO2 | SiO2 | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | SnO2-c | Ag | SnO2-c | SnO2-c | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | SnO2-c | SnO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | TCO | TiO2-c | SrTiO3:TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | TCO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag",
                          "SLG | Ti | Au | Perovskite | ITO",
                          "SLG | Ti | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | IZO",
                          "SLG | TiO2-c | Ag | TiO2-c | CPTA | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | TiO2-c | SnO2-c | TiO2-c | SnO2-c | TiO2-c | SnO2-c | TiO2-c | SnO2-c | TiO2-c | ITO | NiO-np | Perovskite | PCBM-60 | ZnO-np | ITO",
                          "SLG | TiO2-mp | Ti:TiO2 | ZrO2-mp | Perovskite | Au",
                          "SLG | WO3 | Ag | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Ag",
                          "SLG | WO3 | Ag | WO3 | PEDOT:PSS | Perovskite | C60 | Bphen | Ag",
                          "SLG | WO3 | Ag | WO3 | Perovskite | C60 | Bphen | Ag",
                          "SLG | Zn0.75Sn0.25O1.25 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | Zn0.85Sn0.15O1.15 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | Zn0.8Sn0.2O1.2 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | Zn0.9Sn0.1O1.10 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ZnO | ITO | Ag-nw | ITO | ZnO-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ZnO | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ZnO0.95Sn0.05O1.05 | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | ZrO2 | MPTMS-SMA | Ag | MUTAB-SAM | PCBM-60 | Perovskite | PTAA | Ag",
                          "SLG | rGO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | rGO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "SLG | resist | ITO | PEDOT:PSS | Perovskite | PCBM-60 | ZnO-np | Al",
                          "SLG\uff5cFTO | TiO2-np | Perovskite | Tea Catachinrich biomolecules | Ag | FTO",
                          "SLNOA63 | CPI | Cr | Au-grid | EG-PEDOT:PSS | Ti | SnO2-c | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "SLS | FTO | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "SU-8 | Ca | Au | PEDOT:PSS | Perovskite | PCBM-60 | Ca | Ag",
                          "SU-8 | MoO3 | Au | PEDOT:PSS | Perovskite | PCBM-60 | Ca | Ag",
                          "Si | MgO | SrRuO3 | SrRuO3 | Perovskite | ITO",
                          "SiO2 | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | AgAl",
                          "SiO2-hollow | SLG | ITO | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "SiO2-mp | SLG | ITO | TiO2-np | Perovskite | Spiro-MeOTAD | Au",
                          "Silk | Ag-nw | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Ag",
                          "SrTiO3 | Sr2RuO4 | Perovskite | ITO",
                          "Stainless steel | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Carbon-nt",
                          "Steel | ZnO-c | ZnO-nw | Perovskite | Spiro-MeOTAD | Carbon-nt",
                          "Textile | PEN | ITO | Au | Spiro-MeOTAD | Perovskite | PCBM-60 | SnO2-c | ITO | PEN",
                          "Textile | PEN | ITO | Au | Spiro-MeOTAD | Perovskite | SnO2-c | ITO | PEN",
                          "Ti | TiO2-c | Perovskite | PTAA | Graphene | PDMS",
                          "Ti | TiO2-c | Perovskite | Spiro-MeOTAD | Ag",
                          "Ti | TiO2-c | Perovskite | Spiro-MeOTAD | MoOx | Ag | MoOx",
                          "Ti | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag-np | ITO",
                          "Ti | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag-nw",
                          "Ti | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | ITO",
                          "Ti | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "Ti | TiO2-np | Perovskite | PEDOT | ITO | PEN",
                          "Ti | TiO2-nt | Perovskite | Spiro-MeOTAD | Au",
                          "Ti | TiO2-nw | Perovskite | PEDOT | ITO | PEN",
                          "Ti | TiO2-nw | TiO2-np | Perovskite | Carbon-nt | Ag",
                          "Ti-foil | TiO2-c | Al2O3-mp | Perovskite | Spiro-MeOTAD | PEDOT:PSS | TCA | PET:Ni-mesh",
                          "Ti-foil | TiO2-c | Perovskite | Spiro-MeOTAD | Cu | Au",
                          "Ti-foil | TiO2-nt | Perovskite | Ag",
                          "Ti-foil | TiO2-nt | Perovskite | Spiro-MeOTAD | Carbon-nt",
                          "Ti-wire | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au-np",
                          "Ti-wire | TiO2-c | TiO2-np | Perovskite | Spiro-MeOTAD | Au | Au-wire",
                          "Ti-wire | TiO2-c | TiO2-nw | Perovskite | Carbon-nw",
                          "Ti-wire | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag-nw",
                          "Ti-wire | TiO2-nt | Perovskite | Spiro-MeOTAD | Carbon-nt",
                          "Transparent wood | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "Unknown",
                          "Unknown | Perovskite | Unknown",
                          "Willow glass | AZO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "Willow glass | AZO | SnO2-np | Perovskite | Spiro-MeOTAD | MoOx | Al",
                          "Willow glass | Graphene | Ag-nw | PEDOT:PSS | PEDOT:PSS | Perovskite | PCBM-60 | Al",
                          "Willow glass | ITO | PTAA | Perovskite | C60 | BCP | Cu",
                          "Willow glass | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "Willow glass | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | Au",
                          "Willow glass | ITO | ZnO-c | Perovskite | Spiro-MeOTAD | Au | PDMS Nanocone",
                          "Willow glass | IZO | SnO2-np | Perovskite | Spiro-MeOTAD | MoO3 | Al",
                          "Willow glass | Ti | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | MoO3 | IZO",
                          "Y2O3:Eu3 | Au-np | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "Y2O3:Eu3 | SLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au",
                          "ZnSe-QDs | SLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au",
                          "b-CNF | IZO | PEDOT:PSS | Perovskite | PCBM-60 | Ag"
                        ]
                      }
                    }
                  ]
                },
                "name": "stack_sequence",
                "description": "The stack sequence describing the cell. Use the following formatting guidelines\n- Start with the substrate to the left and list the materials in each layer of the device\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with  semicolons, as in (A; B)\n- The perovskite layer is stated as \u201cPerovskite\u201d, regardless of composition, mixtures, dimensionality etc. There are plenty of other fields specifically targeting the perovskite.\n- If a material is doped, or have an additive, state the pure material here and specify the doping in the columns specifically targeting the doping of those layers.\n- There is no sharp well-defined boundary between a when a material is best considered as doped to when it is best considered as a mixture of two materials. When in doubt if your material is doped or a mixture, use the notation that best capture the metaphysical essence of the situation\n- Use common abbreviations when possible but spell it out when there is risk for confusion. For consistency, please pay attention to the abbreviation specified under the headline Abbreviations found earlier in this document.\n- There are several thousand stack sequences described in the literature. Try to find your one in the list of alternatives in the data template. If it is not there (i.e. you may have done something new) define a new stack sequence according to the instructions.\nExampleBelow are the 16 most common device stacks which represent close to half of all reported devices.\nSLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Au\nSLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Au\nSLG | FTO | TiO2-c | TiO2-mp | Perovskite | Spiro-MeOTAD | Ag\nSLG | FTO | TiO2-c | Perovskite | Spiro-MeOTAD | Ag\nSLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Al\nSLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | BCP | Ag\nSLG | ITO | PEDOT:PSS | Perovskite | PCBM-60 | Ag\nSLG | FTO | TiO2-c | TiO2-mp | Perovskite | Carbon\nSLG | FTO | TiO2-c | TiO2-mp | ZrO2-mp | Perovskite | Carbon\nSLG | FTO | SnO2-c | Perovskite | Spiro-MeOTAD | Au\nSLG | ITO | SnO2-np | Perovskite | Spiro-MeOTAD | Au\nSLG | ITO | PEDOT:PSS | Perovskite | C60 | BCP | Ag\nSLG | ITO | TiO2-c | Perovskite | Spiro-MeOTAD | Au\nSLG | FTO | TiO2-c | TiO2-mp | Perovskite | PTAA | Au\nSLG | FTO | SnO2-np | Perovskite | Spiro-MeOTAD | Au\nSLG | ITO | NiO-c | Perovskite | PCBM-60 | BCP | Ag",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "area_total",
                "description": "The total cell area in cm2. The total area is defined as the area that would provide photovoltaic performance when illuminated without any shading, i.e. in practice the geometric overlap between the top and bottom contact.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "area_measured",
                "description": "The effective area of the cell during IV and stability measurements under illumination. If measured with a mask, this corresponds to the area of the hole in the mask. Otherwise this area is the same as the total cell area.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "number_of_cells_per_substrate",
                "description": "The number of individual solar cells, or pixels, on the substrate on which the reported cell is made",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "Pn-Heterojunction",
                          "Front contacted",
                          "Back contacted",
                          "pin",
                          "nip",
                          "Schottky"
                        ]
                      }
                    }
                  ]
                },
                "name": "architecture",
                "description": "The cell architecture with respect to the direction of current flow and the order in which layers are deposited. The two most common are nip (also referred to as normal) and pin (also referred to as inverted) but there are also a few others, e.g. Back contacted\n- nip architecture means that the electrons are collected at the substrate side. The typical example is when a TiO2 electron selective contact is deposited between the perovskite and the substrate (e.g. SLG | FTO | TiO2-c |Perovskite | \u2026)\n- pin architecture means that it instead is the holes that are collected at the substrate side. The typical example is when a PEDOT:PSS hole selective contact is deposited between the perovskite and the substrate (e.g. SLG | FTO | PEDOT:PSS |Perovskite | \u2026)",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "flexible",
                "description": "TRUE if the cell flexible and bendable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "flexible_min_bending_radius",
                "description": "The maximum bending radius possible without degrading the cells performance",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "semitransparent",
                "description": "TRUE if the cell is semi-transparent, which usually is the case when there are no thick completely covering metal electrodes.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "semitransparent_AVT",
                "description": "The average visible transmittance in the wavelength range stated in the next field",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "nan; nan",
                          "800; 1200"
                        ]
                      }
                    }
                  ]
                },
                "name": "semitransparent_wavelength_range",
                "description": "the wavelength range under which the average visible transmittance is determined\nExample:\n400; 720\n350; 770",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "semitransparent_raw_data",
                "description": "A link to where the data file for the measurement is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for stability data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "Module",
            "description": "Specific section containing information if the reported device is a module.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "Module",
                "description": "TRUE if the cell is a module composed of connected individual sub cells",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "number_of_cells_in_module",
                "description": "The number of cells in the module",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "area_total",
                "description": "The total area of the module in cm2. This includes scribes, contacts, boundaries, etc. and represent the module\u2019s geometrical footprint.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "area_effective",
                "description": "The active area of the module in cm2.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "JV_data_recalculated_per_cell",
                "description": "The preferred way to report IV data for modules is to recalculate the IV data to average data per sub-cells in the module. That simplifies downstream comparisons, and it ensures that there is no erroneous transformation that otherwise may occur when error checking the IV data. Mark this as TRUE if the conversation is done.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Substrate",
            "description": "Information about the substrate used in the device. It describes the `substrate stack sequence`, the `substrate area`, the `substrate thickness`, and its provenance or fabrication method.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "42P2O5-22Li2O-22ZnO-12Sm2O3-2CeO2 | FTO",
                          "Ag-nw; GFRHybrimer; ITO",
                          "Ag-nw; Graphene; Polycarbonate; Polystyrene",
                          "Au | Ni | Al | Ti | GaN",
                          "Carbon-nt-fiber",
                          "Carbon-nt-yarn",
                          "Cellophane | TiO2 | Ag | TiO2",
                          "Cellophane | TiO2-c | Ag",
                          "Cellulose paper | Carbon black",
                          "Cu",
                          "Cu-nw; GFRHybrimer; ITO",
                          "Epoxy | ITO",
                          "FPA-PDMS",
                          "Flexible | IZO",
                          "Foil | AZO",
                          "Graphite",
                          "HCLaminate | IZO",
                          "INVAR | ITO",
                          "ITO | PEN",
                          "ITO | PET",
                          "Mica | ITO",
                          "NOA63",
                          "NOA63 | Au",
                          "NOA63 | ITO",
                          "NOA63 | MoO3 | Au",
                          "NOA88 | PEI | Au",
                          "Nanopaper | TiO2 | Ag",
                          "Nb:SrTiO3",
                          "PAA-PEG | Ti",
                          "PAA-PEG | Ti | PANI | Ti",
                          "PDMS",
                          "PDMS | Graphene",
                          "PDMS | PET",
                          "PDMS | PET | Au-grid",
                          "PDMS | SLG | ITO",
                          "PEG | ITO",
                          "PEI | ITO",
                          "PEN",
                          "PEN | AZO",
                          "PEN | Ag-grid",
                          "PEN | Ag-nw",
                          "PEN | FTO",
                          "PEN | Graphene",
                          "PEN | Graphene | MoO3",
                          "PEN | Graphene; MoO3",
                          "PEN | ITO",
                          "PEN | Planarization | SiN | ITO",
                          "PEN | SWCNTs | MoO3",
                          "PES | AZO | Ag-nw | AZO",
                          "PES | AZO | CuNW | AZO",
                          "PES | FTO",
                          "PES | ITO",
                          "PES | PEDOT:PSS | Ag",
                          "PES | Ti | Graphene",
                          "PET",
                          "PET | APTES | AuCl3; Graphene",
                          "PET | APTES; Graphene",
                          "PET | AZO",
                          "PET | AZO | Ag | AZO",
                          "PET | Ag",
                          "PET | Ag-grid",
                          "PET | Ag-grid | PEDOT:PSS",
                          "PET | Ag-mesh | PH1000",
                          "PET | Ag-mesh:PH1000",
                          "PET | Ag-nw",
                          "PET | Ag-nw | FZO",
                          "PET | Ag-nw | Graphene",
                          "PET | Ag-nw; Graphene oxide",
                          "PET | Ag-nw; PEDOT:PSS",
                          "PET | Al2O3",
                          "PET | Au",
                          "PET | Au-np; Graphene; TFSA",
                          "PET | AuCl3; Graphene",
                          "PET | FTO",
                          "PET | Graphene",
                          "PET | Graphene; TETA",
                          "PET | ITO",
                          "PET | ITO | Ag-nw",
                          "PET | IWO",
                          "PET | IZO",
                          "PET | In2O3",
                          "PET | MSA-PEDOT:PSS",
                          "PET | Ni-mesh:PH1000",
                          "PET | PEDOT:PSS",
                          "PET | PEDOT:PSS | Ag-nw",
                          "PET | SWCNTs",
                          "PET | TCE",
                          "PET | WO3 | Ag | WO3",
                          "PETUG",
                          "PI",
                          "PI | Ag-np | PEDOT:PSS",
                          "PI | Cu-grid | Graphene",
                          "PI | PEDOT:PSS",
                          "PS",
                          "Paper | Au",
                          "Polyester-satin textile",
                          "Polyimide | ITO",
                          "Polyimide | In2O3:H",
                          "Pt",
                          "Quartz | Graphene",
                          "Quartz | ITO",
                          "Quartz | TaN",
                          "Regenerated cellulose film | Ag-nw",
                          "SLG",
                          "SLG | APTES; Graphene",
                          "SLG | AZO",
                          "SLG | AZO | Ag-nw | AZO",
                          "SLG | AZO | Au | AZO",
                          "SLG | AZO | Cu-nw | AZO",
                          "SLG | AZO:F",
                          "SLG | Ag",
                          "SLG | Ag | Unknown",
                          "SLG | Ag-nw",
                          "SLG | Ag-nw | AZO",
                          "SLG | Ag-nw | Graphene",
                          "SLG | Ag-nw | Graphene oxide",
                          "SLG | Ag-nw; Graphene oxide",
                          "SLG | Au",
                          "SLG | Au-grid | AZO",
                          "SLG | Au-np; Graphene",
                          "SLG | Au-np; Graphene; TFSA",
                          "SLG | Cd2SnO4",
                          "SLG | Cu",
                          "SLG | Cu-BHT",
                          "SLG | Cu-nw",
                          "SLG | DWCNTs",
                          "SLG | FAZO",
                          "SLG | FGZO",
                          "SLG | FTO",
                          "SLG | FTO | Au-grid",
                          "SLG | Graphene",
                          "SLG | Graphene | MoO3",
                          "SLG | Graphene; TFSA",
                          "SLG | ITO",
                          "SLG | ITO | Au-grid | AZO",
                          "SLG | ITO | Au-grid | ITO",
                          "SLG | ITO | ITO",
                          "SLG | ITO | Ni",
                          "SLG | ITO-HMDS Scaffold",
                          "SLG | ITO:ATO",
                          "SLG | IWO",
                          "SLG | IZO",
                          "SLG | In2O3:H",
                          "SLG | MPTMS-SMA | Ag | MUTAB-SAM",
                          "SLG | MSA-PEDOT:PSS",
                          "SLG | Ni",
                          "SLG | Ni:Au-mesh",
                          "SLG | PEDOT:PSS",
                          "SLG | PEDOT:PSS | Ag | PEI",
                          "SLG | PEI | Au",
                          "SLG | PET",
                          "SLG | SU-8 | MoO3 | Au",
                          "SLG | SWCNTs",
                          "SLG | SWCNTs | MoO3",
                          "SLG | SWCNTs-HNO3",
                          "SLG | SnO2 | SiO2 | FTO",
                          "SLG | TCO",
                          "SLG | Ti",
                          "SLG | TiO2-c | Ag",
                          "SLG | TiO2-c | SnO2-c | TiO2-c | SnO2-c | TiO2-c | SnO2-c | TiO2-c | SnO2-c | TiO2-c | ITO",
                          "SLG | WO3 | Ag",
                          "SLG | WO3 | Ag | WO3",
                          "SLG | ZnO | ITO | Ag-nw | ITO",
                          "SLG | ZrO2 | MPTMS-SMA | Ag | MUTAB-SAM",
                          "SLG | rGO",
                          "SLG | resist | ITO",
                          "SLG-HAMC-patterned | FTO",
                          "SLNOA63 | CPI | Cr | Au-grid",
                          "SU-8 | Ca | Au",
                          "SU-8 | MoO3 | Au",
                          "Si",
                          "Si | ITO",
                          "Si | SiO2",
                          "SiO2-hollow | SLG | ITO",
                          "SiO2-mp | SLG | ITO",
                          "Silk | Ag-nw | PEDOT:PSS",
                          "SrTiO3 | Sr2RuO4",
                          "Stainless steel",
                          "Steel",
                          "Textile | PEN | ITO",
                          "Ti",
                          "Ti-foil",
                          "Ti-sheet",
                          "Ti-wire",
                          "Transparent wood | ITO",
                          "Unknown",
                          "Unknown | ITO",
                          "Willow glas | Ti",
                          "Willow glass | AZO",
                          "Willow glass | Graphene | Ag-nw",
                          "Willow glass | ITO",
                          "Willow glass | IZO",
                          "b-CNF | IZO",
                          "none"
                        ]
                      }
                    }
                  ]
                },
                "name": "stack_sequence",
                "description": "The stack sequence describing the substrate.\n- With the substrate, we refer to any layer below the electron transport layer in a nip-device, and any layer below the hole transport layer in a pin-device.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\n- Use common abbreviations when appropriate but spell it out if risk for confusion.\n- There are a lot of stack sequences described in the literature. Try to find your one in the list. If it is not there (i.e. you may have done something new) define a new stack sequence according to the instructions.\nExampleBelow are some of the most common substrates\nSLG | FTO\nSLG | ITO\nPET | ITO\nPEN | ITO\nSLG | AZO\nPET | IZO",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "nan | 140.0",
                          "2.0 | 0.0004",
                          "nan | 0.4",
                          "3.0",
                          "0.03 | 0.00015 | 2.0",
                          "nan | 332.0",
                          "nan | 35.0 | nan | 35.0",
                          "2.0 | 0.06",
                          "nan | 100.0",
                          "0.15",
                          "398.0",
                          "nan | 500.0",
                          "nan | 0.2",
                          "nan | 0.6",
                          "nan | 0.1",
                          "2.2 | nan",
                          "nan | 180.0",
                          "nan | nan",
                          "1.0 | 0.14",
                          "2.2 | 0.2",
                          "3.0 | nan",
                          "2.0",
                          "nan | 220.0",
                          "nan | 0.5",
                          "nan | 0.13",
                          "nan | 0.22",
                          "150.0",
                          "nan | 60.0",
                          "200.0",
                          "nan | 0.15",
                          "nan | 0.25",
                          "1.0 | 0.15",
                          "nan | 0.04",
                          "0.175 | 0.0025",
                          "2.2",
                          "1.0 | 0.13",
                          "2.0 | 0.6",
                          "nan | 40.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "thickness",
                "description": "A list of thicknesses of the individual layers in the stack. Use the following guidelines\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous filed.\n- State thicknesses in nm\n- Every layer in the stack have a thickness. If it is unknown, state this as \u2018nan\u2019\n- If there are uncertainties, state the best estimate, e.g write 100 and not 90-110\n- If you only know the total thickness, e.g. you have a 2 mm thick commercial FTO substrate and you do not know how thick the FTO layer is, state that as \u20182 | nan\u2019\nExample\n2.2 | 0.1\n2 | nan\nnan | nan | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "area",
                "description": "The total area in cm2 of the substrate over which the perovskite is deposited. This may be significantly larger than the cell area",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "AimCore Technology",
                          "Lumtec",
                          "Yingkou OPV Tech New Energy Co.",
                          "Sigma Aldrich",
                          "Yingkou YouXuan",
                          "Unknown",
                          "Automatic Research GmbH",
                          "Xiang Science & Technology",
                          "Solaronix",
                          "OPV Technology Corp",
                          "Furuuchi Chemical",
                          "Thin Film Devices Inc.",
                          "Mekoprint OC50",
                          "Luminiscence Technology Corporation",
                          "Naranjo",
                          "Lab made",
                          "CSG Holding Co",
                          "Eastman Chemical Company",
                          "Naranjo substrates",
                          "Nippon Sheet Glass Co.",
                          "Pilkington",
                          "Advanced Election Technology",
                          "Kintec",
                          "Shen Zhen Hua Nan Xiang Cheng Factory",
                          "Hartford Glass Co.",
                          "3M",
                          "HeptaChroma",
                          "Merck",
                          "Delta Technologies",
                          "Ossila",
                          "AMG-Tech",
                          "Greatcell Solar",
                          "Xinyan Technology",
                          "Zhuhai Kaivo"
                        ]
                      }
                    }
                  ]
                },
                "name": "supplier",
                "description": ". The supplier of the substrate.\n- Most substrates in the perovskite field are bought commercially, but if it is made in the lab, state this as \u201clab made\u201d\n- If the supplier is unknown, stat that as\u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nLab made\nNGO\nPilkington",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "TCO-XY15",
                          "Unknown",
                          "TEC15",
                          "TEC8",
                          "TEC14",
                          "Trizact 3000",
                          "FTO22-7",
                          "TEC7",
                          "TEC7.5",
                          "NSG10",
                          "DHS-FTO22-15N",
                          "TEC9",
                          "TCO22-7",
                          "TECS"
                        ]
                      }
                    }
                  ]
                },
                "name": "brand_name",
                "description": ". The specific brand name of the substrate. e.g NGO11, TEC15, etc.\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Commercial | Commercial",
                          "Commercial | Electrodeposition >> Spin-coating",
                          "Commercial | Sputtering",
                          "Commercial | Electrospinning",
                          "Unknown",
                          "Commercial | Sputtering >> Sputtering",
                          "Commercial | commercial",
                          "Spin-coating | Commercial",
                          "Photolithography | Spin-coating | Lamination",
                          "Commercial | Laser patterning >> Spin-coating",
                          "Commercial | Spin-coating",
                          "CVD",
                          "Commercial | Magnetron sputtering",
                          "Commercial | ALD | Doctor blading | ALD"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_procedure",
                "description": ". A list of the deposition procedures for the substrate\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- Make sure that you describe as many layers as there are layers in the stack. Otherwise it will be difficult to interpret which layer the deposition procedure is referring to. It should thus be as many vertical bars in this field as when describing the substrate stack.\n- When more than one reaction step, separate them by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the deposition procedure for a layer unknown, state that as\u2018Unknown\u2019\n- If a substrate is bought commercially and you do not know, indicate this by the label \u201cCommercial\u201d\n- This category was included after the initial project release wherefor the list of reported purities are short, so be prepared to expand on the given list of alternatives in the extraction protocol.\nExample\nCommercial | Commercial\nCommercial | Sputtered >> Sputtered\nCommercial | ALD",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "surface_roughness_rms",
                "description": "The root mean square value (RMS) of the surface roughness expressed in nm\n- If not known, leave this field blank",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "nanometer"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Unknown",
                          "Photolithography",
                          "Dipping in HCl",
                          "Laser etching",
                          "Zn-powder; HCl >> Mecanical scrubbing"
                        ]
                      }
                    }
                  ]
                },
                "name": "etching_procedure",
                "description": ". For the most common substrates, i.e. FTO and ITO it is common that part of the conductive layer is removed before perovskite deposition. State the method by which it was removed\n- If there is more than one cleaning step involved, separate the steps by a double forward angel bracket (\u2018 >> \u2018)\n- This category was included after the initial project release wherefor the list of reported purities are short, so be prepared to expand on the given list of alternatives in the extraction protocol.\nExample\nZn-powder; HCl >> Mecanical scrubbing\nLaser etching",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "2.5 M NaOH >> Ultrasonic bath >> Water >> Detergent >> Milli-Q Water >> Annealed 30 min at 500\u2103",
                          "Acetone >> IPA >> O2 plasma",
                          "Acetone >> IPA >> Water",
                          "Acetone >> Ultrasonic bath >> Abs Ethanol >> Ultrasonic bath >> DI Water",
                          "Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Water >> Ultrasonic bath",
                          "Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Water >> Ultrasonic bath >> UV-Ozone",
                          "Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath",
                          "Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> Drying in oven >> UV-Ozone",
                          "Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> Ethanol >> UV-Ozone",
                          "Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> Ethanol >> Ultrasonic bath",
                          "Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> O2-plasma",
                          "Acetone >> Ultrasonic bath >> Isopropyl alcohol >> Ultrasonic bath >> de-ionized Water",
                          "Acetone >> Ultrasonic bath >> Methanol >> Ultrasonic bath",
                          "Acetone >> Ultrasonic bath >> Methanol >> Ultrasonic bath >> DI Water",
                          "Acetone >> Ultrasonic bath >> Methanol >> Ultrasonic bath >> Water",
                          "Acetone >> Ultrasonic bath >> Methanol >> Ultrasonic bath >> Water >> Ultrasonic bath",
                          "Acetone >> Water >> IPA >> Nitrogen flow",
                          "Acetone >> Water >> IPA >> Nitrogen flow >> Corona Treatment 0.74 kW",
                          "DI Water >> Ethyl alcohol >> Acetone",
                          "DI Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath",
                          "DI Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> UV-Ozone",
                          "DI Water >> Ultrasonic bath >> Ethanol",
                          "DI Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> UV-Ozone",
                          "DI Water >> Ultrasonic bath >> Helmanex >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Methanol >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> UV-Ozone",
                          "DIWater >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> UV-Ozone",
                          "DIWater >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Oven drying >> UV-Ozone",
                          "De-ionized Water >> Ultrasonic bath >> Soap >> Ultrasonic bath >> IPA >> Ultrasonic bath",
                          "Detergent >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >>  >> DI-Water >> Ultrasonic bath >> UV-Ozone",
                          "Detergent >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath",
                          "Detergent >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> UV-Ozone",
                          "Detergent >> Ultrasonic bath >> DI-Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> UV-Ozone",
                          "Detergent >> Ultrasonic bath >> DI-Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> air plasma",
                          "Detergent >> Ultrasonic bath >> alkali liquor >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath",
                          "Extran 300 >> Ultrasonic bath >> IPA",
                          "H2O2/HCl/H2O = 1:1:5 >> acetone >> isopropyl alcohol",
                          "Hellmanex >> solution >> DI >> water >> acetone >> IPA",
                          "Helmanex >> Acetone >> IPA >> O2-plasma",
                          "Helmanex >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> O2 plasma",
                          "Helmanex >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> UV-Ozone",
                          "Helmanex >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath",
                          "Helmanex >> Ultrasonic bath >> DI Water >> Ethanol >> 2-propanol >> Ultrasonic bath",
                          "Helmanex >> Ultrasonic bath >> DI Water >> Ultrasonic bath",
                          "Helmanex >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> IPA >> Ultrasonic bath",
                          "Helmanex >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> O2 plasma",
                          "Helmanex >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> UV-Ozone",
                          "Helmanex >> Ultrasonic bath >> Ethanol >> Acetone",
                          "Helmanex >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> DI Water",
                          "Helmanex >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> UV-Ozone",
                          "Helmanex >> Ultrasonic bath >> IPA >> Ultrasonic bath >> Acetone >> UV-Ozone",
                          "Helmanex >> Ultrasonic bath >> Water >> IPA >> Ultrasonic bath >> Acetone >> microwave plasma",
                          "Helmanex >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> UV-Ozone",
                          "Helmanex >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethanol",
                          "Helmanex >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath",
                          "Helmanex >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> UV-Ozone",
                          "Micro-90 detergent >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath",
                          "Mucasol >> Ultrasonic bath >> Acetone >> Utrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> Ozone",
                          "Mucasol >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Water >> Ultrasonic bath",
                          "Mucasol >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> IPA >> UV-Ozone",
                          "NaOH >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> DI Water >> Acetone",
                          "NaOH Ethanolic solution >> Water >> detergent >> Water >> Dry air",
                          "Oxygen plasma",
                          "Soap >> Acetone >> Ethanol >> Water >> UV-Ozone",
                          "Soap >> Acetone >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethanol >> O2-plasma",
                          "Soap >> DIWater >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> N2 blowing >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol",
                          "Soap >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> DI Water",
                          "Soap >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> DI Water >> Ultrasonic bath >> Plasma",
                          "Soap >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> Water >> Ultrasonic bath >> O2-plasma",
                          "Soap >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> Plasma",
                          "Soap >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> Ethanol-HCl >> Ultrasonic bath >> Acetone >> Water >> Heating",
                          "Soap >> Ultrasonic bath >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> Water",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Plasma",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> O2-plasma",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> Plasma",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethanol >> Utrasonic bath >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethano >> Ultrasonic bath >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethanol >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> O2-plasma",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> Water >> Ultrasonic bath >> IPA >> UV-Ozone",
                          "Soap >> Ultrasonic bath >> de-ionized Water >> Ultrasonic bath >> Acetone >> UV-Ozone >> Ethanol >> UV-Ozone",
                          "Soap >> Water >> Acetone >> IPA >> Ethanol >> Water >> UV-Ozone",
                          "Soap >> Water >> Acetone >> IPA >> UV-Ozone",
                          "Soap >> Water >> Acetone >> Water",
                          "Soap >> Water >> Ethanol",
                          "Soap >> Water >> Toluene >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> O2-plasma",
                          "Soap >> Water >> Ultrasonic bath >> Acetone >> Ethanol >> Ultrasonic bath >> IPA >> UV-Ozone",
                          "Soap >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol",
                          "Soap >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> IPA >> UV-Ozone",
                          "Soap >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> O2-plasma",
                          "Soap >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA",
                          "Soap >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> O2-plasma",
                          "Soap >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> UV-Ozone",
                          "Soap >> Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> lPA >>  >> Ethanol >> O2-plasma",
                          "Soap >> Water >> Ultrasonic bath >> Acetone; IPA; Ethanol >> UV-Ozone",
                          "Soap >> Water >> Ultrasonic bath >> Ethanol",
                          "Soap >> Water >> Ultrasonic bath >> Ethanol >> O2-plasma",
                          "Soap >> Water >> Ultrasonic bath >> Ethanol >> UV-Ozone",
                          "Soap >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> UV-Ozone",
                          "Soap >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> IPA",
                          "Soap >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> IPA >> O2-plasma",
                          "Soap >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> IPA >> UV-Ozone",
                          "Soap >> Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> lPA;Acetone; Water >> Ultrasonic bath >> UV Ozone",
                          "Soap >> Water >> Ultrasonic bath >> IPA >> O2-plasma",
                          "Soap >> peroxide/ammonia >> Ultrasonic bath >> Methanol >> Ultrasonic bath >> IPA >> UV-Ozone",
                          "Toluene >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Water >> Ultrasonic bath",
                          "UV-Ozone",
                          "Unknown",
                          "Unknown >> O2 plasma",
                          "Unknown >> UV-Ozone",
                          "Water >> Acetone >> Ethanol >> IPA",
                          "Water >> Acetone >> Ethanol >> UV-Ozone",
                          "Water >> Acetone >> IPA",
                          "Water >> Acetone >> IPA >> O2-plasma",
                          "Water >> Acetone >> IPA >> UV-Ozone",
                          "Water >> Ethanol >> IPA",
                          "Water >> Ultrasonic bath >> Acetone >> Ultrasonic bath >> IPA >> Ultrasonic bath >> UV-Ozone",
                          "Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone",
                          "Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> UV-Ozone",
                          "Water >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> heating >> UV-Ozone",
                          "Water >> Ultrasonic bath >> IPA >> Ultrasonic bath >> O2-plasma",
                          "alconox-detergent >> Ultrasonic bath >> deionized water >> Ultrasonic bath  >> acetone >> Ultrasonic bath >> isopropanol >> Ultrasonic bath",
                          "detergent >> acetone >> isopropanol >> ethanol",
                          "detergent >> deionized water >> isopropanol >> acetone >> UV-Ozone"
                        ]
                      }
                    }
                  ]
                },
                "name": "cleaning_procedure",
                "description": ". The schematic cleaning sequence of the substrate. The Extraction protocol does not capture the fine details in the cleaning procedures, e.g. times, temperatures, etc. but state the general sequence. Refers to the cleaning of the entire substrate before the deposition of the rest of the cell stack starts.\n- If there is more than one cleaning step involved, separate the steps by a double forward angel bracket (\u2018 >> \u2018)\n- If more than one procedure is occurring simultaneously, e.g. Soap washing an ultrasonic bath, separate simultaneously occurring steps with a semicolon.\n- This category was included after the initial project release wherefor the list of reported purities are short, so be prepared to expand on the given list of alternatives in the extraction protocol.\nExample\nHelmanex >> Ultrasonic bath >> Ethanol >> Ultrasonic bath >> Acetone >> UV-ozone\nPiranha solutionion\nPiranha solutionion >> UV-ozone\nSoap\nSoap >> Ultrasonic bath\nSoap >> Ultrasonic bath >> Ethanol; Ultrasonic bath >> Acetone >> UV-ozone\nSoap >> Ultrasonic bath >> UV-ozone\nUnknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "ETL",
            "description": "A section to describe information related to the Electron Transport Layer (**ETL**).",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "3TPYMB",
                          "PCBM-60; ICBA",
                          "SnO2 | C60",
                          "SnO2-np | MSAPBS",
                          "TiO2-c | TiO2-mp | PbS-QDs",
                          "ZTO | SnO2-c | C60",
                          "TmPyPB | C60 | TmPyPB",
                          "CeOx",
                          "TiO2-c | TiO2-np | TiO2-mp",
                          "TiO2-c | TiO2-mp | CsBr",
                          "PCBM-60 | CeOx",
                          "C60; PCBM-60 | BCP",
                          "ZTO | SnO2-c | PCBM-60",
                          "SnO2-c | C60",
                          "TiO2-c | TiO2-nw | CdS",
                          "TiO2-c | TiO2-mp | NH4I",
                          "SnO2-c | C60-5d",
                          "NDI-PhE",
                          "PCBM-60 | Zr(acac)4",
                          "PCBM-70 | C60 | AUH",
                          "SnO2",
                          "2PDI-0S | PEIE",
                          "PCBM-60 | TiO2-np",
                          "PCBM-60 | DEME-BF4",
                          "ZnO-np | p-(F)-PO-TAZ",
                          "TiO2-c | TiO2-mp | Sinapoyl malate",
                          "Cyptop | PCBM-60 | BCP",
                          "PCTDI",
                          "PCBM-60 | PPDIN6",
                          "FA-PDI2 | TiO2-c",
                          "SnO2-mp | TiO2-c",
                          "ZnO0.95Sn0.05O1.05",
                          "ZnO | PEIE",
                          "a-PTCDI",
                          "SnO2-np | TiO2-c",
                          "TiO2-c | SiO2-np; TiO2-mp",
                          "TiO2-c | TiO2-mp | NaYF2@SiO2-np",
                          "MoS2",
                          "PCBM-63",
                          "TiO2-c | Al2O3-c",
                          "SnO2-np | PbF2",
                          "PCBM-60 | DPO",
                          "PEG; SnO2-np",
                          "SnO2-np | BBA",
                          "ZnO0.9Sn0.1O1.1",
                          "PCBM-60 | BCP | AZO",
                          "TiO2-c | Ce2O-mp",
                          "S-acetylthiocholine chlorde | C60 | BCP",
                          "TiO2-c | TiO2-mp | D205",
                          "Ti(OiPr)4",
                          "PCB-C8",
                          "WO3",
                          "PCBM-60 | AZO-np | BCP",
                          "TiO2-c | In2O3",
                          "FDA | PCBM-70",
                          "AZO | ZnO-nw",
                          "PCBM-60 | BCP; TZ-1",
                          "SnO2-c | Au | SnO2-c | TiO2-mp",
                          "TiO2-c | TiO2-mp | BaTiO3",
                          "TiO2-c | TiO2-mp | Caproic acid",
                          "SnO2-np | EPA",
                          "SnO2-np | C60-SAM",
                          "PTAA",
                          "SnO2-np; ZnO-np",
                          "ICBA",
                          "TiO2-c | TiO2-mp | Sb2S3",
                          "TPE-ISO4 | C60 | BCP",
                          "NDI-ID (RS)",
                          "IDTT2FPDI",
                          "SrTiO3-c | SrTiO3-mp",
                          "ZnO | 1,2-ethanedithiol (10 mM)",
                          "C60; C70",
                          "PCBM-60 | Isopropanol-hydroquinolatolithium",
                          "TiO2-c | MgO | TiO2-nw",
                          "PN-F25",
                          "PbI2",
                          "TiO2-c | WOx",
                          "TiO2-c | BaSnO3-mp",
                          "TiO2-c | MPMIC60",
                          "ZnO0.75Sn0.25O1.25",
                          "SnO2-c | NPC60 OH",
                          "PCBM-60 | C3-CBL",
                          "TiO2-c | TiO2-mp | ZrO2@TiO2-mp",
                          "ICBA-tran3 | C60 | BCP",
                          "TiO2-c | H3PW12O4; TiO2-mp",
                          "LiF | C60 | TmPyPB",
                          "TiO2-c | SiO2",
                          "MgO | TiO2-mp",
                          "C60 | Rhodamine 101",
                          "PCBM-60; PDI-DA | BCP",
                          "ZTO | TiO2-mp | ZrO2-mp",
                          "PCBM-60 | PDINO",
                          "C60 | PCBM-60",
                          "TiO2-c | SnO2@TiO2-np",
                          "PDI-T | C60 | BCP",
                          "NDI-BTH1",
                          "PCBM-60 | Rodhamine 101",
                          "Ba(OH)2",
                          "KY7F22-np",
                          "F8TBT",
                          "PCBM-60 | CMB-vTA",
                          "TiO2-nt",
                          "PCBB-S-N | PCBM-60",
                          "TiO2-nanobundles",
                          "PCB-C12",
                          "TiO2-c | SnO2-c | TiO2-mp | ZrO2-mp",
                          "TiO2-c | ZnSe",
                          "SnO2-c | TiO2-np",
                          "ZnO-c | PCBM-70",
                          "TiO2-c | OTS",
                          "TiO2-mp | Z907",
                          "TiO2-c | CsCl",
                          "PSe-PDI",
                          "Zn2SnO4-c",
                          "PCBM-60 | PCBC",
                          "ITCPTC-Se | C60 | BCP",
                          "TiO2-nanoplatelets",
                          "PTEG-1",
                          "WOx | SnO2-np",
                          "IDTCN | C60 | BCP",
                          "Zn2SnO4",
                          "Mono-PCBOE | ZnO",
                          "TiO2-c | TiO2-nanocones",
                          "TiO2-c | PCBDAN",
                          "HATNAS3C7",
                          "F-PDI | ZnO-np",
                          "PCBM-60 | PCBDAN",
                          "PCBM-60; PEI",
                          "CdSe | LiF",
                          "TiO2-nw | CuInS2-QDs",
                          "PCBM-70",
                          "ZnO-nw | ZnO-c",
                          "TMTA | PCBM-60 | C60 | TPBi",
                          "PNDI-2T | PEIE",
                          "Graphene oxide; TiO2-np",
                          "TiO2-c | Benzoic acid",
                          "3TPYMB | C60 | TmPyPB",
                          "YVO4:Eu | TiO2-c | TiO2-mp",
                          "SnO2-np | PCBA",
                          "TiO2-c | ZnO-c | TiO2-mp",
                          "SnO2-c | PCBM-60-np",
                          "TiO2-c | WO3",
                          "TPE-DPP8 | C60 | BCP",
                          "C60-HPy | BCP",
                          "SnS2",
                          "TiO2-c | BaSnO3-np",
                          "IPH",
                          "C60 | BCP",
                          "TiO2-c | TiO2",
                          "SnO2-c | KCl",
                          "PCBM-70; PTB7-Th",
                          "TiO2-c | TiO2-nc",
                          "SnO2-np | PN4N",
                          "PCBM-60 | F-C60",
                          "PS | PCBM-60",
                          "SnO2-np | ImAcHcl",
                          "PCBM-60 | ZnMgO",
                          "Sn2O3-ns | PCBM-60 | Bphen",
                          "Au-np; TiO2-np | C-PCBOD",
                          "PCBM-60 | ZnO | PEI",
                          "PCBM-60 | Bphen; Ir(MDQ)2(acac)",
                          "PEIE | C60",
                          "ITCPTC-Se | Rhodamine 101 | LiF",
                          "SnO2-c | Ba(OH)2",
                          "TiO2-c | 2-OMe-SAM",
                          "TMPA-Cl | C60 | BCP",
                          "ZnO-np | NH4Cl",
                          "ETM",
                          "SnO2-c | Al2O3-mp | NiO-np",
                          "ZnO-np | PFS-FC",
                          "TiO2-c | Graphene",
                          "PC61BTh | BCP",
                          "TiO2-c | Zn2Ti3O8-mp",
                          "ZnO0.855Sn0.15O1.15",
                          "Nb2O5 | PCBM-60 | Bphen",
                          "SnO2-np | Sinapoyl malate",
                          "ZnOS",
                          "PCBM-60 | Rhodamine 101 | C60 | BCP | Rhodamine 101 | LiF",
                          "TiO2-c | TiO2-mp | BaTiO3-mp",
                          "Phenyltrichlorosilane | PCBM-60",
                          "ICPA | BCP",
                          "TiO2-c | ZnO-nanoflake",
                          "TiO2-c | TiO2-mp | PCBM-60; PS",
                          "TiO2-c | SiW11O39-POM",
                          "TiO2-c | SiO2-np | TiO2-c | SiO2-np | TiO2-c",
                          "TiO2-c | SiO2-np | TiO2-c",
                          "ZnO-c",
                          "TiO2-c | D35",
                          "SnO2-np | PCBA-60",
                          "ZnO-c | TiO2-mp",
                          "TiO2-c | TiO2-mp | PCBM-60; PTAA",
                          "SnO2-c | IDTT2FPDI",
                          "PCBM-60 | CMB",
                          "TiO2-c | SiO2-IO",
                          "TiO2-c | TiO2-mp | Graphene",
                          "ZnO-c | 4-methoxybenzoic acid",
                          "ZnO-c | CPTA",
                          "PCBM-60; Sb-Carbon-nw | BCP",
                          "ZnO-c | 1,2 ethanedithio",
                          "TiO2-c | TiO2-mp | 3-aminopropanoic acid-SAM",
                          "Ca",
                          "TPE-DPP6 | C60 | BCP",
                          "SnO2-nw | TiO2-c",
                          "PCBM-60 | TPPI",
                          "SnO2-np | KCl",
                          "P3HT",
                          "ZnO-c | ZnSO",
                          "CPTA-E",
                          "TiO2-c | TiO2-mp | PCBM-60; Poly(N-vinylcarbazole)",
                          "SnO2-nanosheets | C60",
                          "TiO2-c | CPTA",
                          "ZnO",
                          "ZnO-c | ZnO-mp | PEI",
                          "TiO2 | Al2O3-mp",
                          "TiO2-c | Dimethylbiguanide",
                          "PCBM-60 | AgAl-np | Au-np | LiF",
                          "TiO2-c | Graphene; SrTiO3",
                          "f-C70",
                          "Fe2O3-mp",
                          "TiO2-c | TiO2-mp | SnO2",
                          "IDT6CN-TM | BCP",
                          "PCBM-60 | PFN-P2",
                          "ZnO-np | EA",
                          "ZnO-np | ZnO-nanospheres",
                          "PCBM-60 | Ca(acac)2",
                          "PCBM-60 | Zn(acac)",
                          "TiO2-c | TiO2-mp | Carbo-QDs",
                          "ITO-nw | TiO2-np",
                          "IZO",
                          "TiO2-c | TiO2-mp | ZnO-mp",
                          "PPDIDTT | PCBM-60 | Bphen",
                          "PDIN",
                          "ZnSO4-c | ZnSO4-mp",
                          "TiO2-c | Fullerenol",
                          "PCBM-60; ICBA | BCP",
                          "PCBM-60-MCM",
                          "CMB-vTA | PCBM-60 | AZO",
                          "SrTiO3 | TiO2-mp",
                          "nTi-MOF | PCBM-60",
                          "COi8DFIC | BCP",
                          "ZnO-np | PEI",
                          "PEAI | PCBM-60 | BCP | SnO2-c",
                          "In2O3-c | PCBM-60",
                          "CeO2-c | TiO2-c",
                          "H-PDI",
                          "SnO2-c | TiO2-mp",
                          "ZnO-c | ZnO-nw | SnO2-c",
                          "MgO-c | SnO2-c",
                          "TiO2-c | TiBaO-nanosphere",
                          "PCBM-60 | TmPyPB",
                          "TiO2-c | KH560",
                          "ZnO | 1,2-ethanedithiol (5 mM)",
                          "4-acetylpyridine | PCBM-60 | BCP",
                          "TiO2-c | TiO2-mp | Trimethylamine oxide",
                          "DMEC-70 | LiF",
                          "TiO2-c | ZnO-nw | AZO-c",
                          "PEDOT:PSS",
                          "IT-4f | BCP",
                          "PCBM-60; PMMA",
                          "C70",
                          "PCBM-60 | ZnO-np | AZO",
                          "PCBM-60 | PCBC | LiF",
                          "WO3 | TiO2-c",
                          "TiO2-c | SWCNTs; TiO2-mp",
                          "LiF",
                          "TiO2-mp | MgO",
                          "ZnO-c; Graphene-np",
                          "Graphene | Al2O3-mp",
                          "PCMB-60:BCP",
                          "SnO2-np | C60",
                          "Graphene-QDs",
                          "ZnO-c | PVP",
                          "(RhCp*Cp)2 | PTCBI",
                          "SnO2-c | ABA-SAM",
                          "PCBM-70 | C60",
                          "TiO2-c | TiO2-nanofibers",
                          "AZO-np",
                          "IDT6CN | Rhodamine 101 | LiF",
                          "PCBM-60 | C70 | BCP",
                          "PCBM-60 | TOPD",
                          "TiO2-c | TiO2-mp | SbI3",
                          "SnO2-c | PMMA",
                          "PCBM-60 | Methanol-hydroquinolatolithium",
                          "LiF | C60 | PEIE | SnO2-c | ZTO",
                          "PCBM-60 | PDIN",
                          "ZnO-c | AZO-np",
                          "PCBM-60 | ZnO-np | BCP",
                          "TiO2-mp",
                          "B-DIPBI",
                          "NDI; SnO2-np",
                          "QCAPZ | LiF",
                          "ZnO-c | ZnO-nw",
                          "ZnO-c | C3-SAM",
                          "Carbon-nt | PFN-Br",
                          "TiO2-c | AAO",
                          "AgAu-np | TiO2-c",
                          "TiS2",
                          "pBTTz",
                          "PCBM-60-PCP",
                          "TiO2-c | PCBM-60 | WS-C60",
                          "TiO2-c | TiO2-mp | Cs2CO3",
                          "NDI-BTH2",
                          "SrTiO3 | Al2O3-mp",
                          "TiO2-c | Polystyrene-ns | TiO2-mp",
                          "SnO2-nanospheres",
                          "PCBM-60 | PCBDANI",
                          "ZnO-c | AZO-mp",
                          "ZnO-np | PCBM-60",
                          "NDI-PM",
                          "C60 | TmTyPB",
                          "Graphene-np; TiO2-mp",
                          "TiO2-c | TiO2-mp | Si-np",
                          "PCBM-62",
                          "PFPDI",
                          "PCBM-60 | TiO2",
                          "TiO2-c | TiO2; Al2O3-mp",
                          "TiO2-c | TiO2-hollow spheres; TiO2-mp",
                          "PFN | C60; PCBM-60",
                          "PCBM-60 | PN4N",
                          "PCBM-60 | [BMIM]BF4",
                          "PNVT-8 | ZnO",
                          "IT4H | s-Bphen",
                          "TiO2-c | Ba0.9Sr0.1SnO3-np",
                          "TiO2-c | TiO2-mp | ETPM",
                          "TiO2-c | TiO2-mp | MBA-SAM",
                          "SnO2-c | TiO2-c | TiO2-mp",
                          "PEDOT:PSS | PEI",
                          "IDTCN | Rhodamine 101 | LiF",
                          "Carbon-QDs; SnO2-c",
                          "Q10 | BCP",
                          "TiO2-mp | Pbs-QDs",
                          "PCBM-60 | ZnO",
                          "PDBS-PDI",
                          "PTTI-1",
                          "PCBM-70 | BCP",
                          "ZnO-c | PEI",
                          "C60 | C60-np",
                          "TiO2-c | TiO2-mp | Au@Ag",
                          "C70 | TmPyPB",
                          "TiO2-mp | MK2",
                          "TiO2-c | CSOE",
                          "PDI-V | C60 | BCP",
                          "PCBM-60 | BCB",
                          "ZnO | C60",
                          "TiO2-c | SiO2-nanocolumns | TiO2-nw",
                          "ZnO@rQD-np",
                          "Graphene; TiO2-c | Al2O3-mp",
                          "PEI | ICBA",
                          "TiO2-np | C60; PCBM-60",
                          "Polyimid | PCBM-60 | BCP",
                          "ZnO-c | ZnMgO-c | ZnO-nw | PCBM-60",
                          "P(NDI2DT-TTCN) | BCP",
                          "PFN-2TNDI",
                          "CeOx-np",
                          "TiO2-c | ZnO-np",
                          "CeO2-c",
                          "PCBM-70 | ZrO2",
                          "Aniline; rGO | CsCO3",
                          "IDT6CN-4F | BCP",
                          "TiO2-c | TiO2-mp | Au-np",
                          "PCBM-60 | TiO2 | BCP",
                          "SnO2-c | PA-SAM",
                          "BenMeIM-Cl",
                          "PEI",
                          "PCBB-S-N | C60 | BCP",
                          "TiO2-c | NaYF4:Yb:Er-np",
                          "PCBM-60 | Phosphoniumfluorene",
                          "ZnO-c | ZnO-nw | TiO2-np",
                          "Ti | C60",
                          "DS1",
                          "PCBM-60 | Bphen | Cs2CO3",
                          "TiO2-c | ZnO-nw | Al2O3-c",
                          "PCBM-60 | Rhodamine 101 | LiF",
                          "TiO2-c | TiO2; SiO2-IO",
                          "PCBM-60 | BCP; TZ-2",
                          "TiO2-c | TiO2-mp | n-dimethyloxamic acid",
                          "CPTA",
                          "ZnO-c | Ethyl acetate",
                          "TDTP | LiF",
                          "bis-C60",
                          "PCBM-60 | AZO-np",
                          "TiO2-c | TiO2-mp | Nb2O5",
                          "TiO2-mp | ZrO2-mp",
                          "PCBM-60",
                          "BPTI | C60 | BCP",
                          "CdS-np",
                          "f-C60 | C60",
                          "PCBM-60 | Bphen | Cs2CO3; MoO3",
                          "TiO2-c | TiO2-mp | Al2O3",
                          "SnO2-QDs | PCBM-60",
                          "PCBM-60 | Carbon-QDs",
                          "ZnO-c | Urea",
                          "PEIE | PCBM-60",
                          "TiO2-c | TiO2-mp | PCBM-60; PMMA | BAI",
                          "TiO2-c | TiO2-mp | Al203-c",
                          "Me4NBr | PCBM-60 | BCP",
                          "PCBM-derivative10",
                          "In2O3",
                          "TiO2-c | 60",
                          "TiO2-c | TiO2-nanowalls",
                          "PCBB-S-N",
                          "bis-PCBOE | ZnO",
                          "EG-PEDOT:PSS | Ti | SnO2-c | TiO2-c",
                          "TiO2-c | 3-OMe-SAM",
                          "TiO2-c | TiO2-np",
                          "PDPT",
                          "SnO2-c | NiCl2",
                          "PCBM-60 | FPI-PEIE",
                          "Zn2SnO4 | Zn2SnO4-nw",
                          "Carbon-mp | TiO2-mp",
                          "SnO2-c | C3-SAM",
                          "PCBM-60 | MoS2",
                          "TiO2-c | MoOx",
                          "Mg0.1Zn0.9O-np",
                          "ICBA; PCBM-60",
                          "TiO2-c | PCBM-60 | C60-SAM",
                          "Zn:SnO2",
                          "TiO2-c | TiO2-mp | PbTiO3",
                          "PCBM-60; F8BT | C60",
                          "TiO2-c | CsAc",
                          "Zn2SnO4-c | rGO; Zn2SnO4-fiber",
                          "PCBM-60 | C60SB:TBAI",
                          "SrSnO3",
                          "TPE-DPP16 | C60 | BCP",
                          "(DTYM-NDI-DTYA)2 | BCP",
                          "Polystyrene | C60 | BCP",
                          "TiO2-nw | TiO2-nw",
                          "Al2O3-mp",
                          "TiO2-c | Graphdiyne-QDs",
                          "Plastic foam | C60 | BCP",
                          "TiO2-c | TiO2-nanobeads",
                          "TiO2-c | PCBM-60 | PbI2",
                          "PCBM-60 | ZnO-np | ZnO-c",
                          "C60-N",
                          "NDI-P",
                          "Al:ITO-c",
                          "Al2O3-c | TiO2-c | TiO2-mp",
                          "PN-P",
                          "TiO2-c | ZnCdS",
                          "AZO-np | PCBM-60",
                          "PCBM-60 | BMIM-OTF",
                          "TiO2-c | TiO2-helices",
                          "f-C60",
                          "SnO2-c | Carbon-QDs",
                          "TiO2-c | TiO2-mp; YVO4:Eu:Bi-np",
                          "none",
                          "LiSPS | PCBM-60",
                          "ZnO-np | Graphene",
                          "N2200; PFN-Ox | bis-C60",
                          "ZnO@SnO2-np",
                          "MgO | SnO2-np | Ethanol amine",
                          "TiO2-c | TiO2-mp | 4\u2010Aminobenzoic acid",
                          "Cs2CO3",
                          "TiO2-c | Si-nw",
                          "Fullerene @ F2",
                          "PCBM-60; F8TBT",
                          "HAT-CN | BCP",
                          "TiO2-nanoleaves | MgO",
                          "TiO2-c | C60-BCT",
                          "TiO2 | SnO2-c | SnO2-np",
                          "TiO2-nanofibers",
                          "CdS-c | TiO2-mp",
                          "CdSe-QDs; PCBM-60 | Rhodamine 101 | LiF",
                          "ITCPTC-Th | Rhodamine 101 | LiF",
                          "PCBM-60 | Rhodamine 101 | C60 | Rhodamine 101 | LiF",
                          "S-acetylthiocholine chloride | C60 | BCP",
                          "PCBM-60 | AZO-np | SnO2-c",
                          "ZnO-c | ZnO-c",
                          "PCBM-60 | Polyethylimine",
                          "C60; PDI | BCP",
                          "BrTPA-PCBM | bis-C60",
                          "BaSnO3-np",
                          "TiO2-c | TiO2-mp | PhCOOH",
                          "IC60BA | bis-C60",
                          "Li4SiW12O40",
                          "Au@TiO2-np; TiO2-np",
                          "TiO2-np",
                          "TiO2-np | PCBM-60 | TiO2-c",
                          "TiO2-c | TiO2-mp | ZIF-8-40",
                          "TiO2-c | Al2O3-nt",
                          "TiO2-c | TiO2-mp | MXene",
                          "ZnO-np | Sinapoyl malate",
                          "ZnO-np | MgO-EA",
                          "2-HI-PVK | PCBM-60 | BCP",
                          "TiO2-c | 1-OMe-SAM",
                          "LiF | C60 | SnO2-c",
                          "TiO2-c | PCBB-2CN-2C8",
                          "TiO2-c | MCA",
                          "TiO2-c | TiO2-mp | Y2O3-c",
                          "PCBH",
                          "TiO2-np; Nb2O5",
                          "C60:PhIm | C60",
                          "TiO2-c | TiO2-mp | C60 | ZrO2-mp",
                          "PCBCB",
                          "Carbon | TiO2-mp",
                          "TiO2-np | PCBM-60",
                          "TiO2-c | Al2O3-mp",
                          "C60-SAM",
                          "TiO2-c | TiO2-nw | N-[3-(Trimethoxysilyl)propyl]ethylenediamine-SAM",
                          "ZnO-c | ZnO-nw | TiO2-c",
                          "PbS | PCBM-60",
                          "SnO2-np | DTPP",
                          "ZnO | 1,2-ethanedithiol (15 mM)",
                          "TiO2-c | [EMIM]PF6-IL",
                          "TTC | C60 | BCP",
                          "C60 | SnO2-np",
                          "TiO2-mp | TiO2-c",
                          "Au-nw | TiO2-c",
                          "ZnO-nanospheres",
                          "Nb2O5 | (EMIM)PF6",
                          "F-PDI",
                          "SnO2-c | C60-5a",
                          "TiO2-c | Ag-nw; TiO2-np",
                          "TPA-PCBM | bis-C60",
                          "SnO2-np | TPPO",
                          "PCBM-60 | PVP",
                          "SnO2-c | C60-5b",
                          "PyCEE",
                          "TiO2-c | TiO2-np | ZrO2-mp",
                          "TiO2-c | SrTiO3",
                          "TiO2-c | SrTiO3-mp",
                          "TiO2-c | ZnO-nw",
                          "ITIC; PCBM-60 | PEI",
                          "FSIP | C60 | BCP",
                          "PTCDA | PO-T2T",
                          "PCBM-60 | CIL",
                          "C60 | C60; Phlm",
                          "PMDPT",
                          "TiO2-c | TiO2-mp | PbSe",
                          "TPE-DPP4 | C60 | BCP",
                          "TiO2-c | PCBM-63",
                          "Acetyl acetate; I2; LiI",
                          "Au-np; TiO2-np | C-PCBSD",
                          "TiO2-c | NaYF4:Yb:Er-np; TiO2-mp",
                          "TiO2-c | TiO2-mp | HOOC-Ph-SH",
                          "CPTA | BACl",
                          "H-DIPBI",
                          "SnO2-c | C60-SAM",
                          "PCBM-60; CTAB",
                          "Zr(acac)4",
                          "TiO2-c | TiO2-nanoflowers",
                          "C5-NCMA | bis-C60",
                          "MC-43",
                          "TiO2-np | C70",
                          "TiO2-c | Au-np; TiO2-mp",
                          "C60 | C60",
                          "MoO3 | Au | SnO2-c | TiO2-mp",
                          "TiO2-c | IPH",
                          "PCBM-60 | ZnO-c",
                          "C60 | LiF | BCP",
                          "N2200 | bis-C60",
                          "Graphene | ZnO-QDs",
                          "ZnO-c | T2CA",
                          "PCBM-60 | PCBM-60",
                          "P(NDI2OD-TET)",
                          "TiO2-c | NiO",
                          "TiO2-c | TiO2-mp | D149",
                          "PCBM-60 | AZO",
                          "ZnO-c | ZnO-nanodisks",
                          "Fullerene-2a",
                          "Ru(acac)",
                          "PCBM-60 | Phen-NaDPO",
                          "PCBM-60 | bis-C70",
                          "PCBM-60; Graphene | BCP",
                          "TiO2-c | TiO2-mp | Aminocaproic acid; Caproic acid",
                          "Graphene nanoribbons hPDI2-Pyr-hPDI2",
                          "TiO2-c | TiO2-mp | 4\u2010Aminobutyric acid",
                          "BAFB | ZnO-np",
                          "SnO2-c | C60-5e",
                          "2PDI-3S | PEIE",
                          "PEIA | PCBM-60 | BCP",
                          "Graphene",
                          "Graphene; NDI; SnO2-np",
                          "PCBM-60 | CD",
                          "MATS | PCBM-60",
                          "PCBM-70 | C70 | BCP",
                          "MABr | PCBM-60 | BCP",
                          "PTEBS",
                          "PEDOT:PSS | PEI | PCBM-60",
                          "SnO2-mp",
                          "PMMA | PCBM-60",
                          "2PDI-4S | PEIE",
                          "TiO2-nw",
                          "Au-np; TiO2-np",
                          "C60 | Zr(AcAc)",
                          "PEAI | PCBM-60 | PEI",
                          "C60; Phlm",
                          "ZnO-mp | ZnO-np",
                          "PCBM-60 | PEOz",
                          "TiO2-c | TiO2-mp | ZIF-8-20",
                          "PFN-OX:ZnO",
                          "In2S3",
                          "ZnLiO",
                          "TiO2-c",
                          "C60 | TmPyPB",
                          "SnO2-np | SnO2-c",
                          "PTCDI | BCP",
                          "PCBM-60 | TBAI",
                          "SnO2-c | CBA-SAM",
                          "MAI | PCBM-60 | PEI",
                          "PEIE | SnO2-np | ITIC",
                          "t-BPTI | C60 | BCP",
                          "Carbon-QDs; TiO2-c",
                          "P2",
                          "PEI | PCBM-60",
                          "PCBM-60 | FPI",
                          "Bphen",
                          "Au-np | TiO2-c",
                          "TiO2-fibres",
                          "TiO2-nanosphere",
                          "ZnO-c | 3, 4, 5- trimethoxybenzoic acid",
                          "C60-SAM | C60 | BCP",
                          "PCBM-derivative11",
                          "SnO2-nanosheets",
                          "TiO2-nw | N719",
                          "TiO2",
                          "TiO2-c | TiO2-mp | TiO2-c",
                          "CdS",
                          "PCBM-60 | Carbon-nt; PEI",
                          "C60; PCBM-60",
                          "C60 | B4PyMPM",
                          "SnO2-QDs",
                          "PCBM-60; Zn0.8Cd0.2S-np",
                          "(4AMP)I2 | PCBM-60 | BCP",
                          "C60; PCBM-60 | bis-C60",
                          "ZnO-c | ZnOS | TiO2-mp",
                          "SnO2-np | OTES:APTES-SAM",
                          "PDI | C60 | BCP",
                          "TiO2-c | (3-Aminopropyl)trimethoxysilane",
                          "SnO2-c | BA-SAM",
                          "IDTT2FPDI | PCBM-60 | Bphen",
                          "ZnO-np | BCP",
                          "ZnO-c | ZnO-nanofibers",
                          "GaN",
                          "CSCNT@Al2O3-c",
                          "PCBM-60 | C60",
                          "IT4M | s-Bphen",
                          "SnO2-np | B2Cat2",
                          "PCBM-60 | PFN-Br",
                          "Fe2O3-np",
                          "ICBA | bis-C60",
                          "ZnO-c | Graphene; ZnO-np",
                          "ZnS",
                          "Corrannulene-derivative",
                          "D-C60",
                          "PCPDT-PDI",
                          "TiO2-3D",
                          "TiO2-c | TiO2-mp | ZnS",
                          "PCBM-60 | FPyBr",
                          "DNDIF3",
                          "SnO2-np | ZnO-c",
                          "ZrO2-c | TiO2-c | Al2O3-mp",
                          "C60-lactone",
                          "IT4F | s-Bphen",
                          "Zn2SnO4-np",
                          "Ag-np; TiO2-c | TiO2-mp | ZrO2-mp",
                          "PCBM-60 | PFN; ZnO-np",
                          "ZnO-nanoflake",
                          "TiO2-c | TiO2-mp | Carbon-QDs",
                          "PCBM-60 | Ethanl-hydroquinolatolithium",
                          "Fullerene-2b",
                          "ITCPTC | C60 | BCP",
                          "PFN; ZnO",
                          "PCBM-60 | PrC60MAI",
                          "TiO2-c | TiO2-mp | Al2O3-mp | TiO2-c",
                          "PEG; ZnO-np",
                          "2,6-Py | PCBM-60 | PEI",
                          "TiO2-nanosphere | TiO2-mp",
                          "MoS2-nanosheets",
                          "BPTI | PDI-C4 | BCP",
                          "SnO2-np; ZnO-np | Al2O3-mp",
                          "MgO | SnO2-np",
                          "Nb2O5-c | TiO2-mp",
                          "TiO2-c | Au-np",
                          "FPI-PEIE",
                          "TiO2-np | C-PCBOD",
                          "LiF | C60 | SnO2-c | ZTO",
                          "TiO2-c | AgInS2-QDs; TiO2-c",
                          "ATO | TiO2-c | TiO2-mp",
                          "TiO2-c | CdS",
                          "Nb2O3 | Al2O3-mp",
                          "TiO2-c | TiO2-mp | MgO",
                          "PEIE | SnO2-np",
                          "Mg0.2Zn0.8O-np",
                          "N-PDI",
                          "Fe2O3-c",
                          "Graphene oxide; TiO2-c",
                          "F16CuPc | Bphen",
                          "TiO2-c | TiO2-nanosphere | ZrO2-mp",
                          "TiO2-c | TiO2-nw",
                          "SnO2-np",
                          "SnO2-np | Ethanol amine",
                          "PCBM-60 | C60/C70-N",
                          "Zn2SnO4-c | Zn2SnO4-mp",
                          "ZnO-np | TiO2-mp",
                          "Fullerene-2c",
                          "P(NDI2DT-T2)",
                          "WO3-c | WO3-nw | Cs2CO3 | PCBM-60",
                          "TiO2-c | Thiourea",
                          "TiO2-c | ZnO",
                          "SnO2-nw; Zn2SnO4-np",
                          "PCBM-60 | BCP | TiO2-c",
                          "TiO2-c | ZTO-mp",
                          "ITIC",
                          "TiO2-c | ZIF-8",
                          "PCBM-70; ZnO-np | TiO2-c",
                          "ZnO-c | 4-dimethoxybenzoic acid",
                          "PCBM-60 | Cs2CO3",
                          "ZnO-c | p-amino-benzoic acid",
                          "ZnO-c | SnO2; TiO2-mp",
                          "ZnO-c | ZnO-nanospheres",
                          "2PDI-2S | PEIE",
                          "TiO2-c | Ps",
                          "C60 | Bphen",
                          "ZnO-c | ZnO-mp | ZrO2-mp",
                          "SnO2-c | SnO2-np",
                          "WO3-c",
                          "IDT6CN-TM | C60 | BCP",
                          "C60; PCBM-60-DPM-OE",
                          "PSS | PCBM-60 | BCP",
                          "TiO2-c | SrTiO3-np",
                          "PCBM-60 | C60-ETA",
                          "TiO2-c | Al3O3-mp",
                          "TiO2-c | TiO2-mp | ZrO2-mp | Co3O4-mp",
                          "TiO2-c | PPDI-F3N",
                          "PDTP-DFBT:PCBM-60",
                          "PCBM-60 | Si-np",
                          "SnO2-c | C60-5g",
                          "TiO2-c @ {001} facet",
                          "PCBB",
                          "TiO2-c | PCBSD:GD",
                          "C3N5",
                          "PCBM-60; PDI-DA",
                          "nTi-MOF",
                          "PCBM-60 | pi-PFE3",
                          "PCBM-derivative12",
                          "C60 | PEI",
                          "PCBM-60 | ZrAcac",
                          "N2200 | PCBM-60",
                          "ZnO-np | MgO-EA | TiO2-mp",
                          "NbOH5",
                          "TiO2-c | TiO2-mp | N719",
                          "Boron subphthalocyanine chloride | PCBM-60",
                          "TiO2-c | CsBr",
                          "TCl-PDI",
                          "FNCA | C60 | BCP",
                          "P3",
                          "SnO2-c | APTES-SAM",
                          "TiO2-c | C60-BCT-Au-NP",
                          "PCBM-60 | Ppz",
                          "ZnO-c | JTCA",
                          "Ti",
                          "PCBM-60 | CMB-vTA | AZO",
                          "Nb2O5 | PCBM-60",
                          "PS | C60 | BCP",
                          "BaSnO3-mp",
                          "NDI3HU-DTYM2 | BCP",
                          "OCA | C60 | BCP",
                          "DS2",
                          "CuCrO2 | C60; PCBM-60",
                          "SnO2-np | PCBM-60",
                          "GDY-Tz-CH2(CH2)16CH3; PCBM-60 | C60",
                          "C60 | ZnO-c",
                          "C60-BPy | BCP",
                          "PCBM-60 | ZnO-np",
                          "Nb2O5 | PCBM-60 | (EMIM)PF6",
                          "PCBM-70 | C60 | BCP",
                          "TiO2 | ITIC",
                          "PCBM-60 | Phen-NaDPO:Sn(SCN)2",
                          "PCBM-60 | P3HT; PCBM-60",
                          "TiO2-c | TiO2-mp | Al2O3-c",
                          "HATNAS3C7-C3h",
                          "MgZnO",
                          "TiO2-c | SiO2-mp",
                          "PDI | PDI",
                          "ZnO-np | MgO | TiO2-mp",
                          "TiO2-c | TiO2-mp | ZrO2-mp | Silane-SAM",
                          "SrTiO3 | Graphene; Al2O3-mp",
                          "TiO2-c | SnO2-np",
                          "C60 | SnO2 | ZTO",
                          "SnO2-c | Cs4SnO4",
                          "ZnCsO",
                          "TiO2-c | Na2SO4",
                          "WOx",
                          "PCBM-60; TDPP-CN4 | BCP",
                          "TiO2-c | TiO2-mp | PABA-SAM",
                          "PFN | PCBM-60",
                          "TiO2-c | KH550",
                          "Teflon | C60 | BCP",
                          "a-DMEC70",
                          "EVA | PCBM-60 | BCP",
                          "SnO2-c | MgO-c",
                          "TiO2-c | Al2O3-mp | NiO-np",
                          "PTO",
                          "PCBM-60; TiO2-np",
                          "TiO2-c | Alq3",
                          "GO-Li | TiO2-c",
                          "ZnO-c | TiO2-c",
                          "CITP-SAM",
                          "NDI-Se",
                          "ZnO0.85Sn0.2O1.2",
                          "PCBM-70 | Fe2O3-np",
                          "TiO2-c | TiO2-mp | Poly(TA)",
                          "TEAI | PCBM-60 | PEI",
                          "ZnO-c | AZO-c",
                          "IPH | PFNBr",
                          "PC61BPy | BCP",
                          "Ag-np; TiO2-c | TiO2-mp",
                          "ICTA | C60 | BCP",
                          "Fulleropyrrolidinium Iodide",
                          "DMEC-60 | LiF",
                          "ZnO-np",
                          "TiO2-c | SiO2-np | TiO2-c | SiO2-np | TiO2-c | SiO2-np | TiO2-c",
                          "1,2-diaminoethane | C60 | BCP",
                          "TiO2-c | CoCr",
                          "ZnSO | TiO2-mp",
                          "SnO2-np | ZnO-np",
                          "TiO2-mp | D35",
                          "ZnO-c | PCBM-60",
                          "HATNASOC7-Cs",
                          "TiO2-c | TiO2-mp | PTDPQ",
                          "TiO2-c | Ba0.5Sr0.5SnO3-np",
                          "SnO2-c | SnO2-nw",
                          "Mg0.05Zn0.95O-np",
                          "PCBM-60 | TPBi",
                          "MPMIC60 | ZnO-np",
                          "TiO2-c | CdSe-tetrapod",
                          "IPB",
                          "TiO2-c | TiO2-mp | NaPTH",
                          "TiO2-mp | SAM1",
                          "PCBM-70 | Lif",
                          "TiO2-c | C60-NH2",
                          "PCBM-60 | P4N4",
                          "Ethyl acetate; I2; LiI; TBP; Urea",
                          "SnO2-np | Dompamin-SAM",
                          "Ti | Au",
                          "MgO-c | TiO2-mp",
                          "SnO2-np | TiO2-np",
                          "PN",
                          "ZnO-c | CdS",
                          "TiO2-c | PCBA",
                          "TiO2-c | In2O3-c",
                          "SnO2-c | SnO2-nw | TiO2-c",
                          "WO3-np",
                          "C60; C70 | BCP",
                          "Fe2O3",
                          "TiO2-c | Heparin-Na",
                          "WO3-np | Cs2CO3 | PCBM-60",
                          "PCBM-60 | EFGnPs-F",
                          "C60 | SnS",
                          "ZnO-mp",
                          "PCBM-60-np | PrC60MA | PEI",
                          "TiO2-c | TiO2-mp | PCBM-60; PVK",
                          "C60 | SnO2-c | ZTO",
                          "TiO2-np | C60",
                          "NDI-TriSe",
                          "TPA-3CN | BCP",
                          "TiO2-c | ZnO-nw | ZnO-c",
                          "PEIE | NDI-H",
                          "ITCP-M | BCP",
                          "Alq3; C60 | LiF",
                          "PDPP3T; PCBM-60",
                          "PCBM-60 | Ag-np | BCP",
                          "TiO2-c | STHNP",
                          "SrTiO3",
                          "B4PyMPM | C60 | TmPyPB",
                          "Ti3C2Tx",
                          "TiO2-c | graphite nanofibers",
                          "TiO2-c | TiO2-mp | Al2O3-c | ZrO2-mp",
                          "SnO2-c | SnO2-mp",
                          "[EMIM]PF6-IL",
                          "HATNAS3C4",
                          "TiP2-c | PCBM-60",
                          "Nb2O5-c",
                          "TiO2-c | SrTiO3-np; TiO2-nw",
                          "Poly(9-vinylcarbazole) | PCBM-60",
                          "TiO2-c | PNP",
                          "SnO2-c | Ag | SnO2-c | SnO2",
                          "ZnO | Au-nw",
                          "ZnSnO4-c | ZnSnO4-mp",
                          "PCBM-60 | PFN",
                          "SnO2-c | Al2O3-mp",
                          "PCBM-60 | C70",
                          "P1",
                          "PCBM-70 | AZO-np",
                          "TiO2-c | TiO2-mp | Al2O3-mp | NiO-mp",
                          "PCBM-60 | ZSO-np",
                          "ZnCsO | PCBA",
                          "ZnO-c | WPF\u20106\u2010oxy\u2010F",
                          "Al2O3-c",
                          "Carbon",
                          "PCBM-60 | PCBDANI | LiF",
                          "TiO2-c | TiO2-mp | MTPS-SAM",
                          "IDT6CN-4F | C60 | BCP",
                          "TiO2-c | ZnO-c | C60",
                          "PCBM-60; PS-b-PEO",
                          "TiO2-c | TiO2-mp | Li-TFSI",
                          "PCBM-60 | P3TMAHT",
                          "PCBM-70 | TiO2",
                          "TiO2-c | TiO2-IO",
                          "AZO-c",
                          "PDI | BCP",
                          "TiO2-c | Au@SiO2-nw; TiO2-mp",
                          "PCBM-60 | C60-N",
                          "TiO2-c | TiO2-mp | In2O3",
                          "TiO2-c | CuI",
                          "PCBM-60 | BCP; TZ-3",
                          "ZnO-c | Al2O3-mp",
                          "TiO2-c | TiO2-nw | Al2O3",
                          "C60; PhIm",
                          "PCBM-60 | bis-C60",
                          "PEAI | PCBM-60 | BCP",
                          "pSNT",
                          "Bi2S3",
                          "SnO2-c",
                          "ZnO-c | CPTA; PbI2",
                          "ZnO-c | C-PCBSD",
                          "ZnO-c | Ag | TiO2-c",
                          "ZnO-c | ZnO-nw | Au-np",
                          "BaCoF4",
                          "Unknown",
                          "ZnO-c | C60",
                          "TiO2-c | TiO2-mp | PCBM-60",
                          "SnO2-c | 3-(1-pyridinio)-1-propanesulfonate",
                          "Graphitic carbon nitride | PCBM-60; Graphene | BCP",
                          "PCBM-60 | LiF",
                          "TiO2-c | TiO2-mp | 4PA-SAM",
                          "Graphene nanoribbons hPDI3-Pyr-hPDI3",
                          "TiO2-np | PCBM-70",
                          "PCBM-60 | TBAOH",
                          "PCBM-70 | ZnO-np",
                          "F8BT | C60",
                          "Carbon-nt",
                          "SnO2-c | TiS2",
                          "HPDT | PCBM-60 | Bphen",
                          "Nb2O5-c | Nb2O5-mp",
                          "Al2O3; TiO2-c",
                          "TiO2-c | Sr2CeO4:Eu",
                          "PEIE | TiO2-c | TiO2-mp",
                          "1-ethyl-3-methylimidazolium iodide | C60 | 1-ethyl-3-methylimidazolium iodide",
                          "ITIC | BCP",
                          "N2200",
                          "C60 | LiF",
                          "TiO2-c | Ag | TiO2-c",
                          "TEACl | PCBM-60 | PEI",
                          "ZnO | MgO | EA | TiO2-mp",
                          "ITCPTC | Rhodamine 101 | LiF",
                          "IDIC",
                          "PCBM-60 | PDI-Br",
                          "SFX-PDI4 | TiO2-c",
                          "In2O3-c",
                          "ZnO-nw",
                          "Graphene oxide",
                          "TiO2-c | 3-PA-SAM",
                          "ITIC | PEIE",
                          "ZnO-c | ZnO-nw | CdS-QDs",
                          "TiO2-c | TiO2-mp | Al2O3-mp",
                          "PCBM-60 | ZnO-np | DPO",
                          "TiO2-c | Ba0.8Sr0.2SnO3-np",
                          "C60 | PN4N",
                          "TiO2-c | TiO2-mp | ZrO2-mp | NiO-mp",
                          "TiO2-c | SnO2-c",
                          "PSS | PCBM-60 | ZnO-np",
                          "TiO2-c | TiO2-mp | La2O3",
                          "PCBM-60 | SnO2-c",
                          "PFN-OX",
                          "PVDF-TrFE | C60 | BCP",
                          "ZnO-np | ZnO-nanospheres | PEI",
                          "TPE-PDI4 | C60 | BCP",
                          "PEABr | PCBM-60 | BCP",
                          "PbZrTiO3",
                          "TiO2-c | TiO2-nanofibres",
                          "TiO2-c | SiO2-np",
                          "ICBM | bis-C60",
                          "Mix-DMEC70",
                          "N2200 | ZnO-np",
                          "TiO2-c | SnO2-np | BSO-mp",
                          "LiF | C60 | BCP",
                          "Fluorosilane | C60 | BCP",
                          "C60(OH)16 | C60",
                          "TiO2-c | TiO2-mp | MAI",
                          "ZnO-c | ZnO-nw | ZrO2-mp",
                          "SnO2-nw",
                          "B2F | C60 | BCP",
                          "PCBB-S-N | PCBM-60 | C60 | BCP",
                          "SnO2-np | Li-TFSI",
                          "PCBM-60 | pFN-Br",
                          "PCBM-60 | Cr2O3",
                          "TiO2-mp | TiO2-c | TiO2-nw",
                          "TiO2-nw | TiO2-c",
                          "PO-TAZ | ZnO-c",
                          "PCBB-3N-3I | PCBM-60",
                          "PCBM-60 | PN6",
                          "TiO2-c | TiO2-mp | Graphene oxide",
                          "SnO2-np | SnO2-mp",
                          "LiF | C60",
                          "PCBM-60; MAI",
                          "PCBM-60 | TiO2-c",
                          "PCBM-60 | Poly(2-ethyl-2-oxazoline)",
                          "N2200; PCBM-70; TT",
                          "Br-PDI | ZnO-np",
                          "MoS2; TiO2-np",
                          "TPE-PDI4 | Rhodamine 101 | LiF",
                          "TiO2-mp | N719 | LPP",
                          "IDT6CN | C60 | BCP",
                          "PCBM-60 | bis-C61",
                          "(RhCp*Cp)2 | C60",
                          "Br-PDI",
                          "C-PDTON | ZnO",
                          "SrGeO3",
                          "PCBM-60 | DEME-TFSI",
                          "Nb2O5 | TiO2-mp",
                          "ZnO-c | MgO | TiO2-mp",
                          "TiO2-c | TiO2-mp | SnO2-mp",
                          "P(NDI2OD-T2)",
                          "SnO2-np | PEG; SnO2-mp",
                          "PYPH | LiF",
                          "(2Z,2\u2032Z)-3,3\u2032-(5,5\u2032-(2,7-dioctyl-1,3,6,8-tetraoxo-1,2,3,6,7,8-hexahydrobenzo[lmn][3,8] phenanthroline-4,9-diyl)bis(thiophene-5,2-diyl))bis(2-(3,5-bis (trifluoroomethyl)phenyl) acrylonitrile)",
                          "TiO2-nw | Sb2O3-np; SnO2-np",
                          "bis-PCBM",
                          "SnO2-c | BMIMBF4",
                          "ITIC-Th | Zn(acac)2",
                          "ITCPTC-Se | LiF",
                          "TiO2-c | SnO2-np | PCBM-60",
                          "In2S3 | TiO2-c | TiO2-mp",
                          "TiO2-c | C60",
                          "TiO2-mp | Ti:TiO2 | ZrO2-mp",
                          "Cs2SnI6",
                          "TiO2-c | KH570",
                          "TiO2-c | TiO2-mp; TiO2-nw",
                          "ZnO-np | C60",
                          "PNDI20D-TT | ZnO",
                          "PCBDAN",
                          "SnO2-QDs | C60",
                          "d-PCBM-60; PCBM-60",
                          "TiO2-c | Ag-nw",
                          "PEIE | TiO2-c",
                          "NDIF1",
                          "PCBM-60 | C60 | Rhodamine 101 | LiF",
                          "TPE-DPP12 | C60 | BCP",
                          "TiO2-nw | TiO2-np",
                          "ZrO2-c | PCBM-60",
                          "ZnO-np | ATTA",
                          "ZnO-c | CdSO",
                          "Black P-QDs",
                          "MSAPBS",
                          "SnO2-c | PCBM-60",
                          "TiO2-c | SAED",
                          "ZnO-np | ZnO-nw",
                          "TiO2-c | PCBM-62",
                          "TiO2-c | TiO2-mp | CBA-SAM",
                          "AZO",
                          "PCBM-60-mp",
                          "SnO2-c | SnO2-c",
                          "B2F | C60",
                          "BenMeIM-Cl | C60",
                          "PCBC6 | BCP",
                          "B2T | C60",
                          "TiO2-c | TiO2-mp | HOOC-C11H22-SH",
                          "c-HATNA | bis-C60",
                          "TiO2-np | TiO2-c",
                          "C60 | SnO2",
                          "TiO2-mp | N719",
                          "SnO2-np; TiO2-np; MXene",
                          "TiO2-c | NaYF4:Yb:Tm-np",
                          "CdS | PCBM-60",
                          "ZnO-np | TiO2-np",
                          "Fullerene @ F4",
                          "SnO2-np | PCBM-60; PCBA | C60",
                          "ZnO-c | SnO2-np",
                          "PCBM-60 | m-PYBrZnPor",
                          "ZnO-c | ZnO-nw | PCBM-60",
                          "TiO2-c | ZrO2-c | Al2O3-mp",
                          "PCBM-60 | DMAPA-C60",
                          "NDI-ID",
                          "MgO-c",
                          "PCBM-60 | BCP | AZO-c",
                          "TiO2-c | SnO2-QDs",
                          "TiO2-c | TiO2-mp | Bacteriorhodopsin",
                          "[EMIM]PF6-IL | C60",
                          "ZnO-c | 3-aminopropanioc acid-SAM",
                          "TiO2-c | TiO2-c",
                          "TiO2-c | PCBM-60",
                          "SnO2-c | TiO2-c",
                          "Graphene | TiO2-mp",
                          "TiO2-c | TiO2-mp | GABAHI",
                          "WO3-c | WO3-nw",
                          "pBTT",
                          "TiO2-c | TiO2-mp | ZrO2-mp | Carbon-mp",
                          "ZnSe",
                          "ADAHCl | C60 | BCP",
                          "C60",
                          "PCBM-60 | Zr(acac)4 | PEI",
                          "PCBM-60; PCBDAN",
                          "Poly-EDOT-C60",
                          "TiO2-c | TiO2-mp | NBA-SAM",
                          "C60/C70-N",
                          "PCBM-60 | Rhodamine 101",
                          "4-methoxythiophenol",
                          "4-HI-PVK | PCBM-60 | BCP",
                          "C60 | ZnSe",
                          "ZnO-c | EMIM-PF6",
                          "C60 | bis-C60",
                          "TiO2-c | TiO2-mp | Graphene-QDs",
                          "NDP-V | Rhodamine 101 | LiF",
                          "CYOP | PCBM-60 | PEIE",
                          "LiF | C60 | SnO2-c | ZnSnO2-c",
                          "CuInS2 | Al2O3-np",
                          "TiO2-c @ {101} facet",
                          "ZnO | MgZnO",
                          "EDTA",
                          "ZnO-np | SnO2-np | C60-SAM",
                          "Nb2O5",
                          "C60 | BCP | LiF",
                          "PCBM-60 | C60 | TPBi",
                          "TiO2-c | PDI2",
                          "TiO2-c | MgO-c | TiO2-mp",
                          "SiPc-Py-2 | PTCDA | PO-T2T",
                          "PCBB-3N | PCBM-60",
                          "TiO2-c | TiO2-mp | MgO-c",
                          "TiO2-c | TiO2-mp | Au-np | MgO",
                          "PCBM-70 | Rhodamine 101",
                          "TiO2-c | TiO2-mp | CdSe-QDs",
                          "In2O3-c | SnO2-c",
                          "SnO2-np | APTES-SAM",
                          "Ag-np | TiO2-c",
                          "SnO2-nt",
                          "CDIN",
                          "TIPD; ZnO-np",
                          "TiO2-c | TiO2-mp | 4-aminobenzoic acid-SAM",
                          "ZnO-c | ZnO-nanowells",
                          "TiO2-c | TiO2-mp | C60-SAM",
                          "TiO2-c | TiO2-mp | ZrO2-mp | PbTiO3",
                          "Fullerene-SAM",
                          "SnO2-c | 1\u2010butyl\u20103\u2010methylimidazolium bromide",
                          "PCBM-60 | PPy",
                          "TiO2-c | TiO2-nanosphere",
                          "TiO2-c | CsPbBr3-QDs",
                          "TiO2-c | TiO2-mp | B2Pin2",
                          "TiO2-c | TiO2-mp; ZrO2-mp",
                          "TiO2-c | NAMF-Cl",
                          "4-DMABA | PCBM-60 | BCP",
                          "ZnO-c | ZTO | PCBM-60",
                          "TiO2-c | TiO2-mp | GO-Li",
                          "NiO-c",
                          "F8BT",
                          "TiO2-c | TiO2-mp | Cs2CO2",
                          "PCBM-60 | Bis-FITG",
                          "ZnO-c | Al2O3-c | TiO2-mp",
                          "MgO",
                          "TMAH",
                          "C60 | [EMIM]PF6-IL",
                          "Ca | C60",
                          "TiO2-c | C60-ETA",
                          "TiO2-c | C60-SAM | SiO2-np",
                          "TN-P",
                          "diPDI | TiO2",
                          "ZnO-c | Cs2CO3",
                          "Graphene oxide; ZnO-np",
                          "ZnO-np | PFS-FTEG",
                          "PCBM-60 | Et2PrNMe-CF3BF3",
                          "TiO2-c | TiO2-nt | ZrO2-mp",
                          "TiO2-c | TiO2-nt",
                          "TiO2-c | SnO2",
                          "SnO2 | PCBM-60",
                          "f-C70 | C60",
                          "1\u2010benzyl\u20103\u2010methylimidazolium chloride",
                          "SnO2-c | PCBM-60; PMMA",
                          "PCBM-60 | CeOx-np",
                          "TiO2-macroporous",
                          "ICMA",
                          "TiO2-c | TiO2-mp | PcM-Cou",
                          "TiO2-c | SnO2-nanosheets",
                          "HATNASO2C7-Cs",
                          "P4",
                          "PV-PDI",
                          "PCBM-60 | PrCMA",
                          "TiO2-c | TiOZn-nanosphere",
                          "TiO2-c | TiO2-mp | TiN",
                          "TiO2-c | Ag@TiO2-nw",
                          "BCP",
                          "Choline chloride | C60 | BCP",
                          "ZnO-c | Al2O3-c",
                          "BaSnO3-nw",
                          "TDPP-CN4 | BCP",
                          "PCBM-60 | Bphen",
                          "Cr2O3",
                          "NDP-V | C60 | BCP",
                          "Carbon-np; SnO2-np",
                          "SnO2-np | DPC60",
                          "ZnO-np | MgO",
                          "TiO2-c | TiO2-mp | ZIF-8",
                          "BiFeO3",
                          "TiO2-c | PBCM-60",
                          "PCBM-60 | BCP | Ga2O3",
                          "TiO2-c | TiO2-nw | TiO2-np",
                          "CMB | AZO",
                          "C60-MPy | BCP",
                          "CdI2 | C60 | BCP",
                          "Me4NI | PCBM-60 | BCP",
                          "LiQ; PEIE | PCBM-60",
                          "C-PDTON | SnO",
                          "C60MC12 | AZO-np",
                          "SnO2-c | NaOH",
                          "TiO2-c | ZrO2-mp",
                          "TiO2-c | NaYF4-np; TiO2-mp",
                          "PCBM-60 | Bis-FIMG",
                          "SnO2-c | ZnTiO3-mp",
                          "TiO2-c | TiO2-mp | SQ2",
                          "TiO2-np | CsBr",
                          "TiO2-c | TiO2-mp | SiO2-mp",
                          "C60 | Al2O3-mp",
                          "PCBM-70 | TiO2-c",
                          "DPC60",
                          "PCBM-60 | MUTAB",
                          "FeO | PCBM-60",
                          "ZnO-np | SnO2-np",
                          "ZnO-c | APTES-SAM",
                          "SnO2-c; SWCNTs",
                          "PN-F50",
                          "NDI-BiSe",
                          "ZnO-c | ZnO-mp",
                          "TiO2-c | Ag-np | TiO2-c",
                          "SnO2-np | LiF",
                          "TiO2-c | bis-PCBM; DMC",
                          "PCBM-60 | AgAl-np | LiF",
                          "PCBM-60 | C60 | BCP",
                          "PCBM-60 | pi-PFE4",
                          "TiO2-c | TiO2-mp | Al2O3-np",
                          "TiO2-nanocones | TiO2-mp",
                          "TiO2-c | PCBM-60 | C60-ETA",
                          "PC61BEH",
                          "TiO2-c | TiO2-mp | ZIF-8-10",
                          "Mg0.25Zn0.75O-np",
                          "PCBB-OEG; PCBM-60 | C60 | BCP",
                          "NMPFP",
                          "2H-TaS2",
                          "ICBA | BCP",
                          "C70 | LiF",
                          "TiO2-c | TiO2-mp | PCBM-60; PMMA",
                          "1-ethyl-3-methylimidazolium iodide",
                          "TiO2-c | MgO | TiO2-mp | ZrO2-mp",
                          "SrTiO3 | TiO2-mp | Al2O3-mp",
                          "BaSnO3",
                          "CMB-vTA | AZO",
                          "TiO2-c | NiO-np",
                          "ITIC-Th | BCP",
                          "PCBM-70 | ZrO3",
                          "FPI-PEIE | PCBM-60",
                          "TiO2-c | PCBSD",
                          "ZnO-c | ZnO-nw | Al2O3-c",
                          "PCBM-60 | AZO | BCP",
                          "Zn2SnO4 | TiO2-mp",
                          "BCP | C60",
                          "ZnSO",
                          "TiO2-c | NAMF-H",
                          "CdZnSeS-QDs | C60 | BCP",
                          "TiO2-c | TiO2; CoCr-mp",
                          "IPH | PDINO",
                          "PCBM-60 | HDAC",
                          "C60 | SnO2-c",
                          "Ag-nanocube | TiO2-c",
                          "SnO2-c | C9",
                          "NbOx",
                          "IDIC | C60 | BCP",
                          "NiO-c | TiO2-c",
                          "ICBA | PrC60MAI",
                          "TiO2-c | TiO2-mp | CdS",
                          "AZO-c | ZnO-nw",
                          "Fullerene @ F3",
                          "SnO2-c | TiO2-mp | ZrO2-mp",
                          "CdS-nw",
                          "PCBM-60 | F-R-COOK",
                          "TiO2-c | 2-PA-SAM",
                          "TiO2 | C60",
                          "TiO2-nt | ZnO-c",
                          "SnO2-c | C60-5c",
                          "PT-PDI",
                          "NDI-ID (RR)",
                          "TEABr | PCBM-60 | PEI",
                          "FPDI",
                          "MgO | SrRuO3 | SrRuO3",
                          "PCBM-60 | TrNBr",
                          "TiO2-c | TiO2-mp | Au@SiO2-np",
                          "PCBM-60 | EFGnPs-H",
                          "TiO2-c | Sr2CeO4:Sm",
                          "TiO2-c | TiO2-mp",
                          "ZnO | PTFE",
                          "ZnO-c | TiO2-c | PCBM-60",
                          "C60 | 3TPYMB",
                          "PCBM-60 | Rodhamine 101 | C60 | Rodhamine 101 | LiF",
                          "PCBM-60; ZnO-np",
                          "PCBM-60 | TIPD",
                          "PCBM-60 | pi-PFE1",
                          "C60; PCBM-60 | Zr(acac)4",
                          "TiO2-c | TiO2-nw | SiO2-nanocolumns | TiO2-nw",
                          "PCBM-60 | F-C60; bis-C60",
                          "TiO2-c | BZnTPP",
                          "C60 | BenMeIM-Cl",
                          "Au-np; SnO2-np",
                          "ZnO-c | PCBA",
                          "PC61BBz | BCP",
                          "SnO2-np; TiO2-c",
                          "SiO2-c | ZnO-c",
                          "CdSe-QDs",
                          "(2Z,2\u2032Z)-3,3\u2032- (5,5\u2032-(2,7-dioctyl-1,3,6,8-tetraoxo-1,2,3,6,7,8-hexahydrobenzo [lmn][3,8]phenanthroline-4,9-diyl)bis (thiophene-5,2-diyl))bis(2-(4-(trifluoromethyl)phenyl) acrylonitrile)",
                          "PDI-HE",
                          "PCBM-60 | SnO-c | SnZnO",
                          "ZSO-np | PCBM-60",
                          "SnO2-c | Al2O3-np",
                          "PCB-C4",
                          "PCBM-60 | Zr(Acac)",
                          "PEIE",
                          "PTTI-2",
                          "ZnO-c | Nb2O5",
                          "SnO2-np | CPTA",
                          "TiO2-c | SnO2-mp",
                          "TiO2-c | TiO2-nanoballs | SiO2",
                          "TiO2; WOx",
                          "PCBM-70 | LiF",
                          "TiO2-c | Zn2SnO4-mp",
                          "PCBM-60 | C60 | LiF",
                          "ITCPTC-Th | C60 | BCP",
                          "ZnO | 1,2-ethanedithiol",
                          "TiO2-c | NAMF-Br",
                          "TiO2-c | Au@SiO2-np; TiO2-mp",
                          "TiO2-c | CsPbCl3-QDs",
                          "WO3-c | Cs2CO3 | PCBM-60",
                          "t-BPTI | PDI-C4 | BCP",
                          "TiO2-c | ZnO-c",
                          "TiO2-c | TiO2-mp | SnO2-c",
                          "SnO2-np | Graphene-QDs",
                          "SnO2-c | KOH",
                          "PCBM-60 | BCP",
                          "ZnO | ZnO-nw",
                          "TiO2-c | CsPbI3-QDs",
                          "HATNAS3C7-Cs",
                          "TiO2-c | Al2O3-mp; Ag@TiO2-np",
                          "TiO2-c | KY7F22-np",
                          "PCBM-60 | Carbon",
                          "ZnO-np | Mg-EA",
                          "SnO2-np | Choline Chloride",
                          "SnO2-np | TiO2-mp",
                          "TiO2-c | C60-SAM | Al2O3-np",
                          "ITIC | PCBM-60 | PEIE",
                          "Au@TiO2-nw; TiO2-np",
                          "TiO2-c | DMF",
                          "ICBA | C60 | BCP",
                          "CNTPA-PCBM | bis-C60",
                          "ZnTiO3-c",
                          "Mg0.15Zn0.85O-np",
                          "PCBM-70 | Bphen",
                          "PCBM-60 | PEI",
                          "PCBM-60 | DTAB",
                          "TiO2-c | ZnPtriazine(gly)2",
                          "ITCPTC-Th | LiF",
                          "PCBM-60; PCDTBT",
                          "PFN",
                          "H-PDI | ZnO-np",
                          "tris-PCBOE | ZnO",
                          "TiO2-c | TiO2-nw | TiO2-c",
                          "PCBM-60 | PEIE",
                          "TiO2-c | PS:TiO2-mp",
                          "Fullerene @ F1",
                          "TiO2-c | Au@TiO2-np; TiO2-mp",
                          "ZTO | SnO2-c",
                          "TiO2-c | Au@Ag | TiO2-mp",
                          "TiO2-c | TiO2-mp | CaTiO3-c",
                          "HfO2 | SnO2-np",
                          "DBP | PCBM-60 | Bphen",
                          "IBF-Ep",
                          "C60; PhIm | C60",
                          "PCBM-70 | AZO",
                          "1-ethyl-3-methylimidazolium iodide | C60",
                          "SnO2-c | Graphene",
                          "TiO2-c | rGO:TiO2-nanofibrse",
                          "TiO2-c | TiO2-mp | CaTiO3",
                          "TiO2-c | [BMIM]BF4",
                          "C70 | BCP",
                          "P(NDI2OD-T2); PCBM-60 | BCP",
                          "In2O3 | PCBM-60",
                          "CdS | TiO2-c",
                          "TiO2-c | TiO2-mp | ZrO2-mp",
                          "ZnO-c | Hexamethylenetetramine",
                          "TiO2-c | Graphene-QDs",
                          "BCP; PCBM-60",
                          "PCBM-60 | AZO-np | PEI",
                          "PCBM-60 | BCP | LiF",
                          "C60 | PCBM-60 | BCP",
                          "ITIC | Zn(acac)2",
                          "PCBM-60 | TIPD; ZnO-np",
                          "ZnO-c | ZnO-nanofibers | PEI",
                          "CeOx | PCBM-60",
                          "SnO2-c | PEIE | PCBM-60",
                          "C60 | PAA",
                          "ZnLiO | PCBA",
                          "GAN",
                          "TiO2-c | TiO2-mp | beta-Alanine-SAM",
                          "TiO2-c | Al2O3-c | TiO2-mp",
                          "TiO2-c | TiO2-mp | CsI",
                          "TiO2-c | C60-SAM",
                          "C60 | TiO2-c",
                          "PCBM-60 | ZnO-np | ACO-c",
                          "3-acetylpyridine | PCBM-60 | BCP",
                          "TiO2-c | TiO2-nanosphere | TiO2-mp",
                          "PCBM-60 | pi-PFE2",
                          "ZrO2-np",
                          "C60-SAM | SnO2-c | PCBM-60",
                          "PCBM-60 | BCP; TZ-4",
                          "BPB-M | LiF",
                          "SnO2-np | OEABS",
                          "PCBM-60 | Lif",
                          "NDIF2",
                          "ZnO-c | ZnO-c | Ba(OH)2",
                          "TiO2-c | TiO2-mp | Aminocaproic acid",
                          "C60 | Zr(acac)4",
                          "PCBM-60 | CTAB",
                          "HATNA-F6",
                          "PCBM-60 | ZnO-np | PEI",
                          "(RuCp*mes)2 | C60",
                          "PTCBI",
                          "PTCBI | BCP",
                          "PCBM-60 | EGME",
                          "TiO2-nanocones",
                          "IT-M | Zn(acac)2",
                          "2-acetylpyridine | PCBM-60 | BCP",
                          "C60 | C60; PhIm",
                          "SnO2-nw | SnO2-nw",
                          "Ti3C2",
                          "Al:ITO-c | SnO2-c",
                          "WOx | I-Ph-PA_C60-C6-PA",
                          "WOx | C60",
                          "SnO2-np | PFN-Br",
                          "PEIE | PCBM-60 | Bphen",
                          "TiO2-c | SrTiO3:TiO2-mp",
                          "TiZnO12-c",
                          "TiO2-c | Carbon-nt; TiO2-mp",
                          "PTCA",
                          "SnO2-c | SnO2-mp | TiO2-c",
                          "C60; Phlm | C60",
                          "PCBM-60 | ICL",
                          "PCBM-60 | Alq3",
                          "TiO2-c | TiO2-nanoballs",
                          "TiO2-nanoleaves"
                        ]
                      }
                    }
                  ]
                },
                "name": "stack_sequence",
                "description": "The stack sequence describing the electron transport layer. Use the following formatting guidelines\n- With the ETL, we refer to any layer between the substrate and the perovskite in a nip-device, and any layer between the perovskite and the back contact in a pin-device.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\n- If no electron transport layer, state that as \u2018non\u2019\n- Use common abbreviations when appropriate but spell it out if risk for confusion.\n- If a material is doped, or have an additive, state the pure material here and specify the doping in the columns specifically targeting the doping of those layers.\n- There is no sharp well-defined boundary between when a material is best considered as doped or as a mixture of two materials. When in doubt if your material is best described as doped or as a mixture, use the notation that best capture the metaphysical essence of the situation.\n- There are a lot of stack sequences described in the literature. Try to find your one in the list. If it is not there (i.e. you may have done something new) define a new stack sequence according to the instructions.\nExampleBelow are some of the most common electron transport layers\nTiO2-c | TiO2-mp\nTiO2-c\nPCBM-60\nPCBM-60 | BCP\nSnO2-np\nC60 | BCP\nSnO2-c\nTiO2-c | TiO2-mp | ZrO2-mp\nZnO-c\nPCBM-60 | C60 | BCP\nPCBM-60 | LiF",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "40.0 | 50.0",
                          "50.0 | 7.0",
                          "40.0 | nan",
                          "5.0 | 65.0 | nan",
                          "50.0 | 200.0",
                          "nan | 400.0 | 1700.0",
                          "20.0 | 400.0",
                          "40.0 | 3.0 | 2.0 | 2.0",
                          "40.0 | 150.0",
                          "14000.0",
                          "50.3",
                          "27.0 | 600.0",
                          "40.0 | 210.0",
                          "nan | 1100.0",
                          "25.0 | 150.0",
                          "nan | 600.0",
                          "nan | 2000.0 | nan",
                          "0.0",
                          "30.0 | 351.0",
                          "12.7 | 40.0 | 6.0",
                          "27.0 | 175.0",
                          "nan | 950.0",
                          "nan | 100.0 | 2000.0",
                          "40.0 | 353.0",
                          "1800.0",
                          "60.0 | 12.0",
                          "nan | 480.0 | 900.0",
                          "nan | 400.0 | nan",
                          "nan | 600.0 | 1200.0",
                          "160.0 | 40.0",
                          "141.0 | 200.0",
                          "2.4",
                          "50.0 | 1000.0 | 1000.0",
                          "nan | 325.0",
                          "nan | 1000.0 | 4500.0",
                          "614.0",
                          "87.0",
                          "8.0 | nan | 1.0",
                          "70.0",
                          "nan | 5400.0",
                          "nan | 1000.0 | 1008.0",
                          "500.0",
                          "85.0 | nan",
                          "80.0 | 365.0",
                          "4.0 | nan",
                          "76.0",
                          "90.0 | 400.0",
                          "45.0 | 4.0",
                          "6.0 | 20.0 | 8.0",
                          "35.0 | 150.0",
                          "100.0 | nan | 2.0",
                          "100.0 | 300.0",
                          "2.0 | 4.0 | nan",
                          "50.0 | 50.0 | 300.0",
                          "30.0 | 440.0",
                          "14.0 | nan",
                          "2.0 | 1.0",
                          "31.1",
                          "240.0",
                          "50.0 | 100.0 | 400.0 | 50.0",
                          "101.0 | 500.0",
                          "nan | nan | 7.0",
                          "nan | 320.0",
                          "75.0 | 500.0",
                          "95.0 | 365.0",
                          "50.0 | 480.0",
                          "30.0 | 600.0",
                          "nan | 25.0",
                          "nan | 1000.0 | 1010.0",
                          "60.0 | 2500.0",
                          "30.0 | 200.0 | nan",
                          "40.0 | 300.0",
                          "1.0 | 25.0 | 6.0",
                          "120.0 | 0.5",
                          "26.0",
                          "55.0 | 5.0",
                          "nan | 30.0 | 10.0",
                          "700.0 | 80.0",
                          "50.0 | 6.3",
                          "nan | 500.0 | 500.0 | 10000.0",
                          "20.0 | nan | 20.0",
                          "60.0 | 460.0",
                          "80.0 | 120.0",
                          "nan | 2000.0 | 2000.0",
                          "9.0",
                          "72.0 | 200.0",
                          "20.0 | 20.0 | 20.0",
                          "nan | 600.0 | nan",
                          "30.0 | 12000.0",
                          "50.0 | 200.0 | 115.0",
                          "nan | 270.0",
                          "5000.0",
                          "50.0 | 250.0",
                          "nan | 500.0 | 3000.0",
                          "700.0 | 2400.0",
                          "30.0 | 130.0",
                          "70.0 | nan",
                          "17.0 | 350.0",
                          "90.0 | 300.0",
                          "80.0 | 1050.0 | 1.0",
                          "70.0 | 80.0 | nan",
                          "6.0 | 54.0",
                          "36.0",
                          "50.0 | 30.0",
                          "23.0 | nan | 1.0",
                          "nan | 100.0",
                          "nan | 440.0",
                          "50.0 | 1.0",
                          "nan | 220.0",
                          "15.0 | 50.0",
                          "50.0 | 180.0",
                          "nan | 55.0",
                          "106.0 | nan",
                          "25.0 | 15.0",
                          "100.0 | 130.0 | nan",
                          "80.0 | 1400.0",
                          "23.0 | 7.0",
                          "50.0 | 620.0",
                          "nan | 500.0 | 1300.0",
                          "80.0 | 300.0 | 1400.0",
                          "40.0 | 10.0",
                          "368.0 | nan",
                          "30.0 | 240.0",
                          "nan | 20.0 | 5.0",
                          "nan | 2000.0 | 1000.0",
                          "58.0 | 200.0",
                          "0.2 | nan",
                          "135.0",
                          "2.0 | nan",
                          "nan | 120.0",
                          "15.0 | 6.0",
                          "30.0 | 20.0 | 8.0",
                          "90.0 | 200.0",
                          "5.5",
                          "200.0 | 700.0 | 1000.0",
                          "40.0 | 40.0 | 150.0 | 150.0",
                          "nan | 750.0",
                          "8.0 | nan | nan",
                          "80.0 | 900.0 | 1.0",
                          "1.2 | 10.0 | 8.0 | 2.0",
                          "277.0",
                          "60.0 | 24.0",
                          "50.0 | 400.0 | 400.0",
                          "27.0 | 275.0",
                          "nan | 500.0 | 500.0",
                          "nan | 6.0 | nan | nan",
                          "20.0 | 30.0",
                          "50.0 | 5.0 | 5.0",
                          "nan | 1300.0",
                          "60.0 | 15.0",
                          "10.0 | nan | 1.0",
                          "nan | 290.0",
                          "50.0 | 1000.0 | 800.0",
                          "91.0",
                          "60.0 | 30.0",
                          "15.0 | 180.0",
                          "7.5",
                          "405.0",
                          "100.0 | 30.0 | 10.0",
                          "80.0 | 20.0",
                          "13.0 | 20.0 | 8.0",
                          "30.0 | 20.0",
                          "nan | 100.0 | nan",
                          "65.0 | nan",
                          "50.0 | 50.0 | 6.3",
                          "nan | 453.0",
                          "30.0 | 350.0",
                          "5.0 | 20.0 | 8.0",
                          "40.0 | 5.0 | 40.0",
                          "40.0 | 3.0",
                          "75.0",
                          "20.0 | 5.0",
                          "nan | 0.6",
                          "40.0 | 3.0 | 2.0 | 0.5",
                          "nan | 180.0",
                          "nan | 600.0 | 500.0",
                          "nan | 1050.0 | 350.0",
                          "nan | 5502.0",
                          "22.0",
                          "10.0 | 40.0",
                          "50.0 | nan | 30.0 | 10.0 | 0.05 | 0.8",
                          "35.0 | 40.0",
                          "63.0",
                          "60.0 | 3.0",
                          "34.0",
                          "50.0 | 300.0 | 500.0",
                          "10000.0 | nan | nan",
                          "100.0 | 60.0",
                          "43.0 | nan | 1.0",
                          "nan | nan | 305.0",
                          "100.0 | 600.0",
                          "70.0 | 80.0 | nan | nan",
                          "280.0",
                          "60.0",
                          "40.0 | 360.0",
                          "45.0 | nan",
                          "7.0",
                          "440.0",
                          "400.0",
                          "nan | 0.7",
                          "25000.0",
                          "1.5",
                          "nan | 450.0",
                          "128.0",
                          "20.0 | nan",
                          "nan | 660.0",
                          "600.0 | 340.0",
                          "208.0 | 200.0",
                          "40.0 | 250.0",
                          "50.0 | 150.0",
                          "nan | 1000.0 | 1004.0",
                          "50.0 | nan | 1.0",
                          "nan | 200.0",
                          "12.0",
                          "60.0 | 120.0",
                          "800.0 | 200.0",
                          "100.0",
                          "40.0 | 10.8",
                          "nan | 1073.0",
                          "70.0 | 130.0",
                          "55.0 | 75.0",
                          "20.0 | 260.0",
                          "15.0 | 1.0",
                          "nan | nan | 1.5",
                          "15.0 | 400.0",
                          "55.0 | nan",
                          "38.69",
                          "120.0 | 700.0",
                          "16.39",
                          "60.0 | 530.0",
                          "3.0 | 25.0 | 6.0",
                          "70.0 | 10.0",
                          "75.0 | 365.0",
                          "50.0 | 600.0",
                          "nan | 3600.0",
                          "30.0 | 550.0",
                          "290.0",
                          "100.0 | 1.3",
                          "nan | 20.0 | 0.6",
                          "55.0 | nan | nan",
                          "50.0 | 540.0",
                          "43.0 | 10.0",
                          "50.0 | 100.0",
                          "40.0 | 5.0",
                          "20.0 | 25.0 | nan",
                          "60.0 | 1500.0",
                          "50.0 | 800.0 | 700.0",
                          "35.0 | 15.0",
                          "30.0 | 150.0",
                          "40.0 | 7.5",
                          "nan | 15.0 | 6.0",
                          "140.0 | 380.0",
                          "10.0 | 150.0",
                          "nan | 670.0",
                          "20.0 | 6.0",
                          "nan | 350.0 | nan",
                          "17.0 | 170.0",
                          "80.0 | 60.0",
                          "20.0 | 10.0 | 10.0",
                          "500.0 | 3000.0",
                          "90.0 | 60.0",
                          "nan | 20000.0",
                          "15.0 | 20.0",
                          "nan | 170.0",
                          "60.0 | 50.0 | 45.0",
                          "22.0 | 150.0",
                          "60.0 | nan | 10.0",
                          "7.0 | nan",
                          "44.0",
                          "45.0 | 100.0",
                          "550.0",
                          "5.0 | 30.0",
                          "65.0 | 30.0",
                          "140.0 | nan",
                          "119.0 | 35.0",
                          "50.0 | 1000.0 | 500.0",
                          "3.0 | 50.0",
                          "80.0 | 300.0",
                          "120.0",
                          "50.0 | 500.0",
                          "nan | 1000.0 | 1011.0",
                          "110.0",
                          "20.0 | 15.0",
                          "100.0 | 340.0",
                          "nan | 15.0 | 150.0",
                          "68.0 | nan",
                          "nan | 7.0 | nan | nan",
                          "150.0 | 2.0",
                          "65.0 | 10.0",
                          "40.0 | 20.0 | 40.0",
                          "590.0",
                          "770.0",
                          "90.0 | nan",
                          "70.0 | 20.0",
                          "17.5 | 100.0",
                          "50.0 | 3.0",
                          "75.0 | 200.0",
                          "60.0 | 7.5",
                          "85.0 | 150.0",
                          "33.0 | 200.0",
                          "15.0 | 220.0",
                          "nan | 452.0",
                          "nan | 700.0",
                          "5.0 | 7.5 | 20.0",
                          "100.0 | 4.3",
                          "100.0 | 2.0",
                          "800.0 | 340.0",
                          "nan | 1000.0 | 1002.0",
                          "60.0 | 0.5",
                          "47.03",
                          "210.0",
                          "5.0 | 80.0",
                          "29.0 | 20.0 | 8.0",
                          "40.0 | 260.0",
                          "251.0",
                          "0.5 | 90.0 | 7.0",
                          "42.0 | nan | 1.0",
                          "nan | 3.0 | 1.0",
                          "17.0 | 140.0",
                          "129.0",
                          "30.0 | 15.0",
                          "14.0 | nan | nan",
                          "50.0 | 220.0",
                          "nan | 10.0",
                          "nan | 0.0",
                          "nan | 9400.0",
                          "6.0 | 340.0",
                          "40.0 | 345.0",
                          "50.0 | 75.0",
                          "17.0 | 150.0",
                          "nan | 604.0",
                          "30.0 | nan | 200.0",
                          "100.0 | 2.1",
                          "50.0 | 420.0",
                          "40.0 | 3.0 | 2.0 | 1.0",
                          "10.0 | 75.0",
                          "nan | 550.0 | 2500.0",
                          "10.0 | 50.0",
                          "nan | 1000.0 | 1005.0",
                          "nan | 6.0",
                          "100.0 | nan",
                          "nan | 1000.0 | 2000.0",
                          "nan | 510.0",
                          "40.0 | 8.0",
                          "1900.0",
                          "90.0",
                          "nan | 857.0 | 2000.0",
                          "32.0 | nan",
                          "10.0 | 340.0",
                          "89.0 | nan",
                          "nan | 130.0",
                          "10.0 | 180.0",
                          "40.0 | 4.0",
                          "300.0 | 500.0",
                          "668.0",
                          "142.0 | 20.0 | 8.0",
                          "40.8 | 8.0",
                          "29.0 | nan | 1.0",
                          "nan | 200.0 | 200.0",
                          "nan | 800.0",
                          "15.0 | 150.0",
                          "21.0 | 150.0",
                          "47.6",
                          "nan | 40.0 | 6.0",
                          "25.0 | 187.0",
                          "40.0 | 30.0",
                          "20.0 | nan | nan",
                          "nan | 70.0 | 350.0",
                          "31.0 | nan | 1.0",
                          "nan | 20.0 | 10.0",
                          "25.0 | 4.0",
                          "nan | 1470.0",
                          "nan | 25.0 | 10.0",
                          "40.0 | 140.0",
                          "1.0 | 30.0 | nan | nan | nan",
                          "28.0 | nan",
                          "11.0",
                          "nan | 480.0 | 480.0",
                          "56.0 | 250.0",
                          "nan | 801.0",
                          "50.0 | 2.3",
                          "30.0 | 200.0",
                          "nan | 53.0",
                          "nan | 15.0 | 25.0",
                          "5.0 | 150.0",
                          "10.0 | 350.0",
                          "10.0 | 5.0",
                          "60.0 | 80.0",
                          "nan | 1800.0",
                          "80.0 | 280.0 | 1.0",
                          "nan | 60.0 | 1000.0",
                          "70.0 | 170.0",
                          "80.0 | 450.0 | 1.0",
                          "30.0 | 1050.0",
                          "30.0 | 8.0",
                          "300.0 | 340.0",
                          "nan | 380.0",
                          "50.0 | 400.0",
                          "100.0 | 8.3",
                          "11.0 | nan",
                          "nan | 1.0 | 1.0",
                          "10.0 | 270.0",
                          "23.0 | 20.0",
                          "nan | 700.0 | 5.0",
                          "nan | 460.0",
                          "27.0 | 80.0 | 27.0 | 80.0 | 27.0 | 80.0 | 27.0",
                          "nan | 23.0 | 7.0",
                          "nan | 125.0 | nan",
                          "11.0 | 120.0",
                          "25.0 | 200.0",
                          "166.9",
                          "3.0 | 40.0 | 6.0",
                          "30.0 | 40.0",
                          "nan | 13.0",
                          "nan | 1.0",
                          "30.0 | 2.0",
                          "50.0 | 350.0 | 2.5",
                          "300.0 | 4.0",
                          "8.0",
                          "nan | 8.0",
                          "nan | 3.0",
                          "nan | 360.0",
                          "70.0 | 400.0",
                          "30.0 | 9.0",
                          "20.0 | 10.0",
                          "40.0 | 365.0",
                          "4.0 | 350.0",
                          "60.0 | 140.0",
                          "22.5 | 10.0",
                          "200.0 | nan",
                          "30.0 | 8.0 | 1.0",
                          "nan | nan | nan | 15.0",
                          "90.0 | 45.0",
                          "70.0 | 500.0 | 2000.0",
                          "100.0 | 6.0",
                          "30.0 | 250.0",
                          "nan | 548.0",
                          "10.0 | 20.0",
                          "50.0 | 156.0",
                          "30.0 | 450.0 | 500.0",
                          "1.3 | 50.0 | nan",
                          "65.0",
                          "nan | 45.0",
                          "40.0 | 600.0",
                          "11.2 | 3.0",
                          "nan | 60.0",
                          "43.9",
                          "55.0 | 8.0",
                          "40.0 | 380.0",
                          "5.0 | nan | 1.0",
                          "5.0 | 20.0",
                          "nan | 25000.0",
                          "40.0 | 400.0 | 6.0",
                          "31.0 | 150.0",
                          "244.0",
                          "120.0 | 7.0",
                          "47.0",
                          "nan | 7.0",
                          "50.0 | 1000.0 | 1200.0",
                          "24.0 | 500.0 | nan",
                          "nan | 125.0",
                          "nan | 12.0",
                          "28.0 | nan | nan",
                          "1.0 | nan",
                          "5.0 | 45.0",
                          "nan | 500.0 | nan | 2000.0",
                          "30.0 | 500.0",
                          "200.0 | 20.0",
                          "nan | 1000.0 | 1012.0",
                          "nan | 2000.0 | 1000.0 | nan",
                          "97.0 | nan",
                          "nan | 800.0 | 500.0",
                          "100.0 | 1000.0 | 500.0",
                          "50.0 | 80.0",
                          "49.0",
                          "40.0 | 468.0",
                          "31.2",
                          "nan | 610.0",
                          "60.0 | 2.5",
                          "30.0 | 910.0",
                          "8.0 | 50.0",
                          "20.0 | 20.0 | nan",
                          "nan | 450.0 | 400.0",
                          "nan | 52.0",
                          "30.0 | 1.0 | 8.0",
                          "50.0 | 80.0 | nan",
                          "10.0 | 17.0",
                          "67.0",
                          "30.0 | 7.0",
                          "45.0 | 25.0",
                          "nan | 430.0",
                          "1.0 | 15.0 | 10.0",
                          "24.6",
                          "60.0 | 5.0",
                          "nan | 23.0 | 8.0",
                          "13.3 | 40.0 | 6.0",
                          "nan | 118.0",
                          "380.0",
                          "50.0 | 1.6",
                          "700.0",
                          "50.0 | 300.0 | nan | nan",
                          "300.0 | 1.0",
                          "40.0 | 3.0 | 1.0",
                          "nan | nan | 1.2",
                          "nan | 400.0 | 900.0",
                          "1.0 | 30.0 | 8.0",
                          "60.0 | 100.0",
                          "37.0",
                          "110.0 | nan",
                          "7.5 | 20.0",
                          "nan | 150.0 | nan",
                          "45.0 | 1.0",
                          "5.0",
                          "900.0",
                          "20.0 | 3.0",
                          "50.0 | 440.0",
                          "8.9 | 40.0 | 6.0",
                          "500.0 | 3000.0 | 10000.0",
                          "15.0 | 300.0",
                          "nan | 240.0",
                          "10.0 | 48.0",
                          "45.0 | 125.0",
                          "20.0 | 7.0",
                          "80.0 | 720.0 | 1.0",
                          "30.0 | 100.0",
                          "840.0",
                          "8.3 | 40.0 | 6.0",
                          "nan | nan | 4.0",
                          "15.0 | 40.0",
                          "nan | 3.5",
                          "20.0 | 250.0",
                          "600.0",
                          "12000.0 | nan",
                          "40.0 | 174.0",
                          "10.0 | 130.0",
                          "6.0 | nan",
                          "40.0 | 100.0",
                          "105.0",
                          "100.0 | 500.0",
                          "69.0",
                          "17.0 | 80.0",
                          "nan | 300.0 | 150.0",
                          "68.5",
                          "10000.0 | nan",
                          "40.0 | 7.0",
                          "70.0 | 40.0",
                          "nan | nan | 3.0",
                          "110.0 | 700.0",
                          "nan | 30.0 | 8.0",
                          "nan | 1250.0",
                          "30.0 | 342.0",
                          "4.0 | 80.0",
                          "45.0 | 8.0",
                          "0.5 | 25.0 | 6.0",
                          "70.0 | 500.0",
                          "nan | 8300.0",
                          "0.84 | 3.0",
                          "10.0 | 1.0",
                          "nan | 5000.0",
                          "30.0 | 386.0",
                          "1.0 | 10.0 | 6.0",
                          "300.0 | 3.0",
                          "60.0 | 13.0",
                          "64.0 | 200.0",
                          "nan | 300.0 | 400.0",
                          "100.0 | 800.0",
                          "50.0 | 3.8",
                          "45.0 | 2.0",
                          "1.5 | nan | nan",
                          "50.0 | 400.0 | nan",
                          "117.0",
                          "25.0 | 3.0",
                          "36.0 | 20.0 | 8.0",
                          "nan | 1000.0 | 4000.0",
                          "nan | 25.0 | 8.0",
                          "52.0 | 270.0",
                          "nan | 50.0",
                          "nan | 5800.0",
                          "30.0 | 170.0",
                          "60.0 | 270.0",
                          "60.0 | 50.0 | 70.0",
                          "300.0 | nan",
                          "nan | 480.0 | 600.0",
                          "30.0 | 175.0",
                          "nan | 451.0",
                          "30.0 | 310.0",
                          "2.5 | 10.0",
                          "nan | 390.0",
                          "35.0 | 2.0",
                          "nan | 1000.0 | 1500.0",
                          "189.0",
                          "55.0 | 365.0",
                          "80.0 | nan",
                          "6.0",
                          "100.0 | 20.0",
                          "20.0 | 100.0",
                          "80.0 | 190.0",
                          "40.0 | 1000.0 | 1000.0",
                          "61.0",
                          "20.0 | 80.0",
                          "80.0 | 500.0",
                          "55.0 | 0.5",
                          "1.0 | 340.0",
                          "50.0 | 280.0",
                          "nan | 20.0 | 8.0",
                          "15.0",
                          "52.2",
                          "nan | 1000.0 | 3000.0",
                          "100.0 | nan | 10.0",
                          "430.0",
                          "41.0 | 10.0",
                          "70.0 | 80.0",
                          "1.0 | 30.0 | nan | nan",
                          "80.0 | 1.0",
                          "50.0 | 700.0 | 450.0",
                          "nan | 800.0 | 1500.0",
                          "60.0 | 280.0",
                          "80.0 | 200.0",
                          "20.0 | 8.0",
                          "100.0 | 365.0",
                          "nan | 1200.0",
                          "27.0 | nan",
                          "1000.0",
                          "25.0 | nan",
                          "16.0 | 150.0",
                          "nan | 500.0 | nan | 1200.0",
                          "nan | 238.0",
                          "15.0 | 15.0",
                          "nan | 650.0",
                          "nan | 40.0",
                          "40.0 | 1.0",
                          "80.0 | 800.0",
                          "nan | 850.0",
                          "8.0 | 40.0",
                          "30.0 | 150.0 | nan",
                          "390.0",
                          "70.0 | 350.0",
                          "10.0",
                          "80.0 | 3.0",
                          "42.0",
                          "30.0 | 45.0",
                          "30.0 | nan",
                          "20.0 | 1.0",
                          "65.0 | 250.0",
                          "52.0 | 10.0",
                          "40.0 | 2.0",
                          "nan | 1000.0 | 1007.0",
                          "15.0 | 260.0",
                          "nan | 2.8",
                          "51.0 | 270.0",
                          "5.0 | 10.0",
                          "25.0 | 0.5",
                          "30.0 | 201.0",
                          "nan | 40.0 | 8.0",
                          "5.0 | 12.0 | 20.0",
                          "265.0 | nan",
                          "90.0 | 350.0",
                          "nan | 500.0 | nan | 3000.0",
                          "nan | 100.0 | 400.0",
                          "5.0 | 20.0 | 7.0",
                          "8.0 | 340.0",
                          "nan | nan | 4.8",
                          "42.0 | 10.0",
                          "3.0 | 200.0",
                          "nan | 5500.0",
                          "nan | 450.0 | 1200.0",
                          "30.0",
                          "35.0 | 30.0",
                          "20.0 | 12.0",
                          "88.0 | nan",
                          "70.0 | 150.0",
                          "745.0",
                          "20.0 | 18.0",
                          "nan | 480.0",
                          "nan | nan | 2.0",
                          "3.2 | 40.0 | 6.0",
                          "10.0 | nan | nan",
                          "30.0 | 200.0 | 1.9",
                          "152.0",
                          "26.0 | nan",
                          "10.0 | 15.0",
                          "10.0 | 400.0",
                          "60.0 | 20.0",
                          "nan | 1.2",
                          "nan | 20.0 | 3.0",
                          "60.0 | 190.0",
                          "nan | 285.0",
                          "30.0 | 265.0",
                          "50.0 | 430.0",
                          "80.0 | 550.0 | 1.0",
                          "62.0 | nan",
                          "60.0 | 260.0",
                          "nan | 2000.0 | 1100.0",
                          "50.0 | 190.0",
                          "140.0",
                          "nan | 1500.0 | 2000.0",
                          "70.0 | 100.0",
                          "20.0 | 150.0",
                          "nan | 3900.0",
                          "6.0 | nan | nan",
                          "60.0 | 40.0",
                          "nan | 618.0",
                          "nan | 400.0",
                          "80.0 | 175.0",
                          "40.0 | 30.0 | 30.0",
                          "50.0 | 13.6",
                          "24.0 | nan | nan",
                          "15.0 | 10.0",
                          "89.0",
                          "nan | 580.0",
                          "100.0 | 800.0 | 1000.0",
                          "220.0",
                          "nan | 210.0 | nan | nan",
                          "20.0 | 40.0",
                          "nan | nan | 450.0",
                          "35.0 | 0.1",
                          "40.0 | 1900.0",
                          "47.0 | 34.0",
                          "30.6",
                          "30.0 | 2000.0",
                          "nan | 160.0",
                          "55.0 | 250.0",
                          "40.0 | 3.0 | 1.0 | 1.0",
                          "40.0 | 500.0",
                          "17.0 | 200.0",
                          "70.0 | nan | 150.0",
                          "60.0 | 200.0 | nan",
                          "100.0 | 400.0",
                          "30.0 | 0.0",
                          "nan | 500.0 | 3000.0 | 10000.0",
                          "nan | 40.0 | 9.0",
                          "24.0 | 8.0",
                          "60.0 | nan | 5.0",
                          "15.0 | 365.0",
                          "95.0",
                          "nan | nan | 121.0",
                          "60.0 | 350.0",
                          "42.4",
                          "nan | 400.0 | 10.0",
                          "5.6 | 40.0 | 6.0",
                          "50.0 | 40.0",
                          "20.0 | 7.5",
                          "130.0 | nan",
                          "100.0 | 1000.0 | 1000.0",
                          "193.0",
                          "50.0 | 8.0",
                          "73.0",
                          "57.0 | 250.0",
                          "1300.0",
                          "nan | nan | 258.0",
                          "2000.0",
                          "40.0 | 180.0 | nan",
                          "nan | 27.0 | 1.0",
                          "5.0 | 7.0",
                          "10000.0 | 5.0",
                          "17.0 | nan",
                          "55.0 | 300.0",
                          "175.0",
                          "60.0 | 70.0",
                          "nan | nan | 20.0",
                          "nan | nan | 40.0 | 8.0",
                          "55.0 | 10.0",
                          "50.0 | 800.0 | 1200.0",
                          "30.0 | 216.0",
                          "112.0",
                          "17.0 | 230.0",
                          "2.0 | 20.0 | 8.0",
                          "30.0 | 308.0",
                          "33.0 | nan",
                          "nan | 500.0 | 1000.0",
                          "101.0",
                          "3.0 | nan | nan",
                          "nan | 330.0",
                          "10.0 | 10.0 | 10.0",
                          "50.0 | 30.0 | 8.0",
                          "30.0 | 7.5",
                          "32.0 | nan | nan",
                          "nan | 224.0",
                          "176.0",
                          "341.0",
                          "60.0 | 50.0 | 150.0",
                          "34.0 | nan | 1.0",
                          "nan | 480.0 | nan",
                          "nan | 80.0",
                          "nan | 540.0",
                          "650.0",
                          "60.0 | 50.0 | 30.0",
                          "220.0 | nan",
                          "60.0 | 8.0",
                          "60.0 | 360.0",
                          "60.0 | 200.0",
                          "10.0 | 25.0",
                          "30.0 | 1730.0",
                          "nan | 280.0",
                          "24.0 | 30.0",
                          "nan | 110.0",
                          "100.0 | 450.0",
                          "56.0 | nan",
                          "37.8 | 8.0",
                          "20.0 | 2.0",
                          "80.0 | 10.0",
                          "80.0 | 30.0",
                          "nan | 500.0 | 1000.0 | 10000.0",
                          "40.0 | 190.0",
                          "nan | 8000.0",
                          "70.0 | 1.0",
                          "nan | 1000.0 | 1001.0",
                          "nan | 380.0 | nan",
                          "150.0",
                          "50.0 | 19360.0",
                          "nan | 70.0",
                          "20.0 | 220.0",
                          "nan | 140.0",
                          "30.0 | 910.0 | nan",
                          "nan | 1000.0",
                          "30.0 | 30.0",
                          "46.0 | nan",
                          "nan | 20.0",
                          "43.8",
                          "15.0 | nan",
                          "56.0 | 200.0",
                          "30.0 | 70.0",
                          "nan | 7.5",
                          "39.4",
                          "40.0 | 165.0 | nan",
                          "nan | 1050.0",
                          "30.0 | nan | nan",
                          "33.0",
                          "51.0",
                          "50.0 | 0.8",
                          "1.0 | 5.0",
                          "30.2",
                          "16.0 | nan",
                          "nan | 600.0 | 2500.0",
                          "60.0 | 50.0",
                          "50.0 | 300.0",
                          "100.0 | 150.0",
                          "nan | 500.0 | 1300.0 | 70.0",
                          "27.0 | 20.0 | 8.0",
                          "100.0 | 390.0",
                          "nan | nan | 1.0",
                          "54.0 | 250.0",
                          "2.0 | 340.0",
                          "5.0 | 1.0",
                          "nan | 585.0",
                          "45.0 | 3.0",
                          "25.0",
                          "1.0 | 20.0",
                          "72.0 | nan",
                          "80.0 | 1000.0",
                          "2.0 | 40.0",
                          "40.0 | 350.0",
                          "100.0 | 700.0 | 1500.0",
                          "60.0 | 6.0",
                          "25.0 | 6.0",
                          "15.0 | 175.0",
                          "35.0 | nan",
                          "100.0 | 220.0",
                          "30.0 | 1000.0 | 2000.0",
                          "100.0 | 844.0",
                          "30.0 | 100.0 | 100.0",
                          "10.0 | nan",
                          "40.0 | 200.0",
                          "35.0 | 365.0",
                          "3.0 | nan",
                          "45.0 | 30.0",
                          "nan | nan | 75.0",
                          "115.0 | nan",
                          "40.0 | 6.0",
                          "40.0 | 40.0 | 5.0",
                          "45.0 | 55.0",
                          "nan | 480.0 | 500.0",
                          "30.0 | 400.0",
                          "nan | 550.0",
                          "60.0 | 60.0",
                          "40.0 | 230.0",
                          "100.0 | nan | 5.0",
                          "nan | 160.0 | nan",
                          "125.0",
                          "nan | 30.0",
                          "250.0 | 100.0",
                          "550.0 | nan",
                          "4.0 | 0.0",
                          "50.0 | 170.0",
                          "50.0 | 250.0 | 300.0",
                          "nan | 15.0",
                          "nan | 400.0 | 600.0",
                          "20.0 | 240.0",
                          "510.0",
                          "24.0 | nan",
                          "nan | 79.0",
                          "80.0 | 150.0",
                          "20.0 | 200.0",
                          "nan | 275.0",
                          "nan | 10.0 | 3.0",
                          "unkown",
                          "0.8 | nan",
                          "4.0",
                          "50.0 | 585.0",
                          "7.0 | 20.0 | 8.0",
                          "40.0 | 120.0",
                          "nan | 850.0 | nan",
                          "740.0",
                          "8.0 | nan",
                          "30.0 | 330.0",
                          "252.0",
                          "nan | 230.0",
                          "31.7 | 6.0",
                          "0.5",
                          "54.0 | 10.0",
                          "10.0 | 20.0 | 8.0",
                          "88.0 | 200.0",
                          "100.0 | 15.0 | 1.0",
                          "995.0",
                          "350.0",
                          "20.0 | 600.0",
                          "3.0",
                          "76.2",
                          "nan | 300.0 | 1100.0",
                          "20.0 | nan | 5.0",
                          "4.0 | 20.0 | 8.0",
                          "43.0 | nan",
                          "1.0 | 10.0",
                          "nan | nan",
                          "50.0 | 130.0",
                          "100.0 | 8.4",
                          "80.0 | 2.0",
                          "20.0 | 160.0",
                          "100.0 | 15.0 | 5.0",
                          "nan | 500.0 | 1500.0",
                          "nan | 500.0 | nan",
                          "160.0",
                          "nan | 564.0",
                          "100.0 | 8.0",
                          "20.0 | 50.0",
                          "18.0 | nan",
                          "25.0 | 100.0",
                          "40.0 | 20.0 | 8.0",
                          "3.0 | 0.0",
                          "nan | 210.0",
                          "25.0 | 35.0",
                          "40.0 | 165.0",
                          "15.0 | 45.0",
                          "nan | 900.0",
                          "55.0",
                          "10.0 | 210.0",
                          "23.0 | nan",
                          "60.0 | 1.0",
                          "60.0 | 365.0",
                          "17.0",
                          "300.0 | 200.0",
                          "5.0 | 60.0",
                          "42.0 | nan",
                          "70.0 | 350.0 | nan",
                          "700.0 | 420.0",
                          "17.0 | 5.0",
                          "19.0",
                          "nan | 1000.0 | 12000.0",
                          "nan | 30.0 | 7.0",
                          "79.0",
                          "40.0 | 150.0 | 150.0",
                          "18.0",
                          "34.0 | 200.0",
                          "130.0",
                          "39.0",
                          "30.0 | 1000.0",
                          "nan | 90.0",
                          "80.0 | 5.0",
                          "310.0",
                          "10.0 | 100.0",
                          "nan | 300.0 | 6.0",
                          "nan | 10000.0",
                          "70.0 | 180.0",
                          "78.0",
                          "100.0 | 0.6",
                          "60.0 | 500.0",
                          "nan | 2200.0",
                          "65.0 | 2.0",
                          "30.0 | 50.0",
                          "120.0 | 2.0",
                          "235.0",
                          "nan | 1000.0 | 60.0 | 1000.0",
                          "1050.0",
                          "45.0 | 7.5",
                          "nan | 8.0 | 5.0",
                          "25.0 | 400.0",
                          "40.0 | 400.0",
                          "20.0 | 35.0",
                          "140.0 | 0.5",
                          "45.0 | 80.0",
                          "90.0 | 7.0",
                          "nan | 25.0 | 7.0",
                          "80.0 | 170.0",
                          "74.0 | 200.0",
                          "10.0 | 370.0",
                          "27.0 | 80.0 | 27.0 | 80.0 | 27.0",
                          "30.0 | 6.0",
                          "141.0 | nan",
                          "nan | 410.0",
                          "65.0 | 300.0",
                          "50.0 | 300.0 | nan",
                          "525.0",
                          "20.0 | nan | 10.0",
                          "50.0 | 1000.0 | 1800.0",
                          "370.0",
                          "30.0 | 850.0",
                          "56.1",
                          "80.0 | 500.0 | 1400.0",
                          "35.0 | 200.0",
                          "24.0",
                          "nan | 480.0 | 300.0",
                          "30.0 | 400.0 | 450.0",
                          "nan | 473.0",
                          "nan | 8600.0",
                          "50.0 | 130.0 | 1.0",
                          "200.0 | 200.0",
                          "nan | 375.0",
                          "41.2",
                          "23.0 | 8.0",
                          "30.0 | 260.0",
                          "nan | 1500.0",
                          "nan | 75.0 | 1400.0",
                          "50.0 | 0.3",
                          "38.0 | nan",
                          "0.5 | 7.5",
                          "27.0 | 60.0 | 27.0 | 60.0 | 27.0 | 60.0 | 27.0",
                          "60.0 | 20.0 | 7.0",
                          "5.0 | 400.0",
                          "nan | 8.0 | 1.0",
                          "50.0 | 500.0 | 500.0",
                          "nan | 700.0 | 1800.0",
                          "100.0 | 350.0",
                          "460.0",
                          "30.0 | 5.0",
                          "60.0 | 450.0",
                          "35.0 | nan | 1.0",
                          "45.0 | 7.0",
                          "nan | 230.0 | nan",
                          "100.0 | 250.0",
                          "100.0 | 200.0",
                          "nan | 222.0",
                          "80.0",
                          "31.0 | nan",
                          "12.0 | nan",
                          "45.0 | 300.0",
                          "131.0 | 200.0",
                          "nan | 5.0",
                          "46.0",
                          "320.0",
                          "nan | 195.0",
                          "50.0 | 830.0",
                          "40.0 | 80.0",
                          "1.0 | 30.0 | 6.0",
                          "20.0 | 130.0",
                          "25.0 | 120.0",
                          "50.0 | 10.0",
                          "39.0 | 206.0 | 186.0",
                          "50.0 | 16.0",
                          "25.0 | 5.0",
                          "60.0 | 93.0",
                          "nan | nan | 213.0",
                          "nan | nan | 1500.0",
                          "80.0 | 200.0 | 200.0",
                          "nan | 1400.0",
                          "30.0 | 1.0",
                          "8.0 | 23.0",
                          "nan | 250.0",
                          "24.0 | 500.0",
                          "100.0 | 10.0",
                          "12.0 | 600.0 | 600.0",
                          "70.0 | 90.0",
                          "95.0 | 20.0 | 8.0",
                          "50.0",
                          "nan | 405.0",
                          "180.0",
                          "45.0",
                          "40.0 | 70.0",
                          "22.0 | 80.0",
                          "70.0 | 800.0",
                          "nan | 260.0",
                          "nan | 400.0 | 400.0",
                          "40.0 | 6.0 | 2.0",
                          "nan | 800.0 | 2500.0",
                          "123.0",
                          "50.0 | 350.0",
                          "60.0 | 10.0",
                          "120.0 | nan",
                          "40.0 | 2000.0 | nan",
                          "60.0 | 150.0",
                          "5.0 | 35.0",
                          "41.0",
                          "130.0 | 40.0",
                          "0.5 | 50.0",
                          "60.0 | 900.0",
                          "114.0",
                          "5.0 | nan",
                          "nan | 2.5",
                          "nan | 1000.0 | 1006.0",
                          "1.0 | 7.5",
                          "nan | 175.0",
                          "1.0",
                          "4.0 | 340.0",
                          "54.0",
                          "50.0 | nan | nan",
                          "80.0 | 22.0",
                          "32.0 | 200.0",
                          "38.0 | 20.0 | 8.0",
                          "17.0 | 110.0",
                          "630.0",
                          "50.0 | 130.0 | 100.0",
                          "20.0 | 5.0 | 10.0",
                          "1.1 | nan",
                          "50.0 | 450.0",
                          "145.0 | nan",
                          "25.0 | 8.0",
                          "80.0 | 400.0",
                          "50.0 | 50.0",
                          "35.0 | 8.0",
                          "30.0 | 500.0 | 2000.0",
                          "85.0 | 30.0 | 7.0",
                          "nan | nan | 8.0",
                          "80.0 | 600.0",
                          "21.0",
                          "60.0 | 560.0",
                          "nan | 5501.0",
                          "1000.0 | 340.0",
                          "50.0 | 1400.0 | 500.0",
                          "420.0",
                          "45.0 | 200.0",
                          "50.0 | 640.0",
                          "70.0 | 100.0 | nan",
                          "85.0",
                          "20.0 | 20.0 | 8.0",
                          "60.0 | 250.0",
                          "53.0 | 250.0",
                          "25.0 | 500.0",
                          "nan | 150.0",
                          "70.0 | 600.0",
                          "50.0 | 700.0 | 700.0",
                          "nan | 370.0",
                          "50.0 | 700.0 | 500.0",
                          "nan | 36.0 | 1.0",
                          "5.0 | 40.0",
                          "60.0 | 750.0",
                          "620.0",
                          "10.0 | 200.0",
                          "184.2",
                          "22.0 | nan",
                          "13.0",
                          "50.0 | 15.0",
                          "13.0 | 80.0",
                          "20.0 | 10.0 | 0.5",
                          "nan | 1000.0 | 1000.0",
                          "nan | nan | nan",
                          "nan | 250.0 | nan",
                          "20.0",
                          "30.0 | 300.0",
                          "31.0 | 20.0 | 8.0",
                          "1400.0",
                          "65.0 | 0.5",
                          "nan | 717.0",
                          "25.0 | 500.0 | 1000.0",
                          "2.3",
                          "nan | 4800.0",
                          "90.0 | 440.0",
                          "nan | 790.0",
                          "1100.0",
                          "30.0 | 1650.0",
                          "25.0 | 7.0",
                          "92.0",
                          "60.0 | 700.0",
                          "nan | 600.0 | 2000.0",
                          "30.0 | 120.0",
                          "30.0 | 80.0",
                          "20.0 | 300.0",
                          "nan | 90.0 | nan",
                          "55.0 | 650.0",
                          "0.0 | 340.0",
                          "250.0",
                          "35.0 | 300.0",
                          "19.0 | nan | nan",
                          "10.0 | 10.0",
                          "60.0 | 20.0 | 8.0",
                          "nan | 1.5",
                          "60.0 | 600.0",
                          "60.0 | 550.0",
                          "37.0 | 1.0 | 1.0",
                          "40.0 | 55.0",
                          "3.0 | 57.0",
                          "60.0 | 28.0",
                          "33.7 | 67.5",
                          "57.0 | nan",
                          "50.0 | 7.5",
                          "nan | nan | 5.0",
                          "100.0 | 0.5",
                          "6.0 | 2.0",
                          "27.0 | 70.0 | 27.0 | 70.0 | 27.0 | 70.0 | 27.0",
                          "60.0 | 300.0",
                          "50.0 | 270.0",
                          "60.0 | 400.0",
                          "610.0",
                          "44.2 | 8.0",
                          "nan | 1000.0 | 1009.0",
                          "nan | nan | 1.3",
                          "nan | 0.5",
                          "700.0 | 1970.0",
                          "55.0 | 2.0",
                          "nan | 35.0",
                          "70.0 | 5.0",
                          "35.0",
                          "60.0 | 125.0",
                          "100.0 | 5.0",
                          "30.0 | 10.0",
                          "8.0 | 80.0",
                          "40.0 | 3.0 | 3.0 | 1.0",
                          "3.0 | 20.0 | 8.0",
                          "nan | 2.0",
                          "50.0 | 60.0",
                          "2.5",
                          "60.0 | nan",
                          "50.0 | 27.0",
                          "21.0 | nan",
                          "nan | 350.0 | 150.0",
                          "80.0 | 350.0",
                          "20.0 | 20.0",
                          "60.0 | 4.0",
                          "25.0 | 10.0",
                          "23.0",
                          "35.0 | 10.0 | 1.0",
                          "10.0 | 9.0",
                          "30.0 | 230.0",
                          "65.0 | 350.0",
                          "100.0 | 35.0",
                          "30.0 | 650.0",
                          "550.0 | 2500.0",
                          "54.0 | nan",
                          "nan | nan | 50.0",
                          "40.0",
                          "126.0 | nan",
                          "230.0",
                          "51.0 | 250.0",
                          "60.0 | 420.0",
                          "3.5",
                          "28.0",
                          "28.0 | 8.0",
                          "nan | 45.0 | nan",
                          "50.0 | nan",
                          "nan | 300.0",
                          "30.0 | 600.0 | 2500.0",
                          "nan | 400.0 | 500.0",
                          "780.0",
                          "48.8",
                          "nan | 2000.0",
                          "0.8",
                          "60.0 | 1300.0",
                          "nan | 1000.0 | 1003.0",
                          "74.4",
                          "60.0 | 7.0",
                          "100.0 | 30.0",
                          "nan | 700.0 | 700.0",
                          "27.0 | 80.0 | 27.0",
                          "122.0",
                          "300.0 | 2.0",
                          "55.0 | 30.0",
                          "181.0 | nan",
                          "2.0",
                          "2.0 | 0.0",
                          "48.0 | 150.0",
                          "130.0 | 10.0",
                          "52.0 | 200.0",
                          "6.0 | 10.0",
                          "80.0 | 2100.0",
                          "30.0 | 340.0",
                          "50.0 | nan | 1200.0",
                          "400.0 | 17.0",
                          "60.0 | 105.0",
                          "nan | nan | 10.0",
                          "nan | 600.0 | 3000.0",
                          "10.0 | 40.0 | nan",
                          "nan | 20.0 | 6.0",
                          "44.0 | 200.0",
                          "60.0 | 160.0",
                          "0.5 | nan",
                          "40.0 | 40.0",
                          "80.0 | 1800.0",
                          "64.7",
                          "50.0 | nan | nan | 1200.0",
                          "68.0",
                          "30.0 | 172.0",
                          "30.0 | 5.5",
                          "50.0 | 250.0 | nan",
                          "200.0",
                          "20.0 | 370.0",
                          "150.0 | nan",
                          "80.0 | 8.0",
                          "70.0 | 2.0",
                          "30.0 | 264.0",
                          "1.6 | 40.0 | 6.0",
                          "100.0 | 40.0",
                          "nan | 500.0 | 2000.0",
                          "30.0 | 258.0",
                          "10.0 | 30.0",
                          "80.0 | 2300.0",
                          "40.0 | 450.0",
                          "90.0 | 100.0",
                          "15.0 | 20.0 | 8.0",
                          "930.0",
                          "nan | 500.0 | 750.0",
                          "25.0 | 20.0 | 5.0",
                          "60.0 | 1000.0 | 1000.0",
                          "20.0 | 180.0",
                          "38.0",
                          "nan | 20.0 | 7.0",
                          "40.0 | 350.0 | 1000.0",
                          "nan | 51.0",
                          "270.0",
                          "62.0",
                          "170.0",
                          "nan | 12000.0",
                          "99.4",
                          "76.0 | 200.0",
                          "nan | 520.0",
                          "130.0 | 20.0",
                          "50.0 | 400.0 | 450.0",
                          "10.1 | 3.0",
                          "40.0 | 118.0",
                          "nan | nan | 167.0",
                          "20.0 | 450.0",
                          "45.0 | 0.5",
                          "nan | 20.0 | 7.5",
                          "100.0 | 413.0",
                          "nan | 54.0",
                          "8.0 | 100.0",
                          "300.0",
                          "190.0 | 40.0",
                          "nan | 500.0 | 600.0",
                          "200.0 | 400.0",
                          "30.0 | nan | 150.0",
                          "450.0",
                          "88.0",
                          "60.0 | 9.0",
                          "31.0 | 200.0",
                          "nan | 350.0",
                          "nan | 1700.0",
                          "150.0 | 10.0",
                          "5.8 | 40.0 | 6.0",
                          "54.0 | 150.0",
                          "33.0 | 1.0",
                          "27.0",
                          "66.0",
                          "nan | 4.0",
                          "30.0 | 3.0",
                          "10.0 | 35.0",
                          "1200.0",
                          "48.0 | 8.0",
                          "17.5",
                          "nan | 2300.0",
                          "1.7 | 40.0 | 6.0",
                          "60.0 | 1000.0",
                          "50.0 | 700.0 | 250.0",
                          "60.0 | nan | nan",
                          "2.0 | 25.0 | 6.0",
                          "20.0 | nan | 1.0",
                          "150.0 | 860.0",
                          "800.0",
                          "50.0 | 630.0",
                          "nan | 190.0",
                          "48.0 | nan | 1.0",
                          "55.0 | 0.5 | 30.0 | 0.5 | 0.5",
                          "32.0",
                          "1000.0 | 60.0 | 150.0",
                          "227.5",
                          "40.0 | 20.0",
                          "20.0 | 150.0 | 1.0",
                          "149.0",
                          "40.0 | 390.0",
                          "52.0 | 250.0",
                          "nan | 500.0 | 1400.0",
                          "95.0 | nan",
                          "100.0 | 3.3",
                          "30.0 | 180.0",
                          "120.0 | 365.0",
                          "40.0 | 15.0",
                          "20.0 | 60.0",
                          "383.0",
                          "25.0 | 187.0 | nan",
                          "nan | 500.0",
                          "nan | 38.0 | 1.0",
                          "60.0 | 50.0 | 15.0",
                          "11.0 | 150.0",
                          "45.0 | 10.0",
                          "96.0 | nan",
                          "100.0 | 370.0",
                          "40.0 | 20.0 | nan | 90.0",
                          "40.0 | 400.0 | nan",
                          "60.0 | 50.0 | 75.0",
                          "nan | 200.0 | nan",
                          "40.0 | 175.0",
                          "40.0 | 14.0",
                          "70.0 | 50.0",
                          "2.0 | 4.0 | 10.0",
                          "60.0 | 2.0",
                          "50.0 | 400.0 | 1500.0",
                          "65.0 | 150.0",
                          "30.0 | 500.0 | 1000.0",
                          "25.0 | 300.0",
                          "50.0 | 210.0",
                          "50.0 | 120.0",
                          "50.0 | 6.0",
                          "41.7 | 8.0",
                          "50.0 | 5.0",
                          "80.0 | 40.0",
                          "80.0 | 225.0",
                          "400.0 | 200.0",
                          "16.0",
                          "80.0 | 250.0",
                          "100.0 | 1.0",
                          "10000.0",
                          "30.0 | 450.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "thickness",
                "description": "A list of thicknesses of the individual layers in the stack. Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous filed.\n- State thicknesses in nm\n- Every layer in the stack have a thickness. If it is unknown, state this as \u2018nan\u2019\n- If there are uncertainties, state the best estimate, e.g write 100 and not 90-110\nExample\n200\nnan |250\n100 | 5 | 8",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Undoped | Li-FTSI",
                          "PFO | Unknown",
                          "Er; Yb",
                          "Unknown | B; F; PEI",
                          "Unknown | Zr",
                          "Al(NO3)3\u00a0\u00b7 9H2O",
                          "PMo12 | Unknown | Unknown",
                          "Unknown | TiCl4; Mg",
                          "nan | Al",
                          "nan | Au-np",
                          "N-DPBI",
                          "Unknown | Li-TFSI; TiCl4",
                          "Unknown | Au-np; Li-TFSI",
                          "Bi2O2S-np",
                          "PEI",
                          "Unknown | CsBr",
                          "Unknown | Au@Ag-np; Li-TFSI | Unknown",
                          "N-Graphene",
                          "Unknown | I",
                          "1-butyl-3-methylimidazolium tetrafluoroborate",
                          "Unknown | NaCo2O4",
                          "H2PtCl6",
                          "Polystyrene",
                          "CH3NH3I",
                          "CsAc",
                          "UV",
                          "Unknown | CsI",
                          "Unknown | N",
                          "Unknown | Oleic acid",
                          "Unknown | Ruthenium",
                          "N-Graphene-nanosheets | Unknown",
                          "Unknown | Ag@SiO2 | Unknown",
                          "Unknown | NaYF4:Yb3:Er:@SiO2-np | Unknown",
                          "Unknown | Eu",
                          "Unknown | N; Ta",
                          "PMMA | Unknown",
                          "Y",
                          "Unknown | BF4",
                          "Undoped | Undoped",
                          "Galliumnitrate\u00a0hydrate",
                          "PFNOX",
                          "bis-C60",
                          "Ta",
                          "Eu(NO3)3\u00b76H2O",
                          "Acetylacetone",
                          "Ni",
                          "Al(NO3)3\u00a0\u00b7 9H2O; La(NO3)3\u00a0\u00b7 6H2O",
                          "Ga",
                          "Pyridine | Undoped",
                          "Ag",
                          "Unknown | NaYF4:Yb:Er-np",
                          "Mg",
                          "Unknown | Zn",
                          "Cs",
                          "Unknown | FeN3O9",
                          "Unknown | Ag@SiO2",
                          "ITIC | Undoped",
                          "InCl3",
                          "Unknown | TiO2-nw",
                          "In2O3",
                          "Unknown | Zn0.5Cd0.5S-np",
                          "DBU",
                          "Undoped | Mg | Undoped | Undoped",
                          "Unknown | TiCl4; Ethyl cellulose",
                          "D35",
                          "rGraphene oxide",
                          "Unknown | Ag-np",
                          "nan | MAI",
                          "nan | FK209",
                          "Urea",
                          "nan | Thiourea",
                          "EDTA",
                          "Tetraisopropil titanate butanol | TiCl4",
                          "(RuCp*mes)2 | Undoped",
                          "Unknown | N-DBPI",
                          "TiCl4 | Nb",
                          "Nb2O5",
                          "Unknown | SDBAC",
                          "Ethanolamine",
                          "CoSe",
                          "Unknown | ZnGa2O4:Eu(III)",
                          "1H molecule | Undoped",
                          "Ti",
                          "nan | Au-nw",
                          "CF4",
                          "AlCl3",
                          "Hydrogen | Undoped",
                          "Li-TFSI; Mg(TFSI)2",
                          "Unknown | Pluronic P-123",
                          "Al",
                          "Unknown | TiCl4 | Unknown",
                          "Ga2O3",
                          "Sb | Unknown",
                          "NaCl | Unknown",
                          "Al | Undoped",
                          "Al | nan",
                          "Unknown | Mg",
                          "Unknown | Er",
                          "DMOPA | Unknown",
                          "Dopamine",
                          "Undoped | P",
                          "Glycine",
                          "Unknown | Au@SiO2-np",
                          "Er",
                          "Phosphorene nanocomposites",
                          "ethanolamine",
                          "Unknown | NaYF4:Yb3:E3",
                          "oTb",
                          "Unknown | Fe",
                          "oTb | Unknown",
                          "Unknown | Graphene oxide",
                          "Yttrium",
                          "Graphene oxide | Unknown",
                          "F",
                          "Unknown | Zn0.25Cd0.75S-np",
                          "Unknown | EA | Unknown",
                          "Unknown | Au@TiO2 NPs",
                          "Unknown | Unknown | Cu",
                          "Undoped | p-Toluenesulfonic acid",
                          "SnCl2",
                          "Unknown | Nb",
                          "TMAH",
                          "tert-butanol",
                          "BF4",
                          "CF3NaO2S",
                          "Unknown | ZnCdS-np",
                          "Nb | TiCl4",
                          "Unknown | TPFPB; LiClO4",
                          "Unknown | TPFPB",
                          "N:Graphene-oxide",
                          "Unknown | Terpineol",
                          "Unknown | Unknown | Li-TFSI",
                          "Cs2CO3",
                          "Unknown | Au@Ag-np; Li-TFSI",
                          "Graphene oxide | Graphene oxide",
                          "Li-TFSI; Mg-TFSI | Li-TFSI",
                          "Li",
                          "La(NO3)3\u00a0\u00b7 6H2O",
                          "2,2,2-trifluoroethanol",
                          "Urea | Unknown",
                          "RGraphene oxide | RGraphene oxide",
                          "Unknown | PEG",
                          "Graphene; TiCl4 | Graphene",
                          "NbCl5",
                          "Cl",
                          "DPM2; OC10H21",
                          "Triton X-100",
                          "Li-TFSI; TiCl4",
                          "TiCl4 | TiCl4",
                          "TiCl4 | Decamethylcobaltocene",
                          "Unknown | SiW12",
                          "AgInS2-QD",
                          "Unknown | Li-TFSI | Unknown",
                          "Graphdiyne",
                          "Oleamide",
                          "Ti(acac)2",
                          "nan | Li-TFSI",
                          "F8BT | Unknown",
                          "Phen-I",
                          "Unknown | Graphene oxide | Unknown",
                          "Unknown | Mg; Er",
                          "Unknown | Ag-nw",
                          "CNT",
                          "Unknown | Li-TFSI",
                          "Bi | nan",
                          "TBABF4 | Unknown",
                          "Y2O3",
                          "Undoped | Undoped | Cu",
                          "Unknown | rGraphene oxide",
                          "nan | Ga",
                          "Yb",
                          "F | F",
                          "Unknown | H20",
                          "Chlorine",
                          "Ta | Undoped",
                          "Unknown | H",
                          "Unknown | SnCl2",
                          "DMOAP | Unknown",
                          "Unknown | Li; Er; Yb",
                          "TiCl4 | Ag-np",
                          "Ionic liquid",
                          "Unknown | NbCl5",
                          "nan | AuAg-np",
                          "nan | TiCl4",
                          "Unknown | Ge-np",
                          "Li-TFSI",
                          "Unknown | Al | Unknown",
                          "Unknown | BaTiO3",
                          "Fe | nan",
                          "EA",
                          "Unknown | N-DPBI",
                          "HCl",
                          "TAA",
                          "Unknown | Au@SiO2",
                          "Graphene-nanosheets | Unknown",
                          "Unknown | Au@Pt@Au-np | Unknown",
                          "TiCl4 | Undoped | Undoped",
                          "Er; Mg",
                          "DIO",
                          "Li-TFSI | nan",
                          "NaCl",
                          "Unknown | Triethylamine; HCl | Unknown",
                          "LiCl2; PEG",
                          "Cd; Y",
                          "Unknown | CeO2",
                          "SWCNTs | SWCNTs",
                          "Pluronic P123 surfactant",
                          "TiCl4 | Na-TFSI",
                          "DMBI",
                          "CoCl2",
                          "Unknown | Co-TFSI",
                          "Ga(acac)3 | Ga(acac)3",
                          "DPM; OE",
                          "Unknown | Triton 100-X",
                          "KCl",
                          "KOH",
                          "Potassium O-hexyl xanthate",
                          "2-CP",
                          "Ru | Unknown",
                          "SnOCl2",
                          "Al(NO3)3; Ethanolamine",
                          "DMOAP | Undoped",
                          "Unknown | SrO",
                          "Li2CO3",
                          "Ru",
                          "BaSnO3",
                          "Fe",
                          "Compound 2 | Unknown",
                          "Zn",
                          "Zr | N",
                          "Unknown | Unknown | Unknown | MoO3",
                          "Unknown | HI",
                          "Unknown | TiCl4 | Tm; Yb",
                          "Unknown | Al; In",
                          "Unknown | TiO4",
                          "Unknown | Li-TSFI",
                          "CTAB | Unknown",
                          "Unknown | Ta",
                          "Unknown | Ethylene cellulose; TiCl4",
                          "Phosphotungstic acid; WCl6",
                          "Undoped",
                          "PNDI-2T | Undoped",
                          "Unknown | Yb:Er",
                          "TiCl4 | Unknown",
                          "Mxene | Mxene",
                          "Nb; TiCl4",
                          "NACl",
                          "nan | CsBr",
                          "Unknown | Undoped",
                          "Ethyl cellulose | Unknown",
                          "Glucose",
                          "Unknown | Unknown | Nb",
                          "Unknown | LiFTSI",
                          "Sn | Unknown",
                          "SnCl2; MercaptoPropionic acid; Urea",
                          "Al | Unknown",
                          "HCl | Unknown",
                          "TOPD",
                          "Unknown | Li-TFSI; TiCl4 | Unknown",
                          "Tantalum(V) ethoxide",
                          "Acetic Acid",
                          "MAI | Unknown",
                          "IL-BF4",
                          "Undoped | AlCl",
                          "Unknown | La",
                          "B-TiO2",
                          "CNT, DMSO",
                          "RuCl3",
                          "Unknown | InCl3 | Unknown",
                          "rGraphene oxide | Unknown",
                          "Unknown | TiCl4; SWCNTs",
                          "Unknown | Graphene",
                          "Unknown | NaYF4:Yb:Tm-np",
                          "TiCl4",
                          "Undoped | Li-TFSI",
                          "Carbon-np",
                          "Unknown | Li",
                          "In | Unknown | Unknown",
                          "Unknown | Unknown | NaYbF4:Ho-np",
                          "nan | TAA",
                          "Mg | Unknown",
                          "Unknown",
                          "Samarium",
                          "Unknown | Au-np; TiCl4",
                          "TiCl4 | Undoped",
                          "nan | Nb",
                          "TiCl4 | nan",
                          "K",
                          "nan | Ag",
                          "Unknown | YCl3",
                          "Graphene",
                          "Unknown | SWCNTs",
                          "Undoped | W",
                          "Yb:Er",
                          "Unknown | Ag",
                          "Pyridine | Unknown",
                          "In",
                          "Unknown | Ho; Yb; Mg",
                          "N; PEI",
                          "Unknown | ZnGa2O4-np",
                          "Graphene | Graphene",
                          "Nb",
                          "H2O",
                          "PEIE",
                          "Unknown | 2,6-Py | Unknown",
                          "Unknown | Cl",
                          "Ga | Undoped",
                          "HMB",
                          "TBAPF6",
                          "Ethanolamine | Unknown",
                          "Unknown | Sb | Unknown",
                          "4,4\u2032-BiPy | nan",
                          "W2(hpp)4",
                          "N-Graphene | Unknown",
                          "DBU | Unknown",
                          "La",
                          "Unknown | F127",
                          "Unknown | Yb",
                          "Unknown | CTAB",
                          "N2H8S",
                          "Unknown | Zn0.75Cd0.25S-np",
                          "Unknown | TiCl4",
                          "TBAB",
                          "PF6",
                          "Unknown | SnOCl2",
                          "BIZ | Undoped",
                          "2H molecule | Undoped",
                          "Al2O3",
                          "LiCl",
                          "MoCl5",
                          "PMMA",
                          "Li-TFSI; Mg(TFSI)2 | Li-TFSI",
                          "F; Sn",
                          "N",
                          "Gd",
                          "TiCl4 | Li-TFSI",
                          "Co",
                          "Nb(OCH2CH3)5",
                          "n-DMBI",
                          "Unknown | CeO2:Eu",
                          "TiCl4 | polystyrene",
                          "Unknown | B",
                          "V | Undoped",
                          "SnCl4",
                          "TBABF4",
                          "Unknown | Ba(OH)2",
                          "TiAcAc",
                          "Unknown | AlCl3:NH3",
                          "Graphene-QDs",
                          "Titanium acetylacetonate",
                          "Unknown | In",
                          "2,6-Py | Unknown",
                          "Bphen",
                          "Unknown | Cs",
                          "Guanidinium chloride",
                          "N-DMBI | Unknown",
                          "Zr",
                          "Unknown | Ni | Unknown",
                          "Unknown | Carbon-np",
                          "ZnCl2",
                          "In | Unknown",
                          "Oleic Acid",
                          "C60-substituted catechol | C60-substituted catechol",
                          "TiCl4 | Unknown | Unknown",
                          "CdS",
                          "Undoped | TiCl4",
                          "Stearic acid; EDA",
                          "N2",
                          "Unknown | TAA",
                          "2,2\u2032-BiPy | nan",
                          "Undoped | Acetylacetone; Triton X-100",
                          "Cd",
                          "Carbon-QDs",
                          "W",
                          "Bi | Unknown",
                          "Sn",
                          "Unknown | F",
                          "Undoped | TiCl4 | TiCl4",
                          "Unknown | Sn",
                          "Unknown | PVC-g-POEM",
                          "Unknown | rGraphene oxide; Li-TFSI",
                          "Undoped | Undoped | Undoped",
                          "2D graphene",
                          "Mxene | Mxene | Unknown",
                          "Graphdiyne | Graphdiyne",
                          "NH4Cl",
                          "Nb | Unknown",
                          "Na2S",
                          "AgNO3 | Undoped | Undoped",
                          "TiCl4 | K-TFSI",
                          "MAI | Unknown | Unknown",
                          "TaCl",
                          "Unknown | In | Unknown",
                          "Unknown | Polystyrene",
                          "TaCl5",
                          "Unknown | DMBI",
                          "Fe(NO3)3 | Unknown",
                          "Mg | Undoped | Undoped",
                          "Unknown | Al",
                          "PS",
                          "IZ | Undoped",
                          "CTAB",
                          "NH4F",
                          "Unknown | HCl",
                          "CeOx; TiCl4 | Unknown",
                          "TiAc2",
                          "Unknown | Sb",
                          "Unknown | Li; Mg | Unknown",
                          "Unknown | Li; Ho; Yb",
                          "Triethylamine | Unknown",
                          "Sb",
                          "NOBF4",
                          "Unknown | B; F",
                          "Nb | Undoped",
                          "Unknown | Li-acetat",
                          "P123 | Unknown",
                          "Unknown | Li-FTSI",
                          "Unknown | InCl3",
                          "Na2CO3",
                          "Ag; In | Undoped",
                          "K2CO3",
                          "nan | Cs2CO3",
                          "DMBI | Unknown",
                          "DPM2; OE2",
                          "Unknown | Unknown | Unknown | Co2O3",
                          "Unknown | PAAb-PEO",
                          "Unknown | Er; Yb",
                          "Ti3C2",
                          "titanium diisopropoxide bis(acetylacetonate)",
                          "Unknown | PEI",
                          "Unknown | NaYF4:Yb3:Er-np | Unknown",
                          "TiCl4 | Cs-TFSI",
                          "Unknown | Sr",
                          "Unknown | Unknown | TiCl4",
                          "CdCl2",
                          "Unknown | Unknown | Unknown | NiO",
                          "Ti(acac)2 | TiCl4",
                          "Undoped | nan",
                          "rGS",
                          "DMOAP",
                          "C60-substituted catechol",
                          "Unknown | Unknown | Unknown | CuO",
                          "ClGD | Unknown",
                          "Unknown | Li-TFSI; TBP",
                          "Mo",
                          "PFNOX; Polystyrene",
                          "Li2SiO3"
                        ]
                      }
                    }
                  ]
                },
                "name": "additives_compounds",
                "description": "List of the dopants and additives that are in each layer of the ETL-stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous fields.\n- If several dopants/additives, e.g. A and B, are present in one layer, list the dopants/additives in alphabetic order and separate them with semicolons, as in (A; B)\n- If no dopants/additives, state that as \u201cUndoped\u201d\n- If the doping situation is unknown, stat that as\u2018Unknown\u2019\nExample\nUndoped | Li-TFSI\nTiCl4\nNb\nUndoped | Undoped | Undoped",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "4 % | nan",
                          "nan | 0.04 | 0.04",
                          "1",
                          "2",
                          "nan | 0.5 mg/ml",
                          "0.005",
                          "5 vol%",
                          "3 mol%",
                          "50 vol%",
                          "nan | 12 %",
                          "nan | 0.5 %",
                          "0.2",
                          "0.1 mol%",
                          "0.005 M",
                          "1 mol%",
                          "0 | 50 ppm",
                          "100 vol%",
                          "0.33",
                          "0.01",
                          "1.0 mol%",
                          "0.025 M | nan",
                          "0.003",
                          "0.1",
                          "0.66",
                          "0.4 % | nan",
                          "2.5 vol%",
                          "0.05 % | nan",
                          "0.07",
                          "40 mM | nan",
                          "10 mol%",
                          "0.025 M",
                          "0.15 M | 20 wt% | 0.5 mg/ml",
                          "0.05",
                          "2 mol%",
                          "nan | 7.5 % | nan | nan",
                          "0.15",
                          "0.2 mM/ml",
                          "0.015",
                          "0.3 mM",
                          "2 % | nan",
                          "1.2 mg/ml",
                          "0.5 % | nan",
                          "1.5 vol%",
                          "nan | 1 %",
                          "3.0 mol%",
                          "0.5",
                          "75 vol%",
                          "6 wt%",
                          "0.5 %; 0.5 %",
                          "0.4 mg/ml",
                          "0.15 M | nan",
                          "nan | 0.04",
                          "0 | 100 ppm",
                          "0.355 vol%",
                          "0.15 M | 20 wt% | 1 mg/ml",
                          "0.02",
                          "0.007",
                          "0.2 wt%",
                          "2.4 vol%",
                          "0.6 M",
                          "7.5 % | nan | nan",
                          "50 mM",
                          "6.25 wt% | nan",
                          "0.1 mM/ml",
                          "0.15 mM",
                          "0.6 mM",
                          "nan | nan",
                          "0.4 mM/ml",
                          "nan | 0.1 M",
                          "0.04 M",
                          "0.001",
                          "nan | 6 %",
                          "2.0 mg/ml",
                          "0.15 M | 20 wt% | 2 mg/ml",
                          "nan | 9 %",
                          "0.1 wt%",
                          "nan | 3 %",
                          "12.5 wt% | nan",
                          "0.5 mol%",
                          "3 % | nan",
                          "0 | 10000 ppm",
                          "20 mg/ml | 0.5 mg/ml",
                          "0.01 M",
                          "5 % | nan",
                          "0.8 mg/ml",
                          "2.5 wt% | nan",
                          "5 mol%",
                          "0.5 wt%",
                          "1.6 mg/ml",
                          " undoped",
                          "1.5 wt%",
                          "1 % | nan",
                          "100 mM | nan | nan",
                          "1 wt%",
                          "0.15 M | 20 wt% | 4 mg/ml",
                          "0.45 mM",
                          "nan | 100 mg/ml",
                          "0.3 mM/ml",
                          "3 wt%",
                          "nan | nan | nan",
                          "nan | 5 %",
                          "0.0025",
                          "5 wt%",
                          "25 vol%",
                          "0 | 1000 ppm",
                          "0.03"
                        ]
                      }
                    }
                  ]
                },
                "name": "additives_concentrations",
                "description": "The concentration of the dopants/additives.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If more than one dopant/additive in the layer, e.g. A and B, separate the concentration for each dopant/additive with semicolons, as in (A; B)\n- For each dopant/additive in the layer, state the concentration.\n- The order of the dopants/additives must be the same as in the previous filed.\n- For layers with no dopants/additives, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used.\n- The preferred way to state the concentration of a dopant/additive is to refer to the amount in the final product, i.e. the material in the layer. When possible, use on the preferred units\no wt%, mol%, vol%, ppt, ppm, ppb\n- When the concentration of the dopant/additive in the final product is unknown, but where the concentration of the dopant/additive in the solution is known, state that concentration instead. When possible, use on the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n5 vol%; nan | 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | 0.3 M",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "ALD",
                          "ALD | ALD | Spin-coating",
                          "ALD | Evaporation",
                          "ALD | Flame aerosol",
                          "ALD | Flame aerosol | ALD",
                          "ALD | Hydrolysis",
                          "ALD | Magnetron sputtering | ALD | ALD",
                          "ALD | Microwave hydrothermal",
                          "ALD | Screen printing",
                          "ALD | Screen printing | Screen printing",
                          "ALD | Spin-coating",
                          "ALD | Spin-coating | Hydrolysis",
                          "ALD | Spin-coating | Spin-coating",
                          "ALD | Spray-pyrolys | Spin-coating",
                          "Aerosol-assisted CVD | Spin-coating",
                          "Brush painting | Evaporation",
                          "CBD",
                          "CBD >> Rinsing >> Rinsing",
                          "CBD >> Screen printing >> CBD | Screen printing",
                          "CBD >> Screen printing >> CBD | Screen printing | Screen printing",
                          "CBD | CBD",
                          "CBD | Evaporation",
                          "CBD | Hydrothermal",
                          "CBD | Hydrothermal >> Etching",
                          "CBD | Hydrothermal | Dipp-coating",
                          "CBD | Inkjet printing | Inkjet printing",
                          "CBD | Screen printing",
                          "CBD | Screen printing | Dipp-coating",
                          "CBD | Screen printing | Screen printing",
                          "CBD | Spin-coating",
                          "CBD | Spin-coating >> CBD",
                          "CBD | Spin-coating | Dipp-coating",
                          "CBD | Spin-coating | Spin-coating",
                          "CVD",
                          "CVD >> ALD",
                          "CVD | CVD",
                          "CVD | CVD | Evaporation",
                          "CVD | CVD | Spin-coating",
                          "CVD | Doctor blading",
                          "CVD | Spin-coating",
                          "CVD | Spray-pyrolys",
                          "Chemical etching >> Thermal oxidation",
                          "Co-evaporation | Evaporation",
                          "Comersial | Spin-coating",
                          "Condensation | Evaporation | Evaporation",
                          "Condensation | Spin-coating",
                          "DC Magnetron Sputtering",
                          "DC Magnetron Sputtering | Electrochemical anodization",
                          "DC Magnetron Sputtering | Spin-coating",
                          "DC Reactive Magnetron Sputtering",
                          "DC Sputtering >> Electrochemical anodization",
                          "DC Sputtering | Spin-coating",
                          "Dipp-coating",
                          "Dipp-coating >> CBD",
                          "Dipp-coating | Dipp-coating",
                          "Dipp-coating | Doctor blading | Doctor blading",
                          "Dipp-coating | Evaporation",
                          "Dipp-coating | Hydrothermal",
                          "Dipp-coating | Hydrothermal | CBD",
                          "Dipp-coating | Screen printing | Screen printing",
                          "Dipp-coating | Spin-coating",
                          "Dipp-coating | Spin-coating >> Plasma treatment",
                          "Dipp-coating | Spin-coating | Spin-coating",
                          "Dipp-coating | Spin-coating | Spin-coating | CBD",
                          "Doctor blading",
                          "Doctor blading | Dipp-coating",
                          "Doctor blading | Doctor blading",
                          "Doctor blading | Evaporation",
                          "Doctor blading | Hydrothermal",
                          "Doctor blading | Spin-coating | Dipp-coating",
                          "Doctor blading | Spin-coating | Spin-coating",
                          "Drop-infiltration",
                          "Dropcasting",
                          "Dropcasting | Spin-coating | Spin-coating",
                          "E-beam evaporation",
                          "E-beam evaporation >> CVD",
                          "E-beam evaporation >> CVD | ALD",
                          "E-beam evaporation | CVD",
                          "E-beam evaporation | E-beam evaporation",
                          "E-beam evaporation | Spin-coating",
                          "E-beam evaporation | Spin-coating | Spin-coating",
                          "Electrochemical anodization",
                          "Electrochemical anodization | CBD",
                          "Electrochemical anodization | Electrochemical anodization",
                          "Electrodeposition",
                          "Electrodeposition | CBD",
                          "Electrodeposition | Electrodeposition",
                          "Electrodeposition | Hydrothermal",
                          "Electrodeposition | Screen printing",
                          "Electrodeposition | Spin-coating",
                          "Electrodeposition | Spin-coating >> CBD",
                          "Electrospinning",
                          "Electrospraying",
                          "Electrospraying | Electrospraying",
                          "Electrospraying | Electrospraying | Spin-coating",
                          "Electrospraying | Hydrothermal",
                          "Electrospraying | Hydrothermal | Hydorthermal",
                          "Electrospraying | Hydrothermal | Spin-coating",
                          "Electrospraying | Spin-coating",
                          "Evaporation",
                          "Evaporation >> Oxidation | Spin-coating",
                          "Evaporation | ALD",
                          "Evaporation | ALD | ALD",
                          "Evaporation | CVD",
                          "Evaporation | CVD >> ALD",
                          "Evaporation | Co-evaporation",
                          "Evaporation | Evaporation",
                          "Evaporation | Evaporation | ALD",
                          "Evaporation | Evaporation | ALD | ALD",
                          "Evaporation | Evaporation | CVD",
                          "Evaporation | Evaporation | CVD | CVD",
                          "Evaporation | Evaporation | Evaporation",
                          "Evaporation | Evaporation | Spin-coating | ALD | ALD",
                          "Evaporation | Spin-coating",
                          "Evaporation | Sputtering",
                          "Evaporation | Unknown",
                          "Frequency Magnetron Sputteirng",
                          "Hydrolysis",
                          "Hydrothermal",
                          "Hydrothermal >> Dipp-coating",
                          "Hydrothermal >> Solvothermal",
                          "Hydrothermal | CBD",
                          "Hydrothermal | Dipp-coating",
                          "Hydrothermal | Hydrothermal",
                          "Hydrothermal | Hydrothermal | Hydrothermal",
                          "Hydrothermal | Spin-coating",
                          "Hydrothermal | Spin-coating | CBD",
                          "Inkjet printing",
                          "Inkjet printing | Evaporation",
                          "Lamination",
                          "Lamination | Spin-coating",
                          "Langmuir-Blodgett deposition",
                          "Magnetron sputtering",
                          "Magnetron sputtering >> Electrochemical anodization",
                          "Magnetron sputtering >> Electrochemical anodization | Electrodeposition",
                          "Magnetron sputtering | Hydrothermal",
                          "Magnetron sputtering | Hydrothermal | ALD",
                          "Magnetron sputtering | Spin-coating",
                          "Magnetron sputtering | Spin-coating | Spin-coating",
                          "Meniscus coating | Evaporation",
                          "Meniscus-coating",
                          "Oxidation | Dipp-coating",
                          "Oxygen plasma treatment",
                          "PVD",
                          "Photo-thermal CVD",
                          "Photo-thermal CVD >> Spin-coating",
                          "Pulsed laser deposition",
                          "Pulsed laser deposition | Spin-coating",
                          "RF Magnetron Sputtering",
                          "RF Magnetron sputtering",
                          "RF Magnetron sputtering | RF Magnetron sputtering",
                          "RF plasma sputtering | Spin-coating",
                          "RF sputtering",
                          "RF sputtering | CBD",
                          "RF sputtering | Spin-coating",
                          "Reactive sputtering",
                          "Roller coating",
                          "SILAR",
                          "Screen printing",
                          "Screen printing | Screen printing",
                          "Screen printing | Screen printing | Screen printing",
                          "Screen printing | Screen printing | Screen printing | Screen printing",
                          "Screen printing | Spin-coating",
                          "Slot-die coating",
                          "Slot-die coating | Evaporation",
                          "Slot-die coating | Slot-die coating",
                          "Slot-die coating | Spin-coating",
                          "Solution combustion",
                          "Solution combustion | Spin-coating",
                          "Solvothermal",
                          "Spin-coating",
                          "Spin-coating >> CBD",
                          "Spin-coating >> CBD >> Rinsing >> Rinsing | Spin-coating",
                          "Spin-coating >> CBD | Evaporation",
                          "Spin-coating >> CBD | Spin-coating",
                          "Spin-coating >> Evaporation | Evaporation",
                          "Spin-coating >> Hydrothermal",
                          "Spin-coating >> Hydrothermal | Spin-coating",
                          "Spin-coating >> Solvent annealing",
                          "Spin-coating >> Spin-coating",
                          "Spin-coating >> Spin-coating >> CBD",
                          "Spin-coating >> Spin-coating >> Spin-coating",
                          "Spin-coating >> Spin-coating >> Spin-coating | Spin-coating",
                          "Spin-coating >> Spin-coating >> Spin-coating | Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating",
                          "Spin-coating >> Spin-coating | Spin-coating",
                          "Spin-coating >> litography",
                          "Spin-coating | ALD",
                          "Spin-coating | ALD | Evaporation",
                          "Spin-coating | Air brush spray",
                          "Spin-coating | CBD",
                          "Spin-coating | CBD | Spin-coating",
                          "Spin-coating | Dipp-coating",
                          "Spin-coating | Dipp-coating | Spin-coating",
                          "Spin-coating | Doctor blading",
                          "Spin-coating | Doctor blading | Doctor blading",
                          "Spin-coating | Dropcasting",
                          "Spin-coating | E-beam evaporation",
                          "Spin-coating | E-beam evaporation >> Electrochemical anodization",
                          "Spin-coating | Electrodeposition",
                          "Spin-coating | Electrodeposition >> CBD",
                          "Spin-coating | Electrodeposition | Spin-coating",
                          "Spin-coating | Electrospinning",
                          "Spin-coating | Electrospinning | Spin-coating",
                          "Spin-coating | Electrospraying",
                          "Spin-coating | Electrospraying | Spin-coating",
                          "Spin-coating | Evaporation",
                          "Spin-coating | Evaporation >> Anodisation >> Oxidation >> Etching",
                          "Spin-coating | Evaporation >> Electrohemical anodization >> Etching",
                          "Spin-coating | Evaporation | Evaporation",
                          "Spin-coating | Evaporation | Evaporation | Evaporation",
                          "Spin-coating | Evaporation | Spin-coating",
                          "Spin-coating | Evaporation | Spin-coating | CBD",
                          "Spin-coating | Evaporation | Spin-coating | Spin-coating",
                          "Spin-coating | Hydrolysis",
                          "Spin-coating | Hydrothermal",
                          "Spin-coating | Hydrothermal >> Solvothermal etching",
                          "Spin-coating | Hydrothermal >> Spin-coating",
                          "Spin-coating | Hydrothermal | ALD",
                          "Spin-coating | Hydrothermal | CBD",
                          "Spin-coating | Hydrothermal | Dipp-coating",
                          "Spin-coating | Hydrothermal | Doctor blading",
                          "Spin-coating | Hydrothermal | Evaporation",
                          "Spin-coating | Hydrothermal | Hydrothermal",
                          "Spin-coating | Hydrothermal | LBLAR",
                          "Spin-coating | Hydrothermal | SILAR",
                          "Spin-coating | Hydrothermal | Spin-coating",
                          "Spin-coating | Hydrothermal | Spin-coating | Spin-coating",
                          "Spin-coating | Hydrothermal | Sputtering",
                          "Spin-coating | Lamination",
                          "Spin-coating | Lithography",
                          "Spin-coating | Lithography | Spin-coating",
                          "Spin-coating | Magnetron sputtering >> Oxdation",
                          "Spin-coating | PVD",
                          "Spin-coating | RF Magnetron Sputtering",
                          "Spin-coating | RF sputtering",
                          "Spin-coating | SILAR",
                          "Spin-coating | Screen printing",
                          "Spin-coating | Screen printing >> CBD",
                          "Spin-coating | Screen printing | Screen printing",
                          "Spin-coating | Slot-die coating",
                          "Spin-coating | Solvothermal",
                          "Spin-coating | Spin-coating",
                          "Spin-coating | Spin-coating >> CBD",
                          "Spin-coating | Spin-coating >> CBD >> Rinsing",
                          "Spin-coating | Spin-coating >> CBD | Spin-coating",
                          "Spin-coating | Spin-coating >> Dipp-coating",
                          "Spin-coating | Spin-coating >> Hydrothermal",
                          "Spin-coating | Spin-coating >> Hydrothermal | Spin-coating",
                          "Spin-coating | Spin-coating >> Spin-coating",
                          "Spin-coating | Spin-coating >> Spin-coating | Spin-coating >> CBD",
                          "Spin-coating | Spin-coating | ALD",
                          "Spin-coating | Spin-coating | CBD",
                          "Spin-coating | Spin-coating | Dipp-coating",
                          "Spin-coating | Spin-coating | Doctor blading",
                          "Spin-coating | Spin-coating | Evaporation",
                          "Spin-coating | Spin-coating | Evaporation | Evaporation",
                          "Spin-coating | Spin-coating | Evaporation | Evaporation | Evaporation",
                          "Spin-coating | Spin-coating | Evaporation | Evaporation | Evaporation | Evaporation",
                          "Spin-coating | Spin-coating | Hydrothermal",
                          "Spin-coating | Spin-coating | RF sputtering",
                          "Spin-coating | Spin-coating | SILAR",
                          "Spin-coating | Spin-coating | SILAR method",
                          "Spin-coating | Spin-coating | Screen printing",
                          "Spin-coating | Spin-coating | Spin-coating",
                          "Spin-coating | Spin-coating | Spin-coating | ALD",
                          "Spin-coating | Spin-coating | Spin-coating | Dipp-coating",
                          "Spin-coating | Spin-coating | Spin-coating | Spin-coating",
                          "Spin-coating | Spin-coating | Spin-coating | Spin-coating | Spin-coating",
                          "Spin-coating | Spin-coating | Spin-coating | Spin-coating | Spin-coating | Spin-coating | Spin-coating",
                          "Spin-coating | Spin-coating | Sputtering",
                          "Spin-coating | Spin-coating | Unknown | Unknown",
                          "Spin-coating | Spray-coating",
                          "Spin-coating | Spray-pyrolys",
                          "Spin-coating | Sputtering",
                          "Spin-coating | Sputtering >> Hydrothermal >> ALD",
                          "Spin-coating | Sputtering | Spin-coating",
                          "Spin-coating | Transfer",
                          "Spin-coating | Ultrasonic spray",
                          "Spin-coating | Unknown",
                          "Spin-coating | Unknown | Unknown",
                          "Spray-coating",
                          "Spray-coating | Evaporation",
                          "Spray-coating | Solvothermal",
                          "Spray-coating | Spin-coating",
                          "Spray-coating | Spin-coating | Spin-coating",
                          "Spray-coating | Spray-coating",
                          "Spray-coating | Spray-pyrolys | Spin-coating",
                          "Spray-pyrolys",
                          "Spray-pyrolys >> CBD",
                          "Spray-pyrolys >> CBD | Spin-coating",
                          "Spray-pyrolys >> Hydrothermal",
                          "Spray-pyrolys >> Hydrothermal | PVD-OAD",
                          "Spray-pyrolys >> Hydrothermal | Spin-coating",
                          "Spray-pyrolys | ALD",
                          "Spray-pyrolys | ALD | Spin-coating",
                          "Spray-pyrolys | Blow-drying",
                          "Spray-pyrolys | CVD",
                          "Spray-pyrolys | Doctor blading",
                          "Spray-pyrolys | Dropcasting",
                          "Spray-pyrolys | Electrodeposition | Screen printing | Screen printing",
                          "Spray-pyrolys | Electrospinning",
                          "Spray-pyrolys | Electrospraying",
                          "Spray-pyrolys | Evaporation",
                          "Spray-pyrolys | Evaporation >> Electrochemical anodization",
                          "Spray-pyrolys | Hydrothermal",
                          "Spray-pyrolys | Inkjet-Printed",
                          "Spray-pyrolys | PVD",
                          "Spray-pyrolys | PVD | PVD",
                          "Spray-pyrolys | PVD | PVD | PVD",
                          "Spray-pyrolys | Screen printing",
                          "Spray-pyrolys | Screen printing | CBD",
                          "Spray-pyrolys | Screen printing | Evaporation | Screen printing",
                          "Spray-pyrolys | Screen printing | Screen printing",
                          "Spray-pyrolys | Screen printing | Screen printing | Dipp ccoating",
                          "Spray-pyrolys | Screen printing | Screen printing | Screen printing",
                          "Spray-pyrolys | Screen printing | Spin-coating",
                          "Spray-pyrolys | Screen printing | Spray-coating | Screen printing",
                          "Spray-pyrolys | Screen printing | Spray-pyrolys | Screen printing",
                          "Spray-pyrolys | Screen printnig",
                          "Spray-pyrolys | Screen printnig | Screen printing",
                          "Spray-pyrolys | Spin-coating",
                          "Spray-pyrolys | Spin-coating >> CBD",
                          "Spray-pyrolys | Spin-coating >> CBD | Spin-coating",
                          "Spray-pyrolys | Spin-coating >> Dipp-coating",
                          "Spray-pyrolys | Spin-coating >> Hydrothermal >> Ion exchange >> CBD",
                          "Spray-pyrolys | Spin-coating >> Spin-coating",
                          "Spray-pyrolys | Spin-coating | Dipp-coating",
                          "Spray-pyrolys | Spin-coating | Screen printing",
                          "Spray-pyrolys | Spin-coating | Spin-coating",
                          "Spray-pyrolys | Spin-coating | Spray-pyrolys",
                          "Spray-pyrolys | Spray-coating",
                          "Spray-pyrolys | Spray-pyrolys",
                          "Spray-pyrolys | Ultrasonic spray",
                          "Sputering",
                          "Sputtering",
                          "Sputtering >> CBD >> CBD",
                          "Sputtering >> Electrochemical anodization",
                          "Sputtering >> Electrochemical anodization | Spin-coating",
                          "Sputtering >> Oxidation | Spin-coating",
                          "Sputtering >> Spin-coating | Spin-coating",
                          "Sputtering | CBD",
                          "Sputtering | Dipp-coating",
                          "Sputtering | E-beam evaporation",
                          "Sputtering | Electrodeposition | Spin-coating",
                          "Sputtering | Evaporation",
                          "Sputtering | Hydrothermal",
                          "Sputtering | Hydrothermal | ALD",
                          "Sputtering | Pulsed laser deposition | Hydrothermal | Spin-coating",
                          "Sputtering | Screen printing | Screen printing",
                          "Sputtering | Spin-coating",
                          "Sputtering | Spin-coating | Spin-coating",
                          "Sputtering | Spray-pyrolys | Spin-coating",
                          "Sputtering | Sputtering",
                          "Sputtering | Sputtering | Sputtering",
                          "Substrate vibration assisted dropcasting",
                          "Temperature gradient solid-phase sintering",
                          "Thermal oxidation",
                          "Ultrasonic spray",
                          "Ultrasonic spray pyrolysis",
                          "Unknown",
                          "Unknown | CVD",
                          "Unknown | Hydrothermal",
                          "Unknown | Screen printing",
                          "Unknown | Screen printing | Screen printing",
                          "Unknown | Spin-coating",
                          "Unknown | Unknown",
                          "Unknown | Unknown | Spin-coating",
                          "Unknown | Unknown | Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_procedure",
                "description": "The deposition procedures for the ETL stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate them by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Thermal annealing is generally not considered as an individual reaction step. The philosophy behind this is that every deposition step has a thermal history, which is specified in a separate filed. In exceptional cases with thermal annealing procedures clearly disconnected from other procedures, state \u2018Thermal annealing\u2019 as a separate reaction step.\n- Please read the instructions under \u201cPerovskite. Deposition. Procedure\u201d for descriptions and distinctions between common deposition procedures and how they should be labelled for consistency in the database.\nExample\nSpin-coating\nSpin-coating | Spin-coating\nSpray-pyrolys | Spin-coating\nEvaporation | Evaporation\nSpin-coating | Evaporation\nCBD\nSpray-pyrolys\nSpin-coating | Evaporation | Evaporation\nSpray-pyrolys >> CBD | Spin-coating >> CBD",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Liquid | Liquid",
                          "Liquid | Liquid >> Liquid | Liquid >> Liquid",
                          "Liquid >> Liquid >> Liquid >> Liquid | Liquid",
                          "Gas | Liquid | Liquid",
                          "Liquid | Liquid | Liquid | Liquid",
                          "Liquid >> Liquid >> Liquid | Liquid",
                          "Gas",
                          "Liquid | Liquid >> Liquid",
                          "Liquid >> Liquid >> Liquid",
                          "Gas | Gas",
                          "Liquid | Gas",
                          "Gas | Gas | Gas",
                          "Unknown",
                          "Liquid | Liquid | Liquid",
                          "Liquid >> Liquid",
                          "Gas | Gas >> Gas",
                          "Gas >> Gas",
                          "Liquid | Liquid | Gas",
                          "Liquid",
                          "Liquid | Gas | Gas",
                          "Liquid >> Liquid | Liquid",
                          "Liquid | Gas | Liquid",
                          "Liquid | Liquid >> Liquid >> Liquid",
                          "Unknown | Gas | Gas",
                          "Gas >> Liquid | Liquid",
                          "Solid | Solid",
                          "Gas >> Liquid >> Liquid",
                          "Gas | Liquid"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_aggregation_state_of_reactants",
                "description": "The physical state of the reactants\n- The three basic categories are Solid/Liquid/Gas\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the aggregation state associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Most cases are clear cut, e.g. spin-coating involves species in solution and evaporation involves species in gas phase. For less clear-cut cases, consider where the reaction really is happening as in:\no For a spray-coating procedure, it is droplets of liquid that enters the substrate (thus a liquid phase reaction)\no For sputtering and thermal evaporation, it is species in gas phase that reaches the substrate (thus a gas phase reaction)\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nLiquid\nGas | Liquid\nLiquid | Liquid >> Liquid",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "N2 | Vacuum",
                          "N2",
                          "Air | Air >> Air",
                          "Air >> Air | Air",
                          "Air >> Air >> Air",
                          "Unknown",
                          "Air | N2",
                          "Vacuum | Vacuum | Vacuum",
                          "Vacuum >> Vacuum >> Unknown",
                          "N2 | N2 | N2",
                          "N2 | > N2",
                          "N2 | N2",
                          "Vacuum | Vacuum >> Vacuum",
                          "Ar | Ar",
                          "Ar",
                          "N2 | Air",
                          "Air | Air | Air",
                          "Air | Vacuum",
                          "N2 | N2 | Vacuum",
                          "Air | Air",
                          "Ar; O2 | Air",
                          "Vacuum | Air",
                          "Air | Vacuum | Vacuum",
                          "Air | Air >> Air | Air >> Air",
                          "Air | Air | Air | Air",
                          "Dry air",
                          "Vacuum | Vacuum",
                          "Air",
                          "Dry air | Dry air",
                          "Vacuum",
                          "Air | Ar",
                          "Ar; O2",
                          "Vacuum >> Vacuum",
                          "Dry air | Vacuum",
                          "Air >> Air",
                          "Air; O2 | Air",
                          "Vacuum | N2",
                          "N2 | Vacuum | Vacuum"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere",
                "description": "The synthesis atmosphere\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nVacuum | N2\nAir | Ar; H2O >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1 Torr",
                          "1 atm >> 1 atm",
                          "0.00002 Torr | 1 Torr >> 1 Torr",
                          "1 atm | 1 atm",
                          "0.000001 mbar | 0.0000001 mbar",
                          "1 *10-6bar | 1 *10-6bar",
                          "0.0000002 Torr",
                          "0.0000001 mbar | 0.0000001 mbar | 0.0000001",
                          "0.0005 Pa | 0.0005 Pa",
                          "0.00002 Torr | 1 Torr",
                          "1 atm | 1 atm >> 1 atm",
                          "0.000001 mbar",
                          "0.0000048 Torr | 0.0000048 Torr",
                          "0.0000001 Torr",
                          "1 atm | 1 atm | 1 atm | 1 atm",
                          "0.005 Torr | 1 atm",
                          "nan >> nan | nan",
                          "0.000005 mbar | 0.000005 mbar",
                          "0.00001 Pa | 0.00001 Pa",
                          "0.000001 mbar | 0.000001 mbar",
                          "nan | nan",
                          "1 atm | 1 atm | 1 atm",
                          "nan | 0.000001 mbar",
                          "nan | 1 atm",
                          "0.000001 Torr",
                          "0.0075 Torr",
                          "1 atm >> 1 atm | 1 atm",
                          "nan |  E-6torr",
                          "1 atm | 0.000001 mbar",
                          "nan | 0.000009 mbar",
                          "0.00002 Torr",
                          "nan | 5 E-4mbar",
                          "1 Torr >> 1 Torr",
                          "nan | 0.0005 Pa | 0.0005 Pa",
                          "1 atm"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_pressure_total",
                "description": "The total pressure during each synthesis step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- Pressures can be stated in different units suited for different situations. Therefore, specify the unit. The preferred units are:\no atm, bar, mbar, mmHg, Pa, torr, psi\n- If a pressure is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 100 pa and not 80-120 pa.\nExample\n1 atm\n0.002 torr | 10000 Pa\n1 atm >> 1 atm | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1 Torr",
                          "1 atm >> 1 atm",
                          "0.0004023 Torr; 0.0046 Torr | 1 atm",
                          "0.001 Torr; 0.004 Torr | 1 atm",
                          "0.00002 Torr | 1 Torr >> 1 Torr",
                          "1 atm | 1 atm",
                          "0.000001 mbar | 0.0000001 mbar",
                          "1 *10-6bar | 1 *10-6bar",
                          "0.00002 Torr | 1 Torr",
                          "1 atm | 1 atm >> 1 atm",
                          "0.3 Torr",
                          "0.000001 mbar",
                          "1 atm | 1 atm | 1 atm | 1 atm",
                          "nan >> nan | nan",
                          "nan | 0.3 Torr",
                          "0.0065 Torr; 0.001 Torr",
                          "1 atm; 1 bar | 1 atm",
                          "0.000001 mbar | 0.000001 mbar",
                          "nan | nan",
                          "1 atm | 1 atm | 1 atm",
                          "nan | 1 atm",
                          "0.000001 Torr",
                          "1 atm >> 1 atm | 1 atm",
                          "1 atm | 0.000001 mbar",
                          "0.00002 Torr",
                          "1 Torr >> 1 Torr",
                          "0.0004545 Torr; 0.004545 Torr | 1 atm",
                          "1 atm",
                          "1 amt"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_pressure_partial",
                "description": "The partial pressures for the gases present during each reaction step.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the partial pressures and separate them with semicolons, as in (A; B). The list of partial pressures must line up with the gases they describe.\n- In cases where no gas mixtures are used, this field will be the same as the previous filed.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 0.99 atm; 0.01 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "25",
                          "30 >> 30",
                          "0 >> 0",
                          "15",
                          "48 | 48",
                          "0 | 0 >> 0",
                          "20 | 20",
                          "25 | 25",
                          "30 | 30",
                          "40",
                          "30; 30",
                          "50 | 50",
                          "20",
                          "nan >> nan | nan",
                          "50 | 50 | 50",
                          "30",
                          "35 | 0",
                          "nan | nan",
                          "30 | 30 | 30 | 30",
                          "0 | 0",
                          "55; nan",
                          "48",
                          "30 | 30 | 30",
                          "30 >> 30 | 30",
                          "35 | 35 >> 35",
                          "30 | 0",
                          "35 | 35"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_relative_humidity",
                "description": "The relative humidity during each deposition step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the relative humidity associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns\n- If the relative humidity for a step is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 35 and not 30-40.\nExample\n35\n0 | 20\n25 >> 25 | 0",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Ethanol | Ethanol",
                          "Unknown | IPA",
                          "Dichlorobenzene | none",
                          "Acetyl acetone; IPA | Water",
                          "Ethanol | anhydrous 1-butanol | Water >> Water; Ethanol >> Methanol; Water >> Water; Ethanol",
                          "1-butanol >> 1-butanol | Ethanol",
                          "Ethanol; distilled Water >> nitric acid >> NaOH aqueous solution >> distilled Water; HCl | distilled Water",
                          "IPA | Unknown | Unknown",
                          "IPA >> Water | Ethanol; Water",
                          "Ethanol | Ethanol | Water",
                          "none >> 1-Butanol; IPA | Terpineol",
                          "IPA | Chlorobenzene",
                          "Ethanol | Terpineol; 2-Methoxy ethanol",
                          "2-methoxyethanol | Chlorobenzene",
                          "Unknown | Unknown",
                          "none",
                          "Ethanol | P25; polyethylenglycol; OP; Water",
                          "Unknown >> Water >> Water >> Ethanol | Ethanol",
                          "n-butyl alcohol | n-butyl alcohol",
                          "IPA | Methanol >> Water >> Water",
                          "IPA >> Water | Ethanol",
                          "Water >> Water >> Ethanol",
                          "IPA | IPA",
                          "Chlorobenzene",
                          "1-Butanol; IPA | Etanol >> Water",
                          "Ethanol | Dichlorobenzene",
                          "1-Butanol | Ethanol | DMF",
                          "Ethanol",
                          "urea | hydrochloric acid | thioglycolic acid | SnCl2\u00b72H2O | DI water",
                          "2-methoxyethanol; Ethanolamine",
                          "1-butanol | Water",
                          "butanol | Unknown",
                          "butanol | Ethanol",
                          "Chloroform | IPA",
                          "Water | 1-butanol >> Water",
                          "IPA | TiO2-np",
                          "butanol | IPA | Water",
                          "Ethanol | Ethanol | Ethanol",
                          "Terpineol | Terpineol | none",
                          "Ethanol; distilled Water >> nitric acid",
                          "Water | Ethanol",
                          "Chlorobenzene | none | none",
                          "Chloroform",
                          "Chlorobenzene | Ethyl alcohol",
                          "Acetyl acetone; IPA | Ethanol",
                          "Ethanol >> Water",
                          "2-Butanol | Chlorobenzene",
                          "Water >> Water",
                          "Ethanol | Unknown | Unknown",
                          "1-butanol | Unknown",
                          "IPA | none",
                          "Chlorobenzene | IPA | none",
                          "Ethanol | Ethanol | Ethanol | none",
                          "o-xylene >> tetrabutylammonium hydroxide 30-hydrate",
                          "Ethanol; distilled Water >> nitric acid >> none >> distilled Water; HCl",
                          "2-methoxyethanol | Methanol",
                          "IPA; Ethanol | Terpineol | Unknown",
                          "Anh ethanol",
                          "Acetonitil; Acetyl aceton; IPA | Ethanol >> acetonitrile",
                          "Chloroform | Isopropyl alcochol",
                          "Ethanol | Ethanol | Ethanol | Unknown",
                          "Water | Unknown",
                          "2-methoxyethanol >> 2-Butanol | Chlorobenzene",
                          "IPA | Water",
                          "none | Terpineol",
                          "Chlorobenzene | Ethanol",
                          "ethonal | 2-methoxyethanol | terpineol | acetonitrile",
                          "Water >> Ethanol | a-Terpineol >> Ethanol",
                          "Unknown >> Water | Chlorobenzene",
                          "Dicholorobenzene | IPA",
                          "Water | Methanol",
                          "Methanol | Water",
                          "Ethanol | Ethanol | Unknown",
                          "Ethanol >> Ethanol",
                          "1-butanol  ethanol >> Water",
                          "IPA | Ethanol",
                          "Water | Water",
                          "Unknown | none | Unknown",
                          "Chloroform; IPA",
                          "1-butanol | Ethanol",
                          "Ethanol | Water",
                          "n-butylalcohol | Ethanol",
                          "1-Butanol >> 1-Butanol >> 1-Butanol | Acetylacetone; Polyethylene glycol; Triton X-100",
                          "Acetonitil; Acetyl aceton; IPA | Ethanol",
                          "Ethanol; HCl | Ethanol",
                          "Ethanol | Chlorobenzene",
                          "IPA >> Water | none",
                          "Dichlorobenzene",
                          "Acetyl acetone; Ethanol | Ethanol",
                          "1-Butanol; IPA | Terpineol",
                          "Unknown >> Water",
                          "Unknown",
                          "Ethanol >> Water | Ethanol",
                          "none | Ethanol",
                          "Ethanol | Ethanol >> acetonitrile",
                          "Chlorobenzene | none",
                          "Chlorobenzene; DCB | IPA",
                          "Water | Chlorobenzene",
                          "Ethanol >> Ethanol | IPA",
                          "n-butyl alcohol | Unknown",
                          "terpineol; Ethanol",
                          "1-Butanol",
                          "2-methoxyethanol | Water",
                          "Water2; Water | Chlorobenzene",
                          "Chlorobenzene; Octane | none",
                          "IPA >> IPA >> IPA | Unknown >> Unknown >> Unknown >> Unknown >> Unknown >> Unknown >> acetonitrile",
                          "IPA; Ethanol | Ethanol",
                          "none >> Water >> Water",
                          "IPA >> Ethanol",
                          "Water",
                          "Chlorobenzene | 2-methoxyethanol",
                          "Anisole; tetralin; TAA",
                          "Water | IPA",
                          "none | Chlorobenzene",
                          "none | none",
                          "Unknown | Ethanol",
                          "none | terpineol; Ethanol",
                          "1-butanol",
                          "Ethanol; Water",
                          "Ethanol | Methanol",
                          "1-butanol | Ethanol >> Water | Ethanol >> Water",
                          "1-Butanol; IPA | 1-Butanol; Ethylcellulose; Llauric acid; Terpineol",
                          "Chlorobenzene | Methanol",
                          "2-methoxyethanol",
                          "2-methoxyethanol >> 2-Butanol",
                          "IPA; Etanol | Etanol",
                          "Chlorobenzene | Unknown",
                          "n-butylalcohol | 2-methoxyethanol",
                          "IPA >> Water",
                          "n-butyl alcohol",
                          "Dichlorobenzene | IPA",
                          "IPA; Ethanol | none",
                          "n-butylalcohol",
                          "Ethanol | anhydrous 1-butanol",
                          "IPA | Unknown",
                          "Ethanol | Unknown",
                          "Ethanol | none",
                          "1-Butanol | Ethanol",
                          "Methanol; n-butanol; Chloroform",
                          "Chlorobenzene | Trifluorethanol",
                          "Chlorobenzene | Unknown | Unknown",
                          "Chlorobenzene | Water",
                          "Chlorobenzene | Chlorobenzene | Ethanol",
                          "Water2; Water",
                          "deionized water",
                          "n-butyl alcohol | Ethanol",
                          "IPA",
                          "n-butyl alcohol | n-butyl alcohol | Unknown",
                          "Ethanol | IPA",
                          "Chlorobenzene | IPA"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents",
                "description": "The solvents used in each deposition procedure for each layer in the stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvents associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the solvents in alphabetic order and separate them with semicolons, as in (A; B)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For non-liquid processes with no solvents, state the solvent as \u2018none\u2019\n- If the solvent is not known, state this as \u2018Unknown\u2019\n- Use common abbreviations when appropriate but spell it out when risk for confusion\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nDMF\nAcetonitil; Ethanol | Ethanol\nNone | Chlorobenzene\nH2O >> H2O | Methanol",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_mixing_ratios",
                "description": "The mixing ratios for mixed solvents\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent mixing ratios associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For pure solvents, state the mixing ratio as 1\n- For non-solvent processes, state the mixing ratio as 1\n- For unknown mixing ratios, state the mixing ratio as \u2018nan\u2019\n- For solvent mixtures, i.e. A and B, state the mixing ratios by using semicolons, as in (VA; VB)\n- The preferred metrics is the volume ratios. If that is not available, mass or mol ratios can be used instead, but it the analysis the mixing ratios will be assumed to be based on volumes.\nExample\n9; 0.6; 0.4 | 1\n1 >> 1 | 1\n9; 1 | 3; 2",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Sigma Aldrich | Unknown >> Unknown",
                          "Sigma Aldrich | Sigma Aldrich | Unknown >> Unknown; Sigma Aldrich >> Unknown; Unknown >> Unknown; Sigma Aldrich",
                          "Acros Organics; Sigma Aldrich",
                          "sigma aldrich",
                          "Sigma Aldrich; Sigma Aldrich | Unknown >> Unknown",
                          "Sigma Aldrich",
                          "Alfa Aesar",
                          "Sigma-Aldrich",
                          "Unknown",
                          "NanoPac >> Unknown | NanoPac",
                          "Millipore Sigma | Milllipore Sigma",
                          "Unknown | Unknown",
                          "Sigma Aldrich | Sigma Aldrich",
                          "Sigma Aldrich | Unknown >> Unknown | Unknown >> Unknown",
                          "Unknown >> Unknown | Unknown",
                          "Sigma Aldrich; Sigma Aldrich",
                          "Wako; Wako; Wako; Unknown",
                          "Unknown >> Unknown | Alfa Aesar",
                          "Sigma Aldrich | Fischer Scientific",
                          "Kanto Chemical Tokyo; Unknown",
                          "Unknown | Sigma Aldrich",
                          "Unknown >> Sigma Aldrich; Sigma Aldrich | Sigma Aldrich",
                          "NanoPac >> Unknown",
                          "Sigma Aldrich; Sigma Aldrich; Fisher | Sigma Aldrich >> Acros",
                          "Sigma Aldrich | Unknown",
                          "Sigma Aldrich; Sigma Aldrich | Sigma Aldrich",
                          "Unknown; Sigma Aldrich",
                          "Sigma Aldrich; Unknown >> Sigma Aldrich >> Sigma Aldrich >> Unknown; Sigma Aldrich | Unknown",
                          "Sigma Aldrich | Sigma Aldrich >> Sigma Aldrich",
                          "Kanto Chemical Tokyo; Unknown | Unknown",
                          "Alfa Aesar | Alddin",
                          "Sigma Aldrich | Unknown | Unknown",
                          "Sigma Aldrich | Sigma Aldrich | Unknown",
                          "Nacalai Tesque",
                          "Sigma Aldrich; Unknown >> Sigma Aldrich",
                          "Unknown | Wako Pure Chemical Industries; Nacalai Tesque; Sigma Aldrich",
                          "Unknown | Alfa Aesar",
                          "Unknown; Unknown | Unknown",
                          "Sigma Aldrich; Unknown >> Sigma Aldrich >> Unknown >> Unknown; Sigma Aldrich",
                          "Sinopharm Chemical Reagent Co. Ltd."
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_supplier",
                "description": "The suppliers of all the solvents.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For non-liquid processes with no solvents, mark the supplier as \u2018none\u2019\n- If the supplier for a solvent is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nSigma Aldrich\nSigma Aldrich; Fisher | Acros\nnone >> Sigma Aldrich; Sigma Aldrich | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Puris | Unknown >> Unknown | Unknown >> Unknown",
                          "Puris | Unknown >> Unknown",
                          "Puris | Puris | Unknown >> Unknown; Puris >> Unknown; Unknown >> Unknown; Puris",
                          "99.8%; 99.5% | Uknown >> Unknown",
                          "Technical | Puris",
                          "99.5% | 99.5%",
                          "Unknown",
                          "99.8% | 99.5%",
                          "99.8% | Unknown | Unknown",
                          "Unknown | Unknown",
                          "Unknown | Unknown | Unknown",
                          "Unknown >> Unknown | Unknown",
                          "0.998",
                          "99.8% >> Unknown | 99.8%",
                          "Puris",
                          "Puris; Puris",
                          "99.8 >> Unknown | 99.8%",
                          "99.8% >> Unknown",
                          "Pro analysis; Pro analysis; Pro analysis | Puris >> Pro analysis",
                          "Unknown; Puris",
                          "Puris | Puris",
                          "Anhydrous 99.8%"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_purity",
                "description": "The purity of the solvents used.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For non-liquid processes with no solvents, state the purity as \u2018none\u2019\n- If the purity for a solvent is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\nPuris; Puris| Tecnical\nnone >> Pro analysis; Pro analysis | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "nan | TiO2-np Anatase; TiO2-np Rutile",
                          "PEIE >> nTi-MOF | PCBM-60",
                          "TiO2-np; titanium diisopropoxide bis(acetylacetonate)",
                          "C60 | TDMASn",
                          "TiOx >> TiOx",
                          "Zinc Acetate dehydrate; ethanolamine | 3, 4, 5- trimethoxybenzoic acid",
                          "SnO2-np | PCBM-60; PEG",
                          "SnCl4",
                          "ICBA | BCP",
                          "SnO2-np | Choline Chloride",
                          "Titanium diisopropoxide bis(acetylacetonate) >> Titanium diisopropoxide bis(acetylacetonate) | CsAc",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2-np >> TiCl4 >> nan",
                          "TiCl4 | TiO2 paste",
                          "SnCl2",
                          "Titanium isopropoxide; diethanolamine | Titanium tetrabutanolate",
                          "SnO2-np",
                          "PCBM-60 | tetrakisdimethylamino-tin; H2O >> tetrakisdimethylamino-tin; H2O",
                          "Titanium diisopropoxide bis(acetylacetonate) | Titanium diisopropoxide bis(acetylacetonate) | (3-aminopropyl)trimethoxysilane (APTMS)",
                          "nan >> TiCl4 >> nan >> nan | TiO2-np",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2-np",
                          "Titanium(IV) isopropoxide >> nan >> nan >> NaOH >> nan | magnesium methoxide",
                          "Acetylacetone; Titanium isopropoxide | TiO2 paste NR30-D",
                          "Titanium isopropoxide (TTIP); HCl | TiO2 paste 18NRT",
                          "Zinc acetate dihydrate; KOH; ZnO",
                          "PCBM-60 | PFN",
                          "PEIE >> nTi-MOF",
                          "PCBM-60 | PEI",
                          "Zinc Acetate dehydrate; ethanolamine | 2-methoxybenzoic acid",
                          "PCBM | BCP",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2-np | ZrO-np",
                          "diethanolamine; Titanium isopropoxide; H2O",
                          "SnO2 | C60",
                          "Ti >> NaOH >> HCl",
                          "nan | TiO2-np",
                          "Zinc Acetate dehydrate; ethanolamine | 4-dimethoxybenzoic acid",
                          "TiO2 np",
                          "Titanium oxysulfate | PDI-glass",
                          "ZnO-np",
                          "SnCl2 | C60",
                          "Titanium diisopropoxide bis(acetylacetonate) >> Titanium diisopropoxide bis(acetylacetonate) >> Titanium diisopropoxide bis(acetylacetonate) | TiO2-np",
                          "PCBC6 | BCP",
                          "Titanium isopropoxide (TTIP); acetyl acetone >> NR30-D; ethanol",
                          "synthesized | synthesized | synthesized",
                          "tetrakisdimethylamino-tin; H2O",
                          "PCBM-60 | PEIE",
                          "Zinc Acetate dehydrate; ethanolamine",
                          "TiO2-np; Ethylcellulose",
                          "SnO2-np | 4-Bromobenzoic acid",
                          "nan | TiO2-np; Ethylcellulose",
                          "SnO2-np | ZnO-np",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2-np >> Li-TFSI",
                          "TPE-DPP-8 | C60 | BCP",
                          "SnCl5",
                          "HCl; Titanium isopropoxide | TiO2 paste | nan",
                          "TiO2 pellets | TTIP",
                          "SnO2",
                          "Titanium diisopropoxide bis(acetylacetonate) | Al2O3-np | Cu:NiO-np",
                          "Titanium diisopropoxide bis(acetylacetonate) | MgCl6 6H2O; SnCl2 2H2O | TiO2-np | ZrO2-np",
                          "Titanium isopropoxide (TTIP); HCl",
                          "TiO2-np; titanium diisopropoxide bis(acetylacetonate) | PPDI-F3N",
                          "PCBM-60 | Rhodamine 101 | LiF",
                          "B2F | C60 | BCP",
                          "Titanium diisopropoxide bis(acetylacetonate) | CaSc2O4:0.15Eu3+",
                          "titanium tetrachloride",
                          "Titanium diisopropoxide bis(acetylacetonate); TiO2-np",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2 paste NR30-D",
                          "SnO2-np | KOH",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2 paste NR30-D | SnCl4",
                          "Titanium diisopropoxide bis(acetylacetonate); TiO2-np; PCBM",
                          "Titanium isopropoxide | TiO2 paste",
                          "Acetylacetone; Titanium diisopropoxide bis(acetylacetonate) | TiO2 paste",
                          "Titanium diisopropoxide bis(acetylacetonate) | Titanium diisopropoxide bis(acetylacetonate)",
                          "Titanium isopropoxide | TiO2-np | Zn(NO3)2.6H2O >> nan >> Na2S >> nan",
                          "tantalum(V) ethoxide in titanium; Titanium diisopropoxide bis(acetylacetonate)",
                          "PCBM-70 | TiO2",
                          "TPE-DPP-6 | C60 | BCP",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2-np >> TiCl4",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2 paste | Al2O3 paste",
                          "Titanium Orthotitanate | TiO2-np",
                          "PCBM-60",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2 paste",
                          "SnO2 2H2O",
                          "nan | Al2O3-np",
                          "Titanium diisopropoxide bis(acetylacetonate)",
                          "Titanium diisopropoxide bis(acetylacetonate) >> TiCl4 | C60",
                          "Titanium isopropoxide (TTIP); HCl | C60 solution",
                          "nan | TiO2-np Rutile",
                          "PCBM-60 | Bphen",
                          "PEIE; C60",
                          "PCBM-60 | tetrakisdimethylamino-tin; H2O",
                          "SnCl2.H2O | ethanol | ( 3-aminopropyl)triethoxysilane (APTES) | IPA",
                          "Tetraisopropyl orthotitanate | TiO2-np",
                          "Titanium isopropoxide",
                          "tetrakisdimethylamino-tin; H2O >> tetrakisdimethylamino-tin; H2O",
                          "PCBM-70",
                          "SnO2-np | NaOH",
                          "Titanium tetrachloride",
                          "Titanium diisopropoxide bis(acetylacetonate); vanadium(V)oxytriethoxide | TiO2 powder; polyethylene glycol >> acetylacetone; triton X-100",
                          "C60 | LiF | BCP",
                          "HCl; Titanium isopropoxide | TiO2 paste",
                          "Titanium(IV) isopropoxide >> nan >> nan >> NaOH >> nan",
                          "Titanium diisopropoxide bis(acetylacetonate) | Polystyrene latex microsphere solution >> TiCl4 | TiO2-np >> TiCl4",
                          "synthesized | BCP",
                          "Tetra-nbutyl titanate; diethanolamine >> TiCl4 | TiO2 paste >> TiCl4 | ZrO2 paste",
                          "Titanium oxysulfate",
                          "C60",
                          "nan | TiO2 paste 18NRT",
                          "nan | TiO2-np | ZrO-np",
                          "Titanium(IV) isopropoxide >> nan",
                          "SnCl2 | PCBM-60",
                          "PCBM-60 | PFN-Br",
                          "nan | C60-SAM",
                          "HCl; TiCl3",
                          "C60; (RuCp*mes)2",
                          "PCBM-60 | Rhodamine 101",
                          "TiOx >> TiOx >> TiOx",
                          "TiCl4",
                          "PCBM-60 | AZO",
                          "Titanium diisopropoxide bis(2,4-pentanedionate) | In(NO3)3\u00b7xH2O",
                          "nan | TiO2-np >> TiCl4",
                          "TPE-DPP-16 | C60 | BCP",
                          "Titanium isopropoxide | Ethanol",
                          "PCBM | TBAOH",
                          "CdI2 | C60 | BCP",
                          "Titanium isopropoxide >> TiCl4 | TiO2-np",
                          "nan | TiO2-np Anatase",
                          "Titanium diisopropoxide bis(acetylacetonate) >> TiCl4 | TiO2-np",
                          "Zinc acetate; Tin Acetate",
                          "TiOx",
                          "Titanium isopropoxide >> TiCl4 | PCBA",
                          "Titanium tetrabutanolate",
                          "titanium diisopropoxide bis(acetylacetonate) | TiO2-np | ZrO2-np",
                          "Titanium diisopropoxide bis(acetylacetonate) >> TiCl4",
                          "Titanium isopropoxide; diethanolamine | TiO2-np >> TiCl4",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2-np | SbI3",
                          "TiO2-crystalline anatase np",
                          "Titanium isopropoxide (TTIP)",
                          "nan | nan",
                          "Tetrabutyl titanate | TiO2-np",
                          "TiO2-c | PCBM-61",
                          "nan | TiO2-np Anatase >> CdSO4; CS(NH2)2; NH3.H2O",
                          "SnCl2.H2O | ethanol",
                          "Titanium tetrachloride | TiO2-np",
                          "MgCl6 6H2O; SnCl2 2H2O | TiO2-np | ZrO2-np",
                          "TiCl4 | PCBM-60",
                          "1,4,5,8-Naphthalenetetracarboxylic dianhydride; (R)-(-)-aminoindane",
                          "Ti",
                          "Tetrabutyl titanate",
                          "Tetra-nbutyl titanate; diethanolamine | TiO2 paste NR30-D",
                          "COi8DFIC | BCP",
                          "Titanium isopropoxide >> TiCl4",
                          "TiO2 -np | Ti | ZrO2-np",
                          "C60 | BCP",
                          "Acetylacetone; IPA; tetrabutyl titanate; Triton X100 | TiO2 paste",
                          "NDI3HU-DTYM2 | BCP",
                          "TiO2-anatase >> Titanium diisopropoxide bis(acetylacetonate) | TiO2-np",
                          "titanium tetrachloride | TiO2-np >> titanium tetrachloride",
                          "Titanium diisopropoxide bis(acetylacetonate) >> Titanium diisopropoxide bis(acetylacetonate)",
                          "TiCl4 >> TiCl4",
                          "Titanium diisopropoxide bis(acetylacetonate); niobium(V)ethoxide | TiO2 powder; polyethylene glycol >> acetylacetone; triton X-100",
                          "SnO2-np | PCBM-60",
                          "PCBM-70 | Rhodamine 101",
                          "Titanium diisopropoxide bis(acetylacetonate) | SnCl4",
                          "PCBM | Bis-C60",
                          "PEIE",
                          "Nb | TiO2-np",
                          "Titanium isopropoxide | PCBM-60",
                          "titanium isopropoxide",
                          "ITIC | BCP",
                          "(DTYM-NDI-DTYA)2 | BCP",
                          "PCBM-60 | ZnO-np",
                          "TiO2-nw",
                          "Titanium isopropoxide | TiO2-np >> Li-TFSI",
                          "TiCl4 >> nan >> nan",
                          "Titanium diisopropoxide bis(2,4-pentanedionate)",
                          "Titanium diisopropoxide bis(acetylacetonate) >> Titanium diisopropoxide bis(acetylacetonate) | TiO2-np",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2 paste 18NR-T",
                          "MoS2-nanosheets",
                          "Titanium diisopropoxide bis(acetylacetonate); acetylacetone",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2 powder; polyethylene glycol >> acetylacetone; triton X-100",
                          "PCBM-60 | C60 | LiF",
                          "Tetrabutyl titanatein; HCl",
                          "Zinc Acetate dehydrate; ethanolamine | PCBM-60",
                          "TPE-DPP-12 | C60 | BCP",
                          "SnO2-np | ethylphosphonic acid",
                          "TiO2-anatase | TiO2-np",
                          "HCl; Titanium isopropoxide",
                          "Titanium isopropoxide | TiO2-np",
                          "IT-4f | BCP",
                          "Titanium diisopropoxide bis(acetylacetonate); tantalum(V)ethoxide | TiO2 powder; polyethylene glycol >> acetylacetone; triton X-100",
                          "tin chloride bihydrate",
                          "PCBM-61 | BCP",
                          "Titanium tetraisopropoxide; acetylacetone | TiO2-np | Carbon-QDs",
                          "Titanium diisopropoxide bis(acetylacetonate) | TiO2 paste | ZrO2 paste | carbon paste",
                          "Titanium diisopropoxide bis(acetylacetonate) >> titanium tetrachloride | TiO2-np",
                          "CdSO4; thiourea; NH4OH",
                          "HCl; Titanium isopropoxide | 2-mIm; Zn(NO3)2",
                          "PCBM | LiF",
                          "PCBM-60 | BCP",
                          "SnCl4 | 1\u2010butyl\u20103\u2010methylimidazolium bromide",
                          "Titanium tetraisopropoxide; acetylacetone | TiO2-np",
                          "PCBM | PNDI-2T | LiF",
                          "tetraamminezinc(II) hydroxide",
                          "HCl; Titanium isopropoxide | TiO2 paste 22NR-T Solaronix",
                          "Titanium isopropoxide | HCl | Ethanol",
                          "titanium (diisopropoxide) bis(2,4-pentanedionate) | TiO2-np"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds",
                "description": "The non-solvent precursor chemicals used in each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemicals associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several compounds, e.g. A and B, list the associated compounds in alphabetic order and separate them with semicolons, as in (A; B)\n- Note that also dopants/additives should be included\n- When several precursor solutions are made and mixed before the reaction step, it is the properties of the final mixture used in the reaction we here describe.\n- The number and order of layers and reaction steps must line up with the previous columns.\n- For gas phase reactions, state the reaction gases as if they were in solution.\n- For solid-state reactions, state the compounds as if they were in solution.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- If the compounds for a deposition step is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nTitanium diisopropoxide bis(acetylacetonate) | TiO2-np\nC60 | BCP\nTitanium diisopropoxide bis(acetylacetonate) | TiO2-np >> Li-TFSI",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Pegasus; Uppsala University",
                          "Unknown | Pegasus; Uppsala University >> Pegasus; Uppsala University",
                          "Sinopharm Chemical Reagent Co., Ltd; Macklin | Macklin | Shanghai MaterWin New Material",
                          "Fisher Scientific; Greatcell Solar",
                          "Xi'an p-OLED Corp. | Xi'an p-OLED Corp.",
                          "Unknown | Unknown",
                          "Sigma Aldrich | Sigma Aldrich",
                          "Sigma Aldrich | Dysole >> Sigma Aldrich >> Unknown",
                          "Solenne B.V. | Sigma-Aldrich",
                          "Sinopharm",
                          "Merck | Solaronix",
                          "ENB Korea >> Sigma Aldrich",
                          "Nichem Fine Technology | Nichem Fine Technology",
                          "Sigma Aldrich | Alfa-Aesar >> Junsei Chemicals | Dyesol >> Junsei Chemicals",
                          "Nichem Fine Technology Co. Ltd.",
                          "ENB Korea >> Sigma Aldrich >> ENB Korea",
                          "Nano-c",
                          "Sigma Aldrich | Dysole",
                          "Sigma Aldrich | Sigma Aldrich | Sigma Aldrich",
                          "nano-c; Unknown",
                          "Sinopharm | America Dye Sources",
                          "CBMM | Dyesol",
                          "Acros",
                          "1-Material Inc",
                          "Sigma Aldrich",
                          "Nichem",
                          "Solenne | Sigma Aldrich",
                          "Sigma Aldrich | Dysole >> Sigma Aldrich",
                          "Millipore Sigma | Milllipore Sigma",
                          "Sinopharm; Sinopharm",
                          "Han Feng Chemical | P-OLED",
                          "Unknown | Dyesol",
                          "Sigma Aldrich; Synthetized",
                          "Lab made",
                          "Unknown | Sigma Aldrich",
                          "Unknown >> Unknown | JGC Catalysts and Chemicals Ltd.",
                          "Unknown | Dyesole",
                          "Sigma Aldrich | Sinopharm Chemical Reagent Co., Ltd; Macklin | Macklin | Shanghai MaterWin New Material",
                          "Sigma Aldrich | Lab-made",
                          "Xi\u2019an Polymer Light Technology Corp",
                          "Unknown | Degussa",
                          "Sigma Aldrich >> Unknown",
                          "Sigma Aldrich | Unknown >> Sigma Aldrich",
                          "Sigma Aldrich; Solaronix; Solaronix",
                          "Alfa Aesar",
                          "Sigma Aldrich | Unknown >> Sinopharm",
                          "Xi'an Polymer Light Technology Corp. | Xi'an Polymer Light Technology Corp.",
                          "Unknown",
                          "Solaronix | Unknown",
                          "NanoPac >> synthsized",
                          "Unknown | Nichem Fine Technology",
                          "Nano-C | Alfa-Aesar",
                          "Pegasus; Uppsala University >> Pegasus; Uppsala University",
                          "Sigma Aldrich; Sigma Aldrich",
                          "Sigma Aldrich | Dyesol >> Junsei Chemicals",
                          "Aldrich; Aldrich | Nippon Aerosil; Nacalai Tesque >> Wako Pure Chemical; Wako Pure Chemical",
                          "Ossila | Unknown",
                          "Alfa-Aesar",
                          "1-Material",
                          "Aldrich | Nippon Aerosil; Nacalai Tesque >> Wako Pure Chemical; Wako Pure Chemical",
                          "Sigma Aldrich | SureChem",
                          "Unknown; Sigma Aldrich",
                          "Lab made | Xi'an Polymer Light Technology Corp. | Xi'an Polymer Light Technology Corp.",
                          "Aldrich; Solaronix Ti-Nanoxide N/SP",
                          "NanoPac >> Lab made | NanoPac",
                          "1-Material | 1-Material",
                          "Nano-C",
                          "Sigma Aldrich >> Unknown >> Sigma Aldrich >> Unknown",
                          "Sigma Aldrich | Greatcell",
                          "Unknown | Dyesole | Solaronix",
                          "Unknown | Pegasus; Uppsala University",
                          "Solarmer Material | 1-Material",
                          "Sigma Aldrich | Solaronix PST-18NR | Sigma Aldrich | Borun New Material Technology",
                          "Unknown | 1-Materials",
                          "Luminescence Technology Corp",
                          "Luminescence Technology Corp | Xi\u2019An Polymer Light Technology Corp",
                          "Sigma Aldrich >> ENB Korea",
                          "Alfa Aesar >> Unknown >> Unknown",
                          "Sigma Aldrich | Dyesol",
                          "Unknown | Sigma Aldrich; Degussa",
                          "ITASCO >> Unknown >> Unknown",
                          "Alfa-Aesar | Lab made",
                          "Sigma Aldrich >> Unknown >> Sigma Aldrich >> Unknown | Sigma Aldrich",
                          "Frontier Carbon Corp. | Tokyo Chemical Industry",
                          "Sigma Aldrich | Dyesol | Sigma Aldrich >> Unknown >> Sigma Aldrich >> Unknown",
                          "Unknown | NanoCleantech",
                          "Sigma Aldrich | Aerosil",
                          "America Dye Sources"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds_supplier",
                "description": "The suppliers of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemical suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For gas phase reactions, state the suppliers for the gases or the targets/evaporation sources that are evaporated/sputtered/etc.\n- For solid state reactions, state the suppliers for the compounds in the same way.\n- For reaction steps involving only pure solvents, state the supplier as \u2018none\u2019 (as that that is entered in a separate filed)\n- For chemicals that are lab made, state that as \u201cLab made\u201d or \u201cLab made (name of lab)\u201d\n- If the supplier for a compound is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nDysole; Sigma Aldrich; Dyenamo; Sigma Aldrich\nSigma Aldrich; Fisher | Acros\nLab made (EPFL) | Sigma Aldrich >> none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Pro analysis",
                          "Pro analysis; Unknown",
                          "99%; 99.99%",
                          "Puris | Unknown >> Puris | Unknown >> Puris",
                          "0.97",
                          "98%; 99.8%",
                          "99.99% >> Unknown",
                          "Unknown >> Unknown >> Unknown >> Unknown | Unknown",
                          "Unknown",
                          "Unknown | Unknown",
                          "Puris | Unknown",
                          "Unknown; 97%",
                          "Pro analysis; Puris | Puris >> Puris",
                          "Pro analysis | Tecnical >> Pro analysis",
                          "0.98",
                          "Unknown >> Unknown | Unknown",
                          "Puris",
                          "0.999",
                          "Technical | Unknown",
                          "96% | Unknown",
                          "Unknown >> Unknown >> Unknown >> Unknown",
                          "Unknown >> Unknown",
                          "99.5% | 99%",
                          "99.99% >> Unknown | Unknown",
                          "Puris | Pro-analysis",
                          "Unknown | 99%",
                          "99.9% | Unkown",
                          "Puris | Unknown >> Puris",
                          "Pro analysis | Puris >> Puris",
                          "Unknown | Unknown | Puris >> Unknown >> Puris >> Unknown",
                          "Unknown | 99.8%"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds_purity",
                "description": "The purity of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the compound purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, i.e. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019 (as that is stated in another field)\n- If the purity for a compound is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\n99.999; Puris| Tecnical\nUnknown >> Pro analysis; Pro analysis | none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.05 M",
                          "0.15 M | 33.33 wt%",
                          "15 wt%",
                          "16 mg/ml",
                          "15 mg/ml | nan",
                          "0.42 M",
                          "120 mg/ml; 640 mg/ml",
                          "25 mg/ml | nan",
                          "20 mg/ml; nan",
                          "52 wt% | 208 mg/ml; 14 mg/ml | 20 wt% | 20 wt%",
                          "0.15 M | 0.20 M",
                          "20 mg/ml | 30 mg/ml",
                          "nan | nan >> 80 mM",
                          "8 mg/ml | nan",
                          "20 mg/ml | 1 mg/ml",
                          "15 mg/ml | 1 mg/ml",
                          "2 mg/ml | 0.6 mg/ml | nan",
                          "164 mg/ml; 50 mg/ml",
                          "1 M; 0.5 M",
                          "14 vol%; 20 vol%",
                          "3 mg/ml | nan",
                          "0.2 M",
                          "nan >> 0.04 M >> nan >> nan | 20 wt%",
                          "0.15 M | 0.15 M",
                          "13 wt% | 20 wt%",
                          "2.564 vol%; 25 wt%; nan; nan",
                          "10 wt% | 20 wt%",
                          "5 mg/ml",
                          "12 wt% | 20 wt%",
                          "208 mg/ml; 14 mg/ml | 20 wt% | 20 wt%",
                          "20 mg/ml | nan | nan",
                          "nan | nan >> 20 mM",
                          "2.5 wt%; 20 wt%",
                          "5 mg/ml | nan",
                          "0.03 M",
                          "15 mg/ml; 2 mg/ml",
                          "0.254 M; 0.02 M; 0.1 mg/ml",
                          "0.15 M; nan",
                          "2 mg/ml | nan | nan",
                          "0.16 M",
                          "33 wt% | 10 mg/ml; 10 mg/ml",
                          "nan | nan >> 100 mM",
                          "20 wt%",
                          "0.2 M; 2 M | 150 mg/ml",
                          "25 wt%; 28 wt%",
                          "400 mM >> nan >> nan",
                          "75 wt% | nan",
                          "0.15 M | 7.5 mg/ml",
                          "20 mg/ml | 0.1 wt%",
                          "11 wt% | 20 wt%",
                          "20 mM; 150 mg/ml",
                          "0.2 M | nan",
                          "200 mM >> nan >> nan",
                          "2 vol%; 15 vol%",
                          "15.38 vol%",
                          "20 mg/ml | 0.2 %",
                          "nan | 10 mg/ml",
                          "0.286 vol%; 0.2 wt%",
                          "0.3 M; 10 mg/ml",
                          "nan; 0.9 vol%",
                          "20 mg/ml; 0.5 mg/ml",
                          "0.3 M",
                          "nan | 2.0 M",
                          "1.8 wt% | nan",
                          "20 mg/ml",
                          "40 mg/ml | 0.5 mg/ml",
                          "8.6 vol%; 5.71 vol% >> 12 wt%",
                          "14 wt% | 20 wt%",
                          "6 vol% | 125 mg/ml",
                          "0.2 M | 15 mg/ml",
                          "6 vol% | 150 mg/ml >> 10 mg/ml",
                          "0.355 vol%; 6.4 vol%",
                          "4 wt%",
                          "46.7 vol% >> nan",
                          "17 wt% | 20 wt%",
                          "8 mg/ml",
                          "2 wt%",
                          "100 mg/ml; 2.8 mg/ml | 10 mg/ml",
                          "7.5 vol% | 28 %",
                          "0.08",
                          "16 wt% | 20 wt%",
                          "2 wt% | 1 mg/ml",
                          "20 mg/ml | nan | 0.5 mg/ml",
                          "nan | nan >> 0.1 M",
                          "nan | 150 mg/ml",
                          "0.3 M >> 40 mM | nan",
                          "20",
                          "0.15",
                          "40 mg/ml | 11.11 vol%",
                          "20 mM >> 0.11 mg/ml >> 20 mM",
                          "0.04 M | 20 mg/ml",
                          "nan | nan | 5 mM | nan",
                          "15 wt% | 20 wt%",
                          "100 mM >> nan >> nan",
                          "2.5 wt%",
                          "1.25 vol% | nan | nan",
                          "20 wt% | 20 wt%",
                          "46.7 vol% >> nan >> 20 mg/ml >> nan | nan",
                          "nan | 28.6 vol% >> 0.02 M",
                          "0.3 M >> 40 mM",
                          "20 mg/ml | 0.2 wt%",
                          "5.26 vol% >> 4.2 vol%",
                          "10 vol%",
                          "nan | 4 wt%",
                          "6 vol% | 10 wt% | 1 mM",
                          "40 mM",
                          "0.0267",
                          "0.3 M >> 40 mM | 14 wt%",
                          "2.2 vol% >> 0.22 vol%",
                          "2.67 wt% | 20 mM",
                          "10 mg/ml",
                          "nan | 0.1 g/0.8mL >> 0.1 M",
                          "nan | 0.04 M",
                          "0.2 M | 5 mg/ml",
                          "75 wt% | 25 wt% >> 0.05 M >> nan",
                          "nan >> nan | 22.2 wt%",
                          "20 mg/ml | 40 mg/ml",
                          "0.15 M | nan",
                          "nan >> 1 M >> 0.4 M",
                          "nan | 22.22 wt%",
                          "0.2 M | 10 mg/ml",
                          "20 mg/ml >> 0.7 mg/ml",
                          "18 mg/ml",
                          "nan | 22.2 wt%",
                          "nan | 1.5 M",
                          "2 vol%; 15 vol% | 22 mg/ml; 9.9 mg/ml",
                          "0.125 M >> 0.025 M | 0.1 mg/ml",
                          "20 mg/ml | 1.5 mg/ml",
                          "0.15 M | 130 mg/ml >> 0.02 M",
                          "nan | 0.12 g/ml | 0.2 M >> nan >> 0.1 M >> nan",
                          "0.15 M",
                          "2.4 vol%",
                          "nan | nan >> 40 mM",
                          "13.3 mg/ml; 3.6 vol%; 0.098 vol%",
                          "20 mg/ml | 2.5 wt%",
                          "15 wt% | 0.5 mg/ml",
                          "20 mg/ml; 0.8 mg/ml",
                          "14.6 vol%; 1 M; 22.2 wt%",
                          "nan | 41.6 wt% | nan",
                          "20 mg/ml | 4.61 mg/ml",
                          "33 wt% | 10 mg/ml",
                          "0.3 M | 33 vol% >> 0.04 M | 28.6 wt% >> 0.04 M",
                          "0.3 M | 28.6 wt% >> 0.04 M",
                          "18 wt% | 20 wt%",
                          "0.7 vol%; 8 vol% | 1.8 wt%",
                          "0.15 M | 15.15 mg/ml >> 0.02 M",
                          "0.5 M; 0.5 M | nan",
                          "nan | 0.5 M",
                          "0.15 M | 0.3 M | nan",
                          "0.15 M >> 0.3 M | 60 mg/ml",
                          "10 vol% | nan",
                          "2.25 vol%",
                          "nan | 14.3 wt%",
                          "0.1 M",
                          "22 wt% | 20 wt%",
                          "2 mg/ml",
                          "11.4 wt%",
                          "nan | nan",
                          "10 mg/ml | 0.5 mg/ml",
                          "164 mg/ml; 50 mg/ml | 0.7 mg/ml",
                          "30 mg/ml | 0.5 mg/ml",
                          "33 wt%",
                          "0.04 M",
                          "15 mg/ml | 2 mg/ml",
                          "15 wt% | 1 mg/ml",
                          "10 mg/ml | nan",
                          "20 mg/ml | 0.6 mg/ml",
                          "5.3 mg/ml; nan",
                          "30 mg/ml",
                          "16 wt% | 6.67 wt% | 0.5 wt%",
                          "25 wt%28wt%",
                          "23.6 mg/ml; 22.77 mg/ml; 6 mg/ml",
                          "0.15 M | 2 :7wt",
                          "20 mg/ml | 5 mg/ml",
                          "0.4 wt% | nan",
                          "20 mg/ml | 0.5 mg/ml",
                          "30 mg/ml | nan",
                          "46.7 vol% >> nan >> 20 mg/ml >> nan",
                          "nan | 22 wt%",
                          "250 mg/ml",
                          "nan | 1.0 M",
                          "nan >> 0.15 M | nan",
                          "1.43 mg/ml | nan",
                          "nan | 0.08 wt%",
                          "1.5 mM; 1.5 mM; 30 %",
                          "5.3 mg/ml; nan | 0.1 mg/ml",
                          "20 mg/ml | nan",
                          "0.15 M >> 0.30 M",
                          "5 mol%; 10 vol%",
                          "2.67 wt%",
                          "nan | 0.25 mg/ml",
                          "0.15 M | 10 vol%",
                          "0.254 M; 0.02 M",
                          "nan | 4 mg/ml",
                          "10 vol% >> 10 vol%",
                          "0.15 M >> 0.3 M >> 0.3 M | nan",
                          "0.4 wt%",
                          "200 mM | 22 wt%",
                          "0.2 M | 0.066 wt%",
                          "0.5 M; 0.5 | nan >> 0.04",
                          "0.15 M | 0.10 M",
                          "0.2 wt% >> 8 mg/ml | nan",
                          "19 wt% | 20 wt%",
                          "0.15 M | 0.05 M",
                          "0.15 M; 20 wt%; 0.0002 M",
                          "0.15 M; 20 wt%",
                          "2 M; 16.67 wt%",
                          "20 mg/ml | 20 mg/ml",
                          "nan; 60 mg/ml",
                          "6 mg/ml",
                          "15 mg/ml",
                          "0.2 M | 7.5 mg/ml",
                          "7 mg/ml | nan",
                          "nan; 4 mg/ml",
                          "100 mg/ml; 2.8 mg/ml",
                          "3 mol%; 10 vol%",
                          "10 wt% | 0.8 mg/ml",
                          "10 vol% >> 10 vol% | 0.1 M",
                          "3 wt%",
                          "200 mM",
                          "10 vol% | 25 wt%",
                          "10 vol% | 18 wt%",
                          "1 mol%; 10 vol%",
                          "6 vol%; 0.67 vol%",
                          "0.15 M | 0.3 M",
                          "22 mg/ml",
                          "21 wt% | 20 wt%",
                          "nan | 0.7 mh/ml",
                          "20 mg/ml | 10 mg/ml",
                          "30 mg/ml | 0.1 wt%",
                          "300 mM >> nan >> nan",
                          "nan | 0.12 g/ml",
                          "0.2 wt% >> 8 mg/ml",
                          "nan | 0.2 M",
                          "1 M"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_concentrations",
                "description": "The concentration of the non-solvent precursor chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the concentrations associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated concentrations and separate them with semicolons, as in (A; B)\n- The order of the compounds must be the same as in the previous filed.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used. When possible, use one of the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml, wt%, mol%, vol%, ppt, ppm, ppb\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n0.2 M; 0.15 M| 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "1.0 | Unknown",
                          "54.35",
                          "0.9 >> 0.1 >> 15.0",
                          "10.0",
                          "125.0; 65.0; Unknown",
                          "Unknown >> Unknown >> Unknown >> Unknown | Unknown",
                          "Unknown",
                          "7.0",
                          "250.0 | Unknown",
                          "Unknown | Unknown",
                          "100.0; 100.0",
                          "8.0",
                          "Unknown >> Unknown | Unknown",
                          "10.2",
                          "20.0 | 30.0",
                          "250.0",
                          "0.369; 0.07 | Unknown",
                          "50.0 | Unknown | Unknown | Unknown",
                          "50.0 | Unknown | Unknown",
                          "Unknown | 0.1",
                          "10.0 | 0.05 >> 0.1",
                          "2.2; 2.2; 2.8",
                          "0.15 | 0.3",
                          "Unknown >> Unknown >> Unknown >> Unknown",
                          "Unknown >> Unknown",
                          "0.6; 0.4 >> 0.04",
                          "30.0 | Unknown",
                          "1.0",
                          "1.0 | 1.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_volumes",
                "description": "The volume of the reaction solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the volumes associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The volumes refer the volumes used, not the volume of the stock solutions. Thus if 0.15 ml of a solution is spin-coated, the volume is 0.15 ml\n- For reaction steps without solvents, state the volume as \u2018nan\u2019\n- When volumes are unknown, state that as \u2018nan\u2019\nExample\n0.1\n0.1 >> 0.05 | 0.05\nnan | 0.15",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "0.0 | Unknown",
                          "0.0 | 0.0",
                          "0.0 | 1.0",
                          "10.0",
                          "0.5 | Unknown | Unknown",
                          "Unknown >> Unknown >> Unknown >> Unknown | Unknown",
                          "Unknown",
                          "Unknown | Unknown",
                          "0.5 | Unknown | Unknown | Unknown",
                          "8.0",
                          "Unknown >> Unknown | Unknown",
                          "6.0",
                          "0.0 | 6.0",
                          "Unknown >> Unknown >> Unknown | 12.0",
                          "30.0",
                          "Unknown >> Unknown >> Unknown >> Unknown",
                          "Unknown >> Unknown",
                          "Unknown | Unknown >> 0.66",
                          "1.0",
                          "0.5 | 1000.0 >> 1000.0",
                          "4.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_age",
                "description": "The age of the solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the age of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- As a general guideline, the age refers to the time from the preparation of the final precursor mixture to the reaction procedure.\n- When the age of a solution is not known, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state this as \u2018nan\u2019\n- For solutions that is stored a long time, an order of magnitude estimate is adequate.\nExample\n2\n0.25 |1000 >> 10000\nnan | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown | 300",
                          "",
                          "25",
                          "25 | 25 >> 70 >> 25",
                          "70 >> 25 >> 25",
                          "40; ",
                          "500 | 25",
                          "70 | 25 >> 70",
                          "Unknown | Unknown >> Unknown | Unknown >> 70",
                          "70",
                          "40;  >> 40; ",
                          "25 >> 70 >> 25 >> 25 | 25",
                          "80",
                          "25 | 25",
                          "Unknown",
                          "Unknown | Unknown",
                          "100",
                          "25 | 25 >> 25",
                          "25 | 25 >> 70",
                          "77",
                          "25 | Unknown | Unknown",
                          "70 | Unknown",
                          "Unknown >> Unknown | Unknown",
                          "Unknown >> 220 >> Unknown",
                          "Unknown | Unknown >> 70",
                          "75",
                          "Unknown | 200",
                          "25 | 25 >> 90",
                          "25 | 80",
                          "60",
                          " | 40; ",
                          "25 | 70; 25",
                          "150 | Unknown",
                          "25 >> 70",
                          "Unknown >> 80",
                          "60 | Unknown",
                          "100 | 25",
                          "Unknown | 105",
                          "Unknown >> 80; 450 >> 150 >> 600 | Unknown",
                          "Unknown >> 80; 450",
                          "25 | Unknown | Unknown | Unknown",
                          "Unknown | 450",
                          "450",
                          " | 40;  >> 40; ",
                          "230 | Unknown",
                          "25 >> 70 | 25",
                          "25 >> 70 | 25 | 25",
                          "Unknown >> 80; 450 >> 150 >> 600",
                          "200 | Unknown",
                          "25 >> 70 | Unknown",
                          "450 | Unknown",
                          "25 | Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_temperature",
                "description": "The temperature of the reaction solutions.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a reaction solution undergoes a temperature program, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons, e.g. 25; 100\n- When the temperature of a solution is unknown, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state the temperature of the gas or the solid if that make sense. Otherwise state this as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume an undetermined room temperature to be 25\nExample\n25\n100; 50 | 25\nnan | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          " | 60",
                          "450 >> 70 | 25",
                          "25",
                          "",
                          "25 | 25 >> 70 >> 25",
                          "300",
                          "70 >> 25 >> 25",
                          "60 | 25",
                          "500 | 25",
                          "70 | 25 >> 70",
                          "70",
                          "25 >> 70 >> 25 >> 25 | 25",
                          "80",
                          "25 | 25",
                          "450 | 25 >> 25",
                          "Unknown",
                          "Unknown | Unknown",
                          "100",
                          "500 | 25 >> 25",
                          "25 | 25 >> 70",
                          "500",
                          "450 | 95",
                          "150",
                          "77",
                          "70 | Unknown",
                          "450 | 25",
                          "450 | 25 | 25",
                          "Unknown >> 220 >> Unknown",
                          "25 | 25 | 25 | 25",
                          "60",
                          "25 | 25 >> 90",
                          "70 | 25",
                          "25 >> 70",
                          "90",
                          "Unknown | Unknown >> Unknown | Unknown >> Unknown",
                          "100 | 25",
                          " | 90 >> 90",
                          "300 >> Unknown | Unknown",
                          "450 | Unknown | Unknown",
                          "450",
                          "Unknown | Unknown >> Unknown",
                          "25 | 25 | 25",
                          " | 90",
                          "90 >> 90",
                          "455 >> Unknown",
                          "500; 25",
                          "455 | 25",
                          "500 | 25 | 25",
                          "455 | Unknown",
                          "Unknown | 120",
                          "15 | 15",
                          "25 | Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_substrate_temperature",
                "description": "The temperature of the substrate.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the substrates (i.e. the last deposited layer) associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The temperature of the substrate refers to the temperature when the deposition of the layer is occurring.\n- If a substrate undergoes a temperature program before the deposition, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- When the temperature of a substrate is not known, state that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume that an undetermined room temperature is 25\nExample\n125; 325; 375; 450 | 25 >> 25\n100\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "80 | Unknown",
                          "100 >> 500 | 70",
                          "25",
                          " | 60",
                          "125 >> 500 | 500",
                          "",
                          "25 | 150 >> 500",
                          "450 | 510",
                          "500 >> 500 >> 500 | 500 >> 500 >> 500 >> 500 >> 500 >> 500 >> 500",
                          "500 | 25",
                          "80.0 | Unknown",
                          "180",
                          "135; 500 | 500",
                          "400",
                          "450 | 95; 350",
                          "Unknown | 125; 325; 375; 450; 500",
                          "Unknown | Unknown",
                          "130",
                          "450 | 150",
                          "450 | 125; 375; 450 >> 450",
                          "135; 500",
                          "120 | 450",
                          "125; 500 | Unknown",
                          "Unknown | 100",
                          "160; 500",
                          "150 >> 180",
                          "25 | 80",
                          "75",
                          "500 | 500 >> 500",
                          "420",
                          "25 | 150",
                          "125 >> 500 | 125 >> 500",
                          "100 | 25",
                          "450 | 100 >> 500",
                          "500 | 70; 500",
                          "450; 500 | 20 >> 500 >> 20",
                          "500 | 150; 500",
                          "455 | 100 >> 500",
                          "90 >> 90",
                          "100; 180",
                          "400 | 400",
                          "125 | 500 >> 25; 500",
                          "501",
                          "140",
                          "Unknown | 500",
                          "130 | 70",
                          "410",
                          "450 | 125; 250; 350; 450; 500",
                          "480 | 500",
                          "160",
                          "125 >> 500 | 125 >> 500 | 125 >> 500",
                          " | 90 >> 90",
                          "100 >> 500 | 100 >> 500",
                          "550",
                          "450 | 100 >> 450",
                          "450 | 25 | 500",
                          "500 | 550",
                          "450 | 125; 500",
                          "500 | 70 >> 70 | 500 >> 500",
                          "150 >> 500",
                          "510 >> 70 >> 510 | 510",
                          "25 | 325; 375; 450; 500",
                          "70",
                          "125 >> 450 | Unknown",
                          "150 | 500 | 500 | 500",
                          "550 | 550 >> 550",
                          "500 | 125; 500",
                          "500 | 550 >> 500",
                          "200 | 25",
                          "500 | 450 >> 450",
                          "Unknown | 125 >> 500",
                          "100",
                          "500 | 550 | Unknown >> Unknown >> Unknown >> 450",
                          "100 >> 500 | 100 >> 125 >> 325 >> 375 >> 450 >> 500",
                          "455 >> 100; 500",
                          "500",
                          "150 | 500",
                          "90 | 50",
                          "500 >> 70 >> 500 | 500",
                          "165",
                          "125 | 125; 500 | 25",
                          "500 | Unknown",
                          "125; 125",
                          "100; 150; 185",
                          "125; 150 >> 150; 190",
                          "20",
                          "150 >> 550",
                          "25 >> 125; 500 | Unknown",
                          "450 | 450 >> 150",
                          "120 | 120",
                          "450 | 120; 500",
                          "120 >> 500 | 120 >> 500",
                          "150 | 25",
                          "Unknown | 180",
                          "300 >> 500 | 550",
                          "60 | Unknown",
                          "120 >> 500",
                          "25 | 25 | 25",
                          "250 | 250 | 250",
                          "150 >> 290 >> 200 | 80",
                          "125 | 125; 550 >> 25; 500",
                          "550 | 300",
                          "450 | 500 | 500",
                          "120 >> 500 | 500",
                          "125 | 500 >> 25 >> 500",
                          "501 | 450",
                          "25 >> 25 >> 500",
                          "125 >> 500 >> 500",
                          "125 >> 450 | 500",
                          "500 | 70",
                          "100; 185",
                          "120 | 500",
                          "455 | 100; 500",
                          "25 | 25",
                          "550 | 150",
                          "Unknown",
                          "125 >> 450 | 125 >> 450",
                          "500 | 125 >> 500",
                          "500 >> 70 | 100; 500 >> 70 | 500",
                          "500 | 500 | 25",
                          "150",
                          "500 | 450",
                          "500 | 500 | 450",
                          "25 | 480",
                          "500 | 500",
                          "500 | 25 | 400",
                          "100 | 100",
                          "125 | 500",
                          "500 >> 500 | 500 | 25",
                          "510 >> 25 >> 25 >> 510 | 510",
                          "150 | 120",
                          "200 | 150",
                          "25 | 125 >> 500",
                          "90",
                          "180 >> 400 >> 450",
                          "500 | 120",
                          "25; 500",
                          "25 >> 500 | 100; 500",
                          "450 | 500 | 190",
                          "Unknown | 450",
                          "500 | 110 >> 500",
                          "450",
                          "100 | 80",
                          "80; 500 | 500",
                          "150 | 150",
                          "500; 25",
                          "118 | 500 >> 500",
                          "480",
                          "150 >> 290 >> 200",
                          "125 >> 125 >> 125; 500 | 120; 500",
                          "300 | 500 | 400 | 100",
                          "100 | Unknown",
                          "185",
                          "150; 500",
                          "70 >> 180",
                          "450 | 100",
                          "25 | 125 >> 500 | 150 >> 500",
                          "125 | 125; 500",
                          "25 | 0",
                          "100; 100",
                          "165 | 100",
                          "500 | 120 >> 500",
                          "300",
                          "150 | 100",
                          "120 >> 500 | 150",
                          "25 >> 25 >> 100",
                          "450 | 500",
                          "150 >> 500 | 125 >> 500",
                          "25 | 500",
                          "80",
                          "170",
                          "200",
                          "Unknown | 70; 500",
                          "125 | 100; 550",
                          "500 | 500 >> 450",
                          "450 | 500 >> 450",
                          "450 | 450",
                          "120",
                          "90 | Unknown",
                          "500 >> 500 | Unknown",
                          "110",
                          "500 | 50",
                          "25 | 500 | 500",
                          "450 >> 450",
                          "500 | 500 | 500",
                          "25 | 500 >> 25; 500",
                          "450 | 450 | Unknown",
                          "80.0",
                          "60",
                          "510 | 540",
                          "150 | Unknown",
                          "125 >> 450",
                          "450 | 500 | 400",
                          "410 | 400",
                          " | 90",
                          "150 | 450 >> 500",
                          "100; 500",
                          "450 | 125 >> 500",
                          "100; 150; 185 | 100",
                          "450 | 450 >> 500",
                          "100; 150; 185 | 25",
                          "450 | 450 | 450"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_temperature",
                "description": "The temperatures of the thermal annealing program associated with depositing the layers\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing temperatures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- If no thermal annealing is occurring after the deposition of a layer, state that by stating the room temperature (assumed to 25\u00b0C if not further specified)\n- If the thermal annealing program is not known, state that by \u2018nan\u2019\nExample\n450 | 125; 325; 375; 450 >> 125; 325; 375; 450\n50 | 25\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "5.0 | 30.0",
                          "15.0 | 10.0",
                          "90.0 | 90.0 >> 30.0",
                          "30.0; 30.0 | 30.0",
                          "Unknown >> Unknown >> 60.0",
                          "5.0 | 5.0; 60.0",
                          "60.0; 60.0; 60.0 | Unknown",
                          "Unknown | Unknown | 40.0",
                          "60.0 | 60.0",
                          "30.0 | 10.0; 30.0",
                          "5.0 | 5.0; 60.0 | Unknown",
                          "60.0",
                          "5.0",
                          "0.0 | 30.0 | 30.0",
                          "120.0",
                          "45.0 | 5.0; 5.0; 30.0 >> 30.0",
                          "180.0",
                          "Unknown | Unknown",
                          "45.0",
                          "120.0 | 30.0 >> 30.0",
                          "Unknown | 2.0",
                          "210.0 >> 60.0 >> 60.0",
                          "5.0 >> 5.0 >> 5.0; 30.0 | 5.0; 30.0",
                          "20.0 >> 60.0 | 30.0 >> 5.0 >> 5.0 >> 5.0 >> 5.0 >> 15.0 >> 15.0",
                          "20.0; 10.0",
                          "10.0 | 180.0",
                          "Unknown | 5.0; 5.0; 5.0; 5.0",
                          "30.0 | 30.0 | Unknown",
                          "10.0 >> 30.0 | 30.0",
                          "10.0 | 10.0",
                          "30.0 | 30.0 | 1440.0",
                          "2.0",
                          "60.0 | 15.0; 60.0",
                          "40.0 >> 10.0; 30.0",
                          "5.0 | Unknown",
                          "Unknown >> 20.0 | 30.0",
                          "5.0 >> 30.0",
                          "30.0 | 30.0; Unknown",
                          "15.0 | 15.0",
                          "5.0 | 60.0 >> Unknown >> 60.0",
                          "90.0 | 5.0 >> 5.0 | 90.0 >> 30.0",
                          "5.0 >> 30.0 | 5.0 >> 30.0 | 5.0 >> 30.0",
                          "60.0 | 60.0 | 60.0",
                          "2.0 | 2.0",
                          "4.0",
                          "30.0 | 0.0",
                          "40.0 | 10.0 >> 30.0",
                          "60.0 | 10.0",
                          "53.0 | 35.0",
                          "30.0 | 30.0 | 60.0",
                          "2.0 >> 30.0 >> 30.0",
                          "60.0 | Unknown",
                          "120.0 | 10.0 >> 30.0",
                          "5.0 | 0.0",
                          "10.0",
                          "Unknown >> 5.0; 30.0 | Unknown",
                          "15.0 >> 30.0",
                          "30.0 | 30.0",
                          "25.0 | 5.0 >> 20.0",
                          "10.0 >> 10.0 >> 10.0 | 5.0",
                          "15.0 | 30.0",
                          "12.0",
                          "30.0 >> 40.0 >> 30.0 | 30.0",
                          "25.0 | 25.0",
                          "5.0 | 5.0; 120.0",
                          "Unknown | Unknown | Unknown",
                          "10.0 >> 60.0 | 60.0",
                          "30.0 >> Unknown >> Unknown >> 30.0 | 30.0",
                          "5.0 >> 30.0 | Unknown",
                          "10.0 >> 10.0 >> 10.0",
                          "Unknown | Unknown; 20.0",
                          "Unknown; Unknown",
                          "5.0; 30.0 | Unknown",
                          "2.0 | 30.0",
                          "Unknown >> 30.0 | 5.0; 30.0",
                          "5.0 >> 60.0 | 60.0",
                          "40.0 | 10.0; 30.0",
                          "10.0 >> 60.0",
                          "25.0 | 0.0",
                          "0.0 | 0.0 | 0.0",
                          "18.0 | 28.0 >> 28.0",
                          "30.0 >> 30.0 | 30.0 | Unknown",
                          "30.0 | 60.0 | Unknown >> Unknown >> Unknown >> 30.0",
                          "Unknown | 60.0",
                          "45.0 | 45.0 >> 30.0",
                          "35.0 | 10.0 >> 30.0",
                          "30.0 | 10.0",
                          "60.0; 60.0",
                          "10.0 >> 120.0",
                          "6.0 | 30.0",
                          "5.0; 30.0 >> 5.0; 60.0",
                          "120.0 | 30.0",
                          "30.0 >> 60.0",
                          "Unknown; 500.0",
                          "0.0 | 0.0",
                          "30.0 | 15.0",
                          "53.0",
                          "Unknown | 5.0; 5.0; 15.0; 15.0",
                          "Unknown | 30.0",
                          "5.0 >> 30.0 | 5.0 >> 30.0",
                          "Unknown",
                          "10.0 | 30.0",
                          "20.0 | 20.0",
                          "30.0 | 60.0 >> 30.0",
                          "Unknown | 10.0; 30.0",
                          "30.0 | 20.0; 10.0; 10.0; 10.0; 30.0",
                          "5.0 | 30.0 >> Unknown; 30.0",
                          "20.0 | 60.0",
                          "0.0 | 30.0",
                          "5.0; 60.0",
                          "80.0 | Unknown | 110.0",
                          "10.0; 30.0 | 30.0",
                          "30.0",
                          "25.0 | 5.0 >> 30.0 | 5.0 >> 30.0",
                          "30.0 | 40.0 | 40.0",
                          "60.0 >> 60.0 | Unknown",
                          "5.0 | 5.0; 60.0 >> Unknown; 30.0",
                          "5.0 >> 30.0 | 30.0",
                          "30.0 | Unknown",
                          "25.0",
                          "45.0 | 10.0",
                          "100.0 | 15.0; 30.0",
                          "Unknown | Unknown >> 15.0",
                          "30.0 >> 30.0",
                          "20.0; 30.0",
                          "Unknown | Unknown; 30.0",
                          "30.0 | 20.0",
                          "10.0 | 10.0 | 10.0",
                          "10.0 >> 30.0 | 10.0 >> 30.0",
                          "10.0 | 30.0 >> 30.0",
                          "30.0 | 30.0 | 30.0",
                          "60.0 | 20.0",
                          "30.0 | 5.0",
                          "30.0 | 10.0 >> 30.0",
                          "Unknown | 20.0",
                          "240.0 >> 60.0",
                          "1440.0",
                          "Unknown >> Unknown >> 180.0",
                          "25.0 | 500.0",
                          "30.0 >> 30.0 >> 30.0 | 50.0",
                          "20.0 | 10.0 >> 30.0",
                          "15.0 >> 30.0 | 10.0 >> 30.0",
                          "30.0 | 60.0",
                          "60.0; 60.0; 60.0 | 10.0",
                          "60.0 | 30.0 | 30.0",
                          "420.0 >> 60.0 >> 60.0",
                          "0.0 | 10.0 >> 30.0",
                          "1.0 | 30.0 >> 30.0",
                          "Unknown | 30.0 >> Unknown; 30.0",
                          "30.0 >> 30.0 | 30.0; 30.0 >> 30.0 | 30.0",
                          "30.0 | 30.0 >> 30.0",
                          "10.0 >> 30.0 | 10.0",
                          "10.0 | Unknown",
                          "10.0 | 10.0; 60.0",
                          "30.0 | 30.0 >> Unknown",
                          "10.0 | 30.0 | 30.0 | 30.0",
                          "12.0 | Unknown",
                          "20.0",
                          "45.0; Unknown",
                          "10.0 | 30.0 | 30.0 | 15.0",
                          "10.0; 30.0",
                          "60.0; 60.0; 60.0",
                          "Unknown | 15.0 >> 30.0",
                          "300.0 >> 60.0 >> 60.0",
                          "10.0 >> 10.0 >> 10.0 | 10.0 >> 10.0 >> 10.0 >> 10.0 >> 10.0 >> 10.0 >> 10.0",
                          "0.0; 30.0",
                          "15.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_time",
                "description": "The time program associated to the thermal annealing program.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing times associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the associated times at those temperatures and separate them with semicolons.\n- The annealing times must align in terms of layers\u00b8 reaction steps and annealing temperatures in the previous filed.\n- If a time is not known, state that by \u2018nan\u2019\n- If no thermal annealing is occurring after the deposition of a layer, state that by \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 20 and not 10-30.\nExample\n30 | 5; 5; 5; 30 >> 5; 5; 5; 30\n60 | 1000\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "N2",
                          "Air; Air; Air | N2",
                          "Ambient | Ambient | Ambient",
                          "Ambient | N2",
                          "Air | Air >> Air",
                          "Air | Air | Vacuum",
                          "Ambient | Unknown",
                          "Ambient >> Ambient | Ambient",
                          "Air; chlorobenzene",
                          "Unknown",
                          "Air; Air; Air",
                          "Air | N2",
                          "Unknown | Unknown",
                          "Vacuum >> Vacuum >> Unknown",
                          "Steam",
                          "N2 | N2",
                          "Ambient | Ambient >> Ambient | Ambient >> Ambient",
                          "Air | Air | Air",
                          "N2 | N2 | Vacuum",
                          "Ambient",
                          "Air | Air",
                          "Ambient | Ambient | Ambient >> Ambient >> Ambient >> Ambient",
                          "Unknown | Ambient",
                          "Ambient | Ambient >> Ambient",
                          "Air | Air | Air | Air",
                          "Dry air",
                          "Vacuum | Vacuum",
                          "Air",
                          "Dry air | Dry air",
                          "Ambient | Ambient",
                          "Ambient >> Ambient >> Ambient",
                          "Vacuum",
                          "Air | Ar",
                          "Dry air | Vacuum"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_atmosphere",
                "description": "The atmosphere during thermal annealing\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each annealing step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the atmosphere is a mixture of different gases, i.e. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas.\n- This is often the same as the atmosphere under which the deposition is occurring, but not always.\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nVacuum | N2\nAir | Ar >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1.0",
                          "0.25",
                          "0.1",
                          "0.16",
                          "0.3"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_time_until_next_deposition_step",
                "description": "The time between the HTL stack is finalised and the next layer is deposited\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Ar",
                          "N2",
                          "Unknown",
                          "Air"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_atmosphere",
                "description": "The atmosphere in which the sample with the finalised HTL stack is stored until the next deposition step.\nExample\nAir\nN2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "40.0",
                          "0.9",
                          "30.0",
                          "20.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_relative_humidity",
                "description": "The relive humidity under which the sample with the finalised HTL stack is stored until next deposition step\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Water",
                          "Plasma",
                          "ZnAl-LDH and thermal annealing",
                          "Ozone",
                          "UV",
                          "UV-Ozone",
                          "CO2",
                          "H2",
                          "He plasma",
                          "Washed with methanol",
                          "Wash with IPA",
                          "O2 plasma",
                          "Reactive ion etching"
                        ]
                      }
                    }
                  ]
                },
                "name": "surface_treatment_before_next_deposition_step",
                "description": "Description of any type of surface treatment or other treatment the sample with the finalised ETL-stack undergoes before the next deposition step.\n- If more than one treatment, list the treatments and separate them by a double forward angel bracket (\u2018 >> \u2018)\n- If no special treatment, state that as \u2018none\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nnone\nAr plasma",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "Perovskite",
            "description": "This section contains information about the properties of the absorber layer. It describes the `chemical formula`, the `dimensionality`, the `bandgap`,\nor the `list of dopants and additives` that are in the perovskite layer.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "single_crystal",
                "description": "TRUE if the cell is based on a perovskite single crystal",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "dimension_0D",
                "description": "TRUE if the cell is based on a perovskite quantum dots. Perovskite nanoparticle architectures can also be counted here unless they more have the characteristics of a standard polycrystalline cell",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "dimension_2D",
                "description": "TRUE if the cell is based on 2D perovskites, i.e. a layered perovskite with a large A-cation",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "dimension_2D3D_mixture",
                "description": "TRUE if the cell is based on a mixture of 2D and 3D perovskites. This is sometimes referred to as reduced dimensional perovskites (but not as reduced as to be a pure 2D perovskite)",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "dimension_3D",
                "description": "TRUE for standard three-dimensional perovskites with ABC3 structures. TRUE also for the case where the bulk of the perovskite is 3D but where there exist a thin 2D-caping layer",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "dimension_3D_with_2D_capping_layer",
                "description": "TRUE if the bulk of the perovskite layer is 3D but there is a top layer with lower dimensionality.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "3.0 | 1.0",
                          "3.0 | 0.0",
                          "2.5",
                          "0.0 | 0.0",
                          "2.0 | 3.0 | 2.0",
                          "3.0 | 0.0 | 0.0 | 0.0",
                          "3.0",
                          "2.0 | 3.0",
                          "3.0 | 3.0",
                          "3.0 | 2.0",
                          "3.0 | 0.0 | 0.0",
                          "1.5",
                          "2.0",
                          "3.0 | 2.0 | 0.0",
                          "1.0",
                          "0.0",
                          "3.0 | 0.0 | 0.0 | 0.0 | 0.0",
                          "1.0 | 3.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "dimension_list_of_layers",
                "description": "A list of the perovskite dimensionalities\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- In most cases, there will be only one layer\n- For a perovskite that is a mixture of a 2D and a 3D phase, mark this is as2.5\nExample\n3\n3 | 2\n0",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "composition_perovskite_ABC3_structure",
                "description": "TRUE if the photo-absorber has a perovskite structure\n- The typical perovskite has an ABC3 structure and that is clearly a TRUE\n- This category is inclusive in the sense that also 2D perovskite analogues should be labelled as TRUE",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "composition_perovskite_inspired_structure",
                "description": "TRUE if the photo absorber does not have a perovskite structure. In the literature we sometimes see cells based on non-perovskite photo absorbers, but which claims to be \u201cperovskite inspired\u201d regardless if the crystal structure has any resemblance to the perovskite ABC3 structure or not. This category is for enabling those cells to easily be identified and filtered.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "((CH3)3S)",
                          "(1.3-Pr(NH3)2)",
                          "(3AMP); FA; MA",
                          "(3AMP); MA",
                          "(3AMPY); MA",
                          "(4AMP); MA",
                          "(4AMPY); MA",
                          "(4ApyH)",
                          "(4FPEA); MA",
                          "(5-AVA); Cs; MA",
                          "(5-AVA); FA",
                          "(5-AVA); MA",
                          "(5-AVAI); Cs; FA",
                          "(6-ACA); MA",
                          "(ALA); BA; MA",
                          "(ALA); MA",
                          "(APMim)",
                          "(AVA) | MA",
                          "(AVA) | MA | (BI)",
                          "(AVA); MA",
                          "(Ace); MA",
                          "(Ada); FA",
                          "(Anyl)",
                          "(Anyl); MA",
                          "(BDA)",
                          "(BDA); MA",
                          "(BEA); Cs; FA; MA",
                          "(BEA); MA",
                          "(BIM); MA",
                          "(BYA); MA",
                          "(BZA)",
                          "(BZA); (HAD); MA",
                          "(BZA); MA",
                          "(BdA)",
                          "(Br-PEA); MA",
                          "(BzDA); Cs; FA; MA",
                          "(C6H4NH2)",
                          "(CH3ND3)",
                          "(CHMA); Cs; MA",
                          "(CHMA); MA",
                          "(CIEA); MA",
                          "(CPEA); MA",
                          "(Cl-PEA); MA",
                          "(DAP)",
                          "(DAT); MA",
                          "(DMA)",
                          "(DMA); MA",
                          "(DPA); MA; PA; PA",
                          "(EDA); FA; MA",
                          "(F-PEA); MA",
                          "(F3EA); BA; MA",
                          "(F5PEA)",
                          "(F5PEA); Cs; FA; MA",
                          "(GABA); MA",
                          "(H-PEA); MA",
                          "(HEA); Cs; FA",
                          "(HdA)",
                          "(IEA); MA",
                          "(ImEA)",
                          "(MTEA); MA",
                          "(N-EtPy)",
                          "(NEA); BA; MA",
                          "(NH4)",
                          "(NH4); FA; MA",
                          "(NMA); MA",
                          "(OdA)",
                          "(PBA); BA; MA",
                          "(PBA); MA",
                          "(PDA); Cs; FA",
                          "(PDA); MA",
                          "(PDMA)",
                          "(PDMA); FA",
                          "(PDMA); MA",
                          "(PEA)",
                          "(PEA) | Cs; FA; MA | (PEA)",
                          "(PEA) | MA",
                          "(PEA) | MA | (PEA)",
                          "(PEA); (F5PEA)",
                          "(PEA); (F5PEA); Cs; FA; MA",
                          "(PEA); BA; FA",
                          "(PEA); BA; MA",
                          "(PEA); Cs",
                          "(PEA); Cs; FA",
                          "(PEA); Cs; FA; MA",
                          "(PEA); Cs; MA",
                          "(PEA); FA",
                          "(PEA); FA; MA",
                          "(PEA); MA",
                          "(PEA); MA | MA",
                          "(PEI)",
                          "(PEI); MA",
                          "(PGA); BA; MA",
                          "(PGA); MA",
                          "(PMA)",
                          "(PMA); FA",
                          "(PMA); MA",
                          "(PTA); MA",
                          "(PyEA); MA",
                          "(PyrEA)",
                          "(TBA); Cs; FA; MA",
                          "(TBA); MA",
                          "(TEA); MA",
                          "(TFEA); Cs; FA; MA",
                          "(THM); MA",
                          "(TMA)",
                          "(ThFA); MA",
                          "(ThMA); FA",
                          "(ThMA); MA",
                          "(f-PEA)",
                          "(iPA)",
                          "(iso-BA); MA",
                          "(mF1PEA); MA",
                          "(n-C3H7NH3)",
                          "(oF1PEA); MA",
                          "(pF1PEA); MA",
                          "AN; Cs; MA",
                          "AN; FA; MA",
                          "AN; MA",
                          "Aa; MA",
                          "Ag",
                          "Ag; Cs",
                          "Ag; Cs; Rb",
                          "BA",
                          "BA; Cs",
                          "BA; Cs; FA",
                          "BA; Cs; FA; MA",
                          "BA; Cs; MA",
                          "BA; FA",
                          "BA; FA; MA",
                          "BA; FA; MA; PMA",
                          "BA; GA; MA",
                          "BA; GU; MA",
                          "BA; MA",
                          "BDA; Cs",
                          "BE; FA",
                          "BU; FA",
                          "Ba; K",
                          "Bi",
                          "Bi; La",
                          "Bn",
                          "Ca; FA; MA",
                          "Ca; MA",
                          "Cs",
                          "Cs | BA; Cs",
                          "Cs | Cs",
                          "Cs | FA",
                          "Cs | MA",
                          "Cs; (DMA); MA",
                          "Cs; Ag",
                          "Cs; EA; FA",
                          "Cs; FA",
                          "Cs; FA | (PA)",
                          "Cs; FA | (PEA)",
                          "Cs; FA | (PMA)",
                          "Cs; FA | Cs",
                          "Cs; FA | Cs; FA",
                          "Cs; FA; GA",
                          "Cs; FA; GU",
                          "Cs; FA; GU; MA",
                          "Cs; FA; K; MA",
                          "Cs; FA; MA",
                          "Cs; FA; MA | (A43)",
                          "Cs; FA; MA | (CH3)3S",
                          "Cs; FA; MA | (EPA)",
                          "Cs; FA; MA | (FEA)",
                          "Cs; FA; MA | (FPEA)",
                          "Cs; FA; MA | (PEA)",
                          "Cs; FA; MA | (PEI)",
                          "Cs; FA; MA | (mFPEA)",
                          "Cs; FA; MA | (oFPEA)",
                          "Cs; FA; MA | (pFPEA)",
                          "Cs; FA; MA | BA",
                          "Cs; FA; MA | Cs",
                          "Cs; FA; MA | HA",
                          "Cs; FA; MA | NMABr",
                          "Cs; FA; MA | PA",
                          "Cs; FA; MA; Rb",
                          "Cs; FA; PDA",
                          "Cs; FA; Rb",
                          "Cs; FA; nan",
                          "Cs; HA",
                          "Cs; K",
                          "Cs; Li",
                          "Cs; MA",
                          "Cs; MA; FA | BA",
                          "Cs; Na",
                          "Cs; Rb",
                          "Cu",
                          "DA; FA",
                          "DI; FA",
                          "EA",
                          "EA; FA",
                          "EA; MA",
                          "EA; MA; NEA",
                          "EA; MA; PEA",
                          "EDA; FA",
                          "FA",
                          "FA | (ODA)",
                          "FA | (PEA)",
                          "FA | Cs",
                          "FA | EDA",
                          "FA; GU",
                          "FA; GU; MA",
                          "FA; HA",
                          "FA; K; MA",
                          "FA; MA",
                          "FA; MA | (A43)",
                          "FA; MA | (C4H9NH3)",
                          "FA; MA | (C6H13NH3)",
                          "FA; MA | (C8H17NH3)",
                          "FA; MA | (FEA)",
                          "FA; MA | (HTAB); FA; MA",
                          "FA; MA | (MIC1)",
                          "FA; MA | (MIC2)",
                          "FA; MA | (MIC3)",
                          "FA; MA | (NH4); FA",
                          "FA; MA | (PEA)",
                          "FA; MA | BA",
                          "FA; MA | BA; FA",
                          "FA; MA | DA",
                          "FA; MA | OA",
                          "FA; MA | PEA",
                          "FA; MA | TA",
                          "FA; OA",
                          "FA; PN",
                          "FA; PR",
                          "FA; Rb",
                          "FA; TN",
                          "GA; MA",
                          "GU",
                          "GU; MA",
                          "HA",
                          "HA; MA",
                          "HDA",
                          "IA; MA",
                          "IM",
                          "IM; MA",
                          "K",
                          "K; BA",
                          "La",
                          "MA",
                          "MA | (BEA)",
                          "MA | (BI)",
                          "MA | (C4H9N2H6)",
                          "MA | (EU-pyP)",
                          "MA | (MIC1)",
                          "MA | (MIC2)",
                          "MA | (MIC3)",
                          "MA | (PEA)",
                          "MA | (PPA)",
                          "MA | (PPEA)",
                          "MA | BA",
                          "MA | BA; MA",
                          "MA | CA",
                          "MA | Cs",
                          "MA | Cs | Cs",
                          "MA | Cs | Cs | Cs",
                          "MA | Cs | Cs | Cs | Cs",
                          "MA | FA",
                          "MA | MA",
                          "MA; PA",
                          "PA",
                          "Rb",
                          "Sr"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_a_ions",
                "description": "List of the A-site ions in the perovskite structure\n- We have experimented with letting users write the perovskite structure and from that extract ions and coefficients. Due to the multitude of formatting variations, that has not worked out very well, wherefor we now define the perovskite ion by ion.\n- List all the A-site ions in alphabetic order and separate them by semicolons\n- For ions which labels are three characters or longer, enclose them in parenthesis. That improves readability and simplifies downstream data treatment.\n- In case of a layered perovskite structure, separate layers by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- Only include ions that go into the perovskite structure. Ions that only are found in secondary phases, or amorphous grain boundaries, or that disappears during synthesis, should instead be added as dopants/additives in the field dedicated to dopants and additives.\no On example is Rb in MAFAPbBrI-perovskites. As far as we know, Rb does not go into the perovskite structure, even if that was believed to be the case in the beginning, but rather form secondary phases. For MAFAPbBrI-perovskites, Rb should thus not be considered as a A-site cation, but as a dopant/additive.\nExample:\nMA\nFA; MA\nCs; FA; MA\n(5-AVA); MA\nCs; FA; MA | (PEA)",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "1",
                          "0.2",
                          "0.83; 0.17"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_a_ions_coefficients",
                "description": "A list of the perovskite coefficients for the A-site ions\n- The list of coefficients must line up with the list of the A-site ions\n- If a coefficient is unknown, state that with an \u2018x\u2019\n- If there are uncertainties in the coefficient, only state the best estimate, e.g. write 0.4 and not 0.3-0.5.\n- A common notation is \u20181-x\u2019. Write that as x\n- If the coefficients are not known precisely, a good guess is worth more than to state that we have absolutely no idea.\nExamples:\n1\n0.83; 0.17\n0.05; 0.79; 0.16\n1.5; 0.5",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Pb; Sn | Pb; Sn",
                          "Ni; Pb",
                          "Al",
                          "Pb; Sm",
                          "Cu; Sb",
                          "Ag; Bi",
                          "Pb | Pb | Pb",
                          "Pb | Pb | Pb | Pb | Pb",
                          "Bi; Te",
                          "Mn; Pb",
                          "Pb; Zn",
                          "Y",
                          "Au",
                          "Pb; Sr",
                          "Fe",
                          "Sn",
                          "Cu",
                          "Bi",
                          "Hg; Pb",
                          "Ca; Pb",
                          "Sn | Sn",
                          "Cu; Pb; Sn",
                          "Ge; Pb",
                          "Pb | Pb",
                          "Ni",
                          "Bi; Pb",
                          "Cu; Pb",
                          "Sb",
                          "Mg; Pb",
                          "Hg",
                          "Co; Pb",
                          "Ge; Sn",
                          "Pb; Tb",
                          "Pb; Sn",
                          "Pb",
                          "Pb; Sb",
                          "Sb; Sn",
                          "Pb | Ba; Pb",
                          "Mn",
                          "Sn | Pb",
                          "Fe; Pb",
                          "Ti",
                          "In; Pb",
                          "La; Pb",
                          "Nb; Ni",
                          "Pb | Pb | Pb | Pb",
                          "Ge; Sb",
                          "Bi; Fe; Cr",
                          "Bi; Sb",
                          "Ge",
                          "Ba; Pb",
                          "Eu; Pb"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_b_ions",
                "description": "List of the B-site ions in the perovskite structure\n- We have experimented with letting users write the perovskite structure and from that extract ions and coefficients. Due to the multitude of formatting variations, that has not worked out very well, wherefor we now define the perovskite ion by ion.\n- List all the B-site ions in alphabetic order and separate them by semicolons\n- In case of a layered perovskite structure, separate layers by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- Only include ions that go into the perovskite structure. Ions that only are found in secondary phases, or amorphous grain boundaries, or that disappears during synthesis, should instead be added as dopants/additives in the field dedicated to dopants and additives.\nExample:\nPb\nSn\nPb; Sn\nBi\nPb | Pb",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "7.8",
                          "0.008; 0.992",
                          "0.625; 0.375",
                          "9",
                          "0.6; 0.6",
                          "0.1; 0.9",
                          "0.875; 0.125",
                          "1",
                          "0.05; 0.85; 0.1",
                          "2",
                          "0.85",
                          "0.6",
                          "0.85; 0.15",
                          "0.93",
                          "1.2; 0.8",
                          "0.93; 0.07",
                          "41",
                          "0.9999; 0.0001",
                          "2.4; 1.8",
                          "0.98",
                          "0.5; 0.5",
                          "0.45 | 9",
                          "0.003; 0.997",
                          "0.97; 0.03",
                          "0.07; 0.93",
                          "11",
                          "1 | 1; 1",
                          "0.95; 0.1",
                          "0.995",
                          "2.6",
                          "1 | 3",
                          "0.025; 0.975",
                          "0.2; 0.8",
                          "0.016; 0.984",
                          "0.748; 0.252",
                          "0; 0.19",
                          "4.0",
                          "1 | 1 | 1 | 1",
                          "0.0118; 0.9882",
                          "4.8; 3.6",
                          "0.99",
                          "0.6; 0.4",
                          "0.02; 0.98",
                          "0.031; 0.969",
                          "0.4; 0.6",
                          "0.875",
                          "0.94; 0.06",
                          "0.99; 0.01",
                          "0.05",
                          "0.99999; 0.00001",
                          "1.4; 0.6",
                          "0.09; 0.91",
                          "0.664; 0.336",
                          "0.54",
                          "100",
                          "0.999; 0.001",
                          "0.075; 0.925",
                          "7",
                          "0.25; 0.75",
                          "20",
                          "0.96; 0.04",
                          "8",
                          "0.15; 0.85",
                          "0.5; 0.500",
                          "0.05; 0.95",
                          "0.063; 0.937",
                          "0.57",
                          "1 | 1 | 1",
                          "1 | 2",
                          "0.20; 0.80",
                          "1.0",
                          "6.1",
                          "0.05; 0.9; 0.05",
                          "11.2",
                          "1 | 1",
                          "0.01; 0.99",
                          "4",
                          "0.05; 0.8; 0.15",
                          "10",
                          "0.997; 0.003",
                          "29",
                          "3",
                          "0.916; 0.084",
                          "0.014; 0.986",
                          "1.8; 0.2",
                          "3.14",
                          "0.8; 0.2",
                          "0.95; 0.05",
                          "2.7",
                          "6",
                          "0.10; 0.90",
                          "40",
                          "0.50; 0.50",
                          "1; 0.6",
                          "0.7; 0.3",
                          "0.08; 0.92",
                          "0.25",
                          "0.4; 0.6 | 0.4; 0.6",
                          "23",
                          "0.84; 0.84",
                          "0.005; 0.995",
                          "0.98; 0.02",
                          "3; 2.4",
                          "0.832; 0.168",
                          "3; 1",
                          "1.8; 1.2",
                          "1; 3",
                          "0.995; 0.005",
                          "61",
                          "1.9; 0.1",
                          "0.88; 0.12",
                          "0.95",
                          "x",
                          "2.2",
                          "0.7; 0.255",
                          "2; 1; 1",
                          "0.06; 0.94",
                          "0.38; 0.62",
                          "0.97",
                          "0.03; 0.97",
                          "5",
                          "0.125; 0.875",
                          "1; 1",
                          "0.9; 0.1",
                          "0.66; 0.33",
                          "80",
                          "0.9",
                          "0.375; 0.625",
                          "0.58; 0.42",
                          "12.9",
                          "0.997",
                          "1.1",
                          "60",
                          "0.3; 0.7",
                          "30",
                          "0.04; 0.96",
                          "0.92; 0.08",
                          "1.6; 0.4",
                          "9.5",
                          "0.75; 0.25",
                          "0.45",
                          "4 | 1",
                          "0.0094; 0.9906",
                          "0.37; 0.6255",
                          "0.93; 0.03",
                          "0.65; 0.35",
                          "1 | 1 | 1 | 1 | 1",
                          "4.4"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_b_ions_coefficients",
                "description": "A list of the perovskite coefficients for the B-site ions\n- The list of coefficients must line up with the list of the B-site ions\n- If a coefficient is unknown, mark that with an \u2018x\u2019\n- If there are uncertainties in the coefficient, only state the best estimate, e.g. write 0.4 and not 0.3-0.5.\n- A common notation is \u20181-x\u2019. Write that as x\n- If the coefficients are not known precisely, a good guess is worth more than to state that we have absolutely no idea.\nExamples:\n1\n0.83; 0.17\nx; x\n0.5; 0.5 | 1",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Br; I | Br; I",
                          "",
                          "(BF4); I",
                          "O",
                          "I | Br; I | I",
                          "S",
                          "Br | Br; I",
                          "Cl",
                          "Br",
                          "I | Br",
                          "I | I; Br",
                          "Br | I",
                          "Br; I | I",
                          "Br; F; I",
                          "Br; I",
                          "I | I | Br; I | Br; I",
                          "(PF6); PF6",
                          "(SCN); I",
                          "I | I",
                          "F; I",
                          "Cl; I",
                          "I",
                          "I; (SCN)",
                          "I | I | I",
                          "Cl; I | Cl",
                          "Br; Cl",
                          "I; SCN",
                          "Br | Br",
                          "I | I | Br; I",
                          "I | I | Br; I | Br; I | Br; I",
                          "I | I; (PF6)",
                          "Br; Cl; I",
                          "Br | Br; Cl",
                          "I | Br; I"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_c_ions",
                "description": "List of the C-site ions in the perovskite structure\n- We have experimented with letting users write the perovskite structure and from that extract ions and coefficients. Due to the multitude of formatting variations, that has not worked out very well, wherefor we now define the perovskite ion by ion.\n- List all the A-site ions in alphabetic order and separate them by semicolons\n- For ions which labels are three characters or longer, enclose them in parenthesis. That improves readability and simplifies downstream data treatment.\n- In case of a layered perovskite structure, separate layers by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- Only include ions that go into the perovskite structure. Ions that only are found in secondary phases, or amorphous grain boundaries, or that disappears during synthesis, should instead be added as dopants/additives in the field dedicated to dopants and additives.\no One example is chloride in MAPbI3. As far as we know, Cl does not go into the perovskite structure even if that was believed to be the case in the beginning. For MAPbI3 Cl should thus not be considered as a C-site cation, but as a dopant/additive.\nExample:\nI\nBr; I\nBr\nBr; I| I",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_c_ions_coefficients",
                "description": "A list of the perovskite coefficients for the C-site ions\n- The list of coefficients must line up with the list of the C-site ions\n- If a coefficient is unknown, mark that with an \u2018x\u2019\n- If there are uncertainties in the coefficient, only state the best estimate, e.g. write 0.4 and not 0.3-0.5.\n- A common notation is \u20181-x\u2019. Write that as x\n- If the coefficients are not known precisely, a good guess is worth more than to state that we have absolutely no idea.\nExamples:\n3\n0.51; 2.49\n0.51; 2.49 | x",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "SnI2",
                          "FA",
                          "Cl",
                          "SnF2; Sn",
                          "BiBr3",
                          "SnCl2",
                          "PbI2; SnI2",
                          "FAI",
                          "I2",
                          "Sn",
                          "MAI; PEAI; DMF",
                          "CH3ND3I",
                          "Stoichiometric | Stoichiometric",
                          "PbAc2",
                          "MAI; FAI",
                          "PbBr2; PbI2",
                          "MAI; PEAI",
                          "RbI",
                          "MA",
                          "FAI; MABr",
                          "MABr; PbI2",
                          "NH4Cl",
                          "HCl",
                          "5-AVAI",
                          "I",
                          "Pb",
                          "Stoichiometric",
                          "PbI2 | nan",
                          "SrI2",
                          "CsI",
                          "BiI3",
                          "MAI",
                          "AgI",
                          "CsBr",
                          "MABr",
                          "PbCl2",
                          "CsI; MACl",
                          "MACl",
                          "SbI3",
                          "PbI2; PbBr2",
                          "Stoichiometric | nan",
                          "PbI",
                          "SnBr2",
                          "PbBr2",
                          "PbI2"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_none_stoichiometry_components_in_excess",
                "description": "Components that are in excess in the perovskite synthesis. E.g. to form stoichiometric MAPbI3, PbI2 and MAI are mixed in the proportions 1:1. If one of them are in excess compared to the other, then that component is considered to be in excess. This information can be inferred from data entered on the concentration for all reaction solutions but this gives a convenient shorthand filtering option.\n- If more than one component is in excess, order them in alphabetic order and separate them by semicolons.\n- It there are no components that are in excess, write Stoichiometric\nExamples:\nPbI2\nMAI\nStoichiometric",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "FAMAPbBrI | (MIC3)PbI",
                          "CsBiPbI",
                          "BAFAMAPbI",
                          "FAPbI | (ODA)PbI",
                          "CsFAPbI | CsPbI",
                          "(PMA)FAPbI",
                          "CsRbSnI",
                          "MAPbI | (BEA)PbI",
                          "(PEA)FAMAPbI",
                          "BAPbI",
                          "CsPbI | CsPbI",
                          "AgCsBiI",
                          "MAPbI | MABaPbI",
                          "MAPbI | (MIC1)PbI",
                          "CsPbBr | CsPbI",
                          "(PEA)CsFAPbI",
                          "EAMAPEAPbI",
                          "nanBiI",
                          "GUPb(SCN)I",
                          "MAMnPbI",
                          "MAPbISCN",
                          "(5-AVA)MAPbI",
                          "IMPbI",
                          "(mF1PEA)MAPbI",
                          "MAPb(SCN)I",
                          "FAGeSbCl",
                          "(BEA)CsFAMAPbBrI",
                          "nanPbI",
                          "CsEAFAPbBrI",
                          "CsPbBrI | FAPbBrI",
                          "BAMASnI",
                          "CsCuPbBr",
                          "CsPbBr | MAPbI",
                          "(1.3-Pr(NH3)2)PbI",
                          "FAMAPbBrI | (FEA)PbI",
                          "MAPbI | (PPEA)PbI",
                          "FAPbSnI",
                          "BACsFAMAPbI",
                          "CsMgPbBr",
                          "CsHAPbI",
                          "(F-PEA)MAPbI",
                          "(C6H4NH2)CuClI",
                          "CsPbBr | FAPbBr",
                          "(DAT)MAPbI",
                          "(EDA)FAMAPbI",
                          "(NH4)SbBrI",
                          "CsPbBrI | BACsPbBrI",
                          "MAMgPbI",
                          "CsNaBiI",
                          "(IEA)MAPbI",
                          "(PGA)BAMAPbI",
                          "BACsFAPbSnI",
                          "FASnI",
                          "MASnBr",
                          "MAPbI | FAPbBrI",
                          "HAPbI",
                          "CsPbBrI | CsPbI",
                          "EAMANEAPbI",
                          "CsPbSrBr",
                          "CsFAMAPbI",
                          "(PEA)CsFAMAPbBrI",
                          "(APMim)Pb(PF6)PF6",
                          "(5-AVA)CsMAPbI",
                          "(oF1PEA)MAPbI",
                          "SrTiO",
                          "EAMAPbI",
                          "(PMA)MAPbI",
                          "FATNSnI",
                          "CuBiI",
                          "nanBiO",
                          "(n-C3H7NH3)PbCl",
                          "(PBA)BAMAPbI",
                          "CsFAPbSnI",
                          "(NH4)SbI",
                          "CsFAPbBrI",
                          "HDABiI",
                          "CsRbPbBr",
                          "(NH4)SbBr",
                          "AgCsBiBr",
                          "MAPbBr",
                          "(PDA)CsFAPbI",
                          "CsFAPbBr",
                          "CsBaPbI",
                          "BACsPbI",
                          "MAPbSrI",
                          "HAMASnI",
                          "(F5PEA)(PEA)CsFAMAPbBrI",
                          "(4AMPY)MAPbI",
                          "MAPbI | (MIC2)PbI",
                          "(OdA)PbI",
                          "MAPbI | (C4H9N2H6)PbI",
                          "MAEuPbI",
                          "CsPbSnI",
                          "FAPbI | EDAPbI",
                          "RbPbI",
                          "BDACsPbBrI",
                          "(Anyl)MAPbI",
                          "EAFASnI",
                          "(4ApyH)SbI",
                          "(PEA)BAMAPbI",
                          "(TMA)SnI",
                          "CsPbZnBr",
                          "AgBiI",
                          "CsPbSnBrI",
                          "(ImEA)PbI",
                          "FAPbBrI",
                          "MAPbI | MAPbI",
                          "FAMAPbI | (A43)PbI",
                          "MANiPbI",
                          "BAKBiTeO",
                          "MASnI",
                          "(BDA)PbI",
                          "FAMAPbBrI | OAPbI",
                          "MAHgI",
                          "(F5PEA)CsFAMAPbBrI",
                          "(4FPEA)MAPbI",
                          "MAPbI | (EU-pyP)PbI",
                          "CsMAPbSnBrI",
                          "CsFAPbBrI | (PEA)PbBrI",
                          "(PEA)PbI | CsFAMAPbBrI | (PEA)PbI",
                          "(iso-BA)MAPbI",
                          "MAPbI | MAPbBrI",
                          "CsFAPbI | CsFAPbI(PF6)",
                          "MAPbBrCl",
                          "MAPbI | BAMAPbI",
                          "FAMAPbBrI | (C4H9NH3)PbI",
                          "EDAFASnI",
                          "CsNiPbBr",
                          "MAInPbI",
                          "((CH3)3S)SnClI",
                          "CsBaPbBrI",
                          "(C6H4NH2)CuBrI",
                          "FAPbI | CsPbI",
                          "MACuPbBrI",
                          "(Br-PEA)MAPbBrI",
                          "CsFAMAPbBr",
                          "FAPbCl",
                          "MABaPbI",
                          "(AVA)PbI | MAPbI | (BI)PbI",
                          "BAGAMAPbI",
                          "(PEI)MAPbI",
                          "(PEA)FAMASnI",
                          "MAPbI | MAPbBr",
                          "(PDMA)MAPbI",
                          "FAMASnI",
                          "CsPb(SCN)I",
                          "CsFAMAPbBrI | (A43)PbI",
                          "CsFAPbBrI | (PA)PbBrI",
                          "EAMAPbBr",
                          "FASnBrI",
                          "(PEA)MAPbI",
                          "(HEA)CsFAPbBrI",
                          "MACuPbSnBrI",
                          "IAMAPbI",
                          "(ThMA)MAPbI",
                          "CsPbBr | FAPbBrCl",
                          "MAAuBr",
                          "BACsFAPbBrI",
                          "CsFAMAPbBrI | HAPbI",
                          "CsFARbPbI",
                          "CaMAPbBrI",
                          "CsMAPbI",
                          "FASnI | (PEA)SnI",
                          "FAPbBrCl",
                          "MACuBrCl",
                          "FAHAPbI",
                          "(PEA)MASnI",
                          "MACoPbI",
                          "(3AMP)MAPbI",
                          "(PBA)MAPbI",
                          "MAPbSnBr",
                          "CsFAMAPbBrI | CsPbI",
                          "FAMAPbI",
                          "FAMAPbSnI",
                          "(F5PEA)(PEA)PbI",
                          "MAPbI | (BI)PbI",
                          "MAPAPbI",
                          "AgBi(SCN)I",
                          "FAPbBr",
                          "(6-ACA)MAPbI",
                          "CsMAPbSnClI",
                          "(PEI)PbI",
                          "FAMAPbSnBrI",
                          "MANiClI",
                          "MAGeBrI",
                          "MAPbClI",
                          "CsTiBr",
                          "CsSnI",
                          "MAPbBrI",
                          "(CPEA)MAPbI",
                          "FAMAGeSnI",
                          "MAPbI | BAPbI",
                          "BiLaFeO",
                          "(PEA)MAPbClI",
                          "BiFeO",
                          "FAMAPbBrI",
                          "(PDMA)PbI",
                          "CsGeSnI",
                          "FAMAPbBr",
                          "FAKMAPbBrI",
                          "MASbSnI",
                          "FAMAGePbBrI",
                          "(5-AVA)FASnI",
                          "CsFAMAPbI | (FEA)PbI",
                          "CsFAMAPbBrI | (pFPEA)PbI",
                          "FAMAPbBrI | DAPbI",
                          "(4ApyH)BiSbI",
                          "(DMA)MAPbI",
                          "CsFAMAPbBrI | (EPA)PbI",
                          "MASbI",
                          "IMMAPbI",
                          "(BDA)MAPbI",
                          "(F5PEA)PbI",
                          "BAFAPbI",
                          "MAGeI",
                          "LaYS",
                          "MAPbI | (PPA)PbI",
                          "CsPbBr | FAPbBrI",
                          "FAMAPbBrI | PEAPbI",
                          "nannannan",
                          "CsBiI",
                          "(PEA)PbI",
                          "MACaPbI",
                          "nanSnI",
                          "CsFAMAPbBrI | CsPbBrI",
                          "FAMAPbBrI | BAFAPbI",
                          "(TEA)MAPbI",
                          "MAPbZnI",
                          "CsSbI",
                          "CsFAGAPbI",
                          "FAMAPbI | (NH4)FAPbI",
                          "BACsMAPbI",
                          "CsFASnI",
                          "BnSnI",
                          "HAMAPbI",
                          "FAPbI | (PEA)PbI",
                          "FAPbBrClI",
                          "CsPbBr | CsPbBrI",
                          "(NMA)MAPbI",
                          "CsGePbBrI",
                          "CsPbBrI",
                          "FAMAPbSnI | (PEA)PbSnI",
                          "(3AMPY)MAPbI",
                          "(PGA)MAPbI",
                          "CsPbBr",
                          "BAFASnI",
                          "EAPbI",
                          "CsFAPDAPbI",
                          "(N-EtPy)SbBr",
                          "(PDMA)FAPbI",
                          "BAFAPbClI",
                          "MASnI | MAPbI",
                          "CsFAGAPbBrI",
                          "CsCaPbBr",
                          "MAPbI | CsPbBr",
                          "CsNaPbBr",
                          "AgCsSbI",
                          "CsLiPbBr",
                          "(pF1PEA)MAPbI",
                          "(NH4)FAMAPbBrI",
                          "BAMAPbI",
                          "MAPbI",
                          "MAPbI | CsPbI | CsPbBrI",
                          "(PyEA)MAPbI",
                          "(PEA)BAFASnI",
                          "(BZA)PbI",
                          "CsFAPbI | CsFAPbI",
                          "MACuPbI",
                          "DIFAPbI",
                          "CsPbBr | CsPbBr",
                          "CsLaPbBrI",
                          "CsFAMAPbI | NMABrPbIBr",
                          "CsPbZnBrI",
                          "MASnBrI",
                          "CsPbBrI | CsPbBrI",
                          "(ThMA)FAPbI",
                          "ANCsMAPbI",
                          "CsFAGUPbI",
                          "(PEA)FAMASnBrI",
                          "HASnI",
                          "CsSnBr",
                          "(CHMA)MAPbI",
                          "(TFEA)CsFAMAPbBrI",
                          "CsFAMAPbBrI | (FPEA)PbI",
                          "(PEA)FASnI",
                          "CsFAMAPbBrI",
                          "CsFAKMAPbBrI",
                          "MAPb(BF4)I",
                          "(BZA)(HAD)MAPbI",
                          "(BIM)MAPbI",
                          "(ALA)MAPbI",
                          "CsPbSmBr",
                          "(PEA)CsPbI",
                          "MAPbI | (MIC3)PbI",
                          "GUPbI",
                          "CsFAPbI",
                          "FABiPbI",
                          "(BEA)MAPbI",
                          "(PEA)CsMAPbI",
                          "((CH3)3S)SnBrI",
                          "(TBA)MAPbI",
                          "(Anyl)PbI",
                          "nanCuSbI",
                          "MAAlCl",
                          "CsBaPbBr",
                          "CsGeI",
                          "(GABA)MAPbI",
                          "(Ada)FAPbI",
                          "(CH3ND3)PbI",
                          "BACsFAMAPbBrI",
                          "MAHgPbI",
                          "CsMAPbBrI",
                          "(BdA)PbI",
                          "CsFAMAPbBrI | (mFPEA)PbI",
                          "BUFAPbI",
                          "CsPbBrFI",
                          "CsRbPbBrI",
                          "AgCsRbBiBr",
                          "(CHMA)CsMAPbI",
                          "(BzDA)CsFAMAPbBrI",
                          "FAMAPbBrI | BAPbI",
                          "FAMAPbBrI | (HTAB)FAMAPbBrI",
                          "ANMAPbI",
                          "(PEA)MAPbClI | MAPbCl",
                          "MAPbI | CAPbI",
                          "(PEA)FAPbI",
                          "CsPbI",
                          "(BYA)MAPbI",
                          "FAMAPbBrI | (MIC1)PbI",
                          "PAPbI",
                          "CsFAGUPbBrI",
                          "(APMim)PbBrI",
                          "MAPbSnBrI",
                          "FAMAPbBrI | (C8H17NH3)PbI",
                          "MASnBrClI",
                          "(Cl-PEA)MAPbClI",
                          "nanBiCrFeO",
                          "(5-AVAI)CsFAPbI",
                          "(F3EA)BAMAPbI",
                          "(BZA)MAPbI",
                          "FAPRPbI",
                          "(f-PEA)PbI",
                          "MAPbI | CsPbI | CsPbBrI | CsPbBrI",
                          "FABiI",
                          "(DMA)PbI",
                          "(PEA)MAPbBrI",
                          "CsMAPb(SCN)I",
                          "CsFAMASnBrI",
                          "BAFAPbBrI",
                          "MAPbSbBrI",
                          "MAPbI | (PEA)PbI",
                          "FAMAPbBrI | (MIC2)PbI",
                          "CsMAPbSnI",
                          "(H-PEA)MAPbI",
                          "CsFAMAPbBrI | BAPbBrI",
                          "CsFAMAPbBrI | BAPbI",
                          "RbSbI",
                          "BAGUMAPbI",
                          "FARbPbI",
                          "MAPbI | CsPbI | CsPbBrI | CsPbBrI | CsPbBrI",
                          "AaMAPbI",
                          "CsFAMAPbBrI | (PEI)PbI",
                          "CsFAKMAGePbBrI",
                          "CsFAMAPbBrI | (CH3)3SPbI",
                          "MASnCl",
                          "KSbI",
                          "BaKNbNiO",
                          "CsFAPbBrI | (PMA)PbBrI",
                          "(CIEA)MAPbI",
                          "(PEA)CsPbBrI",
                          "FAMAPbI | TAPbI",
                          "CsFAPbI | (PEA)PbI",
                          "(iPA)PbI",
                          "(4AMP)MAPbI",
                          "AgBiBr",
                          "CsSnBrI",
                          "CsEuPbBrI",
                          "AgCsBiSbBr",
                          "(ThFA)MAPbI",
                          "FAOASnI",
                          "(DMA)CsMAPbI",
                          "MAMnI",
                          "CsKPbBr",
                          "ANFAMAPbI",
                          "CsFAMAPbSnBrI",
                          "CsFAPbBrClI",
                          "CsFAMAPbBrI | PAPbI",
                          "(HdA)PbI",
                          "CsFAMAPbSnI",
                          "(AVA)PbI | MAPbI",
                          "FAPbClI",
                          "(ALA)BAMAPbI",
                          "CsAgBiBr",
                          "GUSnI",
                          "(TBA)CsFAMAPbBrI",
                          "CsPbI | FAPbI",
                          "(Ace)MAPbI",
                          "FAPbI",
                          "(PDA)MAPbI",
                          "CsPbTbBr",
                          "(PEA)PbI | MAPbI",
                          "FAMAPbBrI | (C6H13NH3)PbI",
                          "MAPbSbI",
                          "GAMAPbI",
                          "CsFAGUMAPbBrI",
                          "BEFAPbI",
                          "CsFAMAPbBrI | (PEA)PbI",
                          "(3AMP)FAMAPbI",
                          "(PEA)CsPbBr",
                          "(AVA)MAPbI",
                          "(PyrEA)PbI",
                          "FAGUSnI",
                          "(Cl-PEA)MAPbI",
                          "(PTA)MAPbI",
                          "((CH3)3S)SnI",
                          "MAFePbI",
                          "DAFASnI",
                          "BAMAPbSnI",
                          "MAPbSnI",
                          "(PEA)PbI | MAPbI | (PEA)PbI",
                          "MABiSbI",
                          "FAGUMAPbI",
                          "(MTEA)MAPbI",
                          "CsMASnI",
                          "CsFAMARbPbI",
                          "(DPA)MAPAPAPbI",
                          "FAPNSnI",
                          "CsFAMARbPbBrI",
                          "(DAP)PbI",
                          "FASnBr",
                          "(NEA)BAMAPbI",
                          "(PEA)FAMAPbBrI",
                          "(PMA)CuBr",
                          "GUMAPbI",
                          "MABiI",
                          "CaFAMAPbBrI",
                          "CsFAMAPbBrI | (oFPEA)PbI",
                          "MAPbI | CsPbI",
                          "(THM)MAPbI",
                          "CsPbSrBrI",
                          "MASnFI",
                          "CsFAnanPbI",
                          "MAPbCl"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_short_form",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Cs0.2FA0.6MA0.2PbBr0.095I0.905",
                          "(PEA)2FA0.5MA3.5Pb5I16",
                          "Cs0.2FA0.8Pb0.75Sn0.25I3",
                          "(THM)0.05MA0.95PbI3",
                          "FA0.026MA0.974PbI3",
                          "CsPbBrI2 | CsxPbBrI2",
                          "(PEA)0.2BA1.8MA3Pb4I13",
                          "Cs0.17FA0.83Pb0.995Sn0.005I3",
                          "(PEA)2MA9Pb10I31",
                          "Cs0.05FA0.79MA0.16Pb0.58Sn0.42Br0.52I2.48",
                          "FA0.7MA0.3PbBr0.1I2.9",
                          "FA0.83MA0.13PbBr0.39I2.61",
                          "(NH4)6.8FA0.15MA2.125Pb7.8Br0.45I23.97",
                          "FA0.75K0.1MA0.15PbBr0.55I2.55",
                          "Cs0.97Na0.03PbBr3",
                          "Cs0.2FA0.75MA0.05PbBr0.51I2.49",
                          "Cs0.09FA0.77MA0.14PbBr0.42I2.58",
                          "MASnI3",
                          "FASnI3 | (PEA)2SnI4",
                          "Cs0.10FA0.83MA0.07PbBr0.51I2.49",
                          "Cs0.07FA0.725MA0.115PbBr0.45I2.55",
                          "FA0.85MA0.15PbBr0.21I2.79",
                          "Ag3Bi1.0Br6",
                          "Cs0.2MA0.8PbI3",
                          "(PDMA)FA2Pb3I10",
                          "(PEA)2MA59Pb60I181",
                          "GUPb(SCN)2.2I0.8",
                          "Cs0.05FA0.79MA0.16Pb0.5Sn0.5I3",
                          "MAPbI3 | MAPbBrI2",
                          "Cs0.9Ag3Bi2.6I9",
                          "MACu0.05Pb0.9Sn0.05Br0.1I2.9",
                          "FAPbCl3",
                          "Cs0.10FA0.75MA0.15PbBr0.45I2.55",
                          "Cs02FA0.8PbBr0.42I2.58",
                          "CsPbBr3 | FAPbBr2I",
                          "Cs0.3FA0.7PbBr0.256I0.744",
                          "Cs0.07FA0.9MA0.03PbBr0.24I2.76",
                          "Cs0.1MA0.9Pb0.9Sn0.1Br0.3I2.7",
                          "MAIn0.25Pb0.75I3",
                          "MAHg0.1Pb0.9I3",
                          "Cs0.05MA0.95Pb0.95Sn0.1Br0.15I2.85",
                          "Cs0.25FA0.75PbBr0.6I2.4",
                          "Cs0.1FA0.74MA0.1530PbBr0.51I2.49",
                          "Cs0.125FA0.875PbBr0.375I2.625",
                          "MAPb(SCN)I2",
                          "MAPb1.0BrI2",
                          "MAPbBr0.6I2.4",
                          "(PGA)0.2BA1.8MA3Pb4I13",
                          "CsPbBr3 | CsPbBrI2",
                          "Cs0.1FA0.7MA0.2PbBr0.3I2.7",
                          "Cs0.10FA0.36MA0.54PbBr0.2I2.8",
                          "(Ace)0.08MA0.92PbI3",
                          "(Anyl)2MA3Pb4I12",
                          "(PBA)0.5BA1.5MA3Pb4I13",
                          "Cs0.05FA0.85MA0.15PbBr0.45I2.70",
                          "FA0.67MA0.33PbBr2I",
                          "FA0.5MA0.5PbBr0.3I2.7",
                          "Cs0.15FA0.85PbBr0.87I2.13",
                          "(PEA)2MA19Pb20I61",
                          "Cs0.05FA0.79MA0.16PbBr0.03I2.97",
                          "Cs0.1FA0.85Rb0.05PbI3",
                          "(Ace)0.03MA0.97PbI3",
                          "Cs0.1FA0.85MA0.05PbBr0.15I2.85",
                          "FA0.83MA0.17PbBr0.46I2.54",
                          "Cs0.02FA0.83MA0.17PbBr0.51I2.49",
                          "FA0.57MA0.43PbBr0.13I2.87",
                          "MAGeI3",
                          "HAMAPbI3",
                          "FA0.15MA0.85PbI3",
                          "CsSnBr2.5I0.5",
                          "HASnI3",
                          "Cs0.05FA0.93GU0.02PbI3",
                          "MACu0.01Pb0.99Br0.01I2.99",
                          "CsNi0.03Pb0.97Br3",
                          "Cs0.05FA0.78MA0.12PbBr0.51I2.49",
                          "MA3Bi2I10",
                          "FASnBr3",
                          "IM0.3MA0.30.7PbI3",
                          "Cs0.05FA0.76MA0.16PbBr0.48I2.52",
                          "EA0.15MA0.85PbI3",
                          "MASnI3 | MAPbI3",
                          "(BZA)1.85(HAD)0.15MA2Pb3I10",
                          "Cs0.1FA0.9PbBr0.095I0.905",
                          "FA0.57MA0.43PbI3",
                          "Cs0.09FA0.77MA0.14PbBr0.42I2.58 | (FPEA)2PbI4",
                          "Cs0.05FA0.15MA0.85PbI3",
                          "CsEu0.07Pb0.93BrI2",
                          "Cs0.2FA0.8PbBr0.28I2.72",
                          "MACa0.01Pb0.99I3",
                          "(THM)0.075MA0.925PbI3",
                          "Cs0.40MA0.60PbI3",
                          "FA0.43MA0.57PbBr0.13I2.93",
                          "(Ada)2FA2Pb3I10",
                          "Cs0.17FA0.83Pb0.4Sn0.6I3",
                          "MAPbBr0.01I2.99",
                          "(BIM)0.1MAPbI3.2",
                          "Cs0.96K0.04PbBr3",
                          "Cs0.17FA0.83PbBr0.3I2.7",
                          "FA0.85MA0.15PbBr3",
                          "Cs0.05MA0.95PbBr1.5I1.5",
                          "Cs0.2668FA0.666MA0.0664PbBr0.095I0.905",
                          "FA0.85MA0.15PbBr0.45I2.55 | BA0.5FA1.5PbI4",
                          "MAPbBr0.78I2.22",
                          "Cs0.05MA0.17FA0.76PbBrI2 | BA2PbBr3.2I0.8",
                          "FA0.95MA0.05PbBr0.15I2.75",
                          "Cs0.3FA0.7PbI3",
                          "Cs0.34MA0.66PbI3",
                          "(PEA)0.03MA0.97PbI3",
                          "IM0.3MA0.7PbI3",
                          "nanPbI2",
                          "(5-AVA)0.05Cs0.05MA0.9PbI3",
                          "MAPbBr0.56I2.44",
                          "Cs0.17FA0.83PbBr0.51I2.5",
                          "FA0.93MA0.03PbBr0.09I2.91",
                          "MASnBr3",
                          "FA0.37MA0.63PbI3",
                          "MAPb0.75Sn0.25Br2.4I0.6",
                          "MAPb0.38Sn0.62I3",
                          "(PEA)BAFA3Sn4I13",
                          "MAPb0.97Sb0.03Br2.94I0.09",
                          "EA2MA10Pb11I34",
                          "FA0.12MA0.8PbBr0.12I2.88",
                          "Cs0.05FA0.285MA0.665PbI3",
                          "BA2MAPb2I7",
                          "Cs0.025FA0.825MA0.15PbBr0.45I2.55",
                          "FA0.8MA0.2Pb1.0I3",
                          "MA3PbBr0.32I2.68",
                          "MAPbBr0.27I2.73",
                          "HAPbI4",
                          "FA0.15PN0.85SnI3",
                          "CsEu0.05Pb0.95BrI2",
                          "AN0.15FA0.5MA0.8PbI3",
                          "FA0.84MA0.16PbBr0.51I2.49",
                          "Cs0.2FA0.8PbBr0.12I2.88",
                          "Cs0.05FA0.81MA0.14PbI3",
                          "FA0.048MA0.952PbBrI2.91",
                          "BA2Cs0.6FA3.4Pb3Sn2.4I17",
                          "MA2CuBr2Cl2",
                          "Cs0.05FA0.8075MA0.1425PbBr0.45I2.55",
                          "MAPb0.75Sb0.25I3",
                          "Cs0.2FA0.66MA0.14Pb0.5Sn0.5Br0.5I2.5",
                          "Cs0.1FA0.75MA0.15PbBr0.35I2.65",
                          "FAPbBrI2",
                          "FA8PR2Pb9I28",
                          "(DAT)MA2Pb3I10",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | (pFPEA)PbI3",
                          "(PEA)2PbI4 | Cs0.1FA0.74MA0.13Pb1Br0.39I2.48 | (PEA)2PbI4",
                          "Cs0.065FA0.79MA0.145PbBr0.49I2.51",
                          "CsPbBr3",
                          "Cs0.1FA0.9PbBr0.1I2.9 | (PMA)PbBr0.1I2.9",
                          "Cs0.05FA0.95MAPbI3",
                          "Cs0.17FA0.83PbBr2.49I0.51",
                          "((CH3)3S)2SnClI5",
                          "FA0.7GU0.3SnI3",
                          "CsBa0.1Pb0.9BrI2",
                          "Cs0.05FA0.8265MA0.1235PbBr0.51I2.49",
                          "BA2MA23Sn4I13",
                          "FA0.33PbBr1.5I1.5",
                          "CsPb0.88Zn0.12BrI2",
                          "FA0.57MA0.43PbBr0.13I2.91",
                          "FA0.85MA0.15Pb1.0Br0.45I2.55",
                          "(MTEA)2MA4Pb5I16",
                          "FA0.8MA0.2PbBr0.6I2.40",
                          "FA0.17MA0.83PbBrI2",
                          "IM0.05MA0.95PbI3",
                          "(4AMP)MA3Pb4I13",
                          "Cs0.15AgBi3I8.5",
                          "Cs0.8MA0.2PbI3",
                          "Cs0.2FA0.8PbBr0.9I2.1",
                          "FA0.85MA0.15PbBr0.45I2.55 | PEA2PbI4",
                          "Cs0.4FA0.2MA0.4PbI3",
                          "MAGeBrI2",
                          "MAPbBr0.045I2.955",
                          "FA0.75MA0.25PbBr0.45I2.55",
                          "MAIn0.10Pb0.90I3",
                          "Cs0.05FA0.79MA0.16Pb0.5Sn0.5Br0.5I2.5",
                          "FAPbI3 | (ODA)2PbI4",
                          "(PEA)2MA8Pb9Br11.2I16.8",
                          "Cs2FAnanPbI3",
                          "HA0.4MA0.6SnI3",
                          "Cs0.05FA0.79MA0.16PbBr0.15I0.85",
                          "FA0.97MA0.03PbBr0.09I2.91 | (MIC1)2PbI4",
                          "FAPb0.75Sn0.25I3",
                          "FA4GeSbCl12",
                          "Cs0.1FA0.1MA0.8Pb1.0I3",
                          "Cs0.1MA0.9PbBr1.2I1.8",
                          "MAPb0.4Sn0.6Br1.2I1.8",
                          "BA2FA2Pb3I10",
                          "MAPb0.75Sn0.25Br1.2I1.8",
                          "MAPbBr0.1I2.9",
                          "CsPbBr0.45I2.55",
                          "Cs0.1MA0.9Pb0.7Sn0.255I3",
                          "FA0.9MA0.1PbBr0.15I2.85",
                          "Cs0.2FA0.66MA0.14Pb0.25Sn0.75Br0.5I2.5",
                          "CsMAPbI3",
                          "MAIn0.05Pb0.95I3",
                          "Cs0.2FA0.66MA0.14SnBr0.5I2.5",
                          "Cs0.2FA0.8PbBr0.6I2.4",
                          "GUPb(SCN)3I",
                          "Cs0.1FA0.36MA0.54PbBr0.2I2.8",
                          "FA0.85MA0.15Pb1.0Br0.15I0.85",
                          "FA0.15MA0.85PbBr0.15I2.85",
                          "Cs0.05FA0.7885MA0.1615PbBr0.4845I2.4155",
                          "FA0.66MA0.34PbI3",
                          "Cs0.05FA0.79MA0.16Pb0.916Sn0.084Br0.52I2.48",
                          "CsSnBr0.3I2.7",
                          "GU0.25MA0.75PbI3",
                          "(TBA)0.03MA0.97PbI3",
                          "FA0.125MA0.875PbBrI2",
                          "IM0.25MA0.250.75PbI3",
                          "FA0.5MA0.5PbBr0.13I2.92",
                          "MAPb0.3Sn0.7I3",
                          "BAFA10Pb11I34",
                          "FA0.83MA0.17PbBr0.52I2.48",
                          "FA0.3MA0.7PbBr2.1I0.9",
                          "CsPbBrI2",
                          "IMPbI3",
                          "CsPbBr3 | CsPb2Br5",
                          "Cs0.15FA0.75MA0.1PbI3",
                          "CsNi0.003Pb0.997Br3",
                          "MASnBr0.42I2.58",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | (mFPEA)PbI3",
                          "Cs0.05FA0.80MA0.15PbBr0.43I2.57",
                          "Cs0.88K0.12PbBr3",
                          "(CIEA)0.03MA0.97PbI3",
                          "(PyEA)2MA8Pb9I28",
                          "CsPbBrxIx",
                          "FA0.3MA0.7PbBr0.225I2.775",
                          "FA0.75MA0.75PbI3",
                          "AgCs2BiBr5.9",
                          "HA0.1MA0.9PbI3",
                          "(GABA)0.1MA0.9PbI3",
                          "FA0.83MA0.17PbBr0.03I2.97",
                          "Cs0.04FA0.96PbI3",
                          "(PEA)2MAPb2I4",
                          "Cs0.1FA0.83MA0.17PbBr0.51I0.249",
                          "FA0.85MA0.15PbBr0.5I2.5",
                          "CsAgBiBr6",
                          "FA0.55MA0.45PbI3",
                          "FAPbBr2.43Cl0.57",
                          "(F5PEA)2PbI4",
                          "FASn1.0I3",
                          "Cs0.25FA0.75PbBr0.51I2.49",
                          "MAMnI3",
                          "FA0.7MA0.3PbBr0.256I0.744",
                          "Cs0.05FA0.85MA0.1PbBr0.66I2.34",
                          "FAxMAxPbBrxIx",
                          "FA0.7MA0.3Pb0.7Sn0.3I3",
                          "FA0.3MA0.7PbBr0.3I2.7",
                          "Cs0.005Pb0.995Br3",
                          "Cs0.05FA0.7885MA0.1615PbBr0.34I2.66",
                          "AN0.06MA0.94PbI3",
                          "(f-PEA)2PbI4",
                          "MAPbBrI",
                          "BA2Cs0.15FA0.57MA2.28Pb4I13",
                          "Cs0.17FA0.83PbI3",
                          "Cs0.4FA0.6PbBr0.256I0.744",
                          "CsPbBr3I",
                          "Ca0.2MA0.8PbBr0.6I2.4",
                          "CsBa0.3Pb0.7BrI2",
                          "Ag3Bi2I9",
                          "Cs0.15FA0.85PbBr2.1I0.9",
                          "IM0.4MA0.40.6PbI3",
                          "Cs0.1FA0.75MA0.15PbBr0.45I2.55",
                          "Cs0.2FA0.32MA0.48PbBr0.2I2.8",
                          "BA2MA3Pb4I13",
                          "Cs0.14FA0.65MA0.21PbBrI2",
                          "CsPbBr2.7I0.3",
                          "FA0.83MA0.17Ge0.03Pb0.97Br0.3I2.7",
                          "CsPbBr2.8I0.2",
                          "MAHg0.05Pb0.95I3",
                          "Cs0.4MA0.6PbI3",
                          "MAPbBr0.08I2.92",
                          "Cs0.08FA0.78MA0.14PbBr0.45I2.55",
                          "MAEu0.1Pb0.9I3",
                          "Cs0.005Pb0.995Br1.99I1.01",
                          "Cs0.05FA0.79MA0.16Pb0.25Sn0.75Br0.5I2.5",
                          "CsPbBr0.75I2.25",
                          "(PEA)2PbI4 | MAPbI3",
                          "(HEA)2Cs0.9FA8.1Pb10Br3.3I29.7",
                          "Cs0.05FA0.7885MA0.16150PbBr0.51I2.49",
                          "Cs0.2FA0.8PbBr1.5I1.5",
                          "CsEu0.03Pb0.97BrI2",
                          "(PEA)0.1MA0.9SnI3",
                          "(NH4)8.5FA0.15MA2.04Pb9.5Br0.45I29.24",
                          "Cs0.25FA0.75Pb0.37Sn0.6255I3",
                          "Cs0.2FA0.8PbBr0.15I2.85",
                          "Cs0.1MA0.9Pb0.9Sn0.1Br0.2I2.8",
                          "Cs0.05FA0.79MA0.16PbBr0.52I2.48",
                          "MAPbBr0.237I2.763",
                          "CsPbBr3 | CsPbI3",
                          "FAPbBr1.25Cl0.35I1.45",
                          "Cs0.03FA0.97PbI3",
                          "Cs0.06FA0.87MA0.07PbBr0.12I2.88",
                          "FAPb0.5Sn0.5I3",
                          "FA0.75MA0.25PbI3",
                          "Cs0.04FA0.71GU0.1MA0.15PbBr0.5I2.49",
                          "EA0.5MA0.5PbBr3",
                          "Cs0.03FA0.77MA0.2PbBr0.46I2.54",
                          "Cs0.5FA0.75MA0.1PbBr0.51I2.49",
                          "MAPbBr0.06I2.94",
                          "FA0.10MA0.9PbI3",
                          "Cs0.05FA0.78MA0.13PbBr0.45I2.55",
                          "MAPb0.75Sn0.25Br1.8I1.2",
                          "CsPb0.97Zn0.03Br3",
                          "Cs0.05FA83MA17PbBr0.51I2.49",
                          "Cs0.17FA0.83PbBr0.5I2.5",
                          "FA0.85MA0.15PbBr0.45I2.55 | BA1.5FA0.5PbI4",
                          "MAFe0.1Pb0.9I3",
                          "Cs0.12FA0.88PbBr0.36I2.54",
                          "FA0.5MA0.5PbBr3",
                          "FA0.85MA0.15PbBr0.45I2.55 | (FEA)2PbI4",
                          "Cs0.15(DMA)0.85MA0.15PbI3",
                          "Ca0.05FA0.8075MA0.1425PbBr0.45I2.55",
                          "BA2Cs0.15MA2.85Pb4I13",
                          "Cs0.05FA0.79MA0.16Pb0.75Sn0.25Br0.5I2.5",
                          "MAPbBr0.09I2.1",
                          "Cs0.06FA0.58MA0.36PbBr0.12I2.88",
                          "IM0.1MA0.9PbI3",
                          "Cs0.05FA0.79MA0.16PbBr0.3I2.7",
                          "Cs0.17FA0.83Pb0.3Sn0.7I3",
                          "Cs0.05FA0.85MA0.1PbBr0.45I2.55 | (PEA)2PbI4",
                          "MABi2I9",
                          "FA0.26MA0.74PbI3",
                          "FA0.85MA0.15PbBr0.3I2.7",
                          "FA0.85MA0.15PbBr0.50I2.50",
                          "FA0.17MA0.83PbBr0.5I2.5",
                          "MA3BiI2",
                          "FA0.83MA0.17PbBr0.39I2.61",
                          "(NH4)5.1FA0.15MA1.7Pb6.1Br0.45I18.7",
                          "Cs0.05FA0.7917MA0.1583PbBr0.5I2.5",
                          "Cs0.01FA0.94Rb0.05PbI3",
                          "MABiSbI9",
                          "(NH4)3Sb2Br3I6",
                          "(PEA)0.15FA0.85SnI3",
                          "FA3OA2Sn4I13",
                          "RbPbI3",
                          "Cs0.1MA0.9PbBr0.1I2.9",
                          "(PEA)2Cs9Pb10I34",
                          "Cs0.1FA0.77MA0.13PbBr0.4I2.6",
                          "CsPbBr3 | FAPbBr3",
                          "CsSnBrI2",
                          "Cs0.2FA0.8Pb0.3Sn0.7I3",
                          "(NH4)11.9FA0.15MA1.7Pb12.9Br0.45I39.1",
                          "Cs0.05FA0.81MA0.14PbBr0.45I2.55 | CsPbBr1.85I1.15",
                          "FA0.8MA0.2PbBr0.2I2.8",
                          "Cs0.09FA0.77MA0.14PbBr0.42I2.58 | (PEA)2PbI4",
                          "BA2MA3Pb4I9",
                          "FAPbBr0.44I2.56",
                          "(PEA)2FA3Pb4I13",
                          "MAPb(BF4)2.85I0.15",
                          "(CHMA)2MA39Pb40I121",
                          "MA3Bi2I11",
                          "FA0.5MA0.5SnI3",
                          "Cs0.21Ag3Bi3.14I9",
                          "(oF1PEA)2MA4Pb4I13",
                          "HA2MA3Pb4I13",
                          "CsPbBr3 | FAPbBr1.5Cl1.5",
                          "CsFAMAPbBrI",
                          "(PEA)2Cs1.77FA57.23Pb60I181",
                          "FA0.75MA0.25SnI3",
                          "Cs0.05FA0.7885MA0.1441PbBr0.3I2.7",
                          "MAPbBr1.5I1.5",
                          "Cs0.085FA0.915PbBr0.45I2.55",
                          "(PEI)2MA6Pb7I22",
                          "MASnBr1.5Cl0.5I",
                          "Cs0.05FA0.79MA0.16PbBr0.47I2.53",
                          "Cs0.15FA0.75MA0.1PbBr0.5I2.5",
                          "(PEA)x(F5PEA)xCs0.15FA0.64MA0.2PbBr0.6I2.4",
                          "Cs0.2FA0.8PbBr1.2I1.8",
                          "CsPb0.99Sr0.01BrI2",
                          "Cs0.92K0.08PbBr3",
                          "MAHg0.075Pb0.925I3",
                          "FA0.9MA0.1PbBr0.03I2.91",
                          "Cs0.05FA0.79MA0.16PbBr2.51I2.49",
                          "FA0.95MA0.05PbBr0.1I2.9",
                          "CsBa0.1Pb0.9I3",
                          "(BYA)2MA3Pb4I13",
                          "Cs0.07FA0.93PbI3",
                          "MA2PA3Pb4I13",
                          "FAPbCl0.5I2.5",
                          "Cs0.0664FA0.8668MA0.0664PbBr0.095I0.905",
                          "(Ace)0.2MA0.8PbI3",
                          "MAPb0.9Sr0.1I3",
                          "Cs0.75FA0.25PbI3",
                          "FA0.83MA0.17PbBr0.17I2.83",
                          "(PEA)2Cs59Pb60I181",
                          "BA2MA2Pb3I9",
                          "(HEA)2Cs1.9FA17.1Pb20Br9.45I53.55",
                          "FA0.28MA0.72PbI3",
                          "(iso-BA)0.5MA0.75PbI3.25",
                          "Cs0.15FA0.85PbBr0.12I2.88",
                          "FA0.88MA0.12PbBr0.15I2.85",
                          "Cs0.92Li0.08PbBr3",
                          "Cs0.175FA0.750MA0.075PbBr0.36I2.64",
                          "(BZA)1.8(HAD)0.2MA2Pb3I10",
                          "(3AMP)MA3Pb4I13",
                          "Cs0.06FA79MA0.15PbBr0.45I2.55",
                          "FAPb0.625Sn0.375I3",
                          "(PMA)0.67FA0.33PbI3",
                          "(TBA)0.01MA0.99PbI3",
                          "Cs0.15MA0.85PbBr1.2I1.8",
                          "MAPbBr1.16I1.74",
                          "FA0.83MA0.17PbBr0.51I2.49",
                          "FA0.85MA0.15PbBr0.15I0.85",
                          "(PEA)2Pb2I4",
                          "MASbSnI9",
                          "Cs2Pb(SCN)2I",
                          "FA0.85MA0.15PbBr0.45I0.85",
                          "Cs0.88Na0.12PbBr3",
                          "nanBi2O6",
                          "CsPbBrF0.12I1.88",
                          "(PEA)2Cs0.45FA2.55Pb4I13",
                          "Cs0.25FA0.75PbBr0.60I2.40",
                          "EA0.92FA0.08SnI3",
                          "(PDA)0.05Cs0.15FA0.8PbI3",
                          "(APMim)PbBrI3",
                          "MASbI3",
                          "(PEA)1.4BA0.6MA3Pb4I13",
                          "FA0.95MA0.15PbBr0.45I2.5075",
                          "MAPbBr0.9I2.1",
                          "Cs0.05FA0.75MA0.15PbBr0.15I2.85",
                          "FA0.90TN0.10SnI3",
                          "MAMn0.1Pb0.9I3",
                          "Cs0.1FA0.9PbBr0.09I2.91",
                          "MA2Au2Br6",
                          "FA0.75MA0.25Pb0.75Sn0.25I3",
                          "FA0.85MA0.15PbBr0.55I2.55",
                          "Cs0.05FA0.38MA0.57PbBr0.2I2.8",
                          "MA2PA6Pb7I22",
                          "Cs0.04FA0.82MA0.14PbBr0.42I2.58",
                          "Cs0.05FA0.8K0.03MA0.12Ge0.03Pb0.97Br0.3I2.7",
                          "MAPbBr2.85I0.15",
                          "Cs0.05FA0.79MA0.16PbBr1.2I2.6",
                          "FA0.75MA0.25PbBr0.25I2.79",
                          "CsSnI3",
                          "(5-AVAI)0.02Cs0.05FA0.93PbI3",
                          "Cs0.05FA0.79MA0.16PbBr0.41I2.59",
                          "AN0.5MA0.5PbI3",
                          "MACo0.2Pb0.8I3",
                          "(TBA)0.1Cs0.05FA0.71MA0.14PbBr0.51I2.49",
                          "MAEu0.04Pb0.96I3",
                          "Cs0.17FA0.83Pb0.6Sn0.4I3",
                          "Cs0.1FA0.75MA0.15PbBr0.46I2.54",
                          "MA2SnI6",
                          "FA0.75MA0.25PbBr0.75I2.25",
                          "MAPbBr0.19I2.81",
                          "(5-AVA)0.05MA0.95PbI3",
                          "((CH3)3S)2SnI6",
                          "Cs0.06FA0.94PbBr0.03I2.97",
                          "AN0.15Cs0.5MA0.8PbI3",
                          "MAPbI3 | CsPbI3",
                          "FA0.2PN0.8SnI3",
                          "BA2Cs0.2FA0.6MA3.2Pb5I16",
                          "Cs0.05FA0.81MA0.14PbBr0.42I2.58",
                          "Cs0.1FA0.9PbBr0.6I2.4",
                          "(3AMP)FA0.9MA2.1Pb4I13",
                          "Cs0.02MA0.98PbBr0.06I2.94",
                          "Cs0.07FA0.785MA0.145PbBr0.45I2.55",
                          "Cs0.01Pb0.99Br1.98I1.02",
                          "FAHA2Pb2I7",
                          "Cs0.5FA0.5PbI3",
                          "Cs0.5FA0.85PbI3",
                          "FA0.2MA0.8Pb1.0I3",
                          "Cs0.1FA0.1MA0.8PbI3",
                          "CsPbBr0.21I2.79",
                          "EA2MA8Pb9I28",
                          "Cs0.15FA0.71MA0.1PbBr0.39I2.61",
                          "MAPbI3 | MAPbBr1.2I1.8",
                          "Cs0.05FA0.82MA0.13PbBr0.13I2.87",
                          "Cs0.1FA0.76MA0.14PbBr0.51I2.49",
                          "Bn2SnI4",
                          "Cs0.14FA0.83MA0.17PbBr0.51I0.249",
                          "Cs0.05FA0.79MA0.16PbBr0.51I",
                          "MACa0.02Pb0.98I3",
                          "FA0.9MA0.1PbBr0.03I2.97",
                          "CsFAPbBrClI",
                          "Cs0.15FA0.26MA0.59PbI3",
                          "MAPb0.92Sb0.08I3",
                          "(mF1PEA)MA4Pb4I13",
                          "FA0.7MA0.3PbBr0.10I2.90",
                          "CsFA0.83MA0.17PbBr0.5I2.5",
                          "Cs0.04MA0.96PbI3",
                          "PA2PbI4",
                          "(PEA)0.1FA0.15MA0.75SnI3",
                          "(PDA)0.03Cs0.15FA0.82PbI3",
                          "CsCu0.003Pb0.997Br3",
                          "AgBiI4",
                          "FA0.17MA0.83PbBr2.5I0.5",
                          "Cs0.1FA0.9PbBr0.225I2.775",
                          "(Ace)0.1MA0.9PbI3",
                          "Cs0.05FA0.8MA0.15PbBr0.55I2.55",
                          "Cs0.17FA0.83Pb0.5Sn0.5I3",
                          "Cs0.07FA0.79MA0.14PbBr0.45I2.55",
                          "MAPb0.75Sn0.25I",
                          "(PEA)2FA3Sn4I13",
                          "Cs0.17FA0.83Pb0.8Sn0.2I3",
                          "(Cl-PEA)2MA2Pb3ClI10",
                          "Cs0.05MA095PbI3",
                          "(PEA)2Cs59Pb60Br120.67I60.33",
                          "MAPbBr0.7I2.3",
                          "(ThFA)2MA2Pb2I7",
                          "(EDA)0.04FA0.29MA0.67Pb1.0I3",
                          "FA0.97MA0.03PbBr0.09I2.91",
                          "FA0.7MA0.3PbBr0.9I2.1",
                          "FA0.83MA0.17PbBr0.17I0.83",
                          "Cs0.1FA0.75MA0.15PbBr1.5I1.5",
                          "Cs0.16FA0.8MA0.04PbBr1.5I1.5",
                          "CsPb0.6Sn0.4I3",
                          "Cs0.05FA0.76MA0.16PbBr0.49I2.51",
                          "EA2MA19Pb20I61",
                          "MAPb0.375Sn0.625I3",
                          "(F-PEA)2MA2Pb3I10",
                          "Cs0.05FA0.85MA0.1PbBr0.5I2.5",
                          "FA0.92MA0.08PbI3",
                          "FA0.7MA0.3PbBr0.095I0.905",
                          "AN0.3MA0.7PbI3",
                          "Cs0.05FA0.81MA0.14PbBr0.45I2.55",
                          "FA0.6MA0.4PbBr0.4I2.6",
                          "Cs0.05FA0.79MA0.16PbBr0.30I2.70",
                          "CsPbBr1.5I1.5",
                          "(PEA)0.1FA0.9SnI3",
                          "Cs2NaBiI6",
                          "FA0.95MA0.05PbBr0.15I2.85 | BA2PbI4",
                          "MAPbI3 | MAPbBr0.9I2.1",
                          "MAPbBr2.5I0.5",
                          "Cs0.12MA0.88PbBr0.36I2.64",
                          "MA0.98PbI3",
                          "MAPbBr2.52I0.48",
                          "Cs0.17FA0.83PbBr0.17I0.83",
                          "FA0.1MA0.9PbI3",
                          "MAPbBr1.62I1.38",
                          "Cs0.1FA0.6MA0.3PbBr0.095I0.905",
                          "Cs0.05FAxMAxPbBrxIx",
                          "FA0.83MA0.17PbBr0.51I2.59",
                          "Cs0.025FA0.7MA0.25Rb0.025PbI3",
                          "MAPbI3-xClx",
                          "FA0.84MA0.16PbBr0.48I2.52",
                          "Cs0.25FA0.75PbBr0.9I2.1",
                          "IM0.2MA0.8PbI3",
                          "FA0.2MA0.8PbBr0.45I2.55",
                          "FA0.2MA0.8PbI3",
                          "MACu0.1Pb0.9I3",
                          "Cs0.08FA0.92PbBr3",
                          "FA0.83MA0.17PbBrI2",
                          "CsBi2I7",
                          "FA0.4MA0.6PbBr0.6I2.4",
                          "FAPbBr2.67Cl0.33",
                          "CsPb0.9Sn0.1Br2I",
                          "MAPbBr2.91I0.09",
                          "Cs0.15FA0.75MA0.1PbBr0.4I2.6",
                          "(EDA)0.04FA0.28MA0.68Pb1.0I3",
                          "(CHMA)2MA2Pb3I10",
                          "MAPbBr0.4I2.6",
                          "Aa0.05MA0.95PbI3",
                          "(NH4)3Sb2Br6I3",
                          "GU0.1MA0.9PbI3",
                          "HA0.2MA0.8SnI3",
                          "Cs0.1FA0.9PbBr0.3I2.7",
                          "MAGeBr0.15I2.75",
                          "CsPbI3",
                          "Cs0.04FA0.8MA0.16PbBr0.49I2.51",
                          "MASnBr2I",
                          "Cs0.12FA0.83MA0.05PbBr1.2I1.8",
                          "Cs0.05FA0.88MA0.07PbBr0.24I2.76",
                          "Cs0.45FA0.55PbI3",
                          "MACo0.063Pb0.937I3",
                          "Cs0.05FA0.827MA0.123PbBr0.369I2.631",
                          "MAPb0.99Sr0.01I3",
                          "MAPbBr0.09I2.91",
                          "Cs0.05FA0.75MA0.2PbI3",
                          "MASb1.2Sn0.8I9",
                          "(TBA)0.1MA0.9PbI3",
                          "Cs0.99Rb0.01PbBrI2",
                          "Cs0.02FA0.98PbI3 | Cs0.57FA0.43PbI3",
                          "(PDA)MA3Pb4I13",
                          "MAPbISCN",
                          "Cs0.17FA0.83PbBr0.30I2.7",
                          "FAPbI3 | EDA22Pb3I10",
                          "(CPEA)2MA5Pb6I19",
                          "MACu0.0118Pb0.9882Br0.2I2.8",
                          "(DPA)2MA3PAPAPb4I13",
                          "FA0.85MA0.15PbBr0.27I2.73",
                          "(C6H4NH2)CuBr2I",
                          "Cs0.25FA0.75PbBr0.6I2.40",
                          "BA2MA2Pb3I10",
                          "(3AMP)FA0.75MA2.25Pb4I13",
                          "MACo0.016Pb0.984I3",
                          "MAPbBr0.02I2.98",
                          "(CIEA)0.05MA0.95PbI3",
                          "Cs0.07FA0.93PbBr0.06I2.94",
                          "nanCu3SbI6",
                          "Cs0.05MA0.95PbBr0.9I2.1",
                          "Cs0.11FA0.74MA0.15PbBr0.51I2.49",
                          "Cs0.15FA0.85PbBr0.81I2.19",
                          "Cs0.05Pb0.95Br1.9I1.1",
                          "(PBA)2MA3Pb4I13",
                          "CsGe0.3Pb0.7BrI2",
                          "MAPbBr1.26I1.74",
                          "Cs0.05FA0.93GA0.02PbI3",
                          "MACa0.10Pb0.90I3",
                          "MAPbI3 | MAPbI3",
                          "FA0.25MA0.75Pb0.75Sn0.25I3",
                          "(PEA)0.6BA1.4FA3Sn4I13",
                          "MAPbBr0.39I2.61",
                          "Cs0.97Rb0.03PbBr3",
                          "(4ApyH)SbI4",
                          "Cs0.17FA0.83PbBr0.81I2.19",
                          "FA0.87MA0.13PbBr0.51I2.49",
                          "AgCs2Bi0.75Sb0.25Br6",
                          "FA0.84MA0.16PbBr0.5I1.5",
                          "Cs0.1FA0.75MA0.15Pb0.25Sn0.75Br0.5I2.5",
                          "MAPb0.93Sb0.07I3",
                          "(PEA)2Cs79Pb80I241",
                          "FA0.3MA0.67PbI3",
                          "CsPbBrF1.88I0.12",
                          "(H-PEA)2MA2Pb3I10",
                          "Cs0.05FA0.75MA0.2PbBr0.3I2.7",
                          "(BEA)2MA3Pb4I13",
                          "FAPbBr1.25Cl0.25I1.5",
                          "EA0.4MA0.6PbI3",
                          "Cs0.79FA0.16MA0.1PbBrI2",
                          "MAPb1.0Br0.6I2.4",
                          "Cs0.05FA0.78MA0.16PbBr0.5I2.5",
                          "FA0.8MA0.8PbBr0.06I2.96",
                          "Ca0.05MA0.95PbBr0.15I2.85",
                          "MAPbBr0.30I2.70",
                          "FA0.3MA0.7Pb1.0I3",
                          "FA0.7MA0.3Pb0.5Sn0.5I3",
                          "KBABiTeO6",
                          "CsPb0.97Tb0.03Br3",
                          "MAPbBr0.2I2.7",
                          "MA2PA4Pb5I16",
                          "Cs0.30FA0.70PbI3",
                          "Cs0.07FA0.81MA0.1146PbBrI2",
                          "FA0.8MA0.2PbBr0.45I2.55",
                          "MAPbI3 | (PEA)2PbI4",
                          "Cs0.05FA0.95PbBr0.15I2.85",
                          "(PDA)0.04Cs0.15FA0.81PbI3",
                          "Cs0.05FA0.79MA0.17PbBr0.5I2.5",
                          "Cs0.3FA0.6MA0.1PbBr0.256I0.744",
                          "MA3Bi2I9",
                          "BAGUMA4Pb5I16",
                          "MAPb1.0Br0.3I2.7",
                          "Cs0.05FA0.65MA0.3PbBr0.15I2.85",
                          "CsPb0.98Sr0.02BrI2",
                          "MAPbBr0.075I2.95",
                          "(CPEA)2MA2Pb3I10",
                          "Cs0.15FA0.71MA0.14PbBr0.45I2.55",
                          "MAPbBr0.03I2.7",
                          "AN0.4MA0.6PbI3",
                          "Cs0.05MA0.95PbI3",
                          "Cs0.07FA0.78MA0.15PbBr0.45I2.55",
                          "Cs0.05FA0.79MA0.11Rb0.05PbBr0.39I2.61",
                          "(APMim)PbBr2I3",
                          "Cs0.05FA0.80MA0.15PbI2.55",
                          "Cs0.1FA0.9PbI3 | (PEA)2PbI4",
                          "(CPEA)2MA4Pb5I16",
                          "Cs0.05FA0.83MA0.17PbI3",
                          "Cs0.05FA0.81MA0.14PbBr0.57I2.43",
                          "(TBA)0.3MA0.7PbI3",
                          "Cs0.1FA0.77MA0.13PbBr0.39I2.48 | (PEA)2PbI4",
                          "Cs0.05FA0.81MA0.14PbBr0.39I2.61",
                          "Cs0.07FA0.785MA0.115PbBr0.45I2.55",
                          "MAPbBr0.75I2.25",
                          "BA2Cs0.08MA3.92Pb5I16",
                          "Cs0.05FA0.92MA0.3PbBr0.09I2.91",
                          "FA0.57MA0.43PbBr0.04I2.96",
                          "BDACs4Pb5Br4.8I11.2",
                          "IM0.03MA0.97PbI3",
                          "(PBA)BAMA3Pb4I13",
                          "MAPbBr0.15I2.85",
                          "Cs0.32FA0.58GA0.1PbBr0.81I2.19",
                          "FA0.6MA0.4Sn0.6I3",
                          "GU0.17MA0.83PbI3",
                          "Cs0.04FA0.80MA0.16PbBr0.51I2.49",
                          "FAxMAPbBrxI",
                          "BAMA3Pb4I13",
                          "Cs0.02MA0.98PbI3",
                          "AgCs2Bi0.5Sb0.5Br6",
                          "MAPbBr0.033I2.97",
                          "Cs0.05FA0.83MA0.17PbBr0.45I2.55",
                          "EA0.5MA0.5PbI3",
                          "FA0.83MA0.17PbBr2.5I0.5",
                          "(BZA)1.9(HAD)0.1MA2Pb3I10",
                          "GUPb(SCN)2.6I0.4",
                          "MAPbI3 | MABaPbI3",
                          "FA0.9MA0.1PbBr0.256I0.744",
                          "FA3Bi2I9",
                          "Cs0.10FA0.75MA0.15PbBr0.51I2.49",
                          "Cs0.04FA0.92MA0.04PbI3 | (FEA)2PbI4",
                          "MAPbI3 | MAPbBr3",
                          "Cs0.1FA0.81MA0.09PbBr0.17I2.83",
                          "Cs0.1FA0.75MA0.15PbBrI2",
                          "CsPb0.5Sn0.5BrI2",
                          "(EDA)0.01FA0.29MA0.7Pb1.0I3",
                          "Cs0.1MA0.9PbI3",
                          "(PEA)0.1FA0.15MA0.75SnBr0.24I2.76",
                          "Cs0.01FA0.99PbI3",
                          "CsPb1.0Br1.8I1.2",
                          "BAFA60Pb61Cl4I180",
                          "FA0.98MA0.02PbBr0.06I2.94",
                          "(PEA)2MA39Pb40I121",
                          "FA0.85MA0.10PbBr0.3I2.7",
                          "MA0.1Mg0.1Pb0.9I3",
                          "MAPbBr0.60I2.40",
                          "Cs0.075FA0.75MA0.175PbBr0.33I2.67",
                          "Cs0.2FA0.8PbI3",
                          "Cs0.025FA0.475MA0.5Pb0.5Sn0.5I3",
                          "MA2CuBr3.5Cl0.5",
                          "FA0.95MA0.05PbBr0.15I2.85 | DA2PbI4",
                          "(PDA)MAPb2I7",
                          "MAPb0.2Sn0.8Br0.4I2.6",
                          "CsPb1.0Br1.5I1.5",
                          "FA0.8MA0.2PbBr0.095I0.905",
                          "MASnF0.4I2.6",
                          "BU2FA8Pb9I28",
                          "MASnBr2.64I0.36",
                          "(4AMP)MA2Pb3I10",
                          "Cs0.15FA0.85PbBr0.45I2.55",
                          "BA2MA3Pb4I12",
                          "Cs0.05FA0.07MA0.25PbI3",
                          "Cs0.04FA0.96PbBr3",
                          "Cs2Bi3I9",
                          "MABa0.01Pb0.99I3",
                          "Cs0.05FA0.79MA0.16Pb0.748Sn0.252Br0.52I2.48",
                          "Cs0.2FA0.8PbBr1.05I1.95",
                          "FA0.1MA0.9Pb1.0I3",
                          "FA0.78MA0.21PbBr0.21I2.79",
                          "BA2Cs0.3FA1.7Pb1.8Sn1.2I10",
                          "MA0.1Mn0.1Pb0.9I3",
                          "(BEA)0.5MA3Pb3I10",
                          "FA0.38MA0.62PbI3",
                          "MAPbBr0.43I2.57",
                          "FA0.81MA0.19Pb0.57I2.33",
                          "FAPbI3",
                          "Cs0.05FA0.79MA0.16PbBr0.6I2.4",
                          "Cs0.2FA0.72MA0.08PbBr0.03I2.97",
                          "Cs0.133FA0.733MA0.133PbBr0.095I0.905",
                          "CsPbI3 | FAPbI3",
                          "MAPb0.9Sn0.1I3",
                          "(ThMA)2MA2Pb3I10",
                          "Cs0.32FA0.58GU0.1PbBr0.81I2.19",
                          "Cs0.1FA0.75MA0.13PbBr0.45I2.55",
                          "GU0.50MA0.50PbI3",
                          "MA0.05Pb0.95I3",
                          "Cs0.06FA0.94PbI3",
                          "(HEA)2Cs2.9FA26.1Pb30Br9.3I83.7",
                          "Cs0.17FA0.83Pb0.9999Sn0.0001I3",
                          "Cs0.1FA0.135MA0.765PbBr0.45I2.55",
                          "MAPb0.50Sn0.50Br1.2I1.8",
                          "FA0.81MA0.15PbBr0.45I2.55",
                          "nanPb2I8",
                          "(TBA)0.5Cs0.03FA0.4MA0.08PbBr0.51I2.49",
                          "Cs0.80K0.20PbBr3",
                          "MAPbCl0.06I2.94",
                          "Cs0.05FA0.85MA0.1PbBr0.03I2.97",
                          "(Anyl)2MA2Pb3I9",
                          "Cs0.1FA0.54MA0.36PbI3",
                          "CsBi0.06Pb0.94I3",
                          "Cs0.67FA0.33PbBr0.75I2.25",
                          "CsFASnI3",
                          "Cs0.1FA0.65MA0.25PbI3",
                          "Cs0.05FA0.77MA0.16PbBr0.48I2.52",
                          "MAPb0.85Sn0.15I3",
                          "FAPbBr0.45I2.55",
                          "(N-EtPy)SbBr6",
                          "MAPbBr3",
                          "MAPbBr0.33I2.67",
                          "MAPb0.25Sn0.75I3",
                          "Cs0.14FA0.83MA0.03PbBr0.51I2.49",
                          "Cs0.05FA0.89MA0.06PbBr0.18I2.82",
                          "FA0.2MA0.8PbBr0.15I2.85",
                          "Cs0.15FA0.8GA0.05PbBr0.45I2.55",
                          "(THM)0.1MA0.9PbI3",
                          "(BZA)1.95(HAD)0.05MA2Pb3I10",
                          "FAMAPbBr3I",
                          "Cs0.05MAPbBr0.45I2.55",
                          "Cs0.05FA0.6MA0.35PbBr0.3I2.7",
                          "Cs0.20FA0.80PbBr1.2I1.8",
                          "Cs0.4FA0.6PbBr0.9I2.1",
                          "FAPbI3 | (PEA)2PbI4",
                          "Cs0.5Rb0.5SnI3",
                          "Cs0.1MA0.9SnI3",
                          "Cs0.05FA0.79MA0.12PbBr0.39I2.61",
                          "CsCa0.03Pb0.97Br3",
                          "Cs0.05FA0.79MA0.15PbBr0.45I2.55",
                          "Cs0.15FA0.85PbI3",
                          "MASbI2",
                          "MA0.125Pb0.875I3",
                          "MACu0.05Pb0.95Br0.05I2.95",
                          "(DAP)PbI4",
                          "Cs0.05FA0.7885MA0.1615PbBr0.51I2.49",
                          "AN0.09MA0.91PbI3",
                          "Cs0.07FA0.81MA0.12PbBr0.38I2.62",
                          "MASb1.6Sn0.4I9",
                          "(NMA)2MA39Pb40I121",
                          "MAPbI3 | (EU-pyP)2PbI4",
                          "Cs0.15FA0.85PbBr0.3I2.7",
                          "FASnBr0.24I2.76",
                          "FA0.5MA0.5PbI3",
                          "FAMAPbBrI",
                          "MAGeBr0.3I2.9",
                          "Cs0.091FA0.758MA0.152PbI3",
                          "Cs0.17FA0.83PbBr1.8I1.2",
                          "BDACs2Pb3Br3I7",
                          "FA0.85GU0.15SnI3",
                          "MAPb0.95Sn0.05Br0.1I2.9",
                          "Cs0.2FA0.2MA0.6PbI3",
                          "Cs0.05FA0.95SnI3",
                          "MAPb0.8Sr0.2I3",
                          "Ag2BiI5",
                          "Cs0.05FA0.85MA0.10PbBr0.45I2.55",
                          "Cs0.05FA0.81MA0.14PbBr0.4I2.6",
                          "Cs0.07FA0.7MA0.23PbBr0.69I2.31",
                          "FA0.65MA0.35PbI3",
                          "(TMA)SnI3",
                          "(PEI)2MA2Pb2I10",
                          "(AVA)2PbI4 | MA1Pb1I3 | (BI)2PbI4",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | BAPbI4",
                          "CsPbBr3 | FAPbBr1.5I1.5",
                          "MAPbI3 | (BI)2PbI2",
                          "GU0.14MA0.86PbI3",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | CsPbI3",
                          "GU0.125MA0.875PbI3",
                          "Cs0.05FA0.79MA0.16PbBr1.5I1.5",
                          "CsSn0.05I2.95",
                          "MAPbBr0.25I2.75",
                          "Cs0.2FA0.8PbBr0.3I2.7",
                          "Cs0.3FA0.7Pb0.7Sn0.3I3",
                          "Cs0.25FA0.75Pb0.6Sn0.4I3",
                          "Cs0.04FA0.82MA0.14PbBr0.45I2.55",
                          "Cs0.0664FA0.666MA0.2668PbBr0.256I0.744",
                          "Cs0.05FA0.79MA0.16PbBr0.75I2.25",
                          "FA0.1MA0.9PbI3 | TAPbI3",
                          "Cs0.05FA0.79MA0.16PbBr0.45I2.55",
                          "Cs0.05FA0.87MA0.0782PbBrI2",
                          "MAPbI3 | (C4H9N2H6)PbI4",
                          "Cs0.6MA0.4PbI3",
                          "BA2MA4Pb5I16",
                          "((CH3)3S)2SnBr2I4",
                          "Cs0.05FA0.05MA0.9PbBr0.05I2.95",
                          "MAPbBr0.2I2.8",
                          "MAPb0.5Sn0.5Br0.6I2.4",
                          "(Ace)0.15MA0.85PbI3",
                          "CsPbBr",
                          "EA2MA2Pb3I10",
                          "Cs0.05FA0.788MA0.162PbBr0.5I2.5",
                          "DI2FA8Pb9I28",
                          "MAPbI3 | CsPbBr3",
                          "Ca0.1MA0.9PbBr0.3I2.7",
                          "(PEA)1.8BA0.2MA3Pb4I13",
                          "Cs0.09FA0.58MA0.33PbBr0.65I2.35",
                          "CsPbBrF1.78I0.22",
                          "FA0.9MA0.1PbI3",
                          "CsSnBr0.5I2.5",
                          "FAPbBr0.15I2.85",
                          "Cs0.30MA0.70PbI3",
                          "(NH4)10.2FA0.15MA1.7Pb11.2Br0.45I34",
                          "FA0.96MA0.04PbBr0.12I2.88",
                          "Cs0.05FA0.79MA0.16Pb0.54I2.46",
                          "CsLa0.02Pb0.98BrI2",
                          "MAPbBr0.04I2.96",
                          "MAPb0.4Sn0.6Br0.9I2.1",
                          "IM0.025MA0.0250.975PbI3",
                          "AN0.2MA0.8PbI3",
                          "Cs0.02FA0.98PbI3",
                          "FA0.6MA0.4PbBr1.2I1.8",
                          "(DMA)0.05MA0.95PbI3",
                          "BA2MA2Sn3I10",
                          "Cs0.94Na0.06PbBr3",
                          "FA0.75MA0.25Ge0.2Sn0.8I3",
                          "MAPb0.75Sn0.25I3",
                          "(PEA)2Cs3Pb4I13",
                          "FA0.125MA0.875PbI3",
                          "(CHMA)2MA3Pb4I13",
                          "FA0.6MA0.4Pb0.4Sn0.6Br0.48I2.52",
                          "Cs0.05FA0.49MA0.16PbBr0.51I2.49",
                          "Cs0.05FA0.83MA0.12PbBr0.36I2.64",
                          "Ag2Bi3I11",
                          "(PEA)FASnI3",
                          "Cs0.05FA0.79MA0.16PbI3",
                          "Cs0.15FA0.75MA0.1PbBr0.1I2.9",
                          "Cs0.15FA0.71MA0.14PbBr0.75I2.25",
                          "MAGeBr0.3I2.7",
                          "Cs0.05FA0.81MA0.14PbBr0.45",
                          "MAPb0.5Sb0.5I3",
                          "(PEA)2MA5Pb4Cl2I10 | MA3PbCl2",
                          "FA0.38MA0.57PbI3",
                          "Cs0.025FA0.81MA0.15PbBr0.45I2.5",
                          "BA2Cs4MA35Pb40I121",
                          "Cs0.05FA0.79MA0.16PbBr0.39I2.61",
                          "AgCs1.7Rb0.3BiBr6",
                          "Cs0.09MA0.91PbI3",
                          "(NH4)1.7FA0.15MA1.7Pb2.7Br0.45I8.5",
                          "GU0.05MA0.95PbI3",
                          "Cs0.13FA0.87PbBrI2",
                          "MAPbI3",
                          "Cs0.05FA0.8MA0.15PbBr0.75I1.25",
                          "MAPbBr2.25I0.75",
                          "(ThMA)2FA4Pb5I16",
                          "Cs0.21FA0.56MA0.23PbBr0.06I2.94",
                          "(BDA)MA3Pb4I13",
                          "Cs0.15FA0.8Rb0.05PbI3",
                          "MABa0.1Pb0.9I3",
                          "(PEA)xCs0.15FA0.64MA0.2PbBr0.6I2.4",
                          "Cs0.05MA0.95Pb0.95Sn0.05Cl0.1I2.9",
                          "Cs0.08FA0.81MA0.12PbBr0.35I2.65",
                          "Cs0.3FA0.6MA0.1PbBr0.095I0.905",
                          "GU0.2MA0.8PbI3",
                          "FA0.5MA0.5PbI4",
                          "FA0.67MA0.33PbBr0.5I2.5",
                          "Cs0.05FA0.7885MA0.1615PbBr0.1I0.9",
                          "FA0.9MA0.1PbBr0.3I2.7",
                          "(NH4)6.8FA0.15MA2.04Pb7.8Br0.45I24.14",
                          "FA0.65K0.2MA0.15PbBr0.55I2.55",
                          "FA0.625MA0.935PbI",
                          "(HEA)2Cs1.9FA17.1Pb20Br6.3I56.7",
                          "FA0.975MA0.025PbI3",
                          "Cs0.02Pb0.98Br1.96I1.04",
                          "FA0.95MA0.05PbBr0.15I2.85 | OA2PbI4",
                          "FA0.95MA0.05PbBr0.15I2.85",
                          "CsLa0.03Pb0.97BrI2",
                          "FA0.75MA0.15PbBr0.45I",
                          "Cs0.05FA0.79MA0.160Pb1.0Br0.3I2.7",
                          "(PEA)2MAPbI4",
                          "Cs0.25FA0.75PbBrI2",
                          "Cs0.94Rb0.06PbBr3",
                          "Cs0.05FA0.15MA0.8PbI3",
                          "(NH4)3.4FA0.15MA2.04Pb4.4Br0.45I13.94",
                          "CsPb0.997Zn0.003Br3",
                          "CsBi3I10",
                          "Cs0.15FA0.75MA0.1PbBr0.3I2.7",
                          "CsPb0.3Sn0.7I3",
                          "Cs0.15FA0.85SnI3",
                          "Cs0.06FA0.79MA0.15PbBr0.45I2.55",
                          "CsCu0.01Pb0.99Br3",
                          "FA0.17MA0.83PbBr1.5I1.5",
                          "Cs0.15FA0.85PbBr0.25I2.75",
                          "CsPb0.75Sn0.25Br2I",
                          "MAPbCl3",
                          "FA0.14MA0.86PbBr0.42I2.58",
                          "MAHgI3",
                          "Cs0.23MA0.77PbI3",
                          "GUPb(SCN)1.8I1.2",
                          "(DMA)0.075MA0.925PbI3",
                          "(PEA)2Cs39Pb40Br40.33I80.67",
                          "(TFEA)2Cs0.225FA7.425MA1.35Pb10Br4.65I26.35",
                          "FA0.9GU0.1SnI3",
                          "MA3Bi2I13",
                          "Cs3Bi2I9",
                          "BA2PbI4",
                          "FA0.7MA0.3PbI3",
                          "Cs0.1FA0.9PbBr0.9I2.1",
                          "FASnBrI2",
                          "FAPb0.375Sn0.625I3",
                          "Cs0.2FA0.8PbBr0.32I2.68",
                          "Cs0.2FA0.6MA0.2PbBr0.256I0.744",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | PA2PbI4",
                          "MAPb0.98Zn0.02I3",
                          "(n-C3H7NH3)PbCl3",
                          "(PTA)2MA3Pb4I13",
                          "Cs0.2FA0.8PbBr0.256I0.744",
                          "Cs0.1MA0.9Pb0.25Sn0.75I3",
                          "((CH3)3S)2SnBrI5",
                          "MAPbI3 | FAPbBrI2",
                          "FA0.83MA0.17PbBr0.51",
                          "FA0.1MA0.9PbBr0.3I2.9",
                          "BA2CsPb2I7",
                          "MAPbI3 | (BEA)PbI4",
                          "Cs0.10MA0.90PbI3",
                          "CsPb0.97Sr0.03Br3",
                          "FA0.67MA0.33PbBr0.33I2.67",
                          "Cs0.05FA0.83MA0.12PbBr0.5I2.5",
                          "CsBi0.04Pb0.96I3",
                          "(TBA)0.3Cs0.04FA0.55MA0.11PbBr0.51I2.49",
                          "MAPbI3 | (MIC1)2PbI4",
                          "Ag3BiI3(SCN)3",
                          "FAPbBr0.6I2.4",
                          "Cs0.003Pb0.997Br3",
                          "CsNi0.005Pb0.995Br3",
                          "Cs0.05FA0.788GU0.032MA0.129PbBr0.51I2.49",
                          "Cs0.07FA0.73MA0.20PbBr0.47I2.53",
                          "FA0.02MA0.98PbI3",
                          "FA0.975MA0.025PbBr0.075I2.925",
                          "Cs0.17FA0.83Pb0.98Sn0.02I3",
                          "MAPb0.95Sn0.05I3",
                          "Cs0.10FA0.81MA0.09PbBr0.03I2.97",
                          "(NH4)6.8FA0.15MA1.7Pb7.8Br0.45I23.8",
                          "FAPbBr0.25I2.75",
                          "MAPb0.2Sn0.8I3",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | (oFPEA)PbI3",
                          "MAPb1.0Br0.66I2.33",
                          "BA2FA3Sn4I13",
                          "MAPbBr0.11I2.89",
                          "Cs0.10MA0.90Pb(SCN)0.15I2.85",
                          "(PEA)2Cs99Pb100I301",
                          "MAPbBr0.51I2.49",
                          "FA0.85MA0.15PbBr0.45I2.45",
                          "FA0.88MA0.12PbI3",
                          "Cs0.05FA0.79MA0.16Pb1.0Br0.51I2.49",
                          "MAPbI3 | (MIC3)2PbI4",
                          "FAPbBr0.095I0.905",
                          "FAPb0.4Sn0.6I3",
                          "MAPb0.8Sn0.2I3",
                          "MAPb0.75Sn0.25Br0.9I2.1",
                          "Ag2CsSb2I3",
                          "Cs0.17FA0.83PbBr1.5I1.5",
                          "Cs0.08MA0.92PbBr0.24I2.76",
                          "Cs0.05FA0.70MA0.25PbI3",
                          "MAPb0.4Sn0.6I3",
                          "MAPb0.97Zn0.03I3",
                          "MACu0.05Pb0.95Br0.1I2.9",
                          "FA0.85MA0.15Pb0.45I2.55 | (NH4)8FA2.4Pb9I28.4",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | (PEI)2PbI4",
                          "Cs0.02FA0.82MA0.16PbBr0.51I0.249",
                          "Cs0.88FA0.12PbI3 | Cs0.88FA0.12PbIx(PF6)x",
                          "FA0.97MA0.03PbBr2.91I0.09",
                          "FA0.976MA0.024PbBr0.075I2.925",
                          "CsPbBr0.6I2.4",
                          "FA0.94MA0.6PbBr0.06I2.94",
                          "(PEA)0.5MA0.5PbI3",
                          "FA0.67MA0.33PbI3",
                          "Cs0.17FA0.83PbBr0.45I2.55",
                          "FA0.94MA0.06PbBr0.06I",
                          "FA0.9MA0.1PbBr0.1I2.9",
                          "Cs0.05FA0.81GU0.025MA0.11PbBr0.39I2.61",
                          "(PEA)2Cs59Pb60Br181",
                          "FA0.85MA0.15PbBr0.03I2.97",
                          "HDABiI5",
                          "CsPb0.93I3",
                          "FA0.33PbBr3",
                          "MAPbBr0.075I2.925",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | (PEA)PbI3",
                          "CsCu0.03Pb0.97Br3",
                          "(HEA)2Cs1.9FA17.1Pb20Br0I63",
                          "FA0.6MA0.4Pb0.4Sn0.6Br0.18I2.82",
                          "(PyrEA)PbI4",
                          "BA2MA3Pb4.0I13",
                          "FA0.1MA0.9Pb0.9Sn0.1I3",
                          "(TBA)0.2Cs0.04FA0.63MA0.13PbBr0.51I2.49",
                          "BA2Cs1.5MA2.85Pb4I13",
                          "(NH4)3.4FA0.15MA1.7Pb4.4Br0.45I13.6",
                          "(PEA)0.4MA0.6PbI3",
                          "FA0.58MA0.42PbI3",
                          "Cs0.05FA0.7MA0.25PbI3",
                          "Cs0.05FA0.85MA0.15PbBr0.75I2.25",
                          "FA0.6MA0.4PbSn0.6I0.4",
                          "CsGe0.5Sn0.5I3",
                          "CsPbBrF0.22I1.78",
                          "GAMA4Pb4I13",
                          "BA2MA10Pb11I34",
                          "EA3MA2NEAPb4I13",
                          "MA2PbI4",
                          "Cs0.15FA0.85PbBr0.15I2.85",
                          "MASb1.8Sn0.2I9",
                          "FA0.75MA0.25Ge0.05Sn0.95I3",
                          "CsPb0.25Sn0.75Br2I",
                          "Cs0.2FA0.66MA0.14PbBr0.5I2.5",
                          "Cs0.0664FA0.666MA0.2668PbBr0.095I0.905",
                          "FA0.83MA0.17PbI3",
                          "MAPb1.0Br0.45I2.55",
                          "Cs0.05FA0.80MA0.15PbI3",
                          "Cs0.1MA0.90PbBr0.3I2.70",
                          "FA0.85MA0.15PbI5",
                          "Cs0.06FA0.78MA0.16PbI3",
                          "(PEA)0.1MA0.9PbI3",
                          "Cs0.84K0.16PbBr3",
                          "Cs0.17FA0.83Pb0.99999Sn0.00001I3",
                          "(BDA)MAPb2I7",
                          "FA0.2MA0.8PbBr0.3I2.9",
                          "BDACs3Pb4Br3.9I9.1",
                          "Cs0.1FA0.747MA0.153PbBr0.17I0.83",
                          "FAPbBr1.5I1.5",
                          "MA0.03Mg0.03Pb0.97I3",
                          "(1.3-Pr(NH3)2)0.5Pb1.0I3",
                          "FA0.83MA0.17PbBr0.6I2.4",
                          "Cs0.20MA0.80PbI3",
                          "FA0.1MA0.9PbBrI2.8",
                          "MAPb0.75Sn0.25Br0.6I2.4",
                          "Cs0.15MA0.85PbI3",
                          "(NH4)6.8FA0.15MA1.275Pb7.8Br0.45I23.375",
                          "CsPbBr0.3I2.7",
                          "FA0.84MA0.16PbBr0.50I2.50",
                          "Cs0.07FA0.775MA0.145PbBr0.45I2.55",
                          "FA0.7MA0.3PbBr0.3I2.9",
                          "(pF1PEA)2MA4Pb4I13",
                          "(ALA)2MA3Pb4I13",
                          "FA0.9MA0.1PbBr0.095I0.905",
                          "CsHA2Pb2I7",
                          "Cs0.175FA0.75MA0.075PbBr0.33I2.67",
                          "MA2PA8Pb9I28",
                          "(IEA)2MA2Pb2I7",
                          "FAMAPbI3",
                          "FA0.3MA0.7PbBr0.45I2.55",
                          "MAPb0.97Sn0.03Br0.06I2.94",
                          "MAPb0.6Sn0.4Br0.4I2.6",
                          "MAPb0.4Sn0.6Br2.1I0.9",
                          "Cs0.25FA0.75PbBr0.3I2.7",
                          "Cs0.25FA0.75PbI3 | CsPbI3",
                          "Cs0.1FA0.9PbBr3",
                          "(TEA)2MA3Pb4I14",
                          "Cs0.06FA0.77MA0.17PbBr0.17I0.83",
                          "Cs0.05FA0.79MA0.16Pb0.84Sn0.84Br0.52I2.48",
                          "FA0.85MA0.15PbBr0.15I2.85",
                          "Cs0.08FA0.92SnI3",
                          "Cs0.05FA0.5MA0.45Pb0.5Sn0.5I3",
                          "CsPbBr0.2I2.8",
                          "HA2MAPb2I7",
                          "CsPbBr1.5I1.5 | FAPbBr1.5I1.5",
                          "Cs0.05FA0.788GU0.129MA0.032PbBr0.51I2.49",
                          "Cs0.15MA0.85PbBr0.45I2.55",
                          "(Anyl)2PbI3",
                          "MAPb0.93Sb0.03I3",
                          "MAPb0.25Sb0.75I3",
                          "Cs0.5FA0.5PbBr0.51I2.49",
                          "MA0.75Sn0.25I3",
                          "Cs0.07FA0.81MA0.12PbBr0.39I2.61",
                          "(Cl-PEA)2MA3Pb4I13",
                          "MAPbBr0.06I2.24",
                          "Cs0.05FA0.83MA0.12PbBr0.49I2.51",
                          "Cs0.05FA0.8MA0.15PbBr0.15I0.85",
                          "MAPb0.75Sn0.25Br0.3I2.7",
                          "Cs0.45FA0.55PbBr0.15I2.85",
                          "MAHg0.2Pb0.8I3",
                          "CsBa0.4Pb0.6BrI2",
                          "Cs0.05MA0.95PbBr1.2I1.8",
                          "Cs0.05FA0.28MA0.67PbI3",
                          "FA0.8MA0.15PbBr0.45I2.55",
                          "Ag4Bi7I25",
                          "FA0.82MA0.18PbBr0.53I2.47",
                          "FA0.95GU0.05SnI3",
                          "Cs0.17FA0.83MAPbBr2.59I0.51",
                          "FA0.8MA0.2PbBr0.6I2.4",
                          "FA0.81MA0.19PbBr0.5I2.5",
                          "AgCs1.9Rb0.1BiBr6",
                          "FA0.5MA0.5PbBr0.45I2.55",
                          "FA0.5MA0.5Pb0.5Sn0.5I3",
                          "AgCs2BiBr5.5",
                          "CsPbBr0.15I2.85",
                          "Cs0.1MAPbBr0.45I2.55",
                          "FA0.4MA0.6PbBr0.1I2.9",
                          "MAPb0.96Sb0.04I3",
                          "FA0.85MA0.15Pb0.6Sn0.4Br0.45I2.55",
                          "FABi3I10",
                          "FA0.285GU0.05MA0.665PbI3",
                          "Cs0.96Li0.04PbBr3",
                          "CsPb0.995Zn0.005Br3",
                          "Cs0.1FA0.2MA0.7PbI3",
                          "MASnCl3",
                          "MAPb0.9Sb0.1I3",
                          "FA0.25MA0.75PbI",
                          "FA0.5MA0.5PbBr0.25I2.75",
                          "MAPbBr1.2I1.8",
                          "(GABA)0.5MA0.5PbI3",
                          "MAPb(BF4)2.80I0.2",
                          "EA0.3MA0.7PbI3",
                          "Cs0.05FA0.80MA0.15PbBr0.51I2.49",
                          "Cs0.07FA0.78MA0.15PbBr0.51I2.49",
                          "Cs0.225FA0.75MA0.025PbBr0.33I2.67",
                          "FA0.3MA0.7PbI3",
                          "MAPbBr0.6Cl2.4",
                          "HA2PbI4",
                          "Cs0.05FA0.8MA0.15PbBr0.5I2.5",
                          "FA0.5MA0.5PbBr1.5I1.5",
                          "Cs0.05FA0.8MA0.15PbI3",
                          "Cs0.05FA0.19MA0.76PbI3",
                          "Cs0.24FA0.76PbI3",
                          "FA0.83MA0.17PbBr2I",
                          "Cs0.05FA0.788GU0.065MA0.097PbBr0.51I2.49",
                          "Cs0.1FA0.75MA0.15PbBr0.5I2.5",
                          "((CH3)3S)2SnCl2I4",
                          "Cs0.06FA0.67MA0.27PbBr0.3I2.7",
                          "Cs0.1FA0.7MA0.2Pb0.5Sn0.5I3",
                          "(5-AVA)2FA4Sn5I16",
                          "FA0.81MA0.15PbBr0.45I2.51",
                          "FA0.6MA0.4Pb0.6Sn0.6I3",
                          "MAPbBr2.1I0.9",
                          "Cs0.05FA0.875MA0.075PbBr0.225I2.775",
                          "FA0.75MA0.25PbBr0.25I2.75",
                          "MAPb(BF4)2.90I0.1",
                          "Cs0.02FA0.37MA0.61PbBr0.04I2.96",
                          "Cs0.06FA0.78MA0.16PbBr0.54I2.46",
                          "GUMA3Pb3I10",
                          "FAPb0.2Sn0.8I3",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | (CH3)3SPbI3",
                          "MACu0.05Pb0.8Sn0.15Br0.1I2.9",
                          "Cs0.2FA0.8PbBr0.095I0.905",
                          "Cs0.05FA0.79MA0.16Pb0.832Sn0.168Br0.52I2.48",
                          "Cs0.15FA0.85PbBr0.9I2.1",
                          "Cs0.04FA0.81MA0.14PbBr0.43I2.57",
                          "CsGe0.1Pb0.9BrI2",
                          "Cs0.05FA0.81MA0.14PbBr0.43I2.57",
                          "FA0.5MA0.5PbBr2I",
                          "FABi0.05Pb0.95I3",
                          "FAPbBr0.05I2.95",
                          "Cs0.05MA0.95PbBr0.3I2.7",
                          "Cs0.05FA0.7885MA0.1615PbI3",
                          "Cs0.75MA0.25PbI3",
                          "MAPbBr0.36I2.64",
                          "Cs0.15FA0.76MA0.09PbBr0.03I2.97",
                          "Cs0.12FA0.5MA0.38PbBr0.96I2.04",
                          "FA0.83MA0.17PbBr0.0I2.51",
                          "Cs0.3FA0.2MA0.5PbI3",
                          "(GABA)0.05MA0.95PbI3",
                          "MABiI2",
                          "Cs0.17MA0.83PbI3",
                          "MASnBr1.2I1.8",
                          "MAPbIx",
                          "MAPb1.0ClI2",
                          "BA2MA34Pb5I15",
                          "Cs0.05MA0.95Pb0.95Sn0.05Br0.1I2.9",
                          "Cs0.05FA0.85MA0.15PbBr0.45I2.55",
                          "(3AMP)MA2Pb3I10",
                          "CsGe0.2Pb0.8BrI2",
                          "(NEA)0.2BA1.8MA3Pb4I13",
                          "Cs0.05FA0.86MA0.09PbBr0.3I2.7",
                          "CsCu0.005Pb0.995Br3",
                          "MAPbBr0.12I2.88",
                          "FA0.93MA0.07PbBr0.21I2.79",
                          "(NMA)2MA59Pb60I181",
                          "(PEA)2MA5Pb4Cl2I10",
                          "FA0.4MA0.6PbBr0.2I2.8",
                          "(PBA)1.5BA0.5MA3Pb4I13",
                          "MAPb1.0Br1.5I1.5",
                          "AgBiI7",
                          "FA0.75MA0.25Ge0.1Sn0.9I3",
                          "CsPb0.97Sm0.03Br3",
                          "Cs0.05FA0.83MA0.17PbBr0.51I2.49",
                          "FA0.83MA0.17PbBr0.22I2.78",
                          "FA0.75MA0.25PbBr0.51I2.49",
                          "FA0.33PbI3",
                          "FA0.85MA0.15PbBr0.6I2.4",
                          "Cs0.05FA0.83MA0.17PbBr0.36I2.64",
                          "FAPbBr3",
                          "FA0.3MA0.7PbBr0.15I2.85",
                          "FA0.33MA0.66Pb0.66Sn0.33I3",
                          "BAFA60Pb61Br4I180",
                          "MABiI3",
                          "AgCs2BiBr5.4",
                          "FA0.95MA0.05PbBr0.15I2.85 | (HTAB)0.03FA0.95MA0.05PbBr0.15I2.85",
                          "Cs0.05FA0.75MA0.11PbBr0.39I2.61",
                          "Cs0.1MA0.9PbBrI2",
                          "(PGA)2MA3Pb4I13",
                          "Cs0.3FA0.7PbBr3",
                          "MAPbBr1.74I1.26",
                          "Cs0.05FA0.7885MA0.1615PbBr0.3I2.7",
                          "Cs0.05FA0.788GU0.162PbBr0.51I2.49",
                          "MAPbBr1.77I1.23",
                          "AgCs2BiBr5.8",
                          "Cs0.05FA0.83MA0.17PbBr0.17I0.83",
                          "Cs0.1MA0.9Pb0.5Sn0.5I3",
                          "Cs0.3Ag3Bi2.2I9",
                          "CsPbBr0.31I2.69",
                          "Cs0.15FA0.72MA0.13PbBr0.45I2.55",
                          "MAPbBr1.7I1.3",
                          "FAPbBr0.3I2.7",
                          "FA0.33PbBrI2",
                          "Cs0.1FA0.27MA0.63PbI3",
                          "Cs0.15FA0.75MA0.1PbBr0.7I2.3",
                          "CsPb0.5Sn0.5Br2I",
                          "Cs0.98Li0.02PbBr3",
                          "MAPbBr1.8I1.2",
                          "MAPb0.95Zn0.05I3",
                          "GUPbI3",
                          "Cs0.1FA0.79MA0.16PbBr0.51I2.49",
                          "Cs0.05FA0.8075MA0.1425PbBr0.51I2.49",
                          "FA0.8TN0.2SnI3",
                          "FA0.45MA0.55PbI3",
                          "Cs0.05FA0.79MA0.16PbBr0.54I2.46",
                          "FA0.83MA0.17PbBr3",
                          "Cs0.1FA0.765MA0.135PbBr0.45I2.55",
                          "Cs0.08FA0.76MA0.16PbBr0.51I2.49",
                          "BA2PbI3",
                          "IM0.2MA0.20.8PbI3",
                          "Cs0.1FA0.75MA0.15PbBr0.55I2.55",
                          "MAPb1.0Br0.15I2.85",
                          "nanBiI3",
                          "MACu0.014Pb0.986I3",
                          "CsBa0.03Pb0.97Br3",
                          "(3AMP)FA0.6MA2.4Pb4I13",
                          "MAGeBr0.6I2.4",
                          "MAPb0.95Sb0.05I3",
                          "Cs0.04FA0.80MA0.16PbBr0.50I2.50",
                          "MAAlCl4",
                          "AgCs2BiBr5.7",
                          "GU0.075MA0.925PbI3",
                          "Cs0.02FA0.84MA0.14PbBr0.05I2.95",
                          "(5-AVA)0.1MA0.9PbI3",
                          "Cs0.2FA0.6MA0.2PbBr0.33I2.67",
                          "FA0.5MA0.5PbBr0.5I2.5",
                          "Cs0.1MA0.9Pb0.75Sn0.25I3",
                          "Cs0.05FA0.81MA0.14Pb0.95Br0.43I2.42",
                          "AgCs2BiBr6",
                          "(PEA)2MA29Pb30I91",
                          "MAPb0.7Sn0.3I3",
                          "FA0.07MA0.93PbI3",
                          "Cs0.05FA0.80MA0.15PbBr0.25I2.75",
                          "MAPb1.0I3",
                          "MAPb0.6Sn0.4I3",
                          "Cs0.15FA0.85PbBr0.6I2.4",
                          "Cs0.1FA0.9PbBr0.1I2.9 | (PEA)PbBr0.1I2.9",
                          "EA2MA4Pb5I16",
                          "MA0.01Pb0.99I3",
                          "IM0.05MA0.050.95PbI3",
                          "FA0.67MA0.33PbBr1.5I1.5",
                          "Cs0.05FA0.81MA14PbBr2.55I0.45",
                          "FA0.83MA0.17PbBr0.5I2.5",
                          "Cs0.1FA0.7MA0.2PbBr0.2I2.8",
                          "FAPbCl0.45I2.55",
                          "FA0.29MA0.71PbBr0.3I2.7",
                          "FAPbBr",
                          "BA2MA3Pb3SnI13",
                          "(PDA)MA2Pb3I10",
                          "(PEA)2Cs39Pb40I121",
                          "FA0.6MA0.4PbI3",
                          "Cs0.16FA0.8MA0.04PbBr1.83I1.17",
                          "SrTiO3",
                          "FA0.66MA0.33PbBr0.45I2.55",
                          "(GABA)0.025MA0.975PbI3",
                          "Cs0.06FA0.8MA0.14PbBr0.45I2.55",
                          "FA0.15MA0.85PbBr2.55I0.45",
                          "FA0.85MA0.15PbBr0.451I2.55",
                          "(BZA)2MA2Pb3I10",
                          "MAPbI3 | Cs1Pb1I3 | Cs1Pb1Br0.3I2.7 | Cs1Pb1Br0.7I2.3 | CsPbBrI2",
                          "(PEA)2Cs9Pb10Br10.33I20.67",
                          "FAPbBr0.1I2.9",
                          "Cs0.2FA0.24MA0.56PbI3",
                          "CsPbBrI2 | CsPbBrI2",
                          "MAPb0.5Sn0.5I3",
                          "(3AMPY)MA3Pb4I13",
                          "Cs0.05FA0.5MA0.5PbBr1.5I1.5",
                          "Cs0.5FA0.5PbI3 | CsPbI3",
                          "MAPbI3 | FAPbBr1.5I1.5",
                          "(THM)0.025MA0.975PbI3",
                          "Cs0.17FA0.75MA0.08PbBr0.39I2.61",
                          "(6-ACA)0.038MA0.962PbI3",
                          "(PEA)2PbI4",
                          "FA0.83MA0.17PbBr0.47I2.53",
                          "Cs0.15Ag3Bi3I9",
                          "MAPbBr1.6I1.4",
                          "MAPb0.97Sr0.03I3",
                          "(BDA)MA2Pb3I10",
                          "FA0.6MA0.4Pb0.4Sn0.6Br0.12I2.88",
                          "Cs0.05FA0.83MA0.12PbBr0.51I2.49",
                          "(PEI)2PbI4",
                          "Cs0.17FA0.83Pb0.999Sn0.001I3",
                          "Cs0.08FA0.09PbBr3",
                          "Cs0.05FA0.7885MA0.1615PbBr0.4845I2.5155",
                          "Cs0.05FA0.85MA0.5PbBr0.25I2.75",
                          "MAPbI3 | CA2PbI4",
                          "Ag4Bi5I19",
                          "MAPb0.8Sn0.2Br0.4I2.6",
                          "FA0.92MA0.08PbBr0.24I2.76 | (C8H17NH3)2PbI4",
                          "MAPb0.75Sn0.25Br1.5I1.5",
                          "FA0.4MA0.6PbBr0.3I2.7",
                          "CsSnBr2.7I0.3",
                          "MACo0.008Pb0.992I3",
                          "(OdA)PbI4",
                          "Cs0.1FA0.9PbBr0.135I2.865",
                          "(PEA)2MA4Pb5I16",
                          "CsPb0.94Zn0.06BrI2",
                          "FA0.05PN0.95SnI3",
                          "FA0.97MA0.03PbBr0.09I2.91 | (MIC3)2PbI4",
                          "CsPb0.97Sr0.03BrI2",
                          "MAPbBrI2",
                          "(CPEA)2MA3Pb4I13",
                          "Cs0.02FA0.15PDA0.82PbI3",
                          "(NH4)6.8FA0.15MA0.85Pb7.8Br0.45I22.95",
                          "MA4PbI6",
                          "Cs0.05FA0.8075MA0.1425PbBr0.3I2.7",
                          "(PEA)0.4BA1.6MA3Pb4I13",
                          "MAEu0.06Pb0.94I3",
                          "(NH4)6.8FA0.15MA2.21Pb7.8Br0.45I24.31",
                          "MAPb0.4Sn0.6Br1.5I1.5",
                          "BA0.15FA0.85SnI3",
                          "FA0.95MA0.05PbBr01.51I2.85",
                          "Cs0.05FA0.85MA0.1PbBr0.1I2.9",
                          "MAPbBr2I",
                          "Cs0.06FA0.79MA0.15PbBr0.51I2.49",
                          "Cs0.08FA0.92PbI3",
                          "Cs0.75FA0.25PbI3 | CsPbI3",
                          "FA0.83MA0.17PbBr0.49I2.51",
                          "MAPbBr0.5I2.5",
                          "Cs0.1665FA0.667MA0.1665PbBr0.33I2.67",
                          "(EDA)0.005FA0.3MA0.695Pb1.0I3",
                          "GU0.025MA0.975PbI3",
                          "Cs0.08FA0.78MA0.14PbBr0.42I2.38",
                          "(CHMA)2MAPb2I7",
                          "(NH4)5.1FA0.15MA2.04Pb6.1Br0.45I19.04",
                          "Cs0.1FA0.6MA0.3PbBr0.256I0.744",
                          "FA0.85MA0.15Pb0.45I2.55",
                          "FA0.75MA0.25PbBr0.25I2.77",
                          "Cs0.05FA0.81MA0.15PbBr0.45I2.55",
                          "Cs0.15FA0.85Pb0.375Sn0.625I3",
                          "(NH4)8.5FA0.15MA1.7Pb9.5Br0.45I28.9",
                          "Cs0.2FA0.8PbBr0.16I2.84",
                          "Cs0.05FA0.89MA0.6PbBr0.06I2.94",
                          "(BZA)2PbI4",
                          "(PEA)2CsPb2I7",
                          "Cs0.05FA0.28MA0.67PbBr0.54I2.46",
                          "(PEA)2Cs7Pb8I25",
                          "MAPb0.75Sn0.25Br2.1I0.9",
                          "(NH4)3Sb2I9",
                          "EA2MA6Pb7I22",
                          "CsSnBr0.6I2.4",
                          "MAPb0.995Sb0.005I3",
                          "EA2MA5Pb6I19",
                          "MA3PbCl2",
                          "Cs0.88Rb0.12PbBr3",
                          "Cs0.133FA0.733MA0.133PbBr0.256I0.744",
                          "FA0.67MA0.33PbBr3",
                          "MAPbBr1.41I1.59",
                          "MAPb0.7Sn0.255I3",
                          "Cs0.1FA0.7MA0.2PbBr0.5I2.5",
                          "(PEA)2Cs9Pb10I31",
                          "(PEA)MAPbI3",
                          "Cs0.05FA0.75MA0.2PbBr0.51I2.49",
                          "FA0.6MA0.4Pb0.4Sn0.6I3 | (PEA)2Pb0.4Sn0.6I4",
                          "(PDMA)FA2Pb23I7",
                          "(Br-PEA)2MA2Pb3BrI10",
                          "CsBi9I28",
                          "Cs0.05FA0.788MA0.162PbBr0.51I2.49",
                          "BA2FA0.6MA2.4Pb4I13",
                          "FA0.83MA0.17PbBr0.3I2.7",
                          "Cs0.2MA0.8Pb0.5Sn0.5I3",
                          "(DMA)PbI3",
                          "AN0.015MA0.985PbI3",
                          "Cs0.91Na0.09PbBr3",
                          "BA2MA2Pb4I13",
                          "(Anyl)2MAPb2I6",
                          "FA0.75MA0.25PbBr0.24I2.76",
                          "FA0.83MA0.17PbBr0.37I2.63",
                          "Cs0.05FA0.79MA0.16PbBr0.48I2.52",
                          "Cs0.07FA0.93PbBr0.15I2.85",
                          "Cs0.05FA0.84MA0.11PbBr0.1I2.9",
                          "Cs0.01MA0.99PbBr0.03I2.97",
                          "FAPbBr0.5I2.5",
                          "MAPbBr0.45I2.55",
                          "Cs0.17FA0.83Pb0.7Sn0.3I3",
                          "Cs0.1FA0.75MA0.13PbBr0.45I2.55 | (A43)2PbI4",
                          "Cs0.8FA0.69MA0.23PbBr0.9I2.1",
                          "MAPb(Br0.7I0.3)xCl3-x",
                          "MAPb0.75Sn0.25Br2.7I0.3",
                          "Cs0.1FA0.76MA0.14PbBr0.51I2.49 | (EPA)2PbI4",
                          "CsSnBr1.5I1.5",
                          "Cs0.17FA0.83Pb0.99Sn0.01I3",
                          "Cs0.05FA0.788MA0.162PbBr0.3I2.7",
                          "MAPbBr0.84I2.16",
                          "Cs0.05FA0.46MA0.49PbBr0.12I2.88",
                          "GU0.15MA0.85PbI3",
                          "(CH3ND3)PbI3",
                          "(F3EA)0.12BA1.88MA3Pb4I13",
                          "(PEA)2MA5Pb6I19",
                          "MAPb0.99Sb0.01I3",
                          "Cs0.14FA0.86PbI3",
                          "MAPbBr0.48I2.52",
                          "(CHMA)2Cs4MA35Pb40I121",
                          "MAPb1.0Br3",
                          "FA0.11MA0.89PbI3",
                          "CsPbBr3 | FAPbBr2Cl",
                          "MAPbI3 | Cs1Pb1I3 | CsPbBr0.3I2.7",
                          "FA0.35MA0.65PbBr0.13I2.94",
                          "FA0.8MA0.2PbBr0.2I0.8",
                          "CsPbI3 | CsPbI3",
                          "MAPbI3 | BAPbI4",
                          "MASb1.9Sn0.1I9",
                          "Cs0.05FA0.57MA0.38PbI3",
                          "MAPbBr0.18I2.82",
                          "MA3PbI3",
                          "Cs0.02FA0.79MA0.16PbBr0.551I2.49",
                          "FA0.9MA0.1PbBr0.2I2.7",
                          "CsPbBrF1.72I0.28",
                          "(PDA)MAPbI4",
                          "Cs0.1FA0.75MA0.15Pb0.75Sn0.25Br0.5I2.5",
                          "FAMAPbBr0.45I2.55",
                          "MAPbBr0.21I2.79",
                          "K3Sb2I9",
                          "CsPbBr0.09I2.91",
                          "FA0.75MA0.25PbBr0.25I2.80",
                          "AgBi2I7",
                          "Cs0.05FA0.9Rb0.05PbI3",
                          "FA0.84MA0.16PbBr0.4I2.6",
                          "Cs0.07FA0.89GU0.02PbI3",
                          "(HEA)2Cs1.9FA17.1Pb20Br3.15I59.85",
                          "Cs0.05FA0.79MA0.16PbBr0.65I2.35",
                          "FA0.85MA0.85PbI3",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49 | HAPbI4",
                          "Cs0.17FA0.83PbBr0.6I2.4",
                          "FAPb0.7Sn0.3I3",
                          "(BDA)PbI4",
                          "Cs0.05FA0.76MA0.16PbBr1.5I1.5",
                          "Cs0.15FA0.75MA0.1PbBr0.2I2.8",
                          "FA0.85TN0.15SnI3",
                          "MAPb0.625Sn0.375I3",
                          "MAPb0.99Zn0.01I3",
                          "LaYS3",
                          "FA0.8K0.05MA0.15PbBr0.55I2.55",
                          "(5-AVA)0.03MA0.97PbI3",
                          "MAPbBr0.225I2.775",
                          "Cs0.85Rb0.15PbBr3",
                          "FA0.5MA0.5PbBrI2",
                          "(CIEA)0.1MA0.9PbI3",
                          "(ThMA)MA4Pb5I16",
                          "FABiPbI3",
                          "Cs0.2FA0.8Pb0.25Sn0.75I3",
                          "FAPb0.875Sn0.125I3",
                          "FA0.46MA0.64PbBr0.24I0.76",
                          "(TFEA)2Cs0.475FA15.675MA2.85Pb20Br9.15I51.85",
                          "(TBA)0.15Cs0.04FA0.67MA0.14PbBr0.51I2.49",
                          "(PEA)2Cs79Pb80Ix",
                          "FA0.97MA0.03PbBr0.09I2.91 | (MIC2)2PbI4",
                          "Cs0.09FA0.83MA0.08PbBr0.15I2.85",
                          "FA0.87MA0.13PbI3",
                          "MAIn0.20Pb0.80I3",
                          "nanSnI6",
                          "CsEu0.09Pb0.91BrI2",
                          "(PMA)2MAPbI3",
                          "Ag4Bi9I31",
                          "Cs0.13FA0.72MA0.16PbBr0.51I2.49",
                          "MAPb0.4Sn0.6Br1.8I1.2",
                          "FA0.83MA0.17PbBr0.02I2.98",
                          "MACa0.03Pb0.97I3",
                          "Cs0.05FA0.85MA0.1PbBr3.0",
                          "FA0.15MA0.85PbBr0.45I2.55",
                          "MAPbBr1.14I1.86",
                          "Cs0.05FA0.79MA0.16PbBr0.5I2.5",
                          "MAMg0.09Pb0.91I3",
                          "MAHg0.15Pb0.85I3",
                          "(APMim)Pb(PF6)PF63",
                          "FAPb0.125Sn0.875I3",
                          "CsLa0.01Pb0.99BrI2",
                          "CsPb1.0Br3",
                          "(CHMA)2MAPbI4",
                          "CsPb0.98I3",
                          "FA0.79MA0.16PbBr0.51I2.49",
                          "MAPbBr2.97I0.03",
                          "MAPbBr0.3I2.7",
                          "Cs0.05FA0.8MA0.15PbBr0.4I2.6",
                          "(PMA)2MA3Pb4I13",
                          "GUMA4Pb4I13",
                          "Cs0.03FA0.37MA0.6PbBr0.025I2.975",
                          "FA0.83MA0.17PbBr1.2I1.8",
                          "Cs0.2FA0.8PbBr0.2I2.8",
                          "MAPbBr0.87I2.13",
                          "FAPb0.9Sn0.1I3",
                          "MAGeBr0.45I2.55",
                          "FA0.75Sn0.25I3",
                          "FAPb0.5Sn0.5I",
                          "CsSnBr2I",
                          "MAPbBr0.14I2.86",
                          "Cs0.1FA0.75MA0.15PbBr0.51I2.49",
                          "Cs0.05FA0.85MA0.10PbBr0.39I2.61",
                          "Cs0.15FA0.71MA0.14PbBr0.9I2.1",
                          "FA0.4MA0.6PbI3",
                          "(PEA)0.8MA0.5PbI3.2",
                          "MASnBr1.8Cl0.2I",
                          "MABi3I10",
                          "MAPbBr0.083I2.92",
                          "FA0.67MA0.33PbBrI2",
                          "Cs0.05FA0.54MA0.41PbBr0.06I2.94",
                          "Cs0.17FA0.83PbBrI2",
                          "Cs0.05FA0.8MA0.15PbBr0.47I2.53",
                          "FA0.87MA0.13PbBr0.13I2.83",
                          "(AVA)2PbI4 | MAPbI3",
                          "Cs0.05FA0.76GU0.075MA0.11PbBr0.39I2.61",
                          "Cs0.1FA0.7MA0.2PbI3",
                          "FA0.8MA0.2PbBr0.256I0.744",
                          "CsPb0.95I3",
                          "Cs0.1FA0.81MA0.09PbBr0.1I2.9",
                          "Cs2SnI6",
                          "FA0.85MA0.15PbBr0.46I2.54",
                          "FA0.75MA0.25Sn1.0I3",
                          "Cs0.1FA0.9SnI3",
                          "GU0.75MA0.25PbI3",
                          "(3AMP)FA0.45MA2.55Pb4I13",
                          "EA2MA3PEAPb4I13",
                          "(DMA)0.025MA0.975PbI3",
                          "Cs0.05FA0.76MA0.19PbBr0.6I2.4",
                          "(BDA)MAPbI4",
                          "Cs0.04FA0.8MA0.16PbBr0.45I2.55",
                          "Cs0.1FA0.75MA0.15Pb0.5Sn0.5Br0.5I2.5",
                          "FA0.5MA0.5PbI",
                          "(TBA)0.5Cs0.05FA0.75MA0.15PbBr0.51I2.49",
                          "Cs0.05FA0.79MA0.16PbBr0.49I2.51",
                          "FA0.59MA0.41PbI3",
                          "BAFA40Pb41I124",
                          "MASb2I9",
                          "Cs0.02FA0.98SnI3",
                          "Cs0.05FA0.68MA0.26Pb0.75Sn0.25Br0.4I2.6",
                          "FA0.79MA0.21PbI3",
                          "FA0.10PN0.90SnI3",
                          "FA0.2MA0.8PbBr2.4I0.6",
                          "CsPb0.1Sn0.9I3",
                          "MACu0.03Pb0.97Br0.03I2.97",
                          "Cs0.08FA0.78MA0.14PbBr0.42I2.58",
                          "Cs0.15FA0.71MA0.14PbBr0.6I2.4",
                          "Cs0.06FA0.78MA0.16PbBr0.18I2.82",
                          "FAPbBr2.25Cl0.75",
                          "MAPb0.95I3",
                          "BE2FA9Pb9I28",
                          "MAPb0.4Sn0.6Br0.4I2.6",
                          "FA0.83MA0.17PbBr1.5I1.5",
                          "Cs0.04FA0.8MA0.16PbBr0.15I0.85",
                          "(PEA)0.67MA0.33PbI3",
                          "Ag0.152Bi3I9.5",
                          "HA0.1MA0.9SnI3",
                          "FA0.25MA0.75SnI3",
                          "(Ace)0.02MA0.98PbI3",
                          "FA0.0MA0.13PbBr0.13I2.87",
                          "FA0.5MA0.5PbBr2.5I0.5",
                          "FA0.072MA0.928PbBrI2.86",
                          "Cs0.05FA0.79MA0.16PbBrI2",
                          "Cs0.03Pb0.97Br3",
                          "BA0.5MA0.75PbI3.25",
                          "FA0.4MA0.6PbBr0.025I2.975",
                          "Cs0.05FA0.55MA0.4PbBr2.88I0.12",
                          "FA0.7Rb0.3PbI3",
                          "FA0.88MA0.12PbBr0.36I2.64",
                          "FA0.4MA0.6PbI4",
                          "FAPbBr2.1Cl0.9",
                          "MA3Sb1.4Sn0.6I9",
                          "Cs0.0125FA0.4875MA0.5Pb0.5Sn0.5I3",
                          "(PDMA)MA5Pb6I19",
                          "BA2MAPb2I6",
                          "MA0.01Mg0.01Pb0.99I3",
                          "Cs0.1FA0.9PbBr0.1I2.9",
                          "Cs0.05FA0.8MA0.15PbBr0.15I2.85",
                          "CuBiI4",
                          "CsPb0.9I3",
                          "GUMA3Pb3I12",
                          "Cs0.05FA0.79MA0.16SnBr0.5I2.5",
                          "MAPb0.97Sb0.03I3",
                          "(CHMA)2MA4Pb5I16",
                          "BA2MA39Pb40I121",
                          "(PDA)0.01Cs0.15FA0.84PbI3",
                          "MAPb(BF4)2.95I0.05",
                          "MA3PA2Pb4I13",
                          "Cs0.05MA0.95PbBr0.6I2.4",
                          "Cs0.01Pb0.99Br3",
                          "EA2PbI4",
                          "MAPb0.97I3",
                          "MAPbBr0.07I2.97",
                          "(F3EA)0.04BA1.96MA3Pb4I13",
                          "Cs0.19FA0.81PbBr0.54I2.46",
                          "FA0.6MA0.4Pb0.4Sn0.6I3",
                          "MANi0.1Pb0.9I3",
                          "CsMg0.03Pb0.97Br3",
                          "BA2MA3Sn4I13",
                          "Cs0.05MA0.79PbBr0.3I2.7",
                          "Cs0.17FA083PbBr0.6I0.24",
                          "MAPbI3 | (PPA)PbI4",
                          "CsPb1.0Br1.2I1.8",
                          "Cs0.05FA0.83MA0.12PbBr0.45I2.55",
                          "FA0.83MA0.17PbBr0.33I2.67",
                          "MAPb0.4Sn0.6Br0.6I2.4",
                          "FA0.71MA0.29PbBr0.42I2.58",
                          "CsEu0.01Pb0.99BrI2",
                          "BA0.52GA0.15MA0.67PbI3.33",
                          "Cs0.3MA0.7PbI3",
                          "DA2FA3Sn4I13",
                          "FA0.024MA0.976PbBrI2.955",
                          "MABa0.03Pb0.97I3",
                          "BA2Cs0.1FA2.36MA0.48Pb3Br1.7I0.83",
                          "Cs0.05FA0.94MA0.01PbBr0.03I2.97",
                          "(F3EA)0.2BA1.8MA3Pb4I13",
                          "Cs0.1FA0.9PbI3",
                          "BA2Cs0.08FA1.36MA2.56Pb5I16",
                          "FA0.62MA0.38PbBr0.13I2.90",
                          "MA2PA10Pb11I34",
                          "Cs0.2FA0.8SnI3",
                          "MAPb0.4Sn0.6Br2.4I0.6",
                          "FA0.8MA0.2PbI3",
                          "(4ApyH)Bi0.2Sb0.8I4",
                          "Cs0.05FA0.75MA0.1PbBr0.3I2.9",
                          "FA0.75MA0.25PbBr0.25I2.76",
                          "Rb3Sb2I9",
                          "FA0.86MA0.15PbBr0.45I2.55",
                          "FA0.8MA0.2Pb0.5Sn0.5I3",
                          "(iPA)3PbI5",
                          "Cs0.12FA0.88PbBr0.36I2.64",
                          "FA0.3MA0.7PbBr0.6I2.4",
                          "CsPbBr3 | MAPbI3",
                          "MAPb0.4Sn0.6BrI3",
                          "CsFAPbBrI",
                          "BA2FA2.4MA0.6PMAPbI13",
                          "FAPbBr2I",
                          "MAEu0.08Pb0.92I3",
                          "FA0.87MA0.13PbBr0.51I2.61",
                          "FA0.4MA0.6Pb1.0I3",
                          "FAPb1.0I3",
                          "FA0.92MA0.08PbBr0.24I2.76 | (C4H9NH3)2PbI4",
                          "FA0.73MA0.23PbBr0.13I2.89",
                          "FA0.6MA0.4PbBr0.256I0.744",
                          "FA0.8GU0.2SnI3",
                          "Cs0.005FA0.81MA0.14PbBr0.45I2.55",
                          "Ag0.15Bi4I11.5",
                          "(HEA)2Cs3.9FA35.1Pb40Br12.3I110.7",
                          "CsFAPbBr0.2I2.8",
                          "(C6H4NH2)CuCl2I",
                          "CsPbBr3 | CsPbBr3",
                          "Cs0.08FA0.76MA15PbBr0.51I2.49",
                          "Cs0.05FA0.8MA0.15PbBr0.42I2.58",
                          "CsPb0.99Zn0.01Br3",
                          "MAEu0.02Pb0.98I3",
                          "(DMA)2PbI4",
                          "Cs0.04FA0.80MA0.16PbBr0.5I2.5",
                          "CsBi0.05Pb0.95I3",
                          "Cs0.05FA0.75GU0.075MA0.10PbBr0.39I2.61",
                          "MA2PA4Pb3I10",
                          "FA0.17MA0.83PbBr3",
                          "Cs2TiBr6",
                          "FA0.85MA0.85PbBr0.45I2.55",
                          "(F5PEA)xCs0.15FA0.64MA0.2PbBr0.6I2.4",
                          "CsPbBrI2 | BA2CsPb2BrI6",
                          "Cs0.5MA0.5PbI3",
                          "Cs0.05FA0.79GU0.05MA0.11PbBr0.39I2.61",
                          "GUSnI3",
                          "FA0.3MA0.7PbBr0.3I2.9",
                          "Cs0.25FA0.75PbI3",
                          "Cs0.1FA0.85MA0.15PbBr0.45I2.55",
                          "MAPbBr0.81I2.19",
                          "EA2MA9Pb10I31",
                          "Cs0.13FA0.87PbBr0.39I2.61",
                          "Ba0.1K0.9Nb0.95Ni0.05O3",
                          "(AVA)0.05MA0.95PbI3",
                          "(DMA)0.1MA0.9PbI3",
                          "MA3Sb2I9",
                          "FAPb0.6Sn0.4I3",
                          "BA2FAPb2I7",
                          "FA0.17MA0.83PbBr2I",
                          "FA0.83MA0.17PbBr0.4I2.6",
                          "BDACsPb2Br2.1I4.9",
                          "FA0.5MA0.5PbBr0.12I2.88",
                          "(PMA)2CuBr4",
                          "FA0.3MA0.7PbBr0.48I2.52",
                          "MAPb0.25Sn0.75Br1.2I1.8",
                          "MAPb0.99I3",
                          "(PEA)2MA2Pb3I10",
                          "Cs0.8Rb0.2SnI3",
                          "MAPb0.65Sn0.35I3",
                          "FAPbBr3I",
                          "(PEA)0.8BA1.2MA3Pb4I13",
                          "FA0.85MA0.15PbBr0.45I2.55 | BAFAPbI4",
                          "(4AMPY)MA3Pb4I13",
                          "CsNi0.01Pb0.99Br3",
                          "(HdA)PbI4",
                          "FA0.5MA0.5Pb0.75Sn0.25I3",
                          "FA0.6MA0.4PbBr0.3I2.9",
                          "MAPb1.0Cl3",
                          "(PEA)2Cs59Pb60Br60.33I120.67",
                          "FA0.54MA0.46PbI3",
                          "Cs0.05FA0.855MA0.095PbBr0.285I2.565",
                          "(BDA)MA4Pb5I16",
                          "CsPbBr1.9I1.1",
                          "(PEA)2PbI4 | MA1Pb1I3 | (PEA)2PbI4",
                          "Cs0.11MA0.89PbI3",
                          "Cs0.06FA0.94PbBr3",
                          "MA2Pb(SCN)2I2",
                          "AgCs2BiBr5.6",
                          "MAPbI3 | BA2MA2Pb3I310",
                          "Cs0.06MA0.94PbI3",
                          "BiFeO3",
                          "Cs0.09FA0.91PbBr0.12I2.88",
                          "Cs0.05FA0.84MA0.11PbBr0.2I2.8",
                          "FA0.87MA0.13PbBr0.39I2.61",
                          "Cs0.1FA0.9PbBr0.1I2.9 | (PA)PbBr0.1I2.9",
                          "MAIn0.15Pb0.85I3",
                          "Cs0.05FA0.788GU0.097MA0.065PbBr0.51I2.49",
                          "FA0.6MA0.4Pb0.4Sn0.6Br0.3I2.7",
                          "FA0.05MA0.95PbI3",
                          "CsPbBr3 | CsPbBr2I",
                          "Cs0.35FA0.65PbI3",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.51",
                          "FA0.2MA0.8PbBr0.6I2.4",
                          "Cs0.06FA0.78MA0.16PbBr0.51I2.49",
                          "Cs0.02FA0.95MA0.03PbBr0.09I2.91",
                          "Cs0.15FA0.65MA0.20PbBr0.6I2.4",
                          "CsPbBr2I | CsPbI3",
                          "FA0.81MA0.19PbBr0.54I2.46",
                          "Cs0.1FA0.76MA0.14PbBr0.45I2.55",
                          "CsxFAxPbI3",
                          "Cs0.17FA0.83Pb0.9Sn0.1I3",
                          "MAPb0.75Sn0.25Br3",
                          "(ImEA)PbI4",
                          "Cs0.01FA0.76MA0.14PbBr0.45I2.55",
                          "FA0.8MA0.2PbBr0.22I",
                          "Cs0.06FA0.79MA0.15PbBr1.8I1.2",
                          "Cs0.05FA0.5MA0.45PbBr0.04I2.96",
                          "IM0.005MA99.5PbI3",
                          "EA0.2MA0.8PbI3",
                          "Cs0.05FA0.76MA0.19PbBr0.57I2.32",
                          "CsPbBrF0.28I1.72",
                          "Cs0.10FA0.75MA0.15PbBr0.50I2.50",
                          "Cs0.05FA0.7885MA0.1625PbBr0.45I2.55",
                          "(Anyl)2MA34Pb5I15",
                          "Cs0.5FA0.4MA0.1PbBr0.51I2.49",
                          "(BdA)PbI4",
                          "FASnI3",
                          "IM0.5MA0.50.5PbI3",
                          "Cs0.05FA0.81MA0.14PbBr0.51I2.49",
                          "(PEA)2FA0.85MA0.15Pb2Br1.05I5.95",
                          "FAPbBr0.35I2.65",
                          "Cs0.1FA0.75MA0.15SnBr0.5I2.5",
                          "Cs0.15FA0.255MA0.595PbI3",
                          "Cs3Sb2I9",
                          "MACo0.1Pb0.9I3",
                          "MASnBr0.6I2.4",
                          "FA0.33PbBr2.5I0.5",
                          "Cs0.80MA0.20PbI3",
                          "CsBa0.2Pb0.8BrI2",
                          "Cs0.16FA0.8MA0.04PbBr1.71I1.29",
                          "Cs0.3FA0.7PbBr0.095I0.905",
                          "FA0.75GU0.25SnI3",
                          "MAPb0.93I3",
                          "MASnBrI2",
                          "PAPbI3",
                          "MACu0.0094Pb0.9906I3",
                          "BA2Cs1.2FA7.65Pb4.8Sn3.6I28",
                          "Cs0.05FA0.76MA0.19PbI3",
                          "FAPbBrxIx",
                          "(GABA)0.2MA0.8PbI3",
                          "Cs0.05FA0.81MA0.11PbBr0.45I2.55",
                          "(Ace)0.05MA0.95PbI3",
                          "FAPbBr2Cl",
                          "MAPbBr0.3I2.9",
                          "Cs0.1FA0.78MA0.13PbI3",
                          "GU2PbI4",
                          "(ALA)0.2BA1.8MA3Pb4I13",
                          "Ag3BiI6",
                          "Cs0.05FA0.83MA0.12PbBr0.39I2.61",
                          "FAPbBr2.5I0.5",
                          "BA2Cs0.15FA0.85Pb1.2Sn0.8I7",
                          "Cs0.05FA0.95PbI3",
                          "(EDA)0.015FA0.29MA0.695Pb1.0I3",
                          "(PEA)1.6BA0.4MA3Pb4I13",
                          "nannannan",
                          "(PEA)2FA8Sn9I28",
                          "CsPb0.9Zn0.1Br2I",
                          "Cs0.05FA0.79MA0.16Pb1.1Br0.51I2.49",
                          "FAPb3Br6I",
                          "MAPbBr0.8I2.2",
                          "FA0.125MA0.875PbI",
                          "Cs0.1FA0.83MA0.17PbBr0.51I2.49",
                          "MAPb0.95Sr0.05I3",
                          "MAPbBr0.015I2.985",
                          "FA0.3MA0.7PbBr0.54I2.46",
                          "FA0.84MA0.16PbBr0.45I2.55",
                          "Cs0.2FA0.664MA0.336PbBr1.05I1.95",
                          "MAPbI3 | (PPEA)PbI4",
                          "MAPb0.9Zn0.1I3",
                          "Cs0.4FA0.6PbBr0.095I0.905",
                          "CsGeI3",
                          "FA0.85MA0.15PbBr0.55I2.45",
                          "FA0.83MA0.17PbBr0.50I2.50",
                          "MACo0.4Pb0.6I3",
                          "Ag0.153Bi3I10.5",
                          "MAPbI3 | Cs1Pb1I3 | Cs1Pb1Br0.3I2.7 | CsPbBr0.7I2.3",
                          "Cs0.05FA0.45MA0.5Pb0.5Sn0.5I3",
                          "Cs0.08FA0.8MA0.12PbBr0.36I2.64",
                          "CsPbBrI",
                          "Cs0.05FA0.85MA0.1PbBr0.45I2.45",
                          "Cs0.15FA0.51MA0.34PbI3",
                          "Cs0.1FA0.9PbBr0.51I2.49",
                          "FA0.4MA0.6PbBr1.8I1.2",
                          "IM0.01MA0.99PbI3",
                          "(PDMA)PbI4",
                          "MACu0.05Pb0.85Sn0.1Br0.1I2.9",
                          "FA0.6MA0.4PbBr0.1I2.9",
                          "MA3Bi2I12",
                          "FA0.85PbBr0.08I2.92",
                          "FA0.5MA0.5PbSnI3",
                          "MAPb0.5Sn0.500I3",
                          "(PEA)1.4BA0.6FA3Sn4I13",
                          "FA0.25MA0.75PbBr0.12I2.88",
                          "EA0.1MA0.9PbI3",
                          "BAPbI4",
                          "Cs0.94Li0.06PbBr3",
                          "Cs0.05FA0.79MA0.16PbBr0.51I2.49",
                          "MAPbBr0.05I2.95",
                          "Cs0.17FA0.83PbBr0.8I2.2",
                          "Cs0.07FA0.77MA0.16PbBr0.50I2.50",
                          "MAPb0.9Sn0.1Br0.2I2.8",
                          "MANiCl2I",
                          "Cs0.2668FA0.666MA0.0664PbBr0.256I0.744",
                          "Cs0.17FA0.83PbBr0.75I2.25",
                          "Cs0.70FA0.30PbI3",
                          "Cs0.05FA0.79MA0.16PbBr1.2I1.8",
                          "Cs0.0664FA0.8668MA0.0664PbBr0.256I0.744",
                          "FA0.5MA0.5PbBr0.13I2.87",
                          "FA0.85MA0.15PbBr0.51I2.49",
                          "Cs0.2FA0.8PbBr0.36I2.64",
                          "(PEA)0.33MA0.67PbI3",
                          "Cs0.1FA0.74MA0.13PbBr0.39I2.48",
                          "Cs0.05FA0.7885MA0.1615PbBr1.2I1.8",
                          "Cs0.05FA0.38MA0.57PbI3",
                          "Cs0.03MA0.97PbBr0.09I2.91",
                          "CsPbBr2I",
                          "FA0.1MA0.9PbBr2.7I0.3",
                          "MAPb0.85Sb0.15I3",
                          "Cs0.05FA0.80MA0.15PbBr0.45I2.55",
                          "(PEA)2MA3Pb4I13",
                          "MACo0.031Pb0.969I3",
                          "Cs0.03FA0.91Rb0.05PbI3",
                          "FA0.85MA0.15PbBr0.45I2.55",
                          "FA0.3MA0.7PbBr0.9I2.1",
                          "MASnBr1.5I1.5",
                          "FA0.75MA0.25PbBr0.25I2.78",
                          "MAPbBr2.13I0.87",
                          "Cs0.05FA0.93MA0.11PbBr0.40I2.6",
                          "Cs0.17FA0.83PbBr0.51I2.49",
                          "Cs0.24FA0.76PbBrI",
                          "CsBi0.01Pb0.99I3",
                          "MAHg0.3Pb0.7I3",
                          "(PEA)0.05MA0.95PbBr1.2I1.8",
                          "FA0.6MA0.4Pb0.4Sn0.6Br0.24I2.76",
                          "FA0.6MA0.4Pb1.0I3",
                          "FA0.75MA0.25PbBr0.5I2.5",
                          "Cs0.05FA0.79MA016PbBr0.5I2.5",
                          "BA2FAMA2.64Pb5I16",
                          "Cs0.2FA0.66MA0.14Pb0.75Sn0.25Br0.5I2.5",
                          "Cs0.15FA0.25MA0.6PbI3",
                          "BA2MA6Pb7I22",
                          "Cs0.05FA0.79MA0.16PbBr0.31I2.7",
                          "Cs0.88FA0.12PbI3",
                          "Cs0.17FA0.83PbBr1.2I1.8",
                          "Cs0.05FA0.79MA0.16PbBr0.50I2.5",
                          "FA0.85MA0.15PbBr0.45I2.55 | BA2FAPbI4",
                          "Cs0.1FA0.77MA0.13PbBr0.39I2.48",
                          "(HEA)2Cs1.9FA17.1Pb20Br12.6I57.54",
                          "(4FPEA)2MA4Pb5I16",
                          "Cs0.05FA0.80MA0.15PbBr0.33I2.67",
                          "CsPbBr2.9I0.1",
                          "BAMA2Pb2I7",
                          "FA0.33MA0.67PbI3",
                          "MAHg0.025Pb0.975I3",
                          "Cs0.1FAxMAxPbBrxIx",
                          "Cs0.03FA0.945MA0.025PbBr0.075I2.925",
                          "MAPbBr2.16I0.84",
                          "BAFA60Pb61I184",
                          "FA0.67MA0.33PbBr2.5I0.5",
                          "(PEA)0.12BA0.9MA3Pb4I13",
                          "Cs0.05FA0.7885MA0.1615PbBr0.4845I2.51555",
                          "MAPbBr0.226I2.774",
                          "FA0.48MA0.52PbI3",
                          "FASnBr0.75I2.25",
                          "MAPb(BF4)0.05I2.95",
                          "(THM)0.2MA0.8PbI3",
                          "CsPb0.95Sr0.05BrI2",
                          "(BEA)0.5Cs0.15FA2.36MA0.48Pb3Br1.7I0.83",
                          "Cs0.125FA0.75MA0.125PbBr0.33I2.67",
                          "BA2MA3PbI4",
                          "Cs0.17FA0.83Pb0.95Sn0.05I3",
                          "Cs0.3FA0.7PbBr0.15I2.85",
                          "FA0.33PbBr2I",
                          "MAPb0Sn0.19I3",
                          "IM0.6MA0.60.4PbI3",
                          "FA0.76MA0.15PbBr0.48I2.42",
                          "Cs0.05FA0.85MA0.1PbBr0.3I2.7",
                          "Cs0.04FA0.92MA0.04PbI3",
                          "Cs0.1FA0.9PbBr0.256I0.744",
                          "Cs0.02FA0.98PbBr3",
                          "FAPb0.25Sn0.75I3",
                          "MAPb0.98Sb0.02I3",
                          "FA0.92MA0.08PbBr0.24I2.76 | (C6H13NH3)2PbI4",
                          "MACa0.1Pb0.9I3",
                          "(CIEA)0.01MA0.99PbI3",
                          "MAPbBrxIx",
                          "MAPbBr0.9I",
                          "MAPb0.125Sn0.875I3",
                          "Cs0.05FAPbI3",
                          "FA0.25MA0.75PbI3",
                          "Cs0.05FA0.16MA0.79PbBr0.51I2.49",
                          "Cs0.17FA0.83PbBr0.15I2.85",
                          "FA0.66MA0.34PbBr0.42I2.58",
                          "Cs0.05FA0.795MA0.16PbBr0.51I2.5",
                          "Cs0.05FA0.79MA0.16PbBr0.16I0.84",
                          "FA0.44MA0.56PbBr0.33I2.67",
                          "HA0.3MA0.7SnI3",
                          "AgCs1.8Rb0.2BiBr6",
                          "Cs0.02FA0.38MA0.6PbBr0.025I2.975",
                          "Cs0.3MA0.7Pb0.5Sn0.5I3",
                          "MAPbBr0.066I2.93",
                          "MAPb0.875Sn0.125I3",
                          "Cs0.06FA0.84MA0.10PbBr0.41I2.59",
                          "Cs0.17FA0.83PbBr0.4I2.6",
                          "FA0.8MA0.2PbBr0.13I2.88",
                          "nanBi2FeCrO6",
                          "Cs0.05FA0.79MA0.16Pb0.664Sn0.336Br0.52I2.48",
                          "Cs0.05FA0.747K0.05MA0.153PbBr0.51I2.49",
                          "(NH4)3Sb2Br9",
                          "(PDA)0.02Cs0.15FA0.83PbI3",
                          "CsSnBr3",
                          "CsBiI4",
                          "FA0.2MA0.8PbBr0.3I2.7",
                          "(TBA)0.05MA0.95PbI3",
                          "MAPbBr0.03I2.97",
                          "CsBi0.025Pb0.975I3",
                          "Cs0.91Rb0.09PbBr3",
                          "Cs0.4FA0.6PbBr1.05I1.95",
                          "MAPb0.999Sb0.001I3",
                          "Cs0.08FA0.69MA0.23PbBr0.63I2.37",
                          "Bi0.95La0.05FeO3",
                          "(PEA)0.25(F5PEA)0.75PbI4",
                          "Cs0.2FA0.65MA0.15PbBr0.55I2.55",
                          "FA0.57MA0.43PbBr0.39I2.61",
                          "Cs0.05FA0.79MA0.17PbBr0.51I2.49",
                          "MAPbI3 | BA2PbI4",
                          "BA2FA60Pb61Br4I180",
                          "(PDA)2MA3Pb4I13",
                          "CsFAPbI3",
                          "CsFAPbBr3I",
                          "Cs0.08FA0.55MA0.37PbI3",
                          "Cs0.05FA0.8MA0.15PbBr0.45I2.55",
                          "Cs0.05FA0.7885MA0.1615PbBrI2",
                          "Cs0.08MA0.92PbI3",
                          "(BzDA)Cs0.45FA7.2MA1.35Pb10Br2.17I28.83",
                          "FA0.95TN0.05SnI3",
                          "FA0.17MA0.83PbI3",
                          "(PEA)0.05MA0.95PbI3",
                          "Cs0.05FA0.82MA0.13PbBr0.45I2.55",
                          "EDA0.01FA0.99SnI3",
                          "Cs0.05FA0.90MA0.05PbBr0.15I2.85",
                          "Cs0.1FA0.76MA0.14PbBr0.55I2.55",
                          "Cs0.2FA0.75MA0.05PbBr0.33I2.67",
                          "(PEI)2MA4Pb5I16",
                          "Cs0.05FA0.8265MA0.1235PbBr0.39I2.61",
                          "Cs0.06FA0.83MA0.17PbBr0.51I0.249",
                          "AN0.03MA0.97PbI3",
                          "BA2MA8Pb9I28",
                          "Cs0.05FA0.79MA0.16PbI3 | NMABrPbIBr",
                          "Cs0.17FA0.83PbBr1.2I2.8",
                          "CsPb2Br5",
                          "MAPbBr1.25I75",
                          "Cs0.1FA0.9PbBr0.315I2.685",
                          "HA2MA2Pb3I10",
                          "IM0.15MA0.150.85PbI3",
                          "Cs0.14FA0.86PbBr0.27I2.29",
                          "FA0.85MA0.15PbI3",
                          "Cs0.05FA0.09MA0.05PbBr0.15I2.85",
                          "BA0.67MA0.67PbI3.33",
                          "FA0.87MA0.13PbBr0.5I2.5",
                          "FA0.33PbBr0.5I2.5",
                          "MAPb3I3",
                          "MA0.05Mg0.05Pb0.95I3",
                          "(NH4)1.7FA0.15MA2.04Pb2.7Br0.45I8.84",
                          "CsxMAxPbxBrxIx",
                          "FAPbBr0.256I0.744",
                          "FASnBr0.5I2.5",
                          "Cs0.1FA0.75MA0.24PbBr0.51I2.49",
                          "MABa0.05Pb0.95I3",
                          "MAPbI3 | (MIC2)2PbI4",
                          "Cs0.17FA0.87PbBr0.36I2.64",
                          "Cs0.2FA0.8PbBr0.75I2.25",
                          "(PEA)2Cs4MA35Pb40I121",
                          "Cs0.03FA0.81MA0.16PbBr0.50I2.50",
                          "Cs0.1FA0.747MA0.153PbBr0.51I2.49",
                          "AN0.1MA0.9PbI3",
                          "MA0.5PA0.5PbI3",
                          "Cs0.05FA0.83MA0.17PbBr0.39I2.61",
                          "FA0.6MA0.4PbBr0.095I0.905",
                          "(TFEA)2Cs0.725FA23.925MA4.35Pb29Br13.65I77.35",
                          "FA0.12MA0.88PbBr0.25I2.75",
                          "(PEA)2MA4Pb4I13",
                          "Cs2AgBiBr6",
                          "CsPb1.0BrI2",
                          "Cs0.60MA0.40PbI3",
                          "(PDMA)FA3Pb4I13",
                          "(EDA)0.02FA0.29MA0.69Pb1.0I3",
                          "BA2Cs0.45FA2.55Pb2.4Sn1.8I14",
                          "Cs0.1FA0.9MAPbI3",
                          "(PEA)0.4FA0.6PbI3",
                          "(TFEA)2Cs0.975FA32.175MA5.85Pb40Br18.15I102.85",
                          "Cs0.01FA0.39MA0.6PbBr0.025I2.975",
                          "IA0.05MA0.95PbI3",
                          "Cs0.15EA0.75FA0.1PbBr0.3I2.7",
                          "Cs0.05FA0.75MA0.15Rb0.05PbI3",
                          "FA0.25MA0.75PbBr0.25I2.75",
                          "Cs0.017FA0.83MA0.15PbBr0.51I2.49",
                          "FA0.1MA0.9PbI3 | (A43)2PbI4",
                          "Cs0.11FA0.89PbBr0.18I2.82",
                          "Cs0.05FA0.79MA0.15PbBr0.51I2.49",
                          "Cs0.25FA0.75Pb0.5Sn0.5I3",
                          "CsPb0.85I3",
                          "BA0.1Cs0.15FA0.75PbBr0.3I2.7",
                          "FA0.92MA0.08PbBr0.24I2.76",
                          "CsFAPbBr0.3I2.7",
                          "IM0.1MA0.10.9PbI3",
                          "MAPb1.0Br0.33I2.66",
                          "Cs0.2FA0.8Pb0.5Sn0.5I3",
                          "MACa0.05Pb0.95I3",
                          "FAPbI3 | CsPbI3",
                          "Cs0.05FA0.7885MA0.1615PbBr0.45I2.55"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_long_form",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Literature",
                          "Solution composition | XRD",
                          "TEM",
                          "XPS",
                          "Solution composition",
                          "Solution composition | Solution composition",
                          "EDX",
                          "Experimental verification",
                          "XRD"
                        ]
                      }
                    }
                  ]
                },
                "name": "composition_assumption",
                "description": "The knowledge base from which the perovskite composition is inferred. Is the assumed perovskite composition based on the composition of the precursor solutions and the assumption that the final perovskite will have the same composition (i.e. Solution composition), or is it based on literature claims (i.e. Literature) or has it been experimentally verified with some technique, e.g. XRD, EDX, XRF, etc.?",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "composition_inorganic",
                "description": "TRUE if the perovskite does not contain any organic ions.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "composition_leadfree",
                "description": "TRUE if the perovskite is completely lead free.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "4-Aminophenyl Boronic acrid; Cl",
                          "FABr",
                          "BMImI; LiI; L-iTFSI",
                          "Cl; Phosphatidylcholine",
                          "PLMF",
                          "Cl | ZnCl2",
                          "DACl",
                          "CH3CONH2",
                          "rGO-g-Ptet",
                          "(PEY)2PbI4",
                          "oxo-G/DA",
                          "MEH-PPV; TBP",
                          "PbI2-bipyridine",
                          "1,10-diiododecane; Cl",
                          "AA; Cl",
                          "NiI2",
                          "Benzenamine hydrochloride",
                          "BrPh-Thr; bis-PCBM",
                          "HCOOH",
                          "OctAm",
                          "CsPbI3",
                          "CH2CHCH2 (CC2)-ionic liquid",
                          "Polyethylenimines (PEIs), MW 600",
                          "EP-PDI",
                          "EtOH; MA",
                          "EDACl2",
                          "Cl; PTAI",
                          "bis-DMEC60",
                          "DMF",
                          "CuBr",
                          "Cl; PEO",
                          "Tb",
                          "ILPF6",
                          "KIPIG-500",
                          "Cl; K; Sn",
                          "1\u2010methyl\u20103\u2010(1H,1H,2H,2H\u2010tridecafluorooctyl)\u2010imidazolium iodide",
                          "SCN; SnF2",
                          "Cl; PbS-np",
                          "NbF5",
                          "PbF2",
                          "PEI",
                          "n-butyl amine",
                          "Cl; MDACl2",
                          "NaI",
                          "PF-0",
                          "Cl; DPE",
                          "methylammonium hypophosphite; L-\u03b1-phosphatidylcholine; PEABr",
                          "PVDF",
                          "SrI2",
                          "Starch",
                          "P(VDF-TrFE)",
                          "C8Br; Cl",
                          "GU(SCN)",
                          "PCBB-OEG",
                          "C4H10INO2; Cl",
                          "ITIC",
                          "NH4I",
                          "Carbazole-C4",
                          "Polystyrene",
                          "CsAc",
                          "BMIm",
                          "SCN",
                          "FACl; SnF2",
                          "BaAc2",
                          "PMM",
                          "1\u2010butyl\u20103\u2010methylimidazolium bromide",
                          "RbBr",
                          "PVAm.HI",
                          "C16H36BrN",
                          "PPC",
                          "organicD\u2010pi\u2010A",
                          "p-phenylenediamine",
                          "Pyrrole",
                          "TPA",
                          "Cl; CNT-NH2",
                          "Cl; CuI",
                          "Cl; CuPc(tBU)4",
                          "HPbI3 | Cl",
                          "Undoped | Undoped",
                          "1,4-dibromobutane; Cl",
                          "CuBr2; RbI",
                          "PABA\u2219HI",
                          "PPAI",
                          "In; Br",
                          "Cl; Spiro",
                          "Rubrene",
                          "PbAc2; H2O",
                          "PCBM-60",
                          "Ni",
                          "Ag",
                          "CuBr2; CsI",
                          "EDA; SnF2",
                          "ASCl; Cl",
                          "Cl; SrCl2",
                          "Mg",
                          "1,8- Diazabicyclo[5.4.0]undec-7-ene",
                          "Melanin",
                          "HoNH3Cl",
                          "MACl, NMP | Undoped",
                          "AsI3 | NH4Cl",
                          "Cs",
                          "Isatin-Cl",
                          "KSCN",
                          "TPE-DPP4",
                          "Phenylammonium; HI",
                          "DCL97",
                          "MoS2",
                          "PPS",
                          "P25",
                          "MABr; MACl",
                          "1\u2010butyl\u20103\u2010methylimidazolium iodide",
                          "Caprolactam",
                          "Cl; Urea",
                          "BAOAc",
                          "AgI",
                          "TEP",
                          "Cl; EAI",
                          "CSA",
                          "HPA; Pb(AcO)2",
                          "InCl3",
                          "DMA",
                          "C60",
                          "HI; HBr",
                          "Cl; PNVF\u2013NVE",
                          "Phosphonic acid",
                          "BAI",
                          "Aminobenzonitrile",
                          "C3N5",
                          "MAPbBr3-QDs",
                          "Cl; Cu(Tiurea)I",
                          "Cl; Hypophosphorous acid",
                          "MPTS; Cl",
                          "Imidazole",
                          "Cl; I2",
                          "C60; PMMA",
                          "(adamantan\u20101\u2010yl)methanammonium; HI",
                          "Hl",
                          "UiO",
                          "ABA",
                          "Cl; PCBM",
                          "PEG-[60]fullerenes",
                          "p-Si-np",
                          "5-AVAI; CuSCN",
                          "Cl; Formamidineacetate",
                          "HMTA",
                          "Cl; NH4Cl; CuBr2",
                          "Acetate; HPA",
                          "Pb(OAC)2",
                          "Urea",
                          "Cl; Thiourea",
                          "MgI",
                          "FeOOH-QDs",
                          "ZnI",
                          "C3H7NH3I; Cl",
                          "FAAc",
                          "TBA",
                          "L-alfa-phosphatidylcholine",
                          "NaOAc",
                          "Co(Ac)2",
                          "CPTS; Cl",
                          "(SnF2(DMSO))2",
                          "PEA2PbI4",
                          "RbI",
                          "Polyethylenimines (PEIs), MW 70000",
                          "PTAA",
                          "2\u2010(6\u2010bromo\u20101,3\u2010dioxo\u20101H \u2010benzo[de ]isoquinolin\u20102(3H )\u2010yl)ethan\u20101\u2010ammonium iodide",
                          "Hexamethylphosphoramide",
                          "CsPbBr3-np",
                          "Cl; PEG-NH2",
                          "DRCN5T",
                          "Carbonnanowalls",
                          "HaHc",
                          "Diethylamine hydrochloride",
                          "PEO",
                          "Mn",
                          "Hexylamine hydrochlorid",
                          "C6Br; Cl",
                          "NMP",
                          "poly(ethyleneimine); Carbon-nt",
                          "b-PEI; Cl",
                          "Ti",
                          "Sr",
                          "PbCl2; KCl",
                          "MACl",
                          "1,4-diiodobutane; Cl",
                          "BYK333",
                          "BP-QDs",
                          "C6H14INO2; Cl",
                          "exMMT",
                          "Spiro",
                          "Lead acetate",
                          "CEA",
                          "Cl; Au-CZTS",
                          "PbI2",
                          "Methylpyrrolidone",
                          "H2P2O6",
                          "C-PCBOD",
                          "IEICO-4F",
                          "GaAA3",
                          "beta-cyclodextrin",
                          "n-butyl amine; Cl",
                          "P123",
                          "tetra-tert-butyl-metal free phthalocyanine",
                          "PEG; Cl",
                          "HMImCl",
                          "Pb(DDTC)2",
                          "EDAl2; SnF2",
                          "Anilinium Iodide",
                          "MA(SCN)",
                          "PS; PMMA",
                          "5-AVAI; PCBM-60",
                          "E-g-C3N4-np",
                          "D-alanine",
                          "Acetate",
                          "YD2-o-C8",
                          "4-ABPACl",
                          "PDMAI",
                          "PVA",
                          "FIm",
                          "3-Aminophenyl Boronic acrid; Cl",
                          "Polyethyleneglycol; Polyvinylpyrrolidone",
                          "EtOH; H20; Pb(SCN)2",
                          "Polyurethane",
                          "1-butyl-4-amino-1,2,4-triazoliumiodine",
                          "CuSCN",
                          "DPSI",
                          "Glycine",
                          "GUBr",
                          "p-CH3OC6H4; p-t-BuC6H4",
                          "MA",
                          "Nd",
                          "Cl; TPPI",
                          "MACl, NMP",
                          "GAI",
                          "Er",
                          "ZnPc",
                          "Pb(CH3CH2COO)2",
                          "Tetracyanoquinodimethane",
                          "PPA",
                          "KIPIG-600",
                          "PTS | Cl",
                          "Piperazin; SnF2",
                          "CH2I2",
                          "Cl; Liquid crystals",
                          "MOF",
                          "CuBr2; NaI",
                          "YbAc3",
                          "NiCl2",
                          "Butylammonium iodide",
                          "Cl; INIC2",
                          "TTABr",
                          "HI; PEAI",
                          "Melaminium iodine",
                          "Lysine",
                          "Yttrium",
                          "MAPbI3-QDs",
                          "DMBI-2-Th",
                          "1,3:2,4-di-O-dimethylbenzylidene-d-sorbitol",
                          "Ag@SiO2-nw",
                          "Poly(styrene-co-butadiene)",
                          "E2CA",
                          "Cl; MAH2PO2",
                          "KIPIG-550",
                          "Benzoic acid hydroiodide",
                          "Cl; DRCN5T",
                          "Guanidinium",
                          "5-AVAI; Formamide",
                          "Guanidinium-SCN",
                          "SA-2",
                          "1-ethyl-4-amino-1,2,4-triazoliumiodine",
                          "SnCl2",
                          "1,6-diaminohexane dihydrochloride",
                          "DOI",
                          "CaI2",
                          "Cl; DIO",
                          "CNDs@K",
                          "Cl; CsF",
                          "PCBPEG-4k",
                          "CdI2",
                          "CsPbBr3",
                          "TPPCl",
                          "Cl; DMF",
                          "APSA",
                          "1\u2010butyl\u20103\u2010methylimidazolium chloride",
                          "Cl; PEI",
                          "pyr-fullerene",
                          "tetrabutylammonium chloride",
                          "DMBI-2-Th-I",
                          "Sm(acac)3",
                          "CH3I; Cl",
                          "Rb",
                          "PAI",
                          "SrCl2 | MACl",
                          "ZnO-np",
                          "NiO",
                          "MACl; poly[9,9-bis(3\u2032-(N,N-dimethylamino)-\npropyl)-2,7-fluorene)-alt-2,7-(9,9-dioctylfluorene)]) (PFN-P1) in chlorobenzene; PFN-P2 (in ethanol",
                          "OTG1",
                          "DF-C60; SnF2",
                          "PF-1",
                          "Undoped | Mn",
                          "BiI3",
                          "Li",
                          "MABr",
                          "PbCl2",
                          "MACSN",
                          "TBAI3",
                          "HATNA",
                          "IBr",
                          "MXene",
                          "AuAg@SiO-np",
                          "Cl; H2O",
                          "P(EO/EP)",
                          "Protic ionic liquid",
                          "Cl; HI",
                          "Cl; InCl3",
                          "5-AVAI; HBF4",
                          "Formamide; PEA",
                          "Li-TFSI; TBP",
                          "AVAI",
                          "Cl; Cu:NiO-np; Graphite",
                          "MOF-525",
                          "Rb; Thiourea",
                          "Li-TFSI; LiF; TBP",
                          "DMAI",
                          "NMA",
                          "SQ63",
                          "Cl",
                          "NH4Ac",
                          "1,8-octanedithiol",
                          "Hydrazinium chloride; SnF2",
                          "Butylamineiodide",
                          "FAI",
                          "tetra-tert-butyl\u2011silicon phthalocyanine bis(trihexylsilyloxide)",
                          "S-Carbon-nt",
                          "HPbI3",
                          "NaF",
                          "BCP",
                          "DETAI3",
                          "H2O; Pb(SCN)2",
                          "Cl; TBAB",
                          "C6H5C2H4NH3",
                          "Diphenylidonium hexafluoroarsenate; PCBOD",
                          "NO3",
                          "Eu",
                          "Butanediaminedihydroiodide",
                          "PEACl",
                          "PbAc",
                          "FU11",
                          "Phenylethylammonium iodide",
                          "rGO-g-PDDT",
                          "Ag-nw",
                          "Graphdiyne",
                          "Chitosan",
                          "H2O; KI",
                          "C4F8I2",
                          "1-ethylpyridinium chloride",
                          "SWCNTs",
                          "CNT",
                          "DMEC60",
                          "J71",
                          "MACl; PbBr2",
                          "2Ph-ox",
                          "NEP",
                          "LiBr",
                          "4-fluorophenylethylammine",
                          "1-octyl-4-amino-1,2,4-triazoliumiodine",
                          "PCBM-70",
                          "PMPS",
                          "DMI",
                          "Diiodomethane",
                          "PEOXA",
                          "InCl2",
                          "Yb",
                          "PDAI",
                          "CuI2",
                          "MAAc",
                          "SrCl2",
                          "Side-chain liquid crystalline polymer (SCLCP)",
                          "SnF2; TMA",
                          "Cl; I3",
                          "A43",
                          "K; Rb",
                          "Al; Cl",
                          "OTG2",
                          "methylammonium hypophosphite (MHP); L-\u03b1-phosphatidylcholine (LP); 1,3-diaminopropane (DAP)",
                          "BEA",
                          "TiO2-np",
                          "Acetic acid; HCl; n-propylamin; Pb(Ac)2",
                          "C4Br; Cl",
                          "C60-PYP",
                          "Ethane\u00ad1,2\u00addiammonium",
                          "Pb(NO3)2",
                          "ASA",
                          "CB",
                          "Li-TFSI",
                          "BiFeO3-np",
                          "Carbon-np; Urea",
                          "PE10",
                          "GA",
                          "BTA; SnF2",
                          "methylammonium hypophosphite; L-\u03b1-phosphatidylcholine; PEACl",
                          "TMA",
                          "SnF2",
                          "CuCl; PbCl2",
                          "Poly(amicacid)",
                          "Cl; RbBr",
                          "PbC2O4",
                          "Thiourea",
                          "LiI",
                          "Graphdiyne-QDs",
                          "terephthalonitile",
                          "As; NH4; Cl",
                          "FACl",
                          "NH4Cl; DMSO",
                          "Cl | nan",
                          "Acetonitrile",
                          "2-(1H-pyrazol-1-yl)pyridine",
                          "GITC",
                          "TDZT",
                          "HCl",
                          "N-methyl-2-(3,5-bis(perfluorooctyl)phenyl)-3,4-fulleropyrrolidine",
                          "MAPbBr3",
                          "SmI2; SnF2",
                          "HI; Mercapto-tetrazolium",
                          "TiI2",
                          "GuaI",
                          "Cl; PEG",
                          "Carbon-nt-g-P3HT",
                          "Cl; Fe(acac)3",
                          "NaYF4:Yb:Er-np",
                          "5-AVAI; Cl",
                          "CsBr",
                          "Hydrophosphoric acid; rGO; PbAc2",
                          "N-Carbon-QDs",
                          "MAH2PO2",
                          "PTMA-H; Rb",
                          "F127",
                          "Black Phophorous",
                          "GeI2",
                          "PCBM-60; PbF4",
                          "GuCl",
                          "L-\u03b1- phosphatidylcholine",
                          "CsPbBrCl2-QDs",
                          "Ag-NPs",
                          "2-pyridylthiourea",
                          "EtOH",
                          "1-Donecyl Mercaptan",
                          "Au@Ag@SiO2-np",
                          "PFPA",
                          "PbS-QDs-AI-ligand",
                          "DIO",
                          "H2PO3",
                          "Cl; ZnO-np",
                          "Polyimide",
                          "EDAI2 | SnF2",
                          "NaCl",
                          "CsPbr3",
                          "I3",
                          "EDA",
                          "CH3SH",
                          "Cl; IPFB",
                          "Ti3C2Tx",
                          "Methylammonium formate",
                          "MACl; PFN-P2 (in ethanol",
                          "Cl; NH4Cl",
                          "Cl; NH4Br",
                          "HPbI3; PTABr",
                          "tetra-tert-butyl\u2011germanium naphthalocyanine bis(trihexylsilyloxide)",
                          "PE",
                          "NH4SCN",
                          "Phenylethyl-ammonium iodide",
                          "Acetamidine hydrochloride",
                          "Polythiocyanogen",
                          "Cl; Guanidinium",
                          "3,4-dihydroxybenzhydrazide; MACl",
                          "KCl",
                          "Sm",
                          "CH2CCH (CC3)-ionic liquid",
                          "GASCN",
                          "TBAI; Cl",
                          "Cl; HCOOH",
                          "Octoxynol",
                          "PEA5",
                          "Cl; Formamide; Guadinium",
                          "n-BAI; Rb",
                          "5F-PCDM-60",
                          "CuI; PbCl2",
                          "Au@TiO2 NPs",
                          "TOPO",
                          "Cl; Cu(thiourea)Cl",
                          "PbF4",
                          "M13 bacteriophage",
                          "OAc",
                          "PVC",
                          "EAPP",
                          "CH2O2; SnF2",
                          "SbCl3",
                          "n-Si-np",
                          "Trimesic acid",
                          "CsCl",
                          "Acetate; SrI2",
                          "N-cyclohexyl-2-pyrrolidone",
                          "DPP-DTT",
                          "Hydrazine",
                          "KHQSA",
                          "Butylated hydroxytoluene",
                          "RbI; KI",
                          "Acetate; HAc",
                          "Ethyl cellulose; Cl",
                          "Cl; TBAC",
                          "C2H6INO2; Cl",
                          "FeI2",
                          "4-MSA",
                          "t-BAI",
                          "Cu",
                          "1,2,4-triazole",
                          "Zn",
                          "KBr",
                          "3F-PCBM-60",
                          "Cl; Eu(acac)3",
                          "Cl; Cu(thiourea)I",
                          "TDZDT",
                          "Acetate; Cl",
                          "Polyvinylalkolhol",
                          "Agarose",
                          "Cl; KI",
                          "PMA",
                          "3BBAI; Cl",
                          "Thenolytrifluoroacetone",
                          "Cl; PCBM-60",
                          "Cl; PCBM-60; PEG",
                          "HBr",
                          "MLAI",
                          "5-AVAI",
                          "PVDF-HFP",
                          "Cl; HI; KOH",
                          "D3",
                          "Cl; KBr",
                          "Cl; PNVF-NVEE Microgels",
                          "PVA; SnF2",
                          "Undoped",
                          "C6F5I",
                          "PTAI",
                          "Cl; EA\u06f0HCl",
                          "Rb; SrI2",
                          "g-C3N4",
                          "Carbon",
                          "DEACl",
                          "MAI",
                          "EACl",
                          "C3A; PEA",
                          "THTO",
                          "Acetate; H2O; Hypophosphorous acid",
                          "Adipic acid; Cl",
                          "3-aminopropyl (3-oxobutanoic acid) functionalized silica nanoparticles; Cl",
                          "OA; ODE; OLA",
                          "D1",
                          "CHP",
                          "SA-1",
                          "Ethylene\u2010diammonium; SnF2",
                          "1,8-dibromooctane; Cl",
                          "GN-GQDs",
                          "BMImI; LiI",
                          "ZnI2",
                          "h-TAc",
                          "F4-TCNQ",
                          "A10C60",
                          "Ca",
                          "Ag; Cl; rGO",
                          "Cl; HBr",
                          "PEABr",
                          "MQW",
                          "Cl; NO3",
                          "Mn; Cl",
                          "PDMS",
                          "H2O; KCl",
                          "Cl; MAAc",
                          "BMIMBF4",
                          "C60(QM)2",
                          "PMMA; PbCl2",
                          "H3PO2; Acetate",
                          "PANI",
                          "Acetic acid",
                          "Al2O3-np",
                          "PC",
                          "Ce",
                          "PEG",
                          "Caffeine",
                          "SQ45",
                          "3-phenyl-2-propen-1-amine iodide",
                          "HBr; Hi",
                          "SQ81",
                          "MnCl2",
                          "Monoammonium zinc porphyrin",
                          "1,8-diiodooctane",
                          "BMImI",
                          "Cl; DMSO",
                          "Cl; DL-tartaricacid",
                          "CDTA; SnF2",
                          "ThMAI",
                          "I",
                          "TPPi",
                          "Imidazolium",
                          "FEAI",
                          "1-hexyl-3-methylimidazoliumchloride; HMImCl",
                          "EuCl3",
                          "Octylammonium iodide",
                          "CHCl",
                          "Dithizone",
                          "4-vinylbenzylammonium",
                          "H2O; TEOS",
                          "Cl; Formic acid",
                          "iPAI",
                          "1,3-diaminopropane",
                          "p-phtalic acid",
                          "Cl; NH3SO3",
                          "Lu",
                          "H2O; Ti3C2Tx",
                          "Cl; TBPI",
                          "Cl; NiO-np",
                          "Rhodanina",
                          "CH3COCHCOCH3",
                          "MAOAc",
                          "Cl; SDS",
                          "Cu:NiO-np",
                          "SP-3D-COF 2",
                          "CU(SCN)",
                          "Cl; ITIC",
                          "Cl; PEDOT:PSS",
                          "PbAc2; PbCl2",
                          "PAA",
                          "Carbon-np",
                          "alfa-cyclodextrin",
                          "Eu-pyP",
                          "MWCNTs",
                          "TSC",
                          "Cl; Diiodooctan",
                          "CsBr; Cl",
                          "BHT",
                          "Unknown",
                          "SbBr",
                          "Cl; HCl",
                          "PbS-QDs-MAI-ligand",
                          "N2H5Cl",
                          "Si-nc",
                          "Octylammonium",
                          "1-hexyl-3-methylimidazoliumchloride",
                          "PMMA; Rb",
                          "CH3NH2",
                          "4-(1H-imidazol-3-ium-3-yl) butane-1-sulfonate",
                          "ligands",
                          "N-methylimidazole",
                          "DIFA",
                          "Formamide",
                          "Styrene",
                          "YbCl3",
                          "K",
                          "MeO-PEAI",
                          "BrPh-ThR",
                          "OA; OLA",
                          "SnF2; Uric Acid",
                          "SnCl",
                          "Cl; TBP",
                          "tetra-ammonium zinc porphyrin",
                          "Ho",
                          "Graphene",
                          "Carbon-nt-g-PDDT",
                          "PFPAI",
                          "Graphitic carbin nitride (g-C3N4)",
                          "Cl; PAA",
                          "TEOS",
                          "Cl; KCl",
                          "Carbon-nt",
                          "F-PEAI",
                          "J61",
                          "Ethyl cellulose",
                          "Ethyleneglycol",
                          "Citric acid; Cl",
                          "Cl; Pb(SCN)2; SnF2",
                          "D2",
                          "pyP",
                          "In",
                          "dimethyl itaconate",
                          "GdF3",
                          "BAI; PEG",
                          "Formic acid",
                          "Cl; PCDTBT",
                          "Nb",
                          "GABr; Pb(SCN)2",
                          "APPA",
                          "H2O",
                          "Ag@SiO2",
                          "NH4Br",
                          "gamma-cyclodextrin",
                          "Ba",
                          "PEAI",
                          "J51",
                          "N2200",
                          "DNA",
                          "TiO2-nw",
                          "A@SiO2-np-nw; Cl",
                          "Graphene-nanofibers",
                          "Methylamine",
                          "G-NH2",
                          "BaCl2; Cl",
                          "GASCN; MACl",
                          "SnF2; TFEACl",
                          "Polyacrylonitrile",
                          "Acetic acid; Cl",
                          "La",
                          "LFA",
                          "[BMMIm]Cl",
                          "PCBPEG-20k",
                          "B-alanine",
                          "NH2CONH2",
                          "P(VDF-TrFE-CTFE)",
                          "Polyvinylbutyral",
                          "Graphene oxide",
                          "EAI",
                          "C70",
                          "C4H8I2",
                          "Cesium phenethyl xanthate",
                          "NH4Ac2",
                          "Benzylamine hydroiodide",
                          "LiCl",
                          "FPEAI",
                          "GuaSCN; SnF2",
                          "PbS-np",
                          "Hydroquinone",
                          "CuI",
                          "enI2; SnF2",
                          "Cl; PbS",
                          "PMMA",
                          "H2O; KBr",
                          "HC(NH2)2I\u2013NaI",
                          "PbC2N2S2",
                          "g-CN",
                          "1,8-octanedithiol; Cl",
                          "Cellulose-CDHC",
                          "HMPA",
                          "rGO-g-P3HT",
                          "Cellulose-HEC",
                          "Gd",
                          "NaSCN",
                          "NH4Cl; NH4SCN",
                          "PA",
                          "TACl",
                          "I2; Thiourea",
                          "CsPbBr3-nw",
                          "Benzene\u20101,4\u2010diboronic acid; Cl",
                          "methylammonium hypophosphite; L-\u03b1-phosphatidylcholine",
                          "MABF4",
                          "Co",
                          "BA; HI; HBr",
                          "Cl; PVP",
                          "IPA HCl",
                          "CaCl2",
                          "F-N2200",
                          "CuCl2",
                          "Ag; Cl",
                          "TCA",
                          "TBP",
                          "CuBr2; KI",
                          "Cl; CuSCN",
                          "Benzoquinone",
                          "KI",
                          "Al2O3-np; Cl",
                          "Isobutylamine hydroiodide",
                          "Graphene-QDs",
                          "MAPbCl3",
                          "2,9,16,23-tetra-tert-butyl-29H,31H-phthalocyanine",
                          "Formamide; Guadinium",
                          "Bi",
                          "Cl; Y",
                          "NiO-np",
                          "GuI",
                          "1,8-diiodooctane; Cl",
                          "SP-3D-COF 1",
                          "Cl; Cu",
                          "rGO",
                          "HBr; HI",
                          "HA",
                          "OAm",
                          "Cl; Graphene",
                          "Nano-carbon",
                          "HAc",
                          "PEA20",
                          "ACN",
                          "Hypophosphorous acid",
                          "Cl; TPPCl",
                          "IPFB; PbCl2",
                          "CsPbBr-np",
                          "MgAc",
                          "PEA0",
                          "In2-6",
                          "FPEAI; Mn",
                          "Cl; Y(acac)3",
                          "Cl; NH4I",
                          "ZnCl2",
                          "CsI",
                          "TiO2",
                          "Polyethylenimines (PEIs), MW 10000",
                          "Diiodooctane",
                          "PbS-QDs",
                          "Phenylethyl ammonium iodide",
                          "3-(5-Mercapto-1H-tetrazol-1-yl)benzenaminium iodide; HI",
                          "CdS; Cd(SCN2H4)2Cl2",
                          "PbAc tri-hydrate; H3PO2",
                          "MA3Bi2Br9",
                          "BmPyPhB",
                          "Ag-rGO; Cl",
                          "CdS",
                          "Cl; DMA",
                          "Methimazole",
                          "2-Phenylethylamine Hydroiodide",
                          "Ba; Cl",
                          "BAI; GAI",
                          "Az",
                          "Cl; C-PCBSD",
                          "Diethylammoniumchloride; PCBM-60",
                          "hypophosphorous acid",
                          "CH2CN (CN)-ionic liquid",
                          "ITIC-Th",
                          "PbCl2; Phenol",
                          "False",
                          "Br",
                          "Cl; NAP 1-(3-aminopropylpyrrolidine)",
                          "Cd",
                          "Carbon-QDs",
                          "PTMA; Rb",
                          "Cl; DTA",
                          "g-CNI",
                          "Sn",
                          "PCBM-nw",
                          "5-AVAI; Acetamide",
                          "Cl; CZTS",
                          "MnCl2; ZnCl2",
                          "Cl; MA",
                          "Cl; SCN",
                          "ITIC; PCBM-60",
                          "NH4OAc",
                          "NH4Cl; SnF2",
                          "Au-np",
                          "TMS",
                          "PVP",
                          "Cl; MoOx-np",
                          "NaAc",
                          "Benzoicacid",
                          "FAOAc",
                          "Tea Polyphenol",
                          "Cl; Sr",
                          "Carbon-nt; PDDT",
                          "DOI; PbCl2",
                          "Nickel phtalocyanine",
                          "OAI",
                          "5-AVAI; Urea",
                          "n-butylammoniumbromide",
                          "en; SnF2",
                          "PbCl2; Phosphatidylcholine",
                          "NH4Cl",
                          "CQD",
                          "Pb(OAc)2",
                          "Levulinic acid",
                          "EC",
                          "PbSCN2",
                          "KI; I2",
                          "In2-4",
                          "NH4BF4",
                          "EDEA",
                          "Hydrophosphoric acid; PbAc2",
                          "Graphdyine",
                          "TOAB",
                          "OTAB",
                          "Pb(SCN)2; SnF2",
                          "Diethylammoniumchloride",
                          "Tetraethylorthosilicate",
                          "trihydrazine dihydriodide (THDH)",
                          "DA2PbI4",
                          "Cl; DL-lacticacid",
                          "l-alfa-phosphatidylcholine; Methylammoniumhypophosphite; NH4Cl",
                          "HI | Undoped",
                          "Graphdiyne QDs",
                          "Lead acetate trihydrate",
                          "PEAI; SnF2",
                          "BE2PbI4",
                          "Cl; FAH",
                          "ABS",
                          "PbCl2; TBP",
                          "PS",
                          "CsI; OIH",
                          "J50",
                          "NH4F",
                          "acac; Cl",
                          "3DHG",
                          "BA",
                          "PEA; SnF2",
                          "Pb(Ac)2",
                          "OTG3",
                          "NH4H2PO2",
                          "PEA",
                          "Eu(Ac)3",
                          "Acetate; H2O",
                          "1-allyl-3-methylimidazolium chloride",
                          "H3PO2",
                          "EE",
                          "NO3-C3N4",
                          "Cl; MWCNTs",
                          "BCP; Cl",
                          "Zr(AC)4",
                          "Terephthalic acid",
                          "SnS-QDs",
                          "1-benzyl-3-methylimidazolium chloride",
                          "Sb",
                          "Cl; TPPBr",
                          "di-iodomethane",
                          "NH4",
                          "ZnAc2",
                          "Ethylenediammonium",
                          "Cl; DL-malicacid",
                          "Thiosemicarbazide",
                          "Guanidinium; HI",
                          "ETI",
                          "Phosphonic acid; Aluminium acetylacetonate",
                          "1,3:2,4-di-O-methylbenzylidene-d-sorbitol",
                          "CH3CH2COO",
                          "SbI3",
                          "SnBr2",
                          "xDMAI",
                          "Cl; SrAl2O4:Eu2+:Dy3+",
                          "CuBr; PbCl2",
                          "MACL",
                          "Cl; SnF2",
                          "PTN-Br; SnF2",
                          "SnI2",
                          "bis-PCBM",
                          "HI",
                          "BMII",
                          "HPA",
                          "In2-2",
                          "Poly(diallyldimethylammoniumchloride)",
                          "Cl; K",
                          "I2",
                          "ME",
                          "Pyrazine; SnF2",
                          "DPPS",
                          "Ascorbic acid",
                          "PbAc2",
                          "CuBr2",
                          "IDTBR",
                          "PbCl2; PbAc2",
                          "Cl; ICBA",
                          "Carbon-nt; P3HT",
                          "P(VDF-TrFE-CFE)",
                          "BaI2",
                          "ALAI; Cl",
                          "TMTA",
                          "Formamidinium chloride; formamidinium hypophosphite; Phenylethylammonium chloride",
                          "DMSO",
                          "NaYF4:Tb:Er-np",
                          "Cl; NH4Cl; CuBr",
                          "PTB7",
                          "SnF2; PMMA",
                          "Pb(SCN)2",
                          "l-alfa-phosphatidylcholine; Methylammoniumhypophosphite",
                          "DAGCl",
                          "1-chloronaphthalene; Cl",
                          "Acetate; HCl",
                          "CdCl2",
                          "Cl; V2Ox",
                          "Cl; IEICO-4F",
                          "1-chloronaphthalene",
                          "C70; Cl",
                          "a-Ge; Cl; H-np",
                          "methylammonium hypophosphite; L-\u03b1-phosphatidylcholine; PEAI",
                          "C4H9NH3I; Cl",
                          "C-PANI",
                          "MAI; FACl",
                          "PU",
                          "TFBA"
                        ]
                      }
                    }
                  ]
                },
                "name": "additives_compounds",
                "description": "List of the dopants and additives that are in the perovskite\n- If the perovskite is layered (e.g. 3D perovskite with a 2D caping layer), separate the layers by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If several dopants/additives, e.g. A and B, are present in one layer, list the dopants/additives in alphabetic order and separate them with semicolonsas in (A; B)\n- If no dopants/additives, state that as \u201cUndoped\u201d\n- If the doping situation is unknown, stat that as\u2018Unknown\u2019\n- Include any non-solvent that does not go into the perovskite structure. This includes compounds that are found in secondary phases, or amorphous grain boundaries, or that disappears during synthesis.\no One example is Rb in MAFAPbBrI-perovskites. As far as we know, Rb does not go into the perovskite structure, even if that was believed to be the case in the beginning, but rather form secondary phases. For MAFAPbBrI-perovskites, Rb should thus not be considered as a A-site cation, but as a dopant/additive.\no One other example is chloride in MAPbI3. As far as we know, Cl does not go into the perovskite structure even if that was believed to be the case in the beginning. For MAPbI3 Cl should thus not be considered as a C-site cation, but as a dopant/additive.\nExample\nCl\nUndoped\n5-AVAI\nSnF2\nAg; Cl; rGO\nRb",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.25 wt%",
                          "0.125",
                          "0.225",
                          "24 mg/ml",
                          "0.025; nan",
                          "0.35",
                          "2 %; 0.1 %",
                          "0.66; 0.0875",
                          "2",
                          "0.0775",
                          "0.005",
                          "0.0207",
                          "0.05 %",
                          "0.1 M; 10 wt%",
                          "5 vol%",
                          "0.1 mol",
                          "0.005 M",
                          "0.057",
                          "0.003; nan",
                          "6 mol%; 10 mol%",
                          "0.22",
                          "0.6 mg/ml; nan",
                          "nan; 1",
                          "3.7 wt%",
                          "0.36",
                          "0.099",
                          "nan; 8 mol%",
                          "0.6 vol%",
                          "0.03 M",
                          "5.6 vol%; nan",
                          "2.6",
                          " PEG",
                          "2.5 wt%; 0.5 wt%",
                          "0.1666666666666667",
                          "0.03125",
                          "0.035; 1.5 vol%",
                          "0.002 mg/ml",
                          "8 %; 4 %33%",
                          "0.0003 mmol/ml",
                          "0.3 vol%",
                          "3.3 %; nan",
                          "2.5 vol%",
                          "0.2 mol%; 10 mol%",
                          "0.18",
                          "0.0001 mol%",
                          "0.01 mol%",
                          "0.515 M",
                          "0.07",
                          "20 \u00b5mol/ml",
                          "2.5 wt%; 1.5 wt%",
                          "0.9 wt%",
                          "0.006",
                          "0.5 mg/perovskite_mmol",
                          "30 mmolL-1",
                          "0.000525",
                          "2.5 wt%; 0.25 wt%",
                          "0.321; 0.009",
                          "0.05",
                          "2.4",
                          "0.00167",
                          "nan; 5 %",
                          "0.4 wt.%",
                          "0.05 wt%",
                          "6.4",
                          "1.05",
                          "0.04; 0.17",
                          "0.0125",
                          "0.3 mg/perovskite_mmol",
                          "2.5 wt%; 0.35 wt%",
                          "8",
                          "0.084",
                          "10 vol%",
                          "0.05 %; nan",
                          "0.0001 mmol/ml",
                          "0.035; 3 mg/ml",
                          "0.0007",
                          "0.03; 0.02",
                          "0.0625 \u202c",
                          "1.0",
                          "0.14",
                          "10 wt%",
                          "0.16; 0.5",
                          "60 mol%",
                          "nan | 20 mg/ml",
                          "0.00068",
                          "nan | 13 mg/ml",
                          "nan; 4 mol%",
                          "0.02",
                          "1.2 mg/ml; 20 mg/ml",
                          "nan | 27 mg/ml",
                          "0.0003",
                          "0.333; 0.009",
                          "3.9 vol%",
                          "0.4; 0.01",
                          "0.7",
                          "0.9 mg/ml; 15 mg/ml",
                          "6 mol%; 20 mol%",
                          "0.05; nan",
                          "0.66; 1",
                          "0.04; 0.0015",
                          "nan; 0.66 %",
                          "0.034; 0.034",
                          "3 mg/ml; nan",
                          "15; 10",
                          "50 mg/ml; 1 mg/ml",
                          "0.3 mg/ml",
                          "6.8 e-05",
                          "0.03 mM; 0.09 mM",
                          "0.048",
                          "1.2 M",
                          "0.312; 0.018",
                          "3 mg/ml",
                          "0.0005 mmol/ml",
                          "0.005 wt%",
                          "4.5",
                          "0.1 vol%",
                          "nan; 0.0125",
                          "60 mol% | 6 mg/ml",
                          "nan; 0.0166 %",
                          "0.336",
                          "150 mol%",
                          "12 wt%",
                          "10 %; 7.5 %",
                          "nan | 5 mg/ml",
                          "4 mg/ml; nan",
                          "3 %; nan",
                          "0.9 mM",
                          "30 mM",
                          "0.03 vol%",
                          "12.8",
                          "10 ppm",
                          "0.089 mg/ml",
                          "0.5 wt%",
                          "10 g/ml",
                          "0.06 mg/ml",
                          "0.13 wt%",
                          "0.028; nan",
                          "2.5 %; 10 %",
                          "nan; 1.0",
                          "0.1; 0.15",
                          "15 %; 7.5 %",
                          "8.0",
                          "nan; 1 wt%",
                          "23 mol%",
                          "0.006; 0.05",
                          "6 mg/ml",
                          "nan; 1 mg/ml",
                          "15 mg/ml",
                          "0.262 M",
                          "0.02 M",
                          "nan; 20 %",
                          "0.09",
                          "0.45",
                          "0.016",
                          "1 ppm",
                          "7 mol%",
                          "0.333",
                          "5 mg/ml; nan",
                          "0.0085",
                          "0.5 wt.%",
                          "0.09375",
                          "0.15 wt%; 0.05 wt%; 0.42 mol%",
                          "5 mol%; 20 mg/ml",
                          "2.0 wt%",
                          "50 mol%",
                          "5 wt%",
                          "50",
                          "5 %; nan",
                          "2 wt.%",
                          "4 mg/ml; 4 mg/ml; 4 mg/ml",
                          "2.3",
                          "0.05 M",
                          "0.03",
                          "0.0034",
                          "16 vol%",
                          "15 wt%",
                          "0.01 ug/ml",
                          "2.5 wt%; 0.3 wt%",
                          "nan; 0.02",
                          "0.10 wt%",
                          "nan | 0.05 mol%",
                          "6 mM",
                          "50 vol%",
                          "8 mol%",
                          "0.66; 0.08",
                          "0.1 mol%",
                          "1.3",
                          "0.035; 30 mg/ml",
                          "1.2 wt%",
                          "0.5; 0.5",
                          "12 mM",
                          "0.00075",
                          "3.5 m%",
                          "12 mg/ml",
                          "0.0175",
                          "4 \u00b5mol/ml",
                          "5- AVAI",
                          "12.5 wt%",
                          "0.042",
                          "18 mM",
                          "5 %; 0.1 %",
                          "0.6 mg/ml",
                          "3.3 vol%",
                          "0.6 wt%",
                          "0.097 mol%",
                          "0.5 %; nan",
                          "0.66; 0.075",
                          "0.0026344676180021956",
                          "nan; 10 mg/ml",
                          "0.05 vol%",
                          "4 mg/ml",
                          "nan; 9 mM",
                          "0.5 M",
                          "0.0004",
                          "nan; 114 mM",
                          "0.05; 0.15",
                          "1.5 %; 6 %",
                          "0.3 M",
                          "20 mg/ml",
                          "0.04; 0.003",
                          "100 ppm",
                          "7 mg/ml",
                          "nan; 1 %",
                          "nan; 0.1 mg/ml",
                          "nan | 0.1 mol%",
                          "2.5 wt%; 0.2 wt%",
                          "6 \u00b5mol/ml",
                          "7.5 mol%",
                          "0.018; nan",
                          "0.5 vol%",
                          "0.08",
                          "2 wt%",
                          "0.04 %",
                          "0.025",
                          "10 mmg/perovskite_mmol",
                          "nan; 0.033 %",
                          "nan; 0.2 mg/ml",
                          "0.014 mol%",
                          "0.3",
                          "12.5",
                          "0.59 uM",
                          "0.12",
                          "0.0285 vol% | nan",
                          "0.0076",
                          "0.015 M",
                          "0.06",
                          "10 %; 20 %",
                          "nan; 0.015",
                          "1 e-05",
                          "6 wt%",
                          "0.10; 0.01",
                          "75 vol%",
                          "10 mg/ml",
                          "0.4 mg/ml",
                          "nan; 0.15 %",
                          "0.25 mM",
                          "5.69 vol%",
                          "3.5 vol%",
                          "0.75; nan",
                          "0.66; 1; 0.0075",
                          "nan; 2 mg/ml",
                          "nan; 0.33 %",
                          "nan; 0.00166 %",
                          "0.0125; 0.05",
                          "1.35",
                          "8 %; nan",
                          "1000 ppm",
                          "16.67 %; nan",
                          "2.5 wt%; 0.1 wt%",
                          "0.08 mg/ml",
                          "0.125; 20 mg/ml",
                          "nan; 0.0075",
                          "2.5",
                          "90 mol%",
                          "nan; 2 wt%",
                          "1.5 mol%",
                          "2 mg/mlantisolvent",
                          "25 mg/ml",
                          "0.0011",
                          "0.15; 0.15",
                          "0.0015",
                          "20 vol%",
                          "nan; 4 %",
                          "15 mol%; 10 mol%",
                          "0.075; nan",
                          "6",
                          "1.25; nan",
                          "nan; 2",
                          "0.35; 0.019",
                          "0.02; 0.03",
                          "0.4 mM",
                          "50 mg/ml; nan",
                          "8 vol%",
                          "5 %; 7.5 %",
                          "0.3 mol",
                          "0.006; nan",
                          "0.25",
                          "nan; 18 mM",
                          "2.5 mg/ml",
                          "0.09; nan; nan",
                          "1 wt%; nan",
                          "2 vol%",
                          "0.01 | 0.1",
                          "nan; 1.5",
                          "nan | 0.2 mol%",
                          "0.017",
                          "0.01 vol%",
                          "7.5",
                          "0.009",
                          "13.7 mg/ml",
                          "0.027",
                          "0.25; 0.04",
                          "0.15; 0.15; 0.004",
                          "6.67",
                          "30 wt%",
                          "nan; 0.005",
                          "1.0 wt%",
                          "1 %; 0.1 %",
                          "0.48 mg/ml; nan",
                          "5 mol%",
                          "0.067 mol%",
                          "nan; 36 mM",
                          "0.9",
                          "nan; 0.5",
                          "0.011",
                          "0.035",
                          "0.4 wt%",
                          "0.004",
                          "0.33; 0.33",
                          "6 %; nan",
                          "0.04; 0.0001875",
                          "nan; 0.025",
                          "nan; 0.05",
                          "100 mol%",
                          "nan; 5 mol%",
                          "0.75; 0.25",
                          "20 uL",
                          "0.0375",
                          "1.67 mol%",
                          "0.14 M",
                          "3 wt%",
                          "0.01; 0.05",
                          "4 %; nan",
                          "0.0028",
                          "0.15; 0.075",
                          "0.07 wt%",
                          "1; nan",
                          "nan | 0.5 mol%",
                          "0.35; 0.057",
                          "0.0002",
                          "nan; 2 %",
                          "0.8 M",
                          "3.5 mol%; 10 mol%",
                          "25 vol%",
                          "0.04; 0.000375",
                          "10 \u00b5mol/ml",
                          "0.15; 0.025",
                          "0.5 mg/m",
                          "0.8",
                          "25",
                          "9",
                          "16 mg/ml",
                          "6 e-05",
                          "0.5; nan",
                          "2 mol%; 2 mol%",
                          "1",
                          "0.33; 0.003",
                          "0.064",
                          "0.6 wt.%",
                          "5.0",
                          "0.1; 0.02",
                          "nan; 3 %",
                          "0.6",
                          "0.66; 0.0625",
                          "0.84 vol%; nan",
                          "1.25 mg/ml",
                          "76 mg/ml",
                          "15 \u00b5mol/ml",
                          "0.20; 0.15",
                          "nan | 2.5 mol%",
                          "nan; 0.54 %",
                          "0.1 mg/perovskite_mmol",
                          "12 mg/ml; 12 mg/ml; 12 mg/ml",
                          "0.2",
                          "0.24 mg/ml; nan",
                          "nan; 1.66 %",
                          "5 mg/ml",
                          "1 mol%",
                          "2 mg/ml; nan",
                          "100 vol%",
                          "1.5",
                          "0.33",
                          "0.00035",
                          "0.167",
                          "0.284",
                          "2.0",
                          "nan; 9",
                          "1 mg/ml; nan",
                          "nan; 1.5 mg/ml",
                          "0.00067",
                          "1 e-06",
                          "5 mol%; 10 mol%",
                          "nan; 10 mol%",
                          "0.003",
                          "0.66; 0.016",
                          "0.66",
                          "nan; 72 mM",
                          "3.5 mol%",
                          "0.05 | nan",
                          "0.018",
                          "12 mg/ml; 12 mg/ml",
                          "0.0010537870472008782",
                          "0.4",
                          "0.0112",
                          "0.012",
                          "0.1 mg/ml",
                          "0.5; 0.16",
                          "0.26",
                          "4 wt%",
                          "0.02 mg/ml",
                          "nan; 0.54 %; 0.11 %",
                          "0.034; 0.05",
                          "2.8 mol%",
                          "8 mg/ml",
                          "100",
                          "0.075",
                          "0.077",
                          "0.0615; 0.0185",
                          "0.764 M",
                          "nan; 1.5 %",
                          "8 \u00b5mol/ml",
                          "0.6 mol%",
                          "0.25; 0.75",
                          "0.15",
                          "0.032",
                          "2.5 wt%",
                          "nan; 7 %",
                          "0.3 mM",
                          "0.5 mg/mlantisolvent",
                          "0.014; nan",
                          "40 mol%",
                          "nan; 0.25 %",
                          "0.125 mol%",
                          "3.6 vol%",
                          "42.9",
                          "0.05; 0.1",
                          "0.5",
                          "0.46",
                          "20; 10",
                          "5.268935236004391 e-05",
                          "4 mol%",
                          "nan; 0.03",
                          "0.0008",
                          "0.00026344676180021956",
                          "0.00027",
                          "3 mol%; 10 mol%",
                          "0.66; 0.1",
                          "nan; 0.125 %",
                          "nan; 3 wt%",
                          "nan; 0.5 mg/ml",
                          "0.0075",
                          "0.3 wt%",
                          "0.04",
                          "3",
                          "3.0",
                          "3.2",
                          "2.5 wt%; 0.4 wt%",
                          "nan; 0.01",
                          "0.39999999999999997",
                          "0.3 mg/ml; 5 mg/ml",
                          "1.009 M",
                          "3 vol%",
                          "0.034 mol%",
                          "0.16666666666666666",
                          "0.023",
                          "0.6 M",
                          "0.333; 0.003",
                          "0.25 mg/ml",
                          "0.07 mol%",
                          "0.03 wt%",
                          "0.003; 0.05",
                          "50 mM",
                          "5; 10",
                          "nan; 2.5 %",
                          "0.126",
                          "2 mg/ml",
                          "9.6",
                          "nan; 0.2",
                          "0.001",
                          "0.063",
                          "2.0 mg/ml",
                          "0.15; 0.05",
                          "30 mg/ml",
                          "30 mol%",
                          "0.21",
                          "0.05 mg/ml",
                          "0.05; nan; nan",
                          "0.5 mol%",
                          "0.031",
                          "0.2 mg/ml",
                          "0.0035",
                          "0.75.0.01",
                          "0.01 M",
                          "0.75 M",
                          "0.8 mg/ml",
                          "1 mol%; 10 mol%",
                          "nan; 4 wt%",
                          "0.11",
                          "0.1 mM",
                          "29 wt%",
                          "16.67",
                          "0.66; 0.05",
                          "nan; 0.75",
                          "40 wt%",
                          "0.5 mmol",
                          "0.01; nan",
                          "1.4 %5%",
                          "0.04; 0.00075",
                          "4.2 vol%",
                          "1 wt%",
                          "6.0",
                          "0.008",
                          "2 %; nan",
                          "0.23",
                          "nan; 0.048 %",
                          "nan; 0.1 %",
                          "0.66; 0.04",
                          "nan; 0.3 mg/ml",
                          "nan; 4 mg/ml",
                          "1.5 mg/ml",
                          "50 mg/ml",
                          "15 mol%",
                          "0.67",
                          "12.5 mM",
                          "2 wt%; nan",
                          "5 g/ml",
                          "2.5 wt%; 3 wt%",
                          "0.0005",
                          "1 mM",
                          "33.3",
                          "750 vol%",
                          "nan | 0.0003",
                          "0.0056",
                          "1 M",
                          "15.0",
                          "6.6 mol%",
                          "1.00 wt%",
                          "1 %; nan",
                          "0.66; 0.01",
                          "0.000285 mol%",
                          "25 mol%",
                          "0.1; 0.005",
                          "nan; 3 mol%",
                          "0.17500000000000002",
                          "0.002",
                          "0.15000000000000002",
                          "1.4 vol%; nan",
                          "2 \u00b5mol/ml",
                          "2.5 mol%",
                          "0.10; 0.15",
                          "0.9 M",
                          "0.034",
                          "3 mol%",
                          "0.1; 0.075",
                          "33 ul.57wt%",
                          "1 mg/ml",
                          "4 vol%",
                          "0.0005268935236004391",
                          "0.17",
                          "0.068",
                          "75",
                          "nan; 0.5 %",
                          "2.21 wt%",
                          "1.3 %; nan",
                          "2 e-05",
                          "0.15 wt%; 0.05 wt%",
                          "1.4 %; 6 %",
                          "0.1; 0.1",
                          "10; 10",
                          "0.01",
                          "0.25; nan",
                          "6 mol%",
                          "0.028; 0.0003",
                          "20 wt%",
                          "0.014",
                          "0.1",
                          "5 mol%; 10 mg/ml",
                          "0.079",
                          "nan; 4",
                          "1.5 wt%; 1.0 wt%; 0.15 wt%; nan",
                          "8 wt%",
                          "0.28",
                          "0.13",
                          "0.033",
                          "0.8 vol%",
                          "1.2 wt.%",
                          "9 mg/ml",
                          "0.1; nan",
                          "0.075 wt%",
                          "8 %; 33 %",
                          "3 mM",
                          "10 mol%",
                          "nan; 2 %; 6 %",
                          "nan; 10 %",
                          "0.1; 0.01",
                          "10.0",
                          "0.125; 40 mg/ml",
                          "0.024",
                          "2.5 wt%; 0.15 wt%",
                          "0.5 mg/ml",
                          "2 mol%",
                          "20",
                          "0.14 mg/ml",
                          "0.75 mol%",
                          "0.00010537870472008782",
                          "0.1; 0.03",
                          "0.015",
                          "1.2 mg/ml",
                          "0.57",
                          "7.5 g/ml",
                          "0.01 wt%",
                          "9 mol%",
                          "0.19",
                          "nan; 0.4 mg/ml",
                          "0.071",
                          "350",
                          "0.35; 0.038",
                          "200 mol%",
                          "2.5 mol%; 10 mol%",
                          "0.14 mol%",
                          "0.15 wt%; 0.05 wt%; 0.83 mol%",
                          "4",
                          "0.1; 0.04",
                          "0.0068",
                          "10",
                          "0.25 mol%",
                          "0.045",
                          "20 mol%",
                          "150 vol%",
                          "0.15 M",
                          "0.66; 0.16",
                          "0.2 wt%",
                          "0.1; 0.05",
                          "nan; 5",
                          "2 %; 2 %",
                          "1 vol%",
                          "2.8 vol%; nan",
                          "0.66; 0.008",
                          "0.6 mg/ml; 10 mg/ml",
                          "2.5 g/ml",
                          "nan; 2.0",
                          "0.2 mol",
                          "0.01; 0.04",
                          "0.375",
                          "0.001; 0.05",
                          "12",
                          "0.055",
                          "nan | 1 mol%",
                          "0.1 M",
                          "0.03; nan",
                          "1 mg/perovskite_mmol",
                          "0.03; 0.003",
                          "0.8 wt.%",
                          "0.029",
                          "0.142",
                          "nan; 0.4",
                          "0.04 M",
                          "0.07500000000000001",
                          "nan; 7",
                          "0.000175",
                          "1.6",
                          "0.0001",
                          "0.1 wt%",
                          "0.02; nan",
                          "7.8 mg/ml",
                          "10 mol%; 10 mol%",
                          "1.75 mM",
                          "1 %; 10 %",
                          "5",
                          "0.333; 0.018",
                          "0.005; nan",
                          "1.5 wt%",
                          "0.15 wt%; 0.05 wt%; 1.67 mol%",
                          "0.15; 0.1",
                          "0.021",
                          "0.1 w%",
                          "60",
                          "0.005 vol%",
                          "nan; 0.3",
                          "0.12 mg/ml; nan",
                          "0.04; 0.01",
                          "nan; 0.1",
                          "0.4; 0.7",
                          "1.61 e-05",
                          "3 %; 3 %",
                          "70 mol%",
                          "0.02 wt%",
                          "7.5 W%",
                          "0.75",
                          "0.009; nan",
                          "0.04 mg/ml",
                          "0.0025",
                          "2.4 mol%",
                          "33 mol%",
                          "1.8 mg/ml",
                          "0.77"
                        ]
                      }
                    }
                  ]
                },
                "name": "additives_concentrations",
                "description": "The concentration of the dopants/additives.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If more than one dopant/additive in the layer, e.g. A and B, separate the concentration for each dopant/additive with semicolons, as in (A; B)\n- For each dopant/additive in the layer, state the concentration.\n- The order of the dopants/additives must be the same as in the previous filed.\n- For layers with no dopants/additives, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used.\n- The preferred way to state the concentration of a dopant/additive is to refer to the amount in the final product, i.e. the material in the layer. When possible, use on the preferred units\no wt%, mol%, vol%, ppt, ppm, ppb\n- When the concentration of the dopant/additive in the final product is unknown, but where the concentration of the dopant/additive in the solution is known, state that concentration instead. When possible, use on the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n5 vol%; nan | 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | 0.3 M",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "90.0",
                          "446.0",
                          "325.0",
                          "50.0",
                          "220.0",
                          "520.0",
                          "137.0",
                          "180.0",
                          "45.0",
                          "167.0",
                          "668.0",
                          "387.0",
                          "191.0",
                          "540.0",
                          "353.0",
                          "515.0",
                          "233.0",
                          "601.0",
                          "354.9",
                          "560.0",
                          "461.0",
                          "1020.0",
                          "391.0",
                          "297.0",
                          "6000.0",
                          "385.0",
                          "1800.0",
                          "107.0",
                          "212.0",
                          "95.0",
                          "0.05",
                          "760.0",
                          "551.0",
                          "274.0",
                          "70.0",
                          "447.0",
                          "573.0",
                          "500.0",
                          "306.0",
                          "275.0",
                          "1300.0",
                          "524.0",
                          "2000.0",
                          "788.0",
                          "665.6",
                          "54.0",
                          "507.0",
                          "484.0",
                          "266.1",
                          "291.0",
                          "260.0",
                          "175.0",
                          "630.0",
                          "1410.0",
                          "267.0",
                          "283.0",
                          "455.0",
                          "240.0",
                          "615.0",
                          "303.0",
                          "150.0 | 200.0",
                          "3600.0",
                          "330.0",
                          "810.0",
                          "89.8",
                          "775.0",
                          "334.0",
                          "408.0",
                          "420.0",
                          "26.0",
                          "5500000.0",
                          "85.0",
                          "321.0",
                          "1015.0",
                          "463.0",
                          "505.0",
                          "150.0 | 500.0",
                          "895.0",
                          "354.0",
                          "620.0",
                          "709.0",
                          "278.0",
                          "56.0",
                          "269.4",
                          "650.0",
                          "500.0 | nan",
                          "126.0",
                          "52.0",
                          "20.0",
                          "295.0",
                          "165.0",
                          "135.7",
                          "265.0",
                          "1400.0",
                          "287.0",
                          "372.0",
                          "685.0",
                          "1100.0",
                          "359.0",
                          "150.0 | 300.0",
                          "602.3",
                          "314.0",
                          "238.0",
                          "250.0",
                          "229.0",
                          "375.0",
                          "142.0",
                          "2130.0",
                          "65.0",
                          "399.0",
                          "317.0",
                          "875.0",
                          "150.0",
                          "435.0",
                          "464.0",
                          "379.7",
                          "769.0",
                          "273.0",
                          "12000.0",
                          "610.0",
                          "363.0",
                          "965.0",
                          "880.0",
                          "247.0",
                          "244.0",
                          "50000.0",
                          "302.2",
                          "35.0",
                          "750.0",
                          "468.0",
                          "135.0",
                          "600.0 | 20.0",
                          "730.0",
                          "339.0",
                          "870.0",
                          "258.0",
                          "324.0",
                          "309.4",
                          "183.0",
                          "481.0",
                          "660.0",
                          "457.0",
                          "407.0",
                          "342.0",
                          "336.0",
                          "285.0",
                          "401.0",
                          "25.0",
                          "294.0",
                          "983.0",
                          "3100.0",
                          "172.5",
                          "405.0",
                          "40.0",
                          "67.0",
                          "230.0",
                          "522.0",
                          "75.0",
                          "334.2",
                          "272.0",
                          "288.0",
                          "577.0",
                          "331.0",
                          "150.0 | 400.0",
                          "480.0",
                          "298.0",
                          "190.0",
                          "604.0",
                          "365.0",
                          "301.0",
                          "223.0",
                          "380.0",
                          "700.0",
                          "93.0",
                          "575.0",
                          "155.0",
                          "529.0",
                          "780.0",
                          "217.0",
                          "314.8",
                          "599.8",
                          "280.0",
                          "60.0",
                          "125.0",
                          "465.0",
                          "3370.0",
                          "40000.0",
                          "440.0",
                          "900.0",
                          "122.0",
                          "400.0",
                          "950.0",
                          "572.0",
                          "538.0",
                          "510.0",
                          "296.0",
                          "840.0",
                          "315.0",
                          "498.0",
                          "121.0",
                          "242.0",
                          "425.0",
                          "512.0",
                          "213.0",
                          "600.0",
                          "850.0",
                          "100.0",
                          "105.0",
                          "740.0",
                          "720.0",
                          "485.0",
                          "1150.0",
                          "252.0",
                          "417.0",
                          "607.0",
                          "459.3",
                          "526.0",
                          "511.4",
                          "338.0",
                          "690.0",
                          "200.0",
                          "453.0",
                          "350.0",
                          "104.0",
                          "290.0",
                          "195.0",
                          "311.0",
                          "890.0",
                          "585.0",
                          "nan | nan",
                          "547.0",
                          "340.0",
                          "202.0",
                          "596.0",
                          "160.0",
                          "209.0",
                          "38.0",
                          "584.0",
                          "653.0",
                          "270.0",
                          "170.0",
                          "390.0 | 10.0",
                          "337.0",
                          "670.0",
                          "151.0",
                          "326.0",
                          "24500.0",
                          "386.0",
                          "1205.0",
                          "725.0",
                          "171.0",
                          "413.0",
                          "445.0",
                          "248.0",
                          "640.0",
                          "2080.0",
                          "355.0",
                          "150.0 | 100.0",
                          "394.0",
                          "765.0",
                          "293.0",
                          "478.0",
                          "1130.0",
                          "563.0",
                          "550.0",
                          "531.0",
                          "215.0",
                          "542.0",
                          "300.0",
                          "513.6",
                          "245.0",
                          "430.0",
                          "1010.0",
                          "395.0",
                          "185.0",
                          "308.0",
                          "289.0",
                          "530.0",
                          "120.0",
                          "450.0",
                          "501.0",
                          "218.0",
                          "153.0",
                          "130.0",
                          "110.0",
                          "310.0",
                          "150.0 | 600.0",
                          "141.0",
                          "199.0",
                          "11000.0",
                          "490.0",
                          "345.0",
                          "580.0",
                          "1000.0",
                          "232.6",
                          "188.0",
                          "66.0",
                          "225.0",
                          "235.0",
                          "60000.0",
                          "528.0",
                          "590.0",
                          "770.0",
                          "1200.0",
                          "444.0",
                          "845.0",
                          "473.0",
                          "1070.0",
                          "390.0",
                          "10.0",
                          "43.0",
                          "1650.0",
                          "1393.0",
                          "236.0",
                          "266.0",
                          "742.6",
                          "412.0",
                          "20000.0",
                          "210.0",
                          "397.0",
                          "357.0",
                          "424.0",
                          "2200.0",
                          "567.0",
                          "800.0",
                          "586.0",
                          "525.0",
                          "388.0",
                          "378.0",
                          "370.0",
                          "129.0",
                          "348.0",
                          "960.0",
                          "149.0",
                          "477.0",
                          "570.0",
                          "487.0",
                          "454.0",
                          "7000.0",
                          "97.0",
                          "410.0",
                          "30.0",
                          "462.0",
                          "510.2",
                          "792.0",
                          "360.0",
                          "470.0",
                          "335.0",
                          "680.0",
                          "438.0",
                          "460.0",
                          "224.0",
                          "400.0 | 2.0",
                          "147.0",
                          "474.0",
                          "1510.0",
                          "140.0",
                          "578.0",
                          "492.0",
                          "80.0",
                          "404.0",
                          "320.0",
                          "4000.0",
                          "138.0",
                          "448.0",
                          "10000.0",
                          "226.0",
                          "276.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "thickness",
                "description": "The thickness of the perovskite layer\n- If the perovskite contains more than one layer, separate those by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- State thicknesses in nm\n- Every layer in the stack have a thickness. If it is unknown, state this as \u2018nan\u2019\n- If there are uncertainties, state the best estimate, e.g write 100 and not 90-110\n- For cells where the perovskite infiltrates a mesoporous scaffold, state the thickness as starting from the bottom of the infiltrated mesoporous layer to the top of the perovskite layer (i.e. include the thickness of the infiltrated mesoporous layer)\nExample\n200\n500 |20\n600 | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1.764",
                          "1.189",
                          "1.516",
                          "2",
                          "1.578",
                          "1.645",
                          "1.583",
                          "2.115",
                          "1.715",
                          "1.621",
                          "2.44",
                          "1.533",
                          "1.486",
                          "1.481",
                          "2.6",
                          "1.555",
                          "1.73",
                          "1.63 | nan",
                          "1.633",
                          "1.61",
                          "2.04",
                          "1.595",
                          "2.78",
                          "1.617",
                          "1.526",
                          "2.296",
                          "1.626",
                          "2.4",
                          "1.72",
                          "1.46",
                          "1.613",
                          "1.47",
                          "1.91 | 1.8",
                          "1.79",
                          "1.623",
                          "2.37",
                          "1.17",
                          "2.27",
                          "2.42",
                          "1.608",
                          "1.515",
                          "1.855",
                          "1.525",
                          "1.8",
                          "1.56",
                          "2.2",
                          "1.605",
                          "1.632",
                          "1.523",
                          "1.671",
                          "1.503",
                          "1.27",
                          "2.13",
                          "1.569",
                          "1.684",
                          "1.881",
                          "1.635",
                          "1.597",
                          "1.627",
                          "1.652",
                          "2.43",
                          "2.28",
                          "1.775",
                          "2.277",
                          "1.588",
                          "1.88",
                          "3.04",
                          "2.09",
                          "1.655",
                          "2.9",
                          "2.3",
                          "2.07",
                          "2.31",
                          "1.58",
                          "2.38",
                          "1.57",
                          "1.3",
                          "2.49",
                          "1.901",
                          "1.641",
                          "1.55",
                          "1.89",
                          "1.66",
                          "1.556",
                          "1.546",
                          "1.94",
                          "1.498",
                          "1.49",
                          "1.77",
                          "2.92",
                          "2.12",
                          "1.64",
                          "1.45",
                          "1.919",
                          "1.549",
                          "1.76",
                          "1.33",
                          "1.41",
                          "2.39",
                          "1.584",
                          "1.579",
                          "1.638",
                          "1.592",
                          "1.624",
                          "1.965",
                          "1.65",
                          "1.26",
                          "1.656",
                          "1.644",
                          "1.596",
                          "1.906",
                          "1.598",
                          "1.54",
                          "1.35",
                          "1.21",
                          "1.96",
                          "2.5",
                          "1.51",
                          "2.268",
                          "2.01",
                          "2.273",
                          "2.278",
                          "1.674",
                          "2.161",
                          "1.865",
                          "2.154",
                          "1.99",
                          "1.71",
                          "1.683",
                          "1.739",
                          "1.78",
                          "1.36",
                          "1.848",
                          "2.23",
                          "2.19",
                          "1.924",
                          "1.92",
                          "1.599",
                          "1.872",
                          "1.564",
                          "1.582",
                          "1.791",
                          "1.612",
                          "2.66",
                          "2.153",
                          "1.69",
                          "1.565",
                          "1.651",
                          "2.46",
                          "1.839",
                          "2.14",
                          "1.895",
                          "1.589",
                          "2.26",
                          "2.36",
                          "2.15",
                          "1.812",
                          "1.87",
                          "1.548",
                          "1.4",
                          "1.5",
                          "2.25",
                          "2.027",
                          "2.0",
                          "1.594",
                          "1.9",
                          "1.581",
                          "1.591",
                          "1.28",
                          "2.287",
                          "2.48",
                          "1.614",
                          "1.39",
                          "1.58 | 2.08",
                          "1.86",
                          "1.68",
                          "1.25",
                          "1.576",
                          "1.575",
                          "1.629",
                          "1.375",
                          "1.74",
                          "1.16",
                          "1.38",
                          "1.957",
                          "1.667",
                          "1.609",
                          "1.7",
                          "1.557",
                          "1.604",
                          "2.139",
                          "2.033",
                          "1.602",
                          "1.97",
                          "2.34",
                          "1.896",
                          "1.634",
                          "1.586",
                          "1.2",
                          "1.85",
                          "1.535",
                          "2.05",
                          "1.18",
                          "1.553",
                          "2.21",
                          "2.7",
                          "1.607",
                          "2.47",
                          "1.606",
                          "1.529",
                          "1.639",
                          "1.611",
                          "1.752",
                          "1.688",
                          "1.32",
                          "1.93",
                          "2.22",
                          "1.75",
                          "1.616",
                          "1.574",
                          "2.308",
                          "1.524",
                          "1.23",
                          "1.976",
                          "1.845",
                          "1.59",
                          "2.105",
                          "2.03",
                          "1.725",
                          "1.676",
                          "2.18",
                          "1.672",
                          "1.34",
                          "1.682",
                          "2.1",
                          "1.662",
                          "2.54",
                          "2.536",
                          "2.8",
                          "1.53",
                          "2.113",
                          "1.531",
                          "1.505",
                          "1.858",
                          "1.67",
                          "1.528",
                          "2.35",
                          "1.585",
                          "1.751",
                          "1.63",
                          "1.52",
                          "1.615",
                          "2.02",
                          "1.571",
                          "1.866",
                          "1.42",
                          "1.619",
                          "1.272",
                          "1.573",
                          "1.777",
                          "1.893",
                          "1.746",
                          "1.517",
                          "1.84",
                          "1.509",
                          "1.889",
                          "1.31",
                          "1.636",
                          "1.628",
                          "1.48",
                          "1.62",
                          "1.29",
                          "1.82",
                          "1.95",
                          "1.668",
                          "1.969",
                          "1.91",
                          "1.512",
                          "1.593",
                          "2.83",
                          "2.141",
                          "1.6 | 1.68",
                          "2.29",
                          "2.24",
                          "2.08",
                          "1.22",
                          "2.288",
                          "1.6",
                          "1.587",
                          "2.58",
                          "1.757",
                          "2.52",
                          "1.98",
                          "2.55",
                          "1.37",
                          "1.974",
                          "1.989",
                          "1.43",
                          "1.24",
                          "1.625",
                          "1.701",
                          "1.554",
                          "1.637",
                          "1.44",
                          "2.17",
                          "1.81",
                          "2.32",
                          "1.558",
                          "2.33",
                          "1.83"
                        ]
                      }
                    }
                  ]
                },
                "name": "band_gap",
                "description": "The band gap of the perovskite\n- If the perovskite contains more than one layer, separate the band gaps for the respective layer by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If there are uncertainties, state the best estimate, e.g. write 1.62 and not 1.6-1.64\nExample\n1.62\n1.57 | 2.3",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "true",
                          "false"
                        ]
                      }
                    }
                  ]
                },
                "name": "band_gap_graded",
                "description": "TRUE if the band gap varies as a function of the vertical position in the perovskite layer.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Composition",
                          "Literature",
                          "EQE",
                          "Absorption",
                          "Absorption Tauc-plot",
                          "UPS",
                          "Absorption Tauc-plot | UPS"
                        ]
                      }
                    }
                  ]
                },
                "name": "band_gap_estimation_basis",
                "description": "The method by which the band gap was estimated. The band gap can be estimated from absorption data, EQE-data, UPS-data, or it can be estimated based on literature values for the recipe, or it could be inferred from the composition and what we know of similar but not identical compositions.\nExample\nAbsorption Tauc-plot\nLiterature\nComposition",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "779.8",
                          "795",
                          "520.0",
                          "761.0",
                          "632.6",
                          "779.0",
                          "695",
                          "828.0",
                          "728",
                          "782.0",
                          "582.1",
                          "589",
                          "772",
                          "952",
                          "553",
                          "540.0",
                          "774.5",
                          "825",
                          "610",
                          "1.61",
                          "560.0",
                          "731",
                          "767",
                          "722.0",
                          "640",
                          "729",
                          "746",
                          "659.5",
                          "781.5",
                          "760.0",
                          "819",
                          "544",
                          "716",
                          "786.7",
                          "590.4",
                          "824",
                          "683",
                          "708.5",
                          "758.5",
                          "746.0",
                          "788.0",
                          "538",
                          "nan | 740",
                          "795.0",
                          "757.0",
                          "793",
                          "602",
                          "518",
                          "543.8",
                          "626",
                          "673",
                          "794.8",
                          "790",
                          "813",
                          "770",
                          "805.5",
                          "763.5",
                          "934.0",
                          "819.5",
                          "595",
                          "663.1",
                          "830",
                          "715.4",
                          "762",
                          "884",
                          "744",
                          "540",
                          "810.0",
                          "775.0",
                          "762.5",
                          "761",
                          "724.0",
                          "800.8",
                          "766",
                          "765.4",
                          "777.0",
                          "719",
                          "570",
                          "727",
                          "918.0",
                          "815.8",
                          "890",
                          "774.0",
                          "780.3",
                          "825.0",
                          "806",
                          "817",
                          "580",
                          "620.0",
                          "820.0",
                          "910.0",
                          "625",
                          "650.0",
                          "803",
                          "538.2",
                          "781.3",
                          "760.4",
                          "775.4",
                          "799",
                          "882",
                          "754.0",
                          "965",
                          "932",
                          "538.6",
                          "584.9",
                          "755.6",
                          "770.1",
                          "531",
                          "573",
                          "976",
                          "644.0",
                          "632",
                          "667",
                          "810",
                          "718",
                          "755",
                          "654",
                          "767.1",
                          "794",
                          "692",
                          "828",
                          "636.0",
                          "798",
                          "636",
                          "729.4",
                          "777",
                          "752.0",
                          "778.8",
                          "769.0",
                          "539.1",
                          "870",
                          "723.0",
                          "715",
                          "639.1",
                          "465",
                          "741",
                          "587.6",
                          "685",
                          "778",
                          "880.0",
                          "769.9",
                          "764.8",
                          "784",
                          "716.0",
                          "751",
                          "728.0",
                          "614",
                          "780",
                          "804",
                          "751.0",
                          "723",
                          "736.0",
                          "838",
                          "722",
                          "750.0",
                          "776.2",
                          "805.0",
                          "730.0",
                          "801.8",
                          "529",
                          "870.0",
                          "764",
                          "549",
                          "833",
                          "771.2",
                          "769.4",
                          "832",
                          "743.5",
                          "946.0",
                          "915",
                          "900",
                          "639",
                          "768.8",
                          "807.0",
                          "767.0",
                          "551",
                          "630",
                          "984.0",
                          "691",
                          "635",
                          "595.0",
                          "843.5",
                          "525",
                          "735",
                          "638",
                          "635.8",
                          "913",
                          "657.0",
                          "778.0",
                          "757.5",
                          "786",
                          "637",
                          "804.3",
                          "759.0",
                          "731.0",
                          "783",
                          "746.9",
                          "661",
                          "799.0",
                          "300",
                          "624",
                          "943",
                          "704.5",
                          "807",
                          "1005",
                          "642",
                          "677.5",
                          "537.3",
                          "732",
                          "877",
                          "672.0",
                          "800",
                          "894",
                          "692.0",
                          "713",
                          "700.0",
                          "537.4",
                          "686",
                          "22.3",
                          "748",
                          "780.0",
                          "712",
                          "558.0",
                          "772.0",
                          "552",
                          "766.0",
                          "797",
                          "750",
                          "645",
                          "1200",
                          "0",
                          "533.0",
                          "805",
                          "756.6",
                          "996.4",
                          "726.0",
                          "440.0",
                          "605",
                          "670.2",
                          "750 | nan",
                          "868",
                          "526",
                          "725",
                          "720.9",
                          "771.8",
                          "743",
                          "541",
                          "771",
                          "530",
                          "796",
                          "761.4",
                          "680",
                          "802",
                          "682",
                          "575",
                          "754",
                          "832.2",
                          "690",
                          "550",
                          "657",
                          "722.1",
                          "515",
                          "512.0",
                          "985.7",
                          "600.0",
                          "699",
                          "740.0",
                          "740",
                          "822",
                          "753.0",
                          "633",
                          "720.0",
                          "977",
                          "785",
                          "765",
                          "959",
                          "880",
                          "811",
                          "527.0",
                          "769",
                          "975",
                          "961",
                          "775.6",
                          "655",
                          "840",
                          "600",
                          "912",
                          "650",
                          "752",
                          "790.0",
                          "873",
                          "725.1",
                          "535",
                          "583",
                          "896",
                          "539",
                          "806.0",
                          "950",
                          "704",
                          "546",
                          "812",
                          "787",
                          "755.0",
                          "620",
                          "820",
                          "962",
                          "774",
                          "768.0",
                          "670.0",
                          "643",
                          "200",
                          "759",
                          "920",
                          "778; 710",
                          "543.0",
                          "77",
                          "708",
                          "789",
                          "964",
                          "545",
                          "768.3",
                          "725.0",
                          "769.1",
                          "1025",
                          "843",
                          "982",
                          "615",
                          "532",
                          "506",
                          "710.0",
                          "764.0",
                          "664.0",
                          "445.0",
                          "756",
                          "765.0",
                          "865",
                          "785.3",
                          "647.0",
                          "21.4",
                          "675",
                          "649.4",
                          "550.0",
                          "531.0",
                          "834",
                          "763",
                          "781",
                          "726",
                          "756.7",
                          "596",
                          "490",
                          "707",
                          "530.0",
                          "805.1",
                          "779",
                          "527",
                          "1058",
                          "960",
                          "714",
                          "719.0",
                          "969",
                          "889",
                          "792",
                          "420",
                          "666.6",
                          "520",
                          "541.4",
                          "758.0",
                          "576.7",
                          "751.5",
                          "946",
                          "955",
                          "757",
                          "809",
                          "730",
                          "1020",
                          "815",
                          "528.0",
                          "770.0",
                          "802.0",
                          "781.1",
                          "894.0",
                          "651",
                          "753",
                          "724",
                          "652",
                          "767.9",
                          "627",
                          "788",
                          "543",
                          "821",
                          "967",
                          "768",
                          "742",
                          "646",
                          "800.0",
                          "816",
                          "748.0",
                          "922",
                          "525.0",
                          "1016",
                          "660",
                          "665",
                          "727.0",
                          "745",
                          "705",
                          "768.4",
                          "781.0",
                          "663",
                          "534",
                          "785.7",
                          "779.9",
                          "700",
                          "791",
                          "522",
                          "784.0",
                          "696",
                          "710",
                          "782",
                          "776",
                          "775",
                          "968.8",
                          "659",
                          "792.0",
                          "814",
                          "777.6",
                          "537",
                          "717",
                          "763.0",
                          "720",
                          "745.0",
                          "980",
                          "756.8",
                          "680.0",
                          "729.0",
                          "749",
                          "773",
                          "538.7",
                          "547",
                          "800 | 620",
                          "860",
                          "653",
                          "796.0",
                          "670",
                          "762.0",
                          "519",
                          "776.0",
                          "485",
                          "524",
                          "738.0",
                          "808",
                          "658",
                          "794.0",
                          "629.4",
                          "655.0",
                          "758",
                          "895",
                          "528",
                          "760",
                          "779.2",
                          "738",
                          "733",
                          "700.5",
                          "776.5",
                          "712.7",
                          "773.0",
                          "801"
                        ]
                      }
                    }
                  ]
                },
                "name": "pl_max",
                "description": "The maximum from steady-state PL measurements\n- If more than one PL-max, separate those by a semicolon\nExample\n780\n550; 770",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "1200.0",
                          "144.0",
                          "300.0",
                          "1440.0",
                          "24.0",
                          "2400.0",
                          "3120.0",
                          "2160.0",
                          "960.0",
                          "120.0",
                          "Unknown",
                          "12.0",
                          "72.0",
                          "240.0",
                          "720.0",
                          "1920.0",
                          "432.0",
                          "480.0",
                          "168.0",
                          "48.0",
                          "2880.0",
                          "1680.0",
                          "192.0",
                          "4.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_time_until_next_deposition_step",
                "description": "The time between the perovskite stack is finalised and the next layer is deposited\n- If there are uncertainties, state the best estimate, e.g. write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "Air",
                          "Ambient",
                          "Vacuum",
                          "N2",
                          "O2",
                          "Ar"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_atmosphere",
                "description": "The atmosphere in which the sample with the finalised perovskite stack is stored until the next deposition step.\nExample\nAir\nN2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "40.0",
                          "30.0",
                          "20.0",
                          "75.0",
                          "45.0",
                          "90.0",
                          "24.0",
                          "60.0",
                          "50.0",
                          "10.0",
                          "70.0",
                          "80.0",
                          "35.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_relative_humidity",
                "description": "The time between the perovskite stack is finalised and the next layer is deposited\n- If there are uncertainties, state the best estimate, e.g write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "UV",
                          "Ar plasma"
                        ]
                      }
                    }
                  ]
                },
                "name": "surface_treatment_before_next_deposition_step",
                "description": "Description of any type of surface treatment or other treatment the sample with the finalised perovskite stack undergoes before the next deposition step.\n- If more than one treatment, list the treatments and separate them by a double forward angel bracket (\u2018 >> \u2018)\n- If no special treatment, state that as \u2018none\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExamples:\nnone\nUV\nOzone",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "PerovskiteDeposition",
            "description": "This section contains information about the deposition of the perovskite layer.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "number_of_deposition_steps",
                "description": "The number of production steps involved in making the perovskite-stack\n- A spin coating program that are composed of several segments with different spin speed are still counted as one step (1)\n- A spin coating program involving an antisolvent step counts as a 1-step method (1).\n- Depositing PbI2 first and subsequently converting it to a perovskite count as a 2-step procedure (2)\n- Thermal annealing is considered separately. The motivation for this is that every step is considered to have its own thermal history.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Spin-coating | Spin-coating >> Spin-coating",
                          "Gas-assisted fast crystallisation",
                          "Electrospraying >> Dropcasting",
                          "Slot-die coating >> Doctor blading",
                          "Spin-coating >> Spin-coating",
                          "Spin-coating >> Evaporation",
                          "Roller-coating >> Roller-coating",
                          "Spin-coating >> Drop-infiltration >> Recrystallization",
                          "Co-evaporation >> Evaporation >> Spin-coating",
                          "Evaporation >> Evaporation >> Evaporation",
                          "Spin-coating >> Vapour annealing >> CBD",
                          "Spin-coating >> CBD >> Spin-coating >> Spin-coating",
                          "Evaporation >> Gas reaction >> Washing",
                          "Spin-coating >> Diffusion-gas reaction",
                          "Spin-coating | Spin-coating",
                          "Spin-coating >> Gas reaction >> Ion exchange",
                          "Spin-coating >> Spin-coating >> Rinsing >> Spin-coating",
                          "Slot-die coating >> Dipp-coating",
                          "Spin-coating >> Spin-coating >> Gas reaction",
                          "Spin-coating >> Dipp-coating >> Rinsing",
                          "Spin-coating >> Spin-coating | Spin-coating",
                          "Evaporation >> Evaporation >> Gas reaction >> Dipp-coating",
                          "Slot-die coating",
                          "Brush painting",
                          "Ultrasonic spray >> Gas reaction",
                          "Spin-coating >> CBD",
                          "Co-evaporation >> Gas reaction >> Spin-coating",
                          "Evaporation >> Flash evaporation >> Evaporation >> Flash evaporation",
                          "Spin-coating >> Spray-coating",
                          "Ultrasonic spray",
                          "Spin-coating | Evaporation",
                          "Spin-coating >> CBD >> Spray-coating",
                          "Space-limited inverse temperature crystallization",
                          "Evaporation | Spin-coating",
                          "Spin-coating | Dripping",
                          "Meniscus coating",
                          "Spin-coating | Spin-coating >> IPA washing",
                          "Evaporation >> Sandwiching >> Rinsing",
                          "Co-evaporation",
                          "Evaporation >> CBD >> CBD",
                          "Co-evaporation >> Diffusion-gas reaction",
                          "Ultrasonic spray >> Ultrasonic spray",
                          "Spin-coating >> CBD >> Gas reaction",
                          "Evaporation >> Diffusion-gas reaction",
                          "Sputtering >> Gas reaction",
                          "Spin-coating >> CVD",
                          "Sputtering >> Sulfurization",
                          "Spin-coating >> Air brush spray >> Air brush spray",
                          "Spray-coating >> Gas reaction",
                          "Spin-coating >> Recrystallization",
                          "Inkjet printing",
                          "Spin-coating >> Spin-coating >> Spin-coating",
                          "Evaporation >> Spin-coating",
                          "Spin-coating >> Gas reaction >> Solvent annealing >> Recrystallization",
                          "Pulsed laser deposition >> Gas reaction",
                          "Dipp-coating >> Dipp-coating",
                          "Spin-coating >> CBD >> CBD",
                          "Spin-coating >> Closed space sublimation",
                          "Evaporation >> Evaporation >> Evaporation >> Evaporation >> Evaporation >> Evaporation",
                          "Co-evaporation >> Spin-coating",
                          "Air brush spray",
                          "Spin-coating | Spray-coating",
                          "Flash evaporation >> CBD",
                          "Doctor blading >> Doctor blading",
                          "Dropcasting >> Spin-coating",
                          "Spray-coating >> Spin-coating",
                          "Ultrasonic spray >> CBD",
                          "Spin-coating >> Dipp-coating",
                          "Single-source thermal evaporation",
                          "Inverse temperture crysilization >> Lamination",
                          "LT-SCD >> LT-SCD",
                          "Evaporation >> Gas reaction >> Gas reaction",
                          "Spin-coating >> Dropcasting >> Spin-coating",
                          "Vacuum flash evaporation",
                          "Drop-infiltration >> Recrystallization",
                          "Spray-coating >> Spray-coating",
                          "Evaporation >> Ultrasonic spray",
                          "Electrodeposition >> Spin-coating",
                          "Spin-coating >> Dipp-coating >> Spin-coating",
                          "Evaporation >> Spin-coating >> Spin-coating",
                          "Spin-coating >> Dropcasting",
                          "Dropcasting >> CBD",
                          "Spin-coating >> Evaporation >> Ultrasonic spray",
                          "Solvent evaporation crystallization",
                          "GC-LCG",
                          "Drop-infiltration >> Drop-infiltration",
                          "Dropcasting >> Pneumatic pressure",
                          "spin-coatng",
                          "Spin-coating >> Spin-coating >> Diffusion",
                          "Evaporation >> Evaporation >> Gas reaction",
                          "Evaporation >> Gas reaction",
                          "Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Dropcasting >> Rinsing",
                          "Doctor blading >> CBD",
                          "Spin-coating >> CBD >> Washing",
                          "PVD",
                          "Dipp-coating >> CBD",
                          "Spin-coating >> Inkjet printing",
                          "Spin-coating >> CBD >> Rinsing",
                          "Dipp-coating",
                          "Spin-coating >> Air brush spray",
                          "Hot-casting",
                          "Spin-coating >> Spin-coating >> Ion exchange",
                          "Springkling >> Recrystallization",
                          "Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Dropcasting >> Rinsing",
                          "Electrodeposition >> Dipp-coating >> CBD",
                          "Evaporation >> CBD >> CBD >> CBD",
                          "Drop-infiltration >> CBD",
                          "Spin-coating | Gas reaction",
                          "Spin-coating >> Spin-coating >> Air brush spray",
                          "Electrospraying >> Gas reaction",
                          "Spin-coating >> Diffusion",
                          "Evaporation",
                          "Spin-coating >> Evaporation >> Spray-coating",
                          "Electrodeposition >> Gas reaction >> CBD",
                          "Electrospraying",
                          "Unknown",
                          "Spray-pyrolys",
                          "Evaporation >> Inkjet printing",
                          "CBD",
                          "Drop-infiltration",
                          "Spin-coating >> CBD >> Ion exchange",
                          "Spin-coating >> Evaporation >> CBD",
                          "CVD",
                          "Roller-coating",
                          "Co-evaporation >> Co-evaporation",
                          "Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating",
                          "Unknown >> Unknown",
                          "Spin-coating >> Sandwiching",
                          "Spin-coating >> Spin-coating >> CBD",
                          "Electrodeposition >> CBD",
                          "Spin-coating >> Co-evaporation",
                          "Doctor blading",
                          "Spin-coating >> Printing",
                          "Magnetron sputtering",
                          "Evaporation >> Evaporation",
                          "Spin-coating >> Drop-infiltration",
                          "Spin-coating >> Ligand exchange >> Dipp-coating",
                          "Soft-cover deposition",
                          "Spin-coating >> Spin-coating >> Dipp-coating >> Dipp-coating >> Spin-coating >> Dipp-coating >> Dipp-coating >> Spin-coating >> Dipp-coating >> Dipp-coating",
                          "Slot-die coating >> Spin-coating",
                          "Evaporation >> Electrodeposition",
                          "Spin-coating >> Dipp-coating >> Dipp-coating >> Spin-coating >> Dipp-coating >> Dipp-coating >> Spin-coating >> Dipp-coating >> Dipp-coating",
                          "Spin-coating >> Evaporation >> Evaporation",
                          "Spin-coating >> Gas reaction",
                          "Space-confined single crystal formation",
                          "Electrospinning",
                          "Spin-coating >> CBD >> Spin-coating",
                          "Electrodeposition >> Gas reaction >> Spin-coating",
                          "Closed space sublimation",
                          "Spin-coating >> Spin-coating >> Spray-coating",
                          "Spin-coating >> CBD >> Recrystallization",
                          "Spin-coating | Spin-coating >> IPA washing | Spin-coating >> IPA washing | Spin-coating >> IPA washing",
                          "Spin-coating >> Spin-coating >> Evaporation",
                          "Co-evaporation >> Co-evaporation >> Co-evaporation",
                          "Spin-coating >> CBD >> Spin-coating >> Gas reaction",
                          "Spin-coating | Dropcasting",
                          "CBD >> Spin-coating >> Gas reaction",
                          "Substrate vibration assisted dropcasting >> Substrate vibration assisted dropcasting",
                          "Roller-coating >> Spin-coating",
                          "Spray-coating >> CBD",
                          "Spin-coating >> Gas reaction >> Gas reaction >> Gas reaction",
                          "Spin-coating >> Spin-coating >> Dropcasting >> Rinsing",
                          "Spin-coating | CBD",
                          "Dropcasting",
                          "Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating",
                          "Sputtering >> Spin-coating",
                          "Pulsed laser deposition",
                          "Single crystal growth",
                          "Evaporation >> Diffusion",
                          "Spin-coating >> Electrospraying",
                          "Blow-drying",
                          "Spin-coating >> Spin-coating >> Close space sublimation",
                          "Dipp-coating >> Spin-coating",
                          "Spin-coating | Spin-coating >> IPA washing | Spin-coating >> IPA washing",
                          "Inkjet printing >> Diffusion-gas reaction",
                          "Spin-coating >> Ion exchange",
                          "Drop-infiltration >> Spin-coating",
                          "Spin-coating >> Spin-coating >> Recrystallization",
                          "Flash evaporation",
                          "Spin-coating",
                          "Spin-coating >> Gas reaction >> Spin-coating",
                          "Electrodeposition >> CBD >> CBD",
                          "Crystallization >> Recrystallization",
                          "Slot-die coating >> CBD",
                          "Hot-pressed",
                          "Dipp-coating >> Gas reaction",
                          "Spray-coating",
                          "Spin-coating >> Spin-coating >> Spin-coating >> Dropcasting >> Rinsing",
                          "Air brush spray >> Air brush spray",
                          "Electrodeposition >> Electrodeposition",
                          "Sputtering >> CBD",
                          "Spin-coating >> Ultrasonic spray",
                          "Evaporation >> CBD",
                          "Spin-coating >> Dipp-coating >> Dipp-coating",
                          "Evaporation >> Evaporation >> Evaporation >> Evaporation",
                          "Slot-die coating >> Slot-die coating",
                          "Spin-coating >> Gas reaction >> Gas reaction",
                          "Spin-coating >> Condensation >> CBD"
                        ]
                      }
                    }
                  ]
                },
                "name": "procedure",
                "description": "The deposition procedures for the perovskite block.\n- The perovskite stack is considered as one block/layer when we consider the synthesis. Thus, even if the perovskite is layered, consider it as one block, i.e. no vertical bars in this field\n- When more than one reaction step, separate them by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- There should be as many reaction steps described here as indicated in the field \u201cPerovskite. Deposition. Number of deposition steps\u201d\n- Thermal annealing is generally not considered as an individual reaction step. The philosophy behind this is that every deposition step has a thermal history, which is specified in a separate filed. In exceptional cases with thermal annealing procedures clearly disconnected from other procedures, state \u2018Thermal annealing\u2019 as a separate reaction step.\n- Antisolvent treatment is considered in a separate filed. The motivation for that is that it usually is conducted simultaneously as a spin-coating procedure, and thus acts as an additional aspect of reaction step already accounted for. Exception to this is if there is an antisolvent step that is distinctly separated in time, e.g. a film with a spin-coated perovskite solution is immersed in an antisolvent. In that case, this could eb added as a dipp-coating event, while also being reported in the antisolvent field.\n- Even if the most common deposition procedures have been used for 95 % of all reported devise, do not be surprised if you do not find your deposition procedure in the list of reported deposition procedure, as the original dataset tended to use a simplified notation.\n- A few clarifications\n- Air brush spray\n- Deposition with something looking like an old perfume bottle. Classified as a solution technique.\n- Brush painting\no A precursor ink is applied with a brush\n- CBD\n- Chemical bath deposition. Refers to procedures where a film has been immersed in a solution where a reaction occurs. The typical example is when a PbI2 film is immerse in an IPA solution with MAI in which the PbI2 is converted to the perovskite.\n- Co-evaporation\n- Simultaneous evaporation from multiple sources with line of sight deposition.\n- CVD\no Chemical vapour deposition. A gas phase process where a chemical reaction is occurring in the gas phase. If a MA-containing compound is evaporated and reacted with PbI2 where another species is released to the gas phase, it is labeled as CVD. A process where MAI in gas phase react with PbI2 in gas phase is labelled as CVD. A process where MAI or MA gas is reacting with solid PbI2 is instead labelled as a gas reaction as no chemical reaction is occurring the gas phase. Note that all reactions labelled as CVD in the literature may not be CVD even if it is conducted in a CVD reactor, and should instead be labelled as a gas reaction.\n- Diffusion\no Solid state reaction where two solid components are mixed. E.g. solid MAI is bought in direct contact with solid PbI2\n- Diffusion-gas reaction\n- A special case. Where one compound, e.g. MAI is placed on top of another e.g. PbI2 where it is evaporated. It is thus a combination of a gas phase reaction and solid-solid diffusion.\n- Dipp-coating\no The thing that separates dipp-coating from CBD is the occurrence of a reaction. If you have component A in solution, dip your substrate in the solution, take it up and you have component A on your substrate, then you have done a dipp-coating. If you have substance A in solution, dip your substrate in the solution, take it up and have something else than A on your substrate, you have done a CBD (e.g. PbI2 dipped in MAI/IPA which gives MAPbI3 and not MAI on the substrate)\n- Dropcasting\no A drop is applied to a substrate where it is left to dry without any additional procedures.\n- Drop-infiltration\n- A mesoporous scaffold in which a drop of the precursor solution is infiltrated without the aid of spin-coating.\n- Doctor blading\n- There is a family of related techniques, but if it could be described as doctor blading, that is the label to use.\n- Evaporation\n- Refers to thermal evaporation with line-of-sigh deposition. i.e. PVD\n- Flash evaporation\n- Fast evaporation (in a flash) of a perovskite that sublimes on another substrate. Line of sight deposition.\n- Closed space sublimation\n- Evaporation of a well controlled amount of substance (usually in the form of a thin film) in a small container containing the final substrate.\n- Gas reaction\n- A gas phase reaction. Not a line of sight deposition. In the typical case, MAI is evaporated and the MAI gas builds up a pressure in the reaction chamber in which it reacts with a PbI2 film forming the perovskite.\n- Ion exchange\n- One perovskite is dipped into a solution (or exposed to a gas) which leads to an ion exchange, e.g. I is replaced by Br.\n- Lamination\n- A readymade film is transferred directly to the device stack. A rather broad concept. An everyday kitchen related example of lamination would eb to place a thin plastic film over a slice of pie.\n- Recrystallization\n- A perovskite that already have been formed is deformed and then recrystallised. E.g. MAPbI3 is exposed to Methylamine gas for a short while which dissolved the perovskite which then can crystallize again\n- Rinsing\n- Cleaning step with a solvent\n- Sandwiching\n- When a readymade top stack simply is placed on top of the device stack. Could be held together with clams.\n- Ultrasonic spray\n- A bit like air brush spray but with better control of droplet size. Classified as a solution technique.\nExample\nSpin-coating\nSpin-coating >> Spin-coating\nSpin-coating >> CBD\nSpin-coating >> Gas reaction\nDrop-infiltration\nCo-evaporation\nDoctor blading\nEvaporation >> Evaporation\nEvaporation >> Spin-coating\nEvaporation >> Gas reaction\nSlot-die coating\nSpray-coating",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Liquid >> Unknown",
                          "Liquid >> Gas >> Gas >> Gas",
                          "Liquid | Liquid >> Liquid | Liquid >> Liquid",
                          "Liquid | Liquid",
                          "Liquid >> Liquid >> Solid",
                          "Gas",
                          "Liquid | Liquid >> Liquid",
                          "Liquid | Liquid >> Liquid | Liquid >> Liquid | Liquid >> Liquid",
                          "Gas >> Liquid >> Liquid >> Liquid",
                          "Liquid >> Liquid >> Liquid",
                          "Liquid >> Liquid >> Liquid >> Gas",
                          "Gas >> Solid >> Liquid",
                          "Solid >> Liquid",
                          "Liquid | Gas",
                          "Unknown",
                          "Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid",
                          "Liquid >> Liquid >> Liquid >> Liquid",
                          "Liquid >> Liquid",
                          "Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid",
                          "Gas >> Gas >> Liquid",
                          "Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid",
                          "Liquid >> Gas",
                          "Liquid >> Gas >> Gas",
                          "Liquid | Liquid >> Liquid | Liquid",
                          "Liquid >> Gas >> Liquid",
                          "Solid",
                          "Liquid",
                          "Gas >> Gas >> Gas >> Gas",
                          "Liquid >> Liquid | Liquid",
                          "Gas >> Gas >> Gas >> Liquid",
                          "Liquid >> Liquid >> Gas",
                          "Unknown >> Liquid",
                          "Liquid >> Liquid >> Liquid >> Liquid >> Liquid",
                          "Gas >> Gas >> Gas",
                          "Gas >> Gas >> Gas >> Gas >> Gas >> Gas",
                          "Liquid >> Solid",
                          "Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid >> Liquid",
                          "Gas >> Liquid",
                          "Gas >> Gas",
                          "Gas >> Liquid >> Liquid",
                          "Gas | Liquid",
                          "Gas >> Solid"
                        ]
                      }
                    }
                  ]
                },
                "name": "aggregation_state_of_reactants",
                "description": "The physical state of the reactants\n- The three basic categories are Solid/Liquid/Gas\n- The perovskite stack is considered as one block/layer when we consider the synthesis. Thus, even if the perovskite is layered, consider it as one block, i.e. no vertical bars in this field\n- When more than one reaction step, separate the aggregation state associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Most cases are clear cut, e.g. spin-coating involves species in solution and evaporation involves species in gas phase. For less clear-cut cases, consider where the reaction really is happening as in:\no For a spray-coating procedure, it is droplets of liquid that enters the substrate (thus a liquid phase reaction)\no For sputtering and thermal evaporation, it is species in gas phase that reaches the substrate (thus a gas phase reaction)\nExample\nLiquid\nGas >> Liquid\nLiquid >> Liquid >> Liquid",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "N2 | Vacuum",
                          "Inert",
                          "DMSO; N2 >> N2",
                          "Air >> MAI; N2",
                          "FAI >> Unknown",
                          "FABr",
                          "FAI >> FABr @ 75 >> 25",
                          "Methylamin; N2",
                          "Vacuum >> MAI; toluene",
                          "Ar; MAI; Pbl2",
                          "N2 >> N2; TBP",
                          "Air >> Ar",
                          "Ar; MAI; PbI2",
                          "Methylamin; N2 >> Methylamin; N2",
                          "Acetone; N2 >> N2",
                          "FAI; N2; Vacuum",
                          "N2 >> Vacuum",
                          "Air >> MAI; NH4Cl; Vacuum",
                          "Vacuum >> MAI; Vacuum >> Vacuum; BAI",
                          "Unknown >> Air",
                          "Air >> Ar; Methylamin",
                          "Vacuum >> FAI",
                          "N2 >> Air; Methylamin; HI",
                          "Vacuum >> Vacuum >> IPA",
                          "N2 >> MABr >> MAI",
                          "Air >> MAI; Vacuum",
                          "Unknown >> Vacuum",
                          "Unknown >> Br2",
                          "O2",
                          "Unknown >> Unknown >> Air",
                          "Air >> MACl >> MAI",
                          "N2 >> MAI; N2",
                          "Unknown >> Methylamin",
                          "N2 >> N2; IPA >> N2",
                          "N2 >> Dry air",
                          "N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2",
                          "Vacuum >> N2",
                          "N2 >> Air; Methylamin >> Air; HI",
                          "N2 >> Chlorobenzene; N2 >> N2",
                          "Dry air | Dry air",
                          "N2 >> N2 >> N2 >> N2",
                          "Vacuum >> FAI; Vacuum",
                          "N2; Vacuum",
                          "Vacuum >> Vacuum",
                          "Dry air >> MAI",
                          "Vacuum >> Vacuum >> N2",
                          "Ar",
                          "Unknown >> MAI; Vacuum",
                          "Air >> Air; I2 >> N2",
                          "Air >> N2 >> Air",
                          "N2",
                          "Ar; MAI; PbCl2",
                          "Vacuum >> Air; MAI",
                          "N2 >> FAI; MAI; Vacuum",
                          "N2 | N2 | N2 | N2",
                          "Vacuum >> IPA; MAI",
                          "Vacuum >> TiBr4",
                          "Air >> Air >> Air",
                          "FAI",
                          "N2 >> FA-Ac",
                          "Air >> MaBr",
                          "N2 >> N2 >> FAI; Vacuum",
                          "Vacuum >> Ar; MAI",
                          "N2 >> MAI",
                          "Vacuum >> Vacuum >> Unknown",
                          "N2 | N2 | N2",
                          "Liquid Air",
                          "N2 >> MACl",
                          "Vacuum >> N2; MAI",
                          "N2 >> N2; Toluene >> N2",
                          "Air >> Vacuum >> N2",
                          "Ambient >> Air; MAI",
                          "N2 >> FAI; Vacuum >> N2",
                          "Vacuum >> FAI; N2",
                          "Ar >> MABr",
                          "Unknown >> Unknown >> Vacuum",
                          "Unknown >> Unknown >> Methylamin",
                          "Air >> Vacuum >> Air",
                          "Vacuum >> Chlorobenzene; MAI",
                          "Air >> Air; MABr",
                          "Ambient >> Ambient",
                          "Air >> MAI; MACl; MABr; Vacuum",
                          "N2 >> Air; Methylamin",
                          "Dry air",
                          "Vacuum >> Vacuum >> Vacuum >> Vacuum >> Vacuum >> Vacuum",
                          "Unknown >> N2; MAI",
                          "Unknown >> MAI",
                          "Vacuum >> Vacuum >> FAI; N2",
                          "Unknown >> FAI",
                          "N2 >> Air; DMSO >> Air; DMSO >> Air; Methylamin",
                          "Vacuum >> N2 >> N2 >> N2",
                          "Dry air >> Dry air >> Dry air",
                          "Chlorobenzene; N2",
                          "DMF; N2 >> N2",
                          "N2 >> Vacuum >> N2",
                          "Unknown >> Unknown >> MAI",
                          "Inert >> Inert",
                          "Air >> Air >> Pyridine",
                          "Unknown >> Vacuum >> Air",
                          "Unknown >> Air; Methylamin",
                          "Vacuum >> Ar",
                          "FAI; FABr >> Unknown",
                          "Air >> Air | Air",
                          "Unknown >> MABr",
                          "Vacuum >> Unknown",
                          "N2 >> N2 >> N2",
                          "Unknown",
                          "Ar >> Ar >> Ar",
                          "Air >> Br2",
                          "N2 >> N2",
                          "N2 >> Methylamin; N2",
                          "N2 >> N2 >> MAI; N2",
                          "Unknown >> Unknown >> Unknown",
                          "Dry air >> Dry air",
                          "Unknown >> Pyridine",
                          "N2 >> Air; MAI",
                          "Air >> Air; MAI",
                          "N2 >> FA",
                          "Hydrazine; N2",
                          "N2 >> Ambient",
                          "Vacuum >> Vacuum >> Vacuum",
                          "FAI >> FABr @ 25 >> 75",
                          "Vacuum >> MAI",
                          "Ambient",
                          "Unknown >> Unknown",
                          "N2 >> Vacuum >> Vacuum",
                          "Air >> Air; MACl",
                          "Unknown >> MACl",
                          "Air >> Air; Methylamin",
                          "Air >> Methyl amine",
                          "FAI >> FABr @ 50 >> 50",
                          "Air >> MAI",
                          "Vacuum >> MAI; Vacuum; FAI >> N2",
                          "Ait >> Air; MAI",
                          "Air",
                          "N2 >> MAI >> MABr",
                          "Vacuum",
                          "Air >> FAI; FABr; MACl; Vacuum",
                          "Dry air >> Air; MAI",
                          "Vacuum >> Vacuum >> Vacuum >> Vacuum",
                          "Unknown >> N2; MAI >> Unknown",
                          "Air >> Air",
                          "N2 >> Air; DMSO; HBr >> Air; DMSO >> Air; Methylamin",
                          "N2 >> Air",
                          "Air >> Air; HI >> Air; Methylamin >> Air; Hi",
                          "Vacuum >> MAI; N2",
                          "Vacuum >> Vacuum >> I2; N2 >> N2",
                          "Vacuum >> Air",
                          "N2 >> MAI; N2; O2",
                          "Vacuum >> Vacuum >> FAI; Vacuum",
                          "Air >> FAI; Vacuum",
                          "Glovebox",
                          "Air >> Air >> N2",
                          "Air >> Methylamine",
                          "Air >> N2",
                          "Vacuum >> FAI; N2; Vacuum",
                          "Air >> Methylamin; Vacuum",
                          "Unknown >> Unknown >> Unknown >> MAI",
                          "N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2",
                          "N2 >> MAI; Vacuum",
                          "Air | Ari; MAI",
                          "Air >> MAI; NH4Cl",
                          "N2 >> FAI; FACl; Vacuum",
                          "N2 >> N2 >> Vacuum",
                          "N2 | N2",
                          "N2 >> FAI; Vacuum",
                          "Air >> Air >> Air >> Air",
                          "N2 >> Methylamin",
                          "N2 >> BEAI2; N2",
                          "Dry air >> Dry air; Methylamin",
                          "Air >> Air >> Air >> Air >> Air >> Air",
                          "N2 >> DMSO; N2 >> N2",
                          "Air | Air",
                          "IPA; N2 >> N2",
                          "Ar >> Ar",
                          "N2 >> Methylamin; Vacuum",
                          "Air; O2",
                          "Air >> Vacuum",
                          "Vacuum >> N2 >> N2",
                          "N2 >> Ar; MAI",
                          "N2 >> FAI; MABr; MACl; N2; Vacuum",
                          "Ar >> Vacuum",
                          "Vacuum >> MAI; Vacuum",
                          "N2 >> MABr",
                          "Unknown >> Air >> Air",
                          "N2 >> N2; 1,2-dichlorobenzene >> N2"
                        ]
                      }
                    }
                  ]
                },
                "name": "synthesis_atmosphere",
                "description": "The synthesis atmosphere\n- When more than one reaction step, separate the atmospheres associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nAir\nN2 >> N2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1 atm >> 1 atm",
                          "0.000001 mbar",
                          "1 atm | 1 atm",
                          "1 atm >> 0.00003 bar",
                          "1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm",
                          "1 atm >> 60 Pa",
                          "1 atm",
                          "0.000001 mbar >> 1 atm",
                          "1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm",
                          "1 atm >> 1 atm | 1 atm",
                          "0.00001 mbar",
                          "nan | 700 Pa"
                        ]
                      }
                    }
                  ]
                },
                "name": "synthesis_atmosphere_pressure_total",
                "description": "The total gas pressure during each reaction step\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of deposition steps must line up with the previous columns.\n- Pressures can be stated in different units suited for different situations. Therefore, specify the unit. The preferred units are:\no atm, bar, mbar, mmHg, Pa, torr, psi\n- If a pressure is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 100 pa and not 80-120 pa.\nExample\n1 atm\n0.002 torr\n1 atm >> 1 atm >> nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1 atm >> 1 atm",
                          "0.000001 mbar",
                          "1 atm | 1 atm",
                          "1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm",
                          "1 atm",
                          "0.000001 mbar >> 1 atm",
                          "1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm >> 1 atm",
                          "1 atm >> 1 atm | 1 atm",
                          "0.00001 mbar",
                          "1 atm >> 0.00003 bar"
                        ]
                      }
                    }
                  ]
                },
                "name": "synthesis_atmosphere_pressure_partial",
                "description": "The partial pressures for the gases present during each reaction step.\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the partial pressures and separate them with semicolons, as in (A; B). The list of partial pressures must line up with the gases they describe.\n- In cases where no gas mixtures are used, this field will be the same as the previous filed.\nExample\n1 atm\n0.002 torr; 0.03 torr\n0.8 atm; 0.2 atm >> 1 atm >> nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "40.0",
                          "25",
                          "30 >> 30",
                          "0 >> 40 >> 0",
                          "15",
                          "0 >> 0",
                          "0.4",
                          "0 >> 1",
                          "0 >> 22 >> 0",
                          "0",
                          "1",
                          "5",
                          "85",
                          "32",
                          "10.0",
                          "70",
                          "28",
                          "2",
                          "15 >> 15",
                          "55 >> 55",
                          "80",
                          "30 | 30",
                          "45",
                          "20 >> 20",
                          "40",
                          "75",
                          "20",
                          "60",
                          "65",
                          "36",
                          "45 >> 45",
                          "0 >> 20",
                          "24",
                          "0 >> 16 >> 0",
                          "30",
                          "55",
                          "8",
                          "0 >> 30",
                          "90",
                          "25 >> 25",
                          "35 >> 35",
                          "0 >> 12 >> 0",
                          "10 >> 0",
                          "40 >> 40",
                          "0.01",
                          "52",
                          "70 >> 70",
                          "0 >> 33 >> 0",
                          "27.5 >> 27.5 >> 27.5",
                          "50 >> 50",
                          "10 >> 10",
                          "42",
                          "0.0",
                          "nan >> 40",
                          "50",
                          "40 >> 40 >> 40",
                          "0 >> 60",
                          "65 >> 65",
                          "35",
                          "12 >> 12",
                          "0 >> 40",
                          "42 >> 42",
                          "30; 40",
                          "60 >> 60",
                          "10"
                        ]
                      }
                    }
                  ]
                },
                "name": "synthesis_atmosphere_relative_humidity",
                "description": "The relative humidity during each deposition step\n- When more than one reaction step, separate the relative humidity associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of deposition steps must line up with the previous columns\n- If the relative humidity for a step is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 35 and not 30-40.\nExample\n35\n0 >> 20\n25 >> 25 >> 0",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "DMF; DMSO >> H2O; Methanol",
                          "DMF >> none >> Unknown",
                          "Diiodoctane, DMF",
                          "Unknown >> none",
                          "n-methyl-2-pyrrolidone",
                          "acetonitrile; DMF; DMSO >> IPA",
                          "DMF",
                          "Octane >> Methyl acetate >> Ethyl acetate",
                          "DMSO; GBL >> DMF; IPA",
                          "DMSO | 1-pentanol",
                          "Ethanol",
                          "GBL; DMSO; n-butanol",
                          "DMF; DMSO >> Octane >> IPA",
                          "DMF; Furfural",
                          "Octane >> Methyl acetate",
                          "DMF; DMSO >> H2O; IPA",
                          "DMF; DMSO >> IPA >> IPA >> IPA",
                          "Octane >> IPA",
                          "none; DMF >> IPA",
                          "DMF >> Methanol",
                          "acetonitrile",
                          "acetonitrile; DMF",
                          "DMSO; N-methyl-2-pyrrolidone",
                          "DMF; DMSO >> IPA",
                          "GBL; N-methyl-2-pyrrolidinone",
                          "DMF; DMSO >> DMF; IPA",
                          "GBL; Ethanol",
                          "DMF; DMSO; NMP",
                          "none >> 2-methoxyethanol; Ethanol",
                          "DMF >> IPA >> IPA >> IPA",
                          "DMF >> H2O; IPA >> Unknown",
                          "DMSO; GBL >> IPA",
                          "DMF >> Ethyl acetate",
                          "DMF >> IPA >> Anisole",
                          "Diethyl ether; DMF; DMSO",
                          "DMF; Benzaldehyde",
                          "DMF; g-Valerolacetone",
                          "1-Ethyl-2-pyrrolidone >> none",
                          "DMF >> DMSO >> IPA",
                          "Ethanol; Methylamine",
                          "DMSO; acetonitrile >> IPA",
                          "BA; Ethanol >> none",
                          "acetonitrile; NMP",
                          "Unknown >> Unknown",
                          "DMF >> n-hexyl alchohol",
                          "DMSO >> Hexane; Toluene",
                          "NMP",
                          "Dimethylacetamide; DMSO",
                          "Ethanol; H2O",
                          "DMF; DMSO >> n-butanol",
                          "DMF >> DMSO; IPA",
                          "DMSO >> 1-butanol",
                          "DMF; DMSO >> GBL; IPA",
                          "DMF >> Cyclohexene; IPA",
                          "Heptane; Hexane",
                          "GBL >> DMF",
                          "GBL",
                          "DMF; Methylfomramid",
                          "none >> none >> none >> none >> none >> none",
                          "DMF; GBL; IPA",
                          "1-Octadecene; n-Heptane >> none",
                          "Octane >> Octane >> Octane >> Octane",
                          "Ethyl acetate",
                          "DMF; DMSO; GBL; NMP",
                          "DMF >> DMF >> Cyclohexene; IPA",
                          "Toluene",
                          "DMSO; NMP",
                          "DMF; DMSO >> IPA; o-dichlorobenzene",
                          "Acetic acid; GBL",
                          "DMF >> IPA; NMP",
                          "DMF; DMSO >> Methanol",
                          "DMF >> none >> none",
                          "N,N-dimethylacetamide",
                          "DMSO >> Methanol",
                          "DMF >> IPA; n-hexane",
                          "Chlorobenzene >> none",
                          "DMF >> Octane >> Methyl acetate >> Methyl acetate",
                          "Toluene >> IPA",
                          "DMAc; NMP",
                          "DMF >> Octane >> Octane >> Octane >> Octane >> Methyl acetate >> Methyl acetate",
                          "none",
                          "DMF >> Toluene",
                          "DMF; NMP >> IPA",
                          "acetonitrile; DMF >> IPA",
                          "DMF; GLB",
                          "Chlorobenzene",
                          "methylamine formate; IPA",
                          "DMF; THF",
                          "Ethyl amine; HCl",
                          "DMF; GBL",
                          "DMF >> H2O",
                          "2-Methoxy-ethanol",
                          "2\u2010butoxyethano; DMSO",
                          "DMF; Tetrahydrothiophene-1-oxide",
                          "2-methoxyethanol; DMSO",
                          "Cyclohexyl-2-pyrrolidone; DMF",
                          "DMF; Benzylamine",
                          "DMSO; NMP >> IPA",
                          "DMF; DMSO >> Hexane",
                          "DMF >> IPA >> DMF; IPA",
                          "DMF >> Methanol | Cyclohexane",
                          "DMF; Tetrahydrothiophene 1-oxid",
                          "Cl-Cyclohexane; DMF",
                          "DMSO >> DMSO >> DMSO",
                          "DMF; NMP",
                          "DMF; Me-Cyclohexane",
                          "DMSO >> IPA >> Toluene",
                          "none >> none",
                          "DMSO; GBL @ 3; 7 >> IPA",
                          "DMF; DMSO >> Chloroform",
                          "DMF | IPA | H2O | Ethanol",
                          "DMSO; GBL @ 3; 7 >> DMSO; GBL @ 3; 7",
                          "DMF; DMSO",
                          "DMF; TBP >> IPA",
                          "DMSO >> IPA >> Toluene >> none",
                          "DMF >> IPA >> Chlorobenzene; DMF",
                          "DMF >> Unknown",
                          "Ethanol; H2O >> Chlorobenzene; Tert-butanol",
                          "DMF >> Chex; IPA",
                          "Unknown >> none >> none",
                          "acetonitrile; DMF; Methoxyactonitrile",
                          "none >> Methanol; Ethanol",
                          "DMSO >> Octane",
                          "Chlorobenzene >> Methylacetate",
                          "DMF; GBL; IPA >> IPA",
                          "Methylammonium acetate",
                          "DMSO; o-xylene",
                          "DMSO | Propanetriol",
                          "Ocatane >> MeOAc",
                          "DMSO >> IPA",
                          "DMF; HCl >> IPA",
                          "DMSO >> Ethanol",
                          "2-methoxyethanol; acetonitrile",
                          "IPA >> DMF",
                          "DMF >> Pentan-1-ol >> Unknown",
                          "none >> IPA",
                          "DMF; HCl",
                          "DMF; DMSO >> Cyclohexane; IPA",
                          "DMF >> Cyclohexane; IPA",
                          "DMF; DMSO >> Chlorobenzene; IPA",
                          "DMF; o-DCB",
                          "DMF >> Methanol >> Methanol",
                          "Unknown >> IPA >> none",
                          "2-methoxyethanol",
                          "H2O >> none",
                          "DMF >> IPA >> DMF >> IPA >> DMF >> IPA",
                          "n-propylamine",
                          "DMF >> none >> none >> none",
                          "THF",
                          "DMSO >> Toluene",
                          "DMF >> tert-butanol; Chlorobenzene",
                          "DMF; Glycerol >> DMF >> IPA",
                          "Butylamine",
                          "DMF; o-xylene",
                          "DMF; DMSO >> none >> none >> none",
                          "Ethanol; H2O >> IPA",
                          "IPA",
                          "DMF; DMSO >> Toluene",
                          "DMF >> Ethanol; IPA",
                          "acetonitrile; Ethanol; Methylamine",
                          "DMSO >> none",
                          "Hexane; Octane",
                          "H2O >> IPA",
                          "NMP >> IPA",
                          "Octane",
                          "DMF >> IPA >> Toluene",
                          "Dimethylacetamide; DMSO; NMP",
                          "H2O >> none >> IPA",
                          "DMSO; GBL",
                          "Dimetyletanamid",
                          "Dimethylacetamide; DMF",
                          "DMF; DMSO; HAc >> IPA",
                          "Diiodomethane; DMF; DMSO",
                          "DMF; DMSO | IPA",
                          "DMF; DMSO; HCl >> IPA",
                          "DMF >> Methanol >> Methanol >> Methanol",
                          "H2O >> H2O; HI >> IPA",
                          "DMSO; GBL >> none",
                          "Methylacetate",
                          "DMF >> IPA >> DMF >> IPA",
                          "Methanol; THF",
                          "IPA >> DMF >> IPA",
                          "Acetic acid; Ethanol; Water",
                          "DMF; DMSO; Formamide",
                          "GBL >> IPA",
                          "DMF; H2O",
                          "DMF; DMSO >> Ethanol",
                          "2-methoxyethanol; DMSO; GBL",
                          "Butylamine; DMF; DMSO >> Butanol",
                          "Octane >> Pb(OAc)2 satured ethyl acetate solution >> Ethyl acetate >> Octane >> Pb(OAc)2 satured ethyl acetate solution >> Ethyl acetate >> Octane >> Pb(OAc)2 satured ethyl acetate solution >> Ethyl acetate",
                          "DMF; DMSO >> Methyl acetate",
                          "DMF; DMSO | IPA >> IPA",
                          "DMF; THF >> IPA",
                          "DMF >> Chlorobenzene; IPA",
                          "DMF; DMSO >> IPA >> DMSO; IPA",
                          "DMF; NNP",
                          "DMSO; GBL @ 4; 7 >> IPA",
                          "GBL; NMP",
                          "DMF >> IPA >> Methybenene",
                          "GBL; DMSO",
                          "Octane >> Ethyl acetate",
                          "IPA >> IPA",
                          "Unknown",
                          "Water >> Ethanol >> IPA",
                          "H2O; HI; Methylamine",
                          "DMF; DMA >> IPA",
                          "Hexane >> Octane",
                          "DMSO; GBL; IPA",
                          "IPA >> Ethanol",
                          "none | IPA",
                          "Octane >> Octane >> Octane >> Octane >> Octane >> Methyl acetate",
                          "Terpineol",
                          "Unknown >> IPA",
                          "DMF; Acetophenone",
                          "DMF; N-Methyl-2-pyrrolidone",
                          "GBL >> GBL",
                          "none >> IPA >> IPA",
                          "DMF; DMSO; H2O",
                          "Hexane",
                          "DMF | IPA",
                          "DMF >> DMF; IPA",
                          "Dimethylacetamide",
                          "DMF >> IPA; Toluene",
                          "DMSO; Hac >> IPA",
                          "DMF >> Ethanol >> Ethanol",
                          "none >> Ethanol",
                          "DMSO >> H2O; IPA",
                          "DMF >> PA",
                          "Ethyl acetate >> Ethyl acetate",
                          "DMF >> Ethanol",
                          "DMF >> DMF",
                          "DMSO; H2O >> IPA",
                          "none >> none >> none >> IPA",
                          "DMF >> n-butyl alchohol",
                          "DMF; HMPA >> IPA",
                          "DMF >> IPA; Propanol",
                          "DMF | DMF; IPA",
                          "none >> none >> none",
                          "DMF; DMSO @ 9; 1 >> IPA",
                          "DMF; IPA",
                          "Methylamine >> Methylamine",
                          "Methyl acetate >> Ethyl acetate",
                          "none >> Hydrophosphorous acid; IPA",
                          "DMF >> n-amyl alcohol",
                          "DMF >> IPA; TBP",
                          "DMSO; GBL; NMP",
                          "DMSO; BL",
                          "Aceton; DMF >> IPA",
                          "DMSO | Butanol; IPA",
                          "none >> IPA >> IPA >> IPA",
                          "DMF; DMSO >> Chlorobenzene",
                          "DMF >> Cyclohexanol; IPA",
                          "DMF; DMSO >> none",
                          "DMF >> DMF >> Ethanol",
                          "Water >> none",
                          "Octane >> Methyl acetate >> Methyl acetate",
                          "DMF; DMSO; Pyridin",
                          "DMF; DMSO; Methanol",
                          "DMF >> IPA >> none",
                          "DMF >> Octane >> Pb(OAc)2 satured ethyl acetate solution >> Ethyl acetate >> Octane >> Pb(OAc)2 satured ethyl acetate solution >> Ethyl acetate >> Octane >> Pb(OAc)2 satured ethyl acetate solution >> Ethyl acetate",
                          "DMF >> Octane >> Octane >> Octane >> Methyl acetate >> Methyl acetate",
                          "DMF; DMSO >> Chlorobenzene; DMF",
                          "DMF; DMSO >> DMF; DMSO >> DMSO >> DMSO | IPA",
                          "none >> Ethanol; Methoxyethanol",
                          "DMF; Tetraline",
                          "Dimethylacetamide >> IPA",
                          "Acetic acid; GBL; Propanol",
                          "DMF | none",
                          "DMF; DMSO; N-cyclohexyl-2pyrrolidone",
                          "DMF; DMSO >> IPA >> IPA",
                          "DMF; DMSO; Formarmid",
                          "DMF; NMP >> Ethanol",
                          "DMF; DMSO >> Ethanol; IPA",
                          "DMF; DMSO >> IPA >> none",
                          "DMF >> DMF >> IPA",
                          "IPA >> DMF >> none",
                          "Butanol; GBL",
                          "DMF >> none >> IPA",
                          "1-Octane",
                          "DMF; DMSO; GBL",
                          "DMSO >> Octane >> Octane",
                          "DMF; DMSO >> DMSO; IPA",
                          "GBL; Polyethylene glycol >> H2O",
                          "DMF; DMSO; Thiourea",
                          "DMF >> IPA >> DMF",
                          "DMF; DMI >> Ethanol",
                          "Acetic acid; Ethanol; GBL",
                          "none >> none >> none >> none",
                          "DMF; n-butanol >> IPA",
                          "DMF; DMSO; GBL >> IPA",
                          "Dimethylacetamide; NMP",
                          "n-butylamine",
                          "Diiodooctane; DMF",
                          "acetonitrile; DMF; DMSO",
                          "DMSO; Formamide",
                          "DMF | IPA | H2O",
                          "DMF >> IPA >> IPA",
                          "DMF; DMSO; n-butyl amine >> n-butanol",
                          "DMF; HPA",
                          "GBL >> none",
                          "acetonitrile; Methylamine",
                          "acetonitrile; DMSO >> IPA",
                          "DMF; DMI >> IPA",
                          "Hexame >> Methyl acetate >> Ethyl acetate",
                          "DMF >> Octane >> Octane >> Methyl acetate >> Methyl acetate",
                          "none >> none >> IPA",
                          "DMF; DMSO >> IPA; H2O",
                          "DMF >> Acetonitrile, Methylamine",
                          "IPA >> DMF; DMSO",
                          "acetonitrile; Methylamine >> IPA",
                          "DMF; TBP",
                          "Ethanol; GBL",
                          "H2O >> none >> none",
                          "DMF >> TBA",
                          "DMF >> IPA >> Chlorobenzene; GBL",
                          "DMSO >> IPA >> IPA",
                          "DMSO | IPA",
                          "DMF; Tetramethylene sulfoxide",
                          "DMSO >> DMF; DMSO",
                          "DMF >> none",
                          "DMF >> IPA >> Chlorobenzene",
                          "DMF; DMSO >> DMF; DMSO >> IPA",
                          "Methanol; Water",
                          "DMF >> IPA",
                          "DMF; DMSO >> none >> IPA",
                          "DMF; Glycerol >> DMF; DMSO",
                          "DMF >> Methyl acetate",
                          "DMSO >> Hexane",
                          "DMSO",
                          "DMF >> DMF >> none",
                          "DMF; HI",
                          "DMF >> Methanol >> Toluene",
                          "DMF; DMSO >> IPA | IPA",
                          "DMF >> IPA >> Chlorobenzene; DMSO",
                          "DMF >> IPA >> Unknown",
                          "DMF; DMSO >> DMF; DMSO",
                          "DMF >> Terpineol",
                          "DMSO | butanol",
                          "DMF; DMSO >> DMSO; Methanol",
                          "DMF; DMSO; Hac >> IPA",
                          "H2O >> Hexane; IPA",
                          "acetonitrile; MA(MeOH)"
                        ]
                      }
                    }
                  ]
                },
                "name": "solvents",
                "description": "The solvents used in each deposition procedure for each layer in the stack\n- When more than one reaction step, separate the solvents associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the solvents in alphabetic order and separate them with semicolons, as in (A; B)\n- The number and order of deposition steps must line up with the previous columns.\n- For non-liquid processes with no solvents, state the solvent as \u2018none\u2019\n- If the solvent is not known, state this as \u2018Unknown\u2019\n- Use common abbreviations when appropriate but spell it out when risk for confusion\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nDMF; DMSO\nGBL\nDMF >> IPA\nDMF >> none\nDMF; DMSO >> IPA",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": []
                      }
                    }
                  ]
                },
                "name": "solvents_mixing_ratios",
                "description": "The mixing ratios of the solvents used in each deposition procedure for each layer in the stack\n- When more than one reaction step, separate the solvent mixing ratios associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of deposition steps must line up with the previous columns.\n- For pure solvents, state the mixing ratio as 1\n- For non-solvent processes, state the mixing ratio as 1\n- For unknown mixing ratios, state the mixing ratio as \u2018nan\u2019\n- For solvent mixtures, i.e. A and B, state the mixing ratios by using semicolons, as in (VA; VB)\n- The preferred metrics is the volume ratios. If that is not available, mass or mol ratios can be used instead, but it the analysis the mixing ratios will be assumed to be based on volumes.\nExample\n1\n4; 1 >> 1\n1 >> 5; 2; 0.3 >> 2; 1",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "J&K Scientific; J&K Scientific >> Unknown",
                          "ACORS Organic; ACORS Organic",
                          "Alfa Aesar; Alfa Aesar",
                          "Sigma Aldrich; Daejung",
                          "Acros Organics; Sigma Aldrich",
                          "Sigma Aldrich",
                          "Unknown >> Alfa Aesar; Sigma Aldrich",
                          "Xi'an Polymer Light Technology >> Xi'an Polymer Light Technology >> Unknown",
                          "Alfa Aesar",
                          "ACORS Organic; ACORS Organic; Unknown",
                          "Unknown",
                          "Panreac",
                          "J&K Scientific >> Unknown",
                          "Millipore Sigma",
                          "Aladdin >> Sigma Aldrich",
                          "NanoPac; NanoPac",
                          "Aldrich",
                          "Sigma Aldrich; Alfa Aesar",
                          "Sigma Aldrich; Sigma Aldrich",
                          "Xi'an Polymer Light Technology; Xi'an Polymer Light Technology",
                          "Wako Pure Chemical Industries >> Wako Pure Chemical Industries",
                          "Fisher Scientific; Fisher Scientific",
                          "sigma aldrich; sigma aldrich",
                          "Sigma Aldrich; Sigma Aldrich >> Unknown",
                          "Wako >> Wako; Wako",
                          "Sigma Aldrich >> Sigma Aldrich >> Sigma Aldrich",
                          "Alfa Aesar; Sigma Aldrich",
                          "Tokyo Chemical Industry, Japan",
                          "J&K",
                          "Wako; Wako",
                          "Merck >> Merck >> Merck",
                          "Wako >> Wako",
                          "Nacalai Tesque",
                          "Tokyo Chemical Industry >> Sigma Aldrich",
                          "Alfa Aesar >> Alfa Aesar",
                          "Kanto Chemical Tokyo",
                          "J&K; J&K",
                          "Aladdin; Aladdin",
                          "Sigma Aldrich; Unknown",
                          "Sigma; Aladdin",
                          "Merck >> Merck",
                          "Tianjin Guangfu Fine Chemical Research Institute; Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "solvents_supplier",
                "description": "The suppliers of all the solvents.\n- When more than one reaction step, separate the solvent suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of reaction steps and solvents must line up with the previous columns.\n- For non-liquid processes with no solvents, mark the supplier as \u2018none\u2019\n- If the supplier for a solvent is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nSigma Aldrich\nSigma Aldrich; Fisher >> Acros\nnone >> Sigma Aldrich; Sigma Aldrich >> Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Pro analysis",
                          "0.99",
                          "Unknown >> Puris; Puris",
                          "AR 99% GC",
                          "Pro analysis; Pro analysis",
                          "99.9%; 99.8%",
                          "Unknown",
                          "Reagent Grade >> 99.5% >> 99.8%",
                          "99%; 99%",
                          "0.998",
                          "99.7%; 99%",
                          "Puris",
                          "Puris; Puris",
                          "99.8% >> Unkown",
                          "99.99%; 99.5%",
                          "Puris; Unknown",
                          "99.9%; 99.8% >> Unkown",
                          "99.8%; 99.9%",
                          "99.8",
                          "99.7%; 99%; Unkown",
                          "99%; 99,9%",
                          "99.9%; 99.5%",
                          "Puris; Puris >> Unknown",
                          "99.8% Anhydrous; 99.5% anhydrous"
                        ]
                      }
                    }
                  ]
                },
                "name": "solvents_purity",
                "description": "The purity of the solvents used.\n- When more than one reaction step, separate the solvent purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For non-liquid processes with no solvents, state the purity as \u2018none\u2019\n- If the purity for a solvent is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\nPuris; Puris>> Tecnical\nnone >> Pro analysis; Pro analysis >> Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "nan >> PEAI",
                          "FAPbI3; MABr >> PEAI; PbI2",
                          "CsI; FAI; MABr; PbBr2; PbI2 >> Cs-oleate; PbBr2; PbBI2",
                          "PEAI; PbI2; MABr >> PEAI; PbI2; MABr",
                          "CsBr; FAI; PbI2 >> PEAI",
                          "CsI; MABr; PbBr2; FAI; PbI2",
                          "PbBr2, MgBr2 >> CsBr",
                          "MAI; PbI2; TPAI",
                          "MAI; PbI2 >> MAI",
                          "SnI2; FASnI",
                          "SnI2; FAI; SnF2; ethylenediamine; PbI2; MAI; MABr",
                          "SnI2; FAI; SnF2; ethylenediamine; PbI2; MAI",
                          "nan >> n-butyl amine",
                          "1,8-octanedithiol; CsI; FAI; PbI2",
                          "MAI; PbI2; NiI2",
                          "F5PEAI, PEAI; PbI2",
                          "SnI2; FAI",
                          "MAI; PbI2; SnI2",
                          "MAI; BA; PbI2",
                          "PbCl2; PbI2 >> MAI",
                          "SnI2; FAI; SnF2; PbI2; MAI",
                          "MAI; PbSCN2; PbI2; FAI",
                          "CsI; CsBr; PbI2; PbBr2",
                          "PbCl2; PbI2 >> MAI; PMMA",
                          "CsBr; PbI2 >> CsPbI3-QDs >> Pb(OAc)2 >> nan >> CsPbI3-QDs >> Pb(OAc)2 >> nan >> CsPbI3-QDs >> Pb(OAc)2 >> nan",
                          "MAI; PbI2; FeI2",
                          "PbI2; PbBr2; FAI; MABr; g-C3N4",
                          "CsI; PbBr2 >> CsI",
                          "CsI; FAI; MABr; PbBr2; PbI2",
                          "nan >> Guanidinium iodide",
                          "nan >> Cs2CO3",
                          "CsI; FAI; PbI2; PbBr2",
                          "FAI; MAI; PbBr2; PbI2",
                          "PbI2 >> MAI; MAPbI3-QDs",
                          "PbI2; FAI; MACl; MABr; PbBr2",
                          "FAI; MABr; MACl; PbI2; PbBr2",
                          "CsAc; HPbBr3; PEABr",
                          "nan >> nan >> nan",
                          "PbI2 >> MAI >> nan",
                          "MACl; MAI; PbI2",
                          "NH4I; PbI2 >> MA",
                          "MAI; PbI2 >> MAI >> 4-DA",
                          "CsBr; PbBr2",
                          "MAI; PbCl2; PbI2",
                          "FAI; MABr; PbI2; PbBr2 >> CsI",
                          "MACl; SnCl2",
                          "MAI; PbI2; CoI2",
                          "MAI; PbI2 >> nan",
                          "nan >> CsNO3",
                          "PbI2; PbBr2; CsI",
                          "MAI; BDAI; PbI2",
                          "CsI; PbI2",
                          "MAI; MnI2",
                          "nan >> FAI",
                          "FAI; MABr; PbBr2; PbI2",
                          "CsAc; HPbBr3",
                          "PEAI, PbI2",
                          "MAI; PbCl2 >> IPFB",
                          "CsI; FAI; MABr; PbBr2; PbI2; RbI >> FABr",
                          "FAI; PbI2; ThMAI",
                          "PbI2 >> MAI",
                          "CsBr; FAI; PbI2",
                          "PbI2 >> MACl; MAI",
                          "nan >> MABr",
                          "CsBr >> PbBr | PQD",
                          "nan >> GuBr",
                          "HPbI3; CsI",
                          "PbI2; PbBr2; FAI; MABr; C3N5",
                          "nan >> nan >> nan >> Pb(NO3)2",
                          "PbI2 >> MAI; MACl",
                          "MAI; MTEACl; PbI2",
                          "CsI; SnI2",
                          "1,8-diiodooctane; MAI; PbCl2",
                          "MAI; PbI2; PEAI",
                          "nan >> ETB; NaI",
                          "nan >> NH3I(CH2)4NH3I",
                          "AgI; Bi3",
                          "CsAc; HPbI3",
                          "MAI; PbI2",
                          "MAI; PBI2; SbBr3",
                          "nan >> FaBr",
                          "PbBr2, SrBr2 >> CsBr",
                          "F5PEAI; CsI; FAI; MABr; PbI2; PbBr2; Pb(SCN)2; PEAI",
                          "CsI; CsBr; PbI2",
                          "MAI; PbI2 >> PbI2",
                          "F5PEAI; CsI; FAI; MABr; PbI2; PbBr2; Pb(SCN)2",
                          "nan >> NH3I(CH2)8NH3I",
                          "PbI2 >> FAI; MACl",
                          "F5PEAI, PbI2",
                          "MAI; PbCl2; Pb(OAc)2.3H2O",
                          "PbI2 >> 5-AVAI; MAI",
                          "CsBr; FAI; PbI2 >> PMAI",
                          "PbCl2 >> MAI",
                          "MABr; PbBr2",
                          "CsI; PbBr2; PbI2; FAI >> FAI",
                          "CsI; FAI; HI; PbI2 >> FA(PF6)",
                          "CsI; FAI; MABr; PbI2; PbBr2",
                          "CsBr; CsI; PbI2",
                          "SnI2; FABr",
                          "nan >> Eu-pyP",
                          "PbCl2; PbI2 >> FAI; MAI",
                          "nan >> CsI",
                          "PbBr2, CaBr2 >> CsBr",
                          "MAI; PbCl2; PbI2; Phenol",
                          "MAI; PbCl2; PbI2; FAI",
                          "MAI; PbI2 >> MAI; PbI2",
                          "Cs2CO3; oleic acid; 1-octadecene; PbBr2; oleylamine",
                          "CsI; PbI2 >> FAI; MABr",
                          "MAI; PbCl2",
                          "nan >> Octylammonium iodide",
                          "MAI; NMA; PbI2",
                          "C3H5CsO2; HPbBr3; HPbI3",
                          "CsBr; PbI2 >> CsPbI3-QDs >> Pb(OAc)2 >> nan >> CsPbI3-QDs >> Pb(OAc)2 >> nan >> CsPbI3-QDs >> Pb(OAc)2 >> nan >> nan",
                          "CsBr; FAI; PbI2 >> PAI",
                          "nan >> Pb(NO3)2",
                          "nan >> Ethylammonium Iodide",
                          "nan >> GAI",
                          "CsI; FAI; MAI; PbBr2; PbI2",
                          "MAI; PbI2 >> MAPbI3-QDs",
                          "CsAc; HPbBr3; HPbI3; PEABr; PEAI",
                          "nan >> CsAc",
                          "MAI; PbAc",
                          "CsI; PbBr2; PbI2; FAI >> FABr",
                          "MAI; PbCl2; PbI2 >> MAPbI3-QDs",
                          "nan >> NH3I(CH2)2O(CH2)2O(CH2)2NH3I",
                          "PbI2 >> FAI; MABr; MACl",
                          "AuBr3; MABr",
                          "nan >> MAI",
                          "MAI; PbI2; MnI2",
                          "nan >> CsBr",
                          "CsI; FAI; PbBr2; PbI2",
                          "CsI; FAI; MABr; MACl; PbI2; PbBr2",
                          "Pb(NO3)2 >> MACl; MAI",
                          "PbI2 >> FAI; MAI; MACl",
                          "CsI; FAI; MABr; PbBr2; PbI2 >> PFPAI",
                          "CsBr; PbI2",
                          "FAI; MAI; PbI2",
                          "5-AVAI; MAI; PbI2",
                          "MAI; PBI2",
                          "PbI2 >> 5-AVAI; MAI; MACl",
                          "MAI; 5-AVAI; PbI2",
                          "PbCl2 >> MAI >> nan",
                          "AgBr; BiBr3; CsBr",
                          "MABr; PbBr2; PbI2; FAI",
                          "CsI; FAI; GaAA3; PbI2",
                          "CsAc; HPbI3; PEAI",
                          "CsI; FAI; MAI; PbBr2; PbI2 >> 10%mol TBAI-doped PTzDPPBTz",
                          "CsPbI3-QDs >> Pb(OAc)2 >> nan >> CsPbI3-QDs >> Pb(OAc)2 >> nan >> CsPbI3-QDs >> Pb(OAc)2 >> nan",
                          "MAI; PbI2; PbCl2",
                          "CsAc; HPbBr3; HPbI3",
                          "PbI2 >> nan >> MAI",
                          "HPbI3 >> MA",
                          "C2H3CsO2; HPbBr3; HPbI3",
                          "CsBr >> PbBr",
                          "CsI; PbBr2; PbI2",
                          "(BDA)I2; CsI; PbI2; PbBr2",
                          "CsI; FAI; MABr; PbI2",
                          "MAI; Pb(OAc)2",
                          "FAI; MAI; PbI2; Pb(SCN)2",
                          "HCOOCs; HPbBr3; HPbI3",
                          "FAI; SnI2",
                          "MAI; Pb (OAc)2.3H2O",
                          "PbI2; HI; MA; ethanol; diethyl ether",
                          "Pb(NO3)2 >> MAI",
                          "CsI; PbBr2",
                          "PbI2; FAI; MACl",
                          "FAI; MAI; PbI2; Pb(SCN)2 >> PMMA",
                          "KI; FAI; MABr; PbBr2; PbI2",
                          "SnI2; MASnI",
                          "PbI2; HI; MA; diethyl ether",
                          "FAPbI2Br >> MAPbI2Br >> CsPbI2Br >> RbI | BABr",
                          "CsI; FAI; MAI; PbBr2; PbI2 >> PTABr",
                          "FAI; PbI2",
                          "CsI; PbBr2; PbI2; FAI >> FAI; FABr",
                          "CsBr; HI; PbF2; PbI2",
                          "nan >> Imidazolium iodide",
                          "nan >> GABr",
                          "nan >> MACl",
                          "PbI2; MAI",
                          "CsI; FAI; HI; PbI2",
                          "PbBr2; MAI",
                          "PbBr2 >> CsBr",
                          "FAI; MAI; PbBr2; PbI2; Pb(SCN)2 >> PMMA",
                          "CsI; PbI2 >> FAI; MABr; MACl",
                          "PbCl2; MAI",
                          "CsI; FAI; MAI; PbI2",
                          "nan >> FABr",
                          "DOI; MABr; PbBr2",
                          "MAI: PbI2",
                          "MAI; PbI2 >> BEAI2",
                          "nan >> nan >> FAI",
                          "CsBr; HI; PbI2",
                          "MAPbI3-xClx",
                          "CsI; FAI; MABr; PbI2; PbBr2; Pb(SCN)2; PEAI; nan",
                          "CsPbI3 >> Pb(NO3)2 >> FAI",
                          "CsI; FAI; MAI; PbI2; RbI",
                          "CsI; FAI; PbI2",
                          "MAI; BAI; PbI2",
                          "nan >> EDBE",
                          "DOI; MAI; PbCl2",
                          "DMAI; PbI2",
                          "RbI; CsI; FAI; MABr; PbI2; PbBr2",
                          "FAI, MABr; PbI2; PbBr2",
                          "FAI; MACl; MABr; PbI2",
                          "PbI2; PbCl2; MAI",
                          "MAI; SnF2; SnI2 >> nan",
                          "nan >> Pb(NO3)2 >> nan",
                          "CsI; PbI2 >> MACl; MABr; FAI; MAI",
                          "PbI2 >> MAI >> TSA",
                          "nan >> ITIC"
                        ]
                      }
                    }
                  ]
                },
                "name": "reaction_solutions_compounds",
                "description": "The non-solvent precursor chemicals used in each deposition procedure\n- When more than one reaction step, separate the non-solvent chemicals associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several compounds, e.g. A and B, list the associated compounds in alphabetic order and separate them with semicolons, as in (A; B)\n- Note that also dopants/additives should be included\n- When several precursor solutions are made and mixed before the reaction step, it is the properties of the final mixture used in the reaction we here describe.\n- The number and order of reaction steps must line up with the previous columns.\n- For gas phase reactions, state the reaction gases as if they were in solution.\n- For solid-state reactions, state the compounds as if they were in solution.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- If the compounds for a deposition step is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nCsI; FAI; MAI; PbBr2; PbI2\nPbI2 >> MAI\nPbBr2; PbI2 >> FAI; MAI >> none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Aldrich; Aldrich; Junsei Chemical; Unknown; Unknown",
                          "Lab made; synthesiyed; Aladdin; Sigma Aldrich",
                          "Xian Polymer Light Technology; Alfa Aesar",
                          "Dyesol; Sigma; Alfa Aesar; Dyesol",
                          "Lab made; Unknown >> Lab made; Unknown",
                          "Showa Chemical; Sigma Aldrich",
                          "Sigma Aldrich; Dyesol; Sigma Aldrich; Sigma Aldrich; Sigma Aldrich; Dyesol; Sigma Aldrich",
                          "Sigma Aldrich >> Unknown >> Lab made",
                          "Lab-made; Sigma Aldrich",
                          "GreatCell Solar; Sigma-Aldrich",
                          "Greatcell Ltd.; Xi\u2019An Polymer Light Technology Corp.; TCI",
                          "Youxuan Tech; Youxuan Tech",
                          "Wako; Tokyo Chemical Industry",
                          "Dyesol; Sigma; Sigma",
                          "Sigma Aldrich; Showa Chemical",
                          "Dyesol; Sigma Aldrich",
                          "TCI; GreatCell Solar Materials; Dyenamo; GreatCell Solar Materials; TCI",
                          "Xi'an Polymer Light Technology; Alfa Aesar",
                          "Sigma Aldrich; Alfa-Aesar",
                          "Sigma Aldrich; Sigma Aldrich; TCI",
                          "Acros Organics; Acros Organics; Sigma Aldrich; Dyesol",
                          "Sigma Aldrich; Sigma Aldrich; Sigma Aldrich; Unknown; Unknown",
                          "Unknown >> Lab-made; Lab-made",
                          "Dyesol; Sigma; Dyesol; Dyesol",
                          "Dynamo; Sigma Aldrich",
                          "Sigma Aldrich; Dyesole; Dyesole; TCI; TCI",
                          "Alfa Aesar; Lab made",
                          "Sigma Aldrich >> Sigma Aldrich",
                          "Xi\u2019an p-OLED >> Lab made",
                          "Unknown >> Lab made; Unknown",
                          "Sigma Aldrich; Sigma Aldrich >> Dyesol; Dyesol",
                          "Synthesiyed; Sigma Aldrich; Sigma Aldrich",
                          "TCI; Kanto Chemical Tokyo",
                          "Shanghai Mater. Win. New Materials Corporation; Sigma Aldrich; Sigma Aldrich; Shanghai Mater. Win. New Materials Corporation",
                          "Sigma Aldrich; Greatcell Solar",
                          "Sigma Aldrich >> Lab made",
                          "ACROS Organic; STAREK scientific Co. Ltd.",
                          "Dyesol; Dyesol; Alfa Aesar",
                          "Advanced Election Technology Co.. Ltd; GreatCell Solar; Advanced Election Technology Co.. Ltd. TCI.",
                          "Dyesol; Dyesol; TCI; Alfa Aesar; Sigma Aldrich >> Sigma Aldrich",
                          "Lab-made; Sigma Aldrich; Sigma Aldrich",
                          "GreatCell Solar; Sigma Aldrich",
                          "Sigma Aldrich >> Unknown; Unknown",
                          "Sigma Aldrich; Lab made; Lab made; Sigma Aldrich; Sigma Aldrich",
                          "Vizuchem; Vizuchem",
                          "Sigma Aldrich; Lab made; Sigma Aldrich; Sigma Aldrich >> Greatcell Solar",
                          "Alfa Aesar; Lumtec; Sigma Aldrich; Luminiscence; Sigma Aldrich",
                          "Lab made; Sigma Aldrich",
                          "Dyesol; Dyesol; TCI; Sigma Aldrichch",
                          "Xi'an Polymer Light Technology Corporation.",
                          "Unknown; Unknown; Unknown",
                          "Shanghai MaterWin New Materials Co.. Ltd; Sigma Aldrich",
                          "Alfa Aesar; Greatcell Solar",
                          "Sigma Aldrich. 1-Material",
                          "Showa Chemical; Sigma Aldrich; Sigma Aldrich",
                          "Dynamo; Tokyo Chemical Industry",
                          "Sigma Aldrich; Daejung",
                          "Sigma Aldrich; Lab made; Sigma Aldrich; Sigma Aldrich",
                          "Alfa Aesar; Xi\u2019an Polymer Light Technology; Xi\u2019an Polymer Light Technology",
                          "Unknown",
                          "YOUXUAN Technology Co. Ltd.; Sigma Aldrich Co. Ltd.",
                          "Sigma Aldrich; Lab made; Sigma Aldrich",
                          "Dynamo; TCI",
                          "Alfa Aesar; Dyesol",
                          "Aladdin; Lab made; synthesiyed; Aladdin; Sigma Aldrich",
                          "Dyesol; Dyesol; TCI",
                          "Sigma Aldrich; Sigma Aldrich",
                          "Acros Organics; Xi'an Polymer Light Tech. Corp.",
                          "Lab made; Alfa Aesar",
                          "Xi\u2019an Polymer Light Technology Corp; Alfa Aesar",
                          "Alfa Aesar; Alfa Aesar; Alfa Aesar; Alfa Aesar; Alfa Aesar",
                          "Ossila",
                          "Sigma Aldrich; Macklin",
                          "Sigma Aldrich; Dyesol; Sigma Aldrich; Sigma Aldrich; Dyesol",
                          "Unknown >> PEAI",
                          "Acros Organics; Acros Organics; Sigma Aldrich; Dyesol; Unknown",
                          "Unknown >> Lab made",
                          "Alfa Aesar; Alfa Aesar",
                          "TCI; Sigma Aldrichch",
                          "Xian Polymer Light Technology; Xian Polymer Light Technology",
                          "Dysol; Unknown; Unknown",
                          "Xi\u2019an p-OLED; Xi\u2019an p-OLED",
                          "Sigma Aldrich; Dyesol; Sigma Aldrich; Sigma Aldrich; Sigma Aldrich; Dyesol",
                          "Lab made; Lab made; Sigma Aldrich",
                          "Dyesol; Alfa Aesar",
                          "PbI2; MAI",
                          "Xi'an Polymer Light Technology; Xi'an Polymer Light Technology",
                          "Tokio Chemical Industry; Sigma Aldrich",
                          "Dyesol; Dyesol; TCI; Sigma Aldrich >> Sigma Aldrich",
                          "Sigma Aldrich >> Dyesol",
                          "TCI; TCI",
                          "Alfa Aesar; Sigma Aldrich",
                          "Sigma Aldrich; Lab made",
                          "Xi'an Polymer Light Technology Corp.; Xi'an Polymer Light Technology Corp.; Sigma Aldrich; Sigma Aldrich",
                          "Alfa Aesar; Xian Polymer Light Technology",
                          "GreatCell Solar; GreatCell Solar; Sigma Aldrich; Sigma Aldrich"
                        ]
                      }
                    }
                  ]
                },
                "name": "reaction_solutions_compounds_supplier",
                "description": "The suppliers of the non-solvent chemicals.\n- When more than one reaction step, separate the non-solvent chemical suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of reaction steps and solvents must line up with the previous columns.\n- For gas phase reactions, state the suppliers for the gases or the targets/evaporation sources that are evaporated/sputtered/etc.\n- For solid state reactions, state the suppliers for the compounds in the same way.\n- For reaction steps involving only pure solvents, state the supplier as \u2018none\u2019 (as that that is entered in a separate filed)\n- For chemicals that are lab made, state that as \u201cLab made\u201d or \u201cLab made (name of lab)\u201d\n- If the supplier for a compound is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nDysole; Sigma Aldrich; Dyenamo; Sigma Aldrich\nSigma Aldrich; Fisher | Acros\nLab made (EPFL) | Sigma Aldrich >> none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "99,985 >> Unknown",
                          "Puris; Pro analysis; Puris; Unknown",
                          "Unknown; 99,9%",
                          "99.5; 99",
                          "Unknown; Unknown; Puris; Puris",
                          "99,9%; Unknown; Unknown; 99,9%; 99,999%",
                          "Unknown; 98%",
                          "99.9%; 99.9%",
                          "Unknown; 99%",
                          "Puris; technical; technical; Unknown; Unknown",
                          "Unknown >> Unknown; Unknown",
                          "99.999% >> Unknown",
                          "99.999%; 99.999%",
                          "99.99%; Unknown; 99.9985%",
                          "Unknown; Unknown; 99,9%; 99,999%",
                          "Unknown; 99,999%",
                          "Unknown",
                          "99.99%; Unknown; 99.99%; 99.9985%; Unknown",
                          "Unknown; 99.9985%",
                          "98%; Unknown",
                          "99.99%; Unknown; 99.99%; 99.9985%",
                          "99.5; 99.99",
                          "Puris; Pro analysis; Puris; Unknown; Unknown",
                          "Puris; Puris; Puris",
                          "Unknown >> 99,999% >> Unknown",
                          "99%; Unknown >> Unkown",
                          "Puris; Puris; Unknown; Puris; Unknown",
                          "Unknown; Unknown",
                          "Puris; Puris",
                          "Puris; Unknown",
                          "Unknown; Puris; Puris; Unkown",
                          "Unknown >> MACl",
                          "Puris; technical; technical; puris; technical",
                          "Unknown; Puris",
                          "99 %; 99.5%",
                          "Unknown; Unknown; 99,9%",
                          "Unknown; Unknown; Unknown",
                          "Puris >> Puris",
                          "Puris; Unknown; Unknown; Unknown; Unknown",
                          "Unknown; 99.999%",
                          "99,5%; 99,99%",
                          "Unknown >> ODAI",
                          "Puris; Puris; Unknown; Puris; Puris; Unknown",
                          "Unknown >> CsAc",
                          "99,999%; 99,999% >> 99,8%; 99,8%",
                          "99,999% >> Unknown; Unknown",
                          "Puris; Puris; Unknown; Puris; Puris; Unknown; Puris",
                          "Unknown; 99%; 99,99%",
                          "99% >> Unknown",
                          "95%; 99.9%"
                        ]
                      }
                    }
                  ]
                },
                "name": "reaction_solutions_compounds_purity",
                "description": "The purity of the chemicals used.\n- When more than one reaction step, separate the compound purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, i.e. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of reaction steps and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019 (as that is stated in another field)\n- If the purity for a compound is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\n99.999; Puris| Tecnical\nUnknown >> Pro analysis; Pro analysis | none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1 M >> 40 mg/ml",
                          "0.4 M; 0.6 M; 0.8 M",
                          "0.18 M; 1.02 M; 1.2 M",
                          "0.75; 0.788; 0.713",
                          "600 mg/ml >> 1 mg/ml",
                          "1 M >> 0.07 M | nan",
                          "50 wt%",
                          "0.024 M; 1.176 M >> 8 mg/ml",
                          "461 mg/ml; 57 wt%; 33 wt%; nan; nan",
                          "0.063 M; 1.14 M; 1.14 M; 1.25 M; 1.25 M",
                          "0.2 M; 0.06",
                          "1 vol%; 0.05 M; 0.95 M; 1 M",
                          "46.8 mg/ml; 226.9 mg/ml; 0.05 vol%; 608.5 mg/ml >> 1 mg/ml",
                          "0.5 M; 0.5 M",
                          "1 M; 30 mg/ml",
                          "0.442 molal; 1.07 molal; 0.173 molal; 1.36 molal; 13.6 mg/ml >> 1 mg/ml",
                          "1.125 M; 0.75 M",
                          "548.6 mg/ml >> 50 mg/ml",
                          "462 mg/ml >> 35 mg/ml",
                          "nan; 1 M; 0.2 M; 0.2 M; 1.1 M >> 1000 mM",
                          "1.26 M; 0.14 M; 1.4 M",
                          "nan; 1 M; 0.2 M; 0.2 M; 1.1 M >> 200 mM",
                          "600 mg/ml >> 10 mg/ml",
                          "1 M >> 0.0031 M; 0.0598 M",
                          "1 M; 1.05 M",
                          "0.5 M >> 20 mg/ml",
                          "573.3 mg/ml; 197.7 mg/ml",
                          "0.1426 M; 1.56 M; 1.74 M >> 4 mM",
                          "1 M >> 10 mg/ml >> 5 mM",
                          "2 wt%; 163.33 mg/ml; 535.2 mg/ml",
                          "0.75; 0.75; 0.75",
                          "0.1426 M; 1.56 M; 1.74 M >> 10 mM",
                          "1 M >> 7 mg/ml",
                          "0.75 M; 0.50 M; 1 M",
                          "1 M >> 8 mg/ml",
                          "0.5 M >> 38 mg/ml",
                          "553 mg/ml; 190 mg/ml",
                          "0.5 M; 0.5 M; 0.6 M; 0.3 M",
                          "1 M >> 10 mg/ml >> 10 mM",
                          "1 M; 1.06 M",
                          "nan >> 2 mg/ml",
                          "1.25 M; 1.25 M >> nan",
                          "1.5 M; nan",
                          "462 mg/ml >> nan >> 10 mg/ml",
                          "1.4 M; 1.4 M",
                          "1.08 M; 1.08 M; 0.12 M",
                          "1.2 M >> 1.6 mol%",
                          "nan >> 5 mg/ml",
                          "500 mg/ml >> 10 mg/ml >> nan",
                          "1 M >> 0.07 M",
                          "nan >> 3 mg/ml",
                          "46.8 mg/ml; 226.9 mg/ml; 0.05 vol%; 608.5 mg/ml >> 7 mg/ml",
                          "0.3 M; 0.06",
                          "1.5 M >> 62.3 M",
                          "3 vol%; 0.05 M; 0.95 M; 1 M",
                          "1 M; 0.2 M; 1 M; 1.1 M",
                          "1.3 M; 1.3 M; 1.3 M; 1.3 M | 1 mg/ml",
                          "1.5 M; 1.5 M",
                          "1.5 M >> 23.5 mM; 70.8 mM",
                          "0.1426 M; 1.56 M; 1.74 M >> 2 mM",
                          "1.35 M; 1.35 M",
                          "1.25 M; 1.3 M",
                          "440 mg/ml; 180 mg/ml",
                          "1.1 M; 0.2 M; 1.15 M; 0.2 M",
                          "50 mg/ml >> nan >> nan >> 50 mg/ml >> nan >> nan >> 50 mg/ml >> nan >> nan",
                          "1.2 M",
                          "400 mg/ml >> 10 mg/ml",
                          "1.0 M; 1.1 M",
                          "462 mg/ml >> 10 mg/ml >> nan",
                          "52.6 mg/ml; 197.4 mg/ml; 622.4 mg/ml",
                          "1 M >> 10 mg/ml >> 2.5 mM",
                          "0.85 M; 0.15 M; 0.15 M; 0.85 M",
                          "0.8 M; 0.3 vol%; 0.12 M; 0.68 M",
                          "0.05 M; 1.1 M; 0.2 M; 0.2 M; 1.25 M",
                          "0.5 M; 0.5 M >> 20 mg/ml",
                          "0.90 M; 0.90 M; 0.10 M",
                          "1.3 M; 0.14 M; 1.26 M; 50 mg/ml",
                          "nan; 1 M; 0.2 M; 0.2 M; 1.1 M",
                          "0.5 M; 1 M; 1 M",
                          "1.4 M >> 10 mg/ml; nan",
                          "1.8 M; 1.8 M >> nan",
                          "1 M; 0.07 M",
                          "2; 1",
                          "450 mg/ml >> 5 mg/ml; 50 mg/ml",
                          "1 M >> nan",
                          "1 :3molarratio",
                          "2 wt%; 2.43 M; 0.81 M",
                          "0.8 M; 0.3 vol%; 0.28 M; 0.52 M",
                          "0.11 M; 0.91 M; 0.18 M; 0.186 M; 1.014 M",
                          "2.44 M; 2.44 M; 0.9 M",
                          "1.3 M; 1.3 M",
                          "1 M; 57 wt%; 33 wt%; nan; nan",
                          "13.7 mg/ml; 197.5 mg/ml; 573 mg/ml",
                          "0.98 M; 1 M",
                          "70 mg/ml",
                          "1.02 M; 0.18 M; 0.18 M; 1.02 M",
                          "1 mM; 1 mM >> 30 mg/ml",
                          "nan; 10 mg/ml",
                          "1 M >> 50 mg/ml",
                          "0.95 M; 0.05 M; 0.05 M; 0.95 M",
                          "461 mg/ml; 159 mg/ml",
                          "691.5 mg/ml >> nan; nan",
                          "0.5 M >> 36 mg/ml",
                          "0.4 M; 0.8 M; 0.8 M",
                          "1 M; 50 mM",
                          "0.75 M; 0.75 M",
                          "367 mg/ml",
                          "1.125; 0.75; 0.75",
                          "0.2 M; 0.22 M; 1.1 M; 1 M",
                          "0.5 M >> 50 mg/ml",
                          "45 wt%",
                          "636.4 mg/ml; 90 mg/ml; 89.79 wt%; 8.97 wt%",
                          "33.8 mg/ml; 599 mg/ml >> 60 mg/ml; 6 mg/ml; 6 mg/ml",
                          "1.2 M; 0.28 M",
                          "0.18 M; 1.02 M; 1.2 M; 0.1 M",
                          "1.2 mM",
                          "0.5 M >> 34 mg/ml",
                          "1 M; 0.2 M; 1.1 M; 0.2 M",
                          "66 mg/ml; 187 mg/ml; 12 mg/ml; 80 mg/ml; 568 mg/ml; nan",
                          "0.3 M; 1.2 M >> 40 mg/ml",
                          "0.5 M >> 32 mg/ml",
                          "1.5; 0.75; 0.75",
                          "1.3 M; 0.14 M; 1.26 M",
                          "2.7 M; 0.9 M",
                          "0 M; 0.8 M; 0.8 M",
                          "0.5 M >> 30 mg/ml",
                          "227.14 mg/ml; 80 mg/ml; 527.14 mg/ml",
                          "510 mg/ml >> 8.5 mg/ml >> nan",
                          "0.15 M; 0.85 M; 1 M",
                          "1 M; 1 M; 1 M",
                          "nan >> 0.5 mg/ml",
                          "0.5 M; 0.5 M; 1 M; 0.2 M",
                          "1.8 M; 0.45 M; 0.45 M",
                          "1 M >> 10 mg/ml",
                          "2.4 M; 0.8 M",
                          "0.6 M; 0.6 M >> 50 mg/ml >> nan >> nan >> 50 mg/ml >> nan >> nan >> 50 mg/ml >> nan >> nan",
                          "1 mol/L; 1 mol/L",
                          "0.7 M; 0.7 M",
                          "50.87 mg/ml; 147.5 mg/ml",
                          "1.42 M; 1.42 M",
                          "0.18 M; 1.32 M; 1.5 M",
                          "0.4 M",
                          "1.25 M; 1 M",
                          "0.05 M; 1.0 M; 0.2 M; 0.2 M; 1.1 M",
                          "450 mg/ml >> 50 mg/ml",
                          "1 M >> 0.0031 M; 0.0126 M; 0.0472 M",
                          "0.06 M; 0.96 M; 0.18 M; 0.186 M; 1.014 M",
                          "1.02 M; 0.18 M; 0.186 M; 1.014 M",
                          "0.375; 0.75; 0.75",
                          "0.5 M >> 40 mg/ml",
                          "159 mg/ml; 461 mg/ml >> 461 mg/ml",
                          "1.467; 1.6",
                          "0.6 M; 0.6 M",
                          "0.05 M; 1 M; 0.2 M; 0.2 M; 1.1 M",
                          "1.59 mol/kg; 1.59 mol/kg",
                          "0.11 M; 1.07 M; 0.19 M; 0.19 M; 1.23 M",
                          "197.6 mg/ml; 787 mg/ml",
                          "0.15 M; 0.75 M; 0.1 M; 1 M",
                          "1.467; 1.6; 2 mol%",
                          "206.2 mg/ml; 597.8 mg/ml",
                          "1.5 M; 0.75 M",
                          "1.53 M; 1.4 M; 0.5 M; 0.0122 M; 0.0122 M",
                          "5 wt%; 1.4 M >> 60 mg/ml; 6 mg/ml",
                          "2.25 M; 0.75 M",
                          "nan >> 0.16 ml/ml; 9.04 mg/ml; 23.04 mg/ml",
                          "0.8 M; 0.3 vol%; 0.2 M; 0.6 M",
                          "1 M; 1 M",
                          "1.6 M",
                          "9 wt%; 26 wt%",
                          "1.2 M; 1.2 M",
                          "397 mg/ml >> 9 mg/ml",
                          "1.6 mol%; 1.2 M; 1.2 M >> 1.6 mol%; 1.2 M; 1.2 M",
                          "1 wt%; 2.43 M; 0.81 M",
                          "75 mg/ml >> 1 mg/ml >> 1 mg/ml",
                          "0.9 M; 0.3 M; 1.0 M; 0.3 M",
                          "0.14 M; 1.4 M >> 70 mg/ml",
                          "1.3 M; 0.14 M; 1.26 M; 75 mg/ml",
                          "0.5 M; 0.5 M >> 20 mg/ml; 0.005 mg/ml",
                          "6.4 wt%; 33.6 wt%",
                          "1.05 M; nan",
                          "0.9 M; 0.9 M",
                          "636.4 mg/ml; 90 mg/ml; 89.79 wt%; 8.97 wt%; 4 wt%",
                          "1 M; 0.2 M; 0.22 M; 1.1 M",
                          "1.1 M; 10 mg/ml",
                          "1.4 M; 1.45 M",
                          "0.17 M; 0.83 M; 0.5 M; 0.5 M",
                          "0.172 mg/ml; 0.022 mg/ml; 0.507 mg/ml; 0.08 mg/ml >> 1.5 M",
                          "0.072 M; 1.11 M; 0.21 M; 0.21 M; 1.2 M",
                          "0.5 M; 1.2 M; 1 M; 0.2 M",
                          "330 mg/ml >> 10 mg/ml",
                          "1.4 M",
                          "1.3 M; 1 M",
                          "0.05 M; 0.95 M; 1 M",
                          "3 M; 1 M",
                          "450 mg/ml >> 50 mg/ml; 10 mg/ml",
                          "2.1 M; 0.7 M",
                          "596 mg/ml; 200 mg/ml",
                          "nan >> nan",
                          "159 mg/ml; 461 mg/ml",
                          "0.4 M; 0.4 M; 0.8 M",
                          "1.3 M; 1.35 M",
                          "0.6 M; 0.6 M >> 50 mg/ml >> nan >> nan >> 50 mg/ml >> nan >> nan >> 50 mg/ml >> nan >> nan >> nan",
                          "0.2 M; 0.8 M >> 15 mg/ml",
                          "2.55 M; 0.85 M",
                          "1.3 M; 0.14 M; 1.26 M; 5 mg/ml",
                          "26 mg/ml; 172 mg/ml; 22.4 mg/ml; 16.7 mg/m; 507 mg/ml; 73.4 mg/ml",
                          "0.1426 M; 1.56 M; 1.74 M >> 6 mM",
                          "0.88 M; 1.1 M; 0.44 M",
                          "460 mg/ml >> 10 mg/ml",
                          "199 mg/ml; 605.5 mg/ml",
                          "1 M; 10 mg/ml",
                          "20 mg/ml; 172 mg/ml; 22.4 mg/ml; 507.2 mg/ml; 73.4 mg/ml",
                          "1.1 M; 1.1 M",
                          "0.1125 M; 1.1375 M; 1.25 M",
                          "46.8 mg/ml; 226.9 mg/ml; 0.05 vol%; 608.5 mg/ml >> 28 mg/ml",
                          "1 M; 0.5 M; 0.5 M",
                          "163.33 mg/ml; 535.2 mg/ml",
                          "190 mg/ml; 0.0176 mg/ml; 530 mg/ml",
                          "1.4 M >> 10 mg/ml",
                          "0.54 M; 0.54 M; 0.06 M",
                          "0.2 M; 0.2 M; 1.1 M; 1 M",
                          "470 mg/ml >> 50 mg/ml; 5 mg/ml",
                          "0.196 mg/mLPbI2; 1.5 M",
                          "28 wt%",
                          "20 mg/ml; 1.6 M; 1.6 M; 20 mg/ml",
                          "1.0 M",
                          "0.5 M; 0.75 M; 1 M",
                          "1.4 M; 0.1 M; 0.01 M; 1.4 M; 0.1 M",
                          "40 wt%",
                          "0.214 mg/mLPbI2; 1.5 M",
                          "1 wt%; 163.33 mg/ml; 535.2 mg/ml",
                          "1.875 M; 0.75 M",
                          "1.3 M | 1.3 M",
                          "4 M; 1 M",
                          "5 vol%; 0.05 M; 0.95 M; 1 M",
                          "1.3 M >> 60 mg/ml; 6 mg/ml; 6 mg/ml",
                          "1.2 M; 1.2 M >> nan",
                          "238.5 mg/ml; 726 mg/ml",
                          "1.8 M >> nan",
                          "0.5 M; 0.5 M; 0.4 M",
                          "0.21 M; 0.81 M; 0.18 M; 0.186 M; 1.014 M",
                          "687 mg/ml; 237 mg/ml",
                          "nan; nan",
                          "1.2 M >> 8 mg/ml",
                          "691.5 mg/ml >> 70 mg/ml",
                          "nan >> 7 mg/ml",
                          "1.25 M; 1.25 M",
                          "60 mg/ml >> 1.3 M",
                          "0.348 mg/ml; 0.922 mg/ml",
                          "0.075 M; 1 M; 0.2 M; 1 M; 1.1 M",
                          "254.4 mg/ml; 737.6 mg/ml",
                          "1 :1mol%",
                          "0.1 M; 0.06",
                          "20 wt%",
                          "1.24 M",
                          "1; 0.2; 1; 1.1",
                          "0.1426 M; 1.56 M; 1.74 M",
                          "0.8 M; 0.3 vol%; 0.18 M; 0.62 M",
                          "1 M >> 0.0126 M; 0.0503 M",
                          "1.4 M >> 70 mg/ml",
                          "0.9 M; 0.1 M; 0.1 M; 0.9 M",
                          "1.35 M; 0.14 M; 1.26 M",
                          "0.70 M; 0.17 M; 0.10 M; 1.30 M",
                          "0.18 M; 1.02 M; 1.5 mg/ml; 1.2 M",
                          "1 M; 0.33 M; 0.66 M",
                          "1 M; 1 M >> nan",
                          "46.8 mg/ml; 226.9 mg/ml; 0.05 vol%; 608.5 mg/ml",
                          "21.25 wt%; 21.25 wt%",
                          "3.75 M; 1.25 M",
                          "100 mg/ml; 300 mg/ml",
                          "0.375 M; 0.75 M",
                          "19.4 mg/ml; 172 mg/ml; 22.4 mg/ml; 73.4 mg/ml; 507 mg/ml; nan",
                          "2.2 M; 2 M",
                          "112 mg/ml; 38 mg/ml",
                          "nan; 1 M; 0.2 M; 0.2 M; 1.1 M >> 100 mM",
                          "0.063 M; 1.25 M; 1.25 M; 1.14 M; 1.14 M",
                          "1.2 M; 0.3 M; 0.3 M",
                          "400 mg/ml >> nan",
                          "7 mg/ml; 1.2 M; 0.2 M",
                          "1.3 M; 0.14 M; 1.26 M; 20 mg/ml",
                          "0.12 M; 1.08 M >> 8 mg/ml",
                          "nan; 1 M; 0.2 M; 0.2 M; 1.1 M >> 50 mM",
                          "0.24 M; 1.36 M >> 30 mg/ml; 70 mg/ml",
                          "1.467; 1.6; 4 mol%",
                          "0.06 M; 1.14 M >> 8 mg/ml",
                          "1.2 M; 8 mg/ml",
                          "190.8 mg/ml; 553 mg/ml",
                          "197.6 mg/ml; 787 mg/ml; 19.1 mg/ml",
                          "46.8 mg/ml; 226.9 mg/ml; 0.05 vol%; 608.5 mg/ml >> 14 mg/ml",
                          "0.3 M; 0.3 M",
                          "32 wt%",
                          "16.89 mg/ml; 600 mg/ml >> 1 mg/ml; 10.75 mg/ml",
                          "198 mg/ml; 577 mg/ml",
                          "0.3 M; 0.3 M; 0.6 M",
                          "1.10 M; 0.20 M; 0.20 M; 1.15 M",
                          "0.8 M; 0.2 M; 0.2 M; 0.8 M",
                          "1.8 M; 0.45 M; 0.45 M >> nan",
                          "0.72 M; 0.72 M; 0.08 M",
                          "0.06 M; 0.95 M; 0.19 M; 0.2 M; 1 M",
                          "4.07 mg/ml; 9.66 vol%; 48.85 vol%; 6.9 mg/ml; 10 vol%",
                          "0.07 M; 1.4 M >> 70 mg/ml",
                          "1 vol%; 1.1 M; 1.1 M",
                          "0.22 M; 0.66 M",
                          "nan; 1 M; 0.2 M; 0.22 M; 1.1 M",
                          "462 mg/ml >> 20 mg/ml",
                          "1.2 M >> 45 mg/ml",
                          "nan; 1 M; 0.2 M; 0.2 M; 1.1 M >> 500 mM",
                          "460 mg/ml >> 0.15 M",
                          "1.38 M; 1.38 M",
                          "0.8 M; 0.3 vol%; 0.8 M",
                          "460 mg/ml >> nan; nan",
                          "0.039 M; 0.091 M; 1.1 M; 0.2 M; 1.2 M; 0.2 M",
                          "39.5 mg/ml; 115.7 mg/ml",
                          "0.442 molal; 1.07 molal; 1.48 molal; 13.6 mg/ml",
                          "6.4 wt%; 33.6 wt% >> nan",
                          "0.1426 M; 1.56 M; 1.74 M >> 8 mM",
                          "0.3 M; 1.2 M >> 40 mg/ml >> 2 mg/ml",
                          "0.442 molal; 1.07 molal; 1.48 molal; 13.6 mg/ml >> 1 mg/ml",
                          "1 M.0.03M; 0.07 M",
                          "nan >> 1 mg/ml",
                          "2.43 M; 0.81 M",
                          "0.8 M; 10 mg/ml",
                          "1 M; 0.952 M; 0.048 M",
                          "1 M >> 30 mg/ml",
                          "460 mg/ml >> 8.3 mg/ml >> nan",
                          "2 M; 1 M",
                          "0.06 M; 1 M; 0.2 M; 0.2 M; 1.1 M",
                          "0.8 M; 0.8 M"
                        ]
                      }
                    }
                  ]
                },
                "name": "reaction_solutions_concentrations",
                "description": "The concentration of the non-solvent precursor chemicals.\n- When more than one reaction step, separate the concentrations associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of deposition steps and chemicals must line up with the previous columns.\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated concentrations and separate them with semicolons, as in (A; B)\n- The order of the chemicals must line up to the chemicals in the previous column.\n- The order of the compounds must be the same as in the previous filed.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- For gas phase reactions, state the concentration as \u2018none\u2019\n- For solid-state reactions, state the concentration as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used. When possible, use one of the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml, wt%, mol%, vol%, ppt, ppm, ppb\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n0.063 M; 1.25 M; 1.25 M; 1.14 M; 1.14 M\n1.25 M; 1.25 M >> 1.14 M; 1.14 M; 10 mg/ml\n1 M; 1 M >> none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "0.02",
                          "0.045",
                          "0.07; Unknown",
                          "Unknown >> 0.05",
                          "Unknown >> 0.2",
                          "0.06 >> Unknown",
                          "0.75; 0.15; 0.1; 0.05 | 0.09",
                          "1.25",
                          "5.0",
                          "0.05",
                          "Unknown >> 0.04",
                          "Unknown",
                          "0.065",
                          "0.08",
                          "0.04 >> 0.04",
                          "0.075",
                          "0.035",
                          "Unknown >> 0.0157 >> 0.5",
                          "Unknown >> Unknown >> Unknown",
                          "0.05 >> 0.1",
                          "Unknown >> Unknown >> 50.0",
                          "0.25",
                          "Unknown >> Unknown",
                          "0.0025; 0.0025",
                          "0.06",
                          "0.01",
                          "0.08 >> 0.1",
                          "1.0",
                          "0.003",
                          "Unknown >> 8.0",
                          "0.1",
                          "Unknown >> 0.00942 >> 0.5",
                          "0.08 >> Unknown >> Unknown",
                          "0.03 >> 0.2",
                          "0.03"
                        ]
                      }
                    }
                  ]
                },
                "name": "reaction_solutions_volumes",
                "description": "The volume of the reaction solutions used. used in each deposition procedure\n- When more than one reaction step, separate the volumes associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The volumes refer the volumes used, not the volume of the stock solutions. Thus if 0.15 ml of a solution is spin-coated, the volume is 0.15 ml\n- For reaction steps without solvents, state the volume as \u2018nan\u2019\n- When volumes are unknown, state that as \u2018nan\u2019\nExample\n0.04\nnan >> 0.1\nnan >> 10",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "0.0 | 0.0",
                          "24.0",
                          "3.0",
                          "1.0 >> 2.0",
                          "60.0; 25.0",
                          "600.0",
                          "12.0",
                          "Unknown",
                          "0.08",
                          "Unknown >> 60.0",
                          "2.0 >> Unknown",
                          "8.0",
                          "70.0",
                          "6.0",
                          "0.167",
                          "Unknown >> Unknown",
                          "2.0",
                          "Unknown >> 30.0",
                          "12.0 >> Unknown >> Unknown",
                          "0.5",
                          "12.0 >> 0.033",
                          "1.0",
                          "48.0",
                          "Unknown >> 45.0",
                          "8.0; 12.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "reaction_solutions_age",
                "description": "The age of the solutions used in the deposition\n- When more than one reaction step, separate the age of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- As a general guideline, the age refers to the time from the preparation of the final precursor mixture to the reaction procedure.\n- When the age of a solution is not known, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state this as \u2018nan\u2019\n- For solutions that is stored a long time, an order of magnitude estimate is adequate.\nExample\n0.5\nnan >> 10\n10000 >> nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "80 | Unknown",
                          "25",
                          "310 >> 150 >> 25",
                          "25 >> 13",
                          "0 | Unknown",
                          "Unknown; 50",
                          "40 | Unknown",
                          "70 >> 25 >> 25",
                          "70 >> 80",
                          "50.0",
                          "Unknown >> 150",
                          "70",
                          "125.0",
                          "Unknown",
                          "60; Unknown",
                          "25; 25",
                          "100",
                          "130",
                          "75.0",
                          "60; 25",
                          "100.0",
                          "Unknown >> 160",
                          "70 | Unknown",
                          "12",
                          "75",
                          "60",
                          "65",
                          "70 >> 25 >> 70",
                          "Unknown >> 120",
                          "25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25",
                          "90",
                          "25 >> 25",
                          "80 >> 25",
                          "Unknown >> 140",
                          "Unknown >> 25",
                          "150.0",
                          "70; 25",
                          "100 >> 25",
                          "25.0",
                          "80; 25",
                          "75 >> 25",
                          "70 >> 25",
                          "50",
                          "70 >> Unknown",
                          "55; 100 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25",
                          "55; 100",
                          "Unknown; 150",
                          "60 >> 60",
                          "60 >> 70"
                        ]
                      }
                    }
                  ]
                },
                "name": "reaction_solutions_temperature",
                "description": "The temperature of the reaction solutions.\n- If there is more than one reaction step involved, list the solution temperatures and separate the data for each step by a double forward angel bracket (\u2018 >> \u2018)\n- If a reaction solution undergoes a temperature program, list the temperatures (e.g. start, end, and other important points) and separate them with a semicolon (e.g. heated to 80\u00b0C and cooled to room temperature before used would be80; 25)\n- When the temperature of a solution is not known, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state the temperature of the gas or the solid if that make sense. Otherwise mark this with \u2018nan\u2019\n- Assume that an undetermined room temperature is 25\nExample\n25\nnan >> 50\n80; 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "80 | Unknown",
                          "",
                          "25",
                          "0 | Unknown",
                          "25 >> 13",
                          "85 >> 25",
                          "40 | Unknown",
                          "0",
                          "25 >> 50",
                          "85",
                          "70",
                          "25 >> 110",
                          "-10",
                          "21",
                          "Unknown",
                          "100",
                          "25 >> Unknown",
                          "120",
                          "Unknown >> 20; 110",
                          "40",
                          "150",
                          "25 >> 130",
                          "140.0",
                          "70 | Unknown",
                          "25 >> 75",
                          "100 >> Unknown",
                          "70.0",
                          "60",
                          "Unknown >> 70",
                          "190.0",
                          "90",
                          "Unknown >> Unknown",
                          "25 >> 25",
                          "80 >> 25",
                          "25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25",
                          "25 >> 90",
                          "Unknown; 25 >> 25; 150 >> 25",
                          "175",
                          "Unknown >> 25",
                          "25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25",
                          "100 >> 25",
                          "70 >> 25",
                          "90 | 25",
                          "25 >> 150",
                          "50",
                          "Unknown >> 25 >> 25",
                          "70 >> Unknown",
                          "70 >> 150",
                          "90 >> 25",
                          "10"
                        ]
                      }
                    }
                  ]
                },
                "name": "substrate_temperature",
                "description": "The temperature of the substrate on which the perovskite is deposited.\n- When more than one reaction step, separate the temperatures of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a reaction solution undergoes a temperature program, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons, e.g. 25; 100\n- When the temperature of a solution is unknown, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state the temperature of the gas or the solid if that make sense. Otherwise state this as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume an undetermined room temperature to be 25\nExample\n25\n70 >> 25\nnan >> 40",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "quenching_induced_crystallisation",
                "description": "TRUE is measures were taken to discontinuously accelerate the crystallisation process without significantly changing the temperature. i.e. an antisolvent treatment or an analogue process was used.\n- The most common case is the antisolvent treatment where a volume of a solvent in which the perovskite is not soluble is poured on the substrate during spin coating.\n- The same effect can also be achieved by blowing a gas on the sample\n- If the sample quickly after spin coating is subjected to a vacuum, this also counts as quenched induced crystallisation",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Tetraethyl orthosilicate",
                          "2-butylalcohol",
                          "Chlorobenzene; TBP",
                          "Chlorobenzene; DMSO",
                          "Butyl acetate",
                          "Air plasma",
                          "Tetrachloroethane",
                          "2-Butanol; Ethyl ether",
                          "Ethyl ether; Hexane",
                          "Ethyl acetate; IPA",
                          "Bromobenzene",
                          "Tetrafluorotoluene",
                          "Thermal radiation",
                          "p-xylene",
                          "MeOAc",
                          "Chlorobenzene; H2O",
                          "Chlorobenzene",
                          "Methyl-phenoxide",
                          "Chlorobenzene; Ethyl acetate",
                          "Chloroform; Toluene",
                          "Ethanol",
                          "Pumping solvent",
                          "Acetone",
                          "Ar",
                          "Ethyl ether",
                          "Chloroform",
                          "N2",
                          "Gas",
                          "Anisole; Toluene",
                          "o-xylene",
                          "Diethyl ether; Chlorobenzene",
                          "NIR",
                          "Chlorobenzene; 2-Butanol",
                          "He",
                          "Di-n-butyl ehter",
                          "n-Butyl alcohol",
                          "Diethyl ether",
                          "Rotating magnetic field",
                          "Dry air",
                          "Diphenyl ether",
                          "liquid N2; N2",
                          "Chlorobenzene; Ether",
                          "Chlorobenzene; N2",
                          "Chlorobenzene; Toluene",
                          "Chloroform; Hexane",
                          "Trifluorotoluene",
                          "Dichlorobenzene",
                          "2-Butanol; Chlorobenzene; Ethyl ether",
                          "acetonitrile; Chlorobenzene",
                          "Unknown",
                          "Ethyl benzene",
                          "Trimethylbenzene",
                          "Diclorobenzene; Toluene",
                          "Ethyl acetate; Petroleum ether",
                          "Petroleum ether",
                          "N2 >> Chlorobenzene",
                          "TEOS",
                          "Diethyl ether; Methanol",
                          "2-Butanol",
                          "Air",
                          "Diisopropyl ether",
                          "Vacuum",
                          "2-Butanol; Chlorobenzene",
                          "Hot air",
                          "Diethyl ether; Toluene",
                          "Ether",
                          "Hexane",
                          "Ethanol; Toluene",
                          "Ethyl acetate; Toluene",
                          "Dichloromethane",
                          "Di-n-propyl",
                          "Chlorobenzene; Diethyl ether",
                          "Anisole",
                          "Chlorobenzene; Ethanol",
                          "Anisole; Chlorobenzene",
                          "Chlorobenzene; Diiodooctane",
                          "n-BA",
                          "Flash infrared annealling",
                          "Antisolvent",
                          "Methanol",
                          "Chlorobenzene; IPA",
                          "IR",
                          "Ethyl acetate",
                          "Anisole >> N2",
                          "Triochloromethane",
                          "Methyl acetate",
                          "Chlorobenzene; Chloroform",
                          "Propyl acetate",
                          "Toluene",
                          "Isopropyl acetate; Toluene",
                          "IPA",
                          "Hot substrate",
                          "Iodobenzene",
                          "Chlorobenzene; Acetic acid"
                        ]
                      }
                    }
                  ]
                },
                "name": "quenching_media",
                "description": "The solvents used in the antisolvent treatment\n- If the antisolvent is a mixture of different solvents, e.g. A and B, list the solvents in alphabetic order and separate them with semicolonsas in (A; B)\n- If gas quenching was used, state the gas used\n- If the sample quickly after spin coating was subjected to a vacuum, state this as \u2018Vacuum\u2019\n- If an antisolvent was used but it is unknown which one, stat this as \u201cAntisolvent\u201d\n- If no antisolvent was used, leave this field blank\nExample\nChlorobenzene\nToluene\nDiethyl ether\nEthyl acetate\nN2\nVacuum\nAnisole",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1; 0.08",
                          "1; 0.2",
                          "990; 10",
                          "1; 0.02",
                          "3; 7",
                          "90; 10",
                          "9; 1",
                          "1",
                          "1; 1",
                          "10; 90",
                          "98; 2",
                          "75; 25",
                          "49; 1",
                          "4; 1",
                          "1; 0.04",
                          "1; 0.01",
                          "9; 5; 5",
                          "1; 0.5",
                          "6; 94",
                          "96; 4",
                          "30; 70",
                          "47; 3",
                          "1; 0.12",
                          "97; 3",
                          "15; 1",
                          "1; 0.10",
                          "25; 75",
                          "1; 0.3",
                          "1; 0.4",
                          "2; 3",
                          "20; 80",
                          "95; 5",
                          "99; 1",
                          "40; 60",
                          "1; 3",
                          "50; 50",
                          "1; 0.06",
                          "5; 95",
                          "70; 30",
                          "24; 1",
                          "2; 25",
                          "1; 0.7",
                          "92; 8",
                          "1; 4"
                        ]
                      }
                    }
                  ]
                },
                "name": "quenching_media_mixing_ratios",
                "description": "The mixing ratios of the antisolvent\n- The order of the solvent must line up with the previous column\n- For solvent mixtures, i.e. A and B, state the mixing ratios by using semicolons, as in (VA; VB)\n- The preferred metrics is the volume ratios. If that is not available, mass or mol ratios can be used instead, but it the analysis the mixing ratios will be assumed to be based on volumes.\n- For pure solvents, give the mixing ratio as 1\n- For non-solvent processes, give the mixing ratio as 1\nExample\n1\n4; 1",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "40.0",
                          "90.0",
                          "300.0",
                          "350.0",
                          "50.0",
                          "425.0",
                          "125.0",
                          "0.6",
                          "600.0",
                          "120.0",
                          "Unknown",
                          "450.0",
                          "180.0",
                          "45.0",
                          "100.0",
                          "900.0",
                          "130.0",
                          "400.0",
                          "140.0",
                          "240.0",
                          "30000.0",
                          "70.0",
                          "110.0",
                          "80.0",
                          "250.0",
                          "190.0",
                          "30.0",
                          "500.0",
                          "150.0",
                          "750.0",
                          "700.0",
                          "1.0",
                          "1000.0",
                          "20.0",
                          "160.0",
                          "200.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "quenching_media_volume",
                "description": "The volume of the antisolvent\n- For gas and vacuum assisted quenching, stat the volume as \u2018nan\u2019\n- If the sample is dipped or soaked in the antisolvent, state the volume of the entire solution",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "FABr",
                          "CsPbBr3-QDs",
                          "F-PDI",
                          "2,9,16,23-tetra-tert-butyl-29H,31H-phthalocyanine",
                          "Poly(TA)",
                          "K2Rrubrene",
                          "L\u2010Leucine",
                          "Undoped",
                          "Acetylene black",
                          "ITIC",
                          "CsI",
                          "MAI",
                          "PbS-QDs",
                          "MABr",
                          "6TIC-4F",
                          "Poly(9-vinylcarbazole)",
                          "Hex",
                          "PDMS",
                          "AQ310",
                          "P3HT",
                          "FAI",
                          "Cl-functionalized C-np",
                          "ITIC; PCBM-60",
                          "ThFAI; MAI, MACl",
                          "SM",
                          "Au-np",
                          "Rubrene",
                          "PEG",
                          "PCBM-60",
                          "Graphdiyne",
                          "Carbon black",
                          "MEH-PPV",
                          "FAI; MABr",
                          "PAMS",
                          "Graphydine-QDs",
                          "SWCNTs",
                          "bis-PCBM-60",
                          "La:BaSnO3-np",
                          "NPB",
                          "Spiro-MeOTAD",
                          "FAPbBr3-QDs",
                          "C60",
                          "BAI",
                          "MAPbBr3-QDs",
                          "PS",
                          "PBTI",
                          "BiFeO3-np",
                          "BHT",
                          "DF-C60",
                          "CuPc",
                          "tFM-PMAI",
                          "PTB7; ITIC",
                          "PTAA",
                          "IDIC-Th",
                          "CsPbBr3-np",
                          "PBDB-T",
                          "Carbon-nt",
                          "PCBM-60; TIPD",
                          "PABr",
                          "ADAHCl",
                          "MACl",
                          "[M4N]BF4",
                          "IEICO-4F",
                          "H2O",
                          "HI",
                          "PEAI",
                          "Au@CdS",
                          "I2",
                          "PFA",
                          "TPFPB",
                          "IDIC",
                          "Br passivated C-np",
                          "DPPS",
                          "HEA",
                          "Polyurethane",
                          "EABr",
                          "MA",
                          "F16CuPc",
                          "C60; PEG",
                          "PTB7",
                          "AQ",
                          "PMMA",
                          "MAPbI3-QDs",
                          "(PEA)2PbI4"
                        ]
                      }
                    }
                  ]
                },
                "name": "quenching_media_additives_compounds",
                "description": "List of the dopants and additives in the antisolvent\n- If several dopants/additives, e.g. A and B, are present, list the dopants/additives in alphabetic order and separate them with semicolonsas in (A; B)\n- If no dopants/additives, leave the field blank",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.1 mg/ml",
                          "9 mg/ml",
                          "0.024 mM",
                          "40 mg/ml",
                          "0.24 mg/ml; 0.24 mg/ml",
                          "25 mg/ml",
                          "20 mg/ml",
                          "0.32 mg/ml; 0.16 mg/ml",
                          "20 vol%",
                          "1 vol%",
                          "0.25 M",
                          "0.00001 M",
                          "0.5 mg/ml",
                          "0.05",
                          "0.005",
                          "0.5 vol%",
                          "8 mg/ml",
                          "0.001 M",
                          "1 mg/ml",
                          "0.25 mg/ml",
                          "4 vol%",
                          "5 mg/ml",
                          "0.36 mg/ml; 0.12 mg/ml",
                          "0.1 M",
                          "0.015",
                          "2 mg/ml",
                          "0.3 mg/ml",
                          "6 mg/ml",
                          "0.03",
                          "0.000001 M",
                          "15 mg/ml",
                          "12 mg/ml",
                          "30 mg/ml",
                          "2 vol%",
                          "10 mg/ml",
                          "10 wt%",
                          "3 mg/ml",
                          "0.0001 M",
                          "5 wt%",
                          "0.7 mg/ml",
                          "4 mg/ml",
                          "0.5 M"
                        ]
                      }
                    }
                  ]
                },
                "name": "quenching_media_additives_concentrations",
                "description": "The concentration of the dopants/additives in the antisolvent\n- If more than one dopant/additive in the layer, e.g. A and B, separate the concentration for each dopant/additive with semicolons, as in (A; B)\n- For each dopant/additive, state the concentration.\n- The order of the dopants/additives must be the same as in the previous filed.\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used.\n- The preferred way to state the concentration of a dopant/additive is to refer to the amount in the final product, i.e. the material in the layer. When possible, use on the preferred units\no wt%, mol%, vol%, ppt, ppm, ppb\n- When the concentration of the dopant/additive in the final product is unknown, but where the concentration of the dopant/additive in the solution is known, state that concentration instead. When possible, use on the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "70.0 >> 70.0; 90",
                          "70; 100 >> 150",
                          "320; 200",
                          "105.0 >> 105.0 >> Unknown",
                          "90.0",
                          "170.0 >> 100.0",
                          "65 | 130",
                          "45; 105",
                          "Unknown >> 105",
                          "325.0",
                          "Unknown >> 25.0",
                          "85",
                          "50.0",
                          "Unknown >> 280.0",
                          "70.0 >> 165.0",
                          "100.0 >> Unknown",
                          "220.0",
                          "70.0 >> 100.0",
                          "70.0 >> 85.0",
                          "45; 100 >> 100",
                          "100; 125",
                          "150.0 >> 150",
                          "Unknown >> 100",
                          "180.0",
                          "65.0; 150",
                          "60.0; 80.0",
                          "45.0",
                          "320; 250",
                          "100 >> 165.0",
                          "240; 105",
                          "120.0 | Unknown",
                          "25 >> 130",
                          "70 | Unknown",
                          "90; 25 >> 25 >> 150",
                          "150.0 >> 100",
                          "85.0 >> 105.0",
                          "40 >> 180",
                          "Unknown | 100.0",
                          "Unknown >> 90.0",
                          "85; 100",
                          "30; 160",
                          "65; 100 >> Unknown",
                          "95",
                          "Unknown >> 115",
                          "150; 100",
                          "70.0 >> 110.0",
                          "70.0 | 140.0",
                          "Unknown >> Unknown >> 100",
                          "135",
                          "105.0 >> 105",
                          "40.0; 100 >> 90.0",
                          "65.0; 135.0",
                          "200; 105",
                          "70.0 >> 70.0; 70.0",
                          "100.0 >> 135.0",
                          "50 >> 260",
                          "45; 65; 100",
                          "75 >> 75; 70",
                          "25.0; 280.0",
                          "100.0 >> 185.0",
                          "400.0 >> 400.0",
                          "70 | 130",
                          "100; 120",
                          "80 >> 110",
                          "70.0 >> 70",
                          "115; 100",
                          "80.0 >> 135.0",
                          "Unknown >> 350",
                          "100.0 >> 75.0; 100",
                          "Unknown >> 130",
                          "90.0 >> 250.0 >> 250.0 >> 250.0",
                          "Unknown >> 50; 100",
                          "95.0",
                          "25; 300",
                          "90.0 >> Unknown",
                          "70.0 >> 80.0",
                          "40; 100 >> 40; 100",
                          "140.0 >> Unknown",
                          "40; 100 >> 100",
                          "40.0 >> 150.0",
                          "70.0",
                          "100 >> 150",
                          "140.0 >> 145.0",
                          "60.0; 80.0; 100.0",
                          "42.0; 160.0",
                          "160; 100",
                          "70; 90 >> 250",
                          "500.0",
                          "70 >> 100.0",
                          "90 >> 250",
                          "60.0 >> 90.0",
                          "90.0 >> 90.0",
                          "0 >> 100",
                          "Unknown >> 60",
                          "70 >> Unknown",
                          "145 >> 100",
                          "100.0 >> 100.0 >> 100.0",
                          "130.0 >> Unknown >> 100.0",
                          "70.0; 100 >> 100.0",
                          "60; 85",
                          "150.0 >> 100.0",
                          "120; 100",
                          "80 >> 100",
                          "260.0",
                          "75; 105",
                          "80.0 >> 110.0",
                          "85.0 >> 90.0",
                          "175.0",
                          "100.0 >> 100",
                          "Unknown >> 275.0",
                          "160.0 >> 160.0",
                          "Unknown >> 150.0",
                          "40 >> 180 >> 130",
                          "20.0; 70.0; 100.0; 120.0",
                          "90 >> 250 | 85",
                          "Unknown >> 320.0",
                          "20; 70",
                          "45 >> 160",
                          "90; 25 >> 25 >> 90",
                          "65; 135",
                          "240.0",
                          "Unknown >> 70",
                          "38.0; 160.0",
                          "110.0 >> 250.0",
                          "70 >> 25 >> Unknown",
                          "70.0; 100 >> 90",
                          "25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> Unknown",
                          "60.0 >> 60.0 >> Unknown",
                          "90",
                          "Unknown >> Unknown",
                          "130 >> 70",
                          "120.0 >> 100.0",
                          "Unknown >> 325.0",
                          "330.0",
                          "Unknown >> Unknown >> 120",
                          "40; 60; 70; 100",
                          "75.0 >> 250.0",
                          "70.0; 90.0 >> 90.0",
                          "70 >> 100",
                          "Unknown >> 85",
                          "120 >> 80",
                          "100; 100",
                          "90 >> 95",
                          "25.0 >> 100.0",
                          "55; 240",
                          "85.0",
                          "40 | 100 | 100",
                          "40.0; 95.0",
                          "25; 50; 75; 100",
                          "260.0 >> Unknown >> Unknown",
                          "70.0 >> 90.0",
                          "90.0 >> 250.0",
                          "100 >> 70; 100",
                          "90.0; 125.0",
                          "20; 100",
                          "100.0 >> 55.0",
                          "70; 250",
                          "Unknown >> 40; 100; 130",
                          "120.0 >> 80.0",
                          "Unknown >> 70.0; 150",
                          "60 >> 250",
                          "280",
                          "25.0 >> 170.0 >> 170.0 >> 170.0",
                          "80; 120; 180",
                          "60.0 >> 100.0",
                          "27.0 >> 100.0",
                          "52; 105",
                          "150.0; 100.0",
                          "70.0 | 120.0",
                          "80.0 >> 140.0",
                          "100 >> 70",
                          "65; 105",
                          "90.0 >> 60.0",
                          "Unknown >> Unknown >> 70.0",
                          "25; 90",
                          "25; 95",
                          "180 >> 280",
                          "70 >> 120",
                          "110.0 | 25.0 | 25.0 | 110.0",
                          "Unknown >> 120.0",
                          "Unknown | 150",
                          "60; 80; 100 >> Unknown",
                          "Unknown >> 104.0",
                          "70; 300",
                          "160; 230",
                          "45.0; 160.0",
                          "80.0; 120.0",
                          "20.0",
                          "25; 100",
                          "165.0",
                          "50",
                          "20.0 >> 100.0",
                          "50; 100 >> 100",
                          "125.0 >> 100.0",
                          "70.0 >> 130.0",
                          "110; 70",
                          "60; 140",
                          "100 >> 65",
                          "110.0 >> 70.0",
                          "92.0",
                          "70 >> 60; 100",
                          "25; 60",
                          "150 >> 150 >> 150 >> 150",
                          "105.0 >> 105.0",
                          "80 >> 80",
                          "0.0; 60.0; 70.0; 80.0; 90.0",
                          "60; 80",
                          "180",
                          "70; 110; 150",
                          "100.0 >> 250.0",
                          "40; 90 >> 95",
                          "100; 330",
                          "100.0; 100",
                          "130; 150",
                          "70.0 >> 75.0",
                          "50.0 >> Unknown",
                          "72.0 >> 140.0",
                          "70.0; 100.0 >> 100.0",
                          "25 >> 90.0",
                          "100; 110; 120",
                          "300.0 >> Unknown",
                          "90; 250 >> 250",
                          "20; 90",
                          "65",
                          "250.0",
                          "20; 70; 100; 120",
                          "60 >> 100",
                          "70.0 >> 145.0",
                          "100.0 >> 100.0 >> 175.0",
                          "65.0",
                          "50; 150; 270",
                          "71.0 >> 70.0",
                          "200; 150",
                          "150.0",
                          "35; 120 >> 120",
                          "60.0; 70.0; 80.0; 90.0",
                          "90 >> 25 >> 90",
                          "85.0 >> 85.0",
                          "28.0 >> 100.0",
                          "60; 60; 90",
                          "110.0 >> 150.0",
                          "240 >> 120",
                          "70; 95 >> 100 >> 100",
                          "60; 100 >> 150",
                          "90.0 >> 150.0",
                          "Unknown >> 70.0",
                          "25 >> 70 | Unknown",
                          "60; 70; 80; 90; 100; 100",
                          "105",
                          "180.0 >> 180.0",
                          "110 >> 70; 100",
                          "60.0; 100",
                          "150.0 >> 150.0",
                          "67.0; 100.0",
                          "25; 50; 60",
                          "Unknown >> 80.0",
                          "Unknown >> 210.0",
                          "150; 100 >> 100",
                          "65.0 >> 100 >> Unknown",
                          "110 >> 150",
                          "50.0 >> 50.0 >> Unknown",
                          "120 >> 100",
                          "Unknown >> Unknown >> Unknown >> 120.0",
                          "90.0; 120.0",
                          "70.0 >> 125.0",
                          "60.0; 85",
                          "Unknown >> 170",
                          "60.0 >> 60.0",
                          "25; 90; 120",
                          "70.0 >> 100.0 >> 100.0",
                          "Unknown >> 160",
                          "40; 100 >> 150",
                          "100.0 >> 100.0 >> 1000 >> Unknown",
                          "60; 70; 80; 90; 100",
                          "Unknown >> 60; 80; 100",
                          "100.0 >> 100.0",
                          "26.0 >> 100.0",
                          "70; 100 >> 70; 100",
                          "Unknown >> Unknown >> 105.0",
                          "100 >> 120; 100",
                          "50.0; 100.0",
                          "70; 100 >> 145",
                          "125.0; 100.0",
                          "Unknown >> 50.0",
                          "Unknown >> 140.0",
                          "110.0 >> 105.0",
                          "20; 80",
                          "175",
                          "90.0 >> 250.0 >> 250.0",
                          "160; 105",
                          "35.0",
                          "75 >> 150",
                          "140; 180",
                          "120 >> 150",
                          "90 >> 85",
                          "135.0",
                          "80.0 >> 110.0 >> 110",
                          "250",
                          "70 | 145",
                          "40; 160",
                          "Unknown >> Unknown >> Unknown >> 130.0",
                          "90 >> 250.0",
                          "75.0 >> 100.0",
                          "100.0 >> 100.0 >> Unknown",
                          "33.0",
                          "100 >> Unknown >> Unknown >> 100",
                          "320",
                          "140; 100",
                          "75 >> 250",
                          "25.0 >> Unknown",
                          "Unknown >> 70.0 >> 70.0",
                          "70.0; 110",
                          "60.0; 120",
                          "66.0; 100.0",
                          "100.0 >> 25.0 >> 100.0",
                          "51.0 >> 70.0",
                          "30; 40; 50; 60; 70; 80; 90; 100",
                          "70 >> 108",
                          "60; 100",
                          "Unknown >> Unknown >> 60.0 >> 60",
                          "100 >> 80; 100",
                          "75.0 >> 135.0",
                          "70.0 >> 120.0",
                          "40",
                          "70 >> 90 >> 90",
                          "70 >> 100 >> 100",
                          "100 >> Unknown",
                          "40; 60; 80; 100",
                          "60; 150",
                          "100 | 100",
                          "70.0 >> 70.0 >> 80.0",
                          "80 >> 40; 140",
                          "90.0 >> 100.0",
                          "50; 160",
                          "70.0 | 135.0",
                          "110; 25 >> 110",
                          "80.0 >> 170.0",
                          "100.0 >> Unknown >> Unknown >> Unknown",
                          "80.0 >> 80.0 >> 80.0 >> Unknown",
                          "90.0 >> 80.0",
                          "Unknown >> Unknown >> Unknown >> 350.0",
                          "70.0 >> 200.0",
                          "285.0",
                          "70 >> 70",
                          "120.0 >> 85.0",
                          "25.0",
                          "80.0 >> 120.0",
                          "130.0 >> 130.0",
                          "Unknown >> 175",
                          "115",
                          "60; 70 >> 70; 115",
                          "35; 120",
                          "70 >> 85",
                          "80.0 >> 250.0",
                          "70 >> 150",
                          "Unknown >> 35.0",
                          "40.0",
                          "25 >> 115",
                          "60.0; 100 >> 100; 140",
                          "300",
                          "70; 130",
                          "80.0 >> 90.0",
                          "70 >> 145",
                          "Unknown >> Unknown >> 150.0",
                          "Unknown >> 150",
                          "70.0 >> 50.0",
                          "70; 100; 120",
                          "100; 120; 140",
                          "100 | 65",
                          "75.0",
                          "110",
                          "Unknown >> 60.0",
                          "60.0; 100 >> Unknown >> 100.0",
                          "70.0 >> 105.0",
                          "25.0 >> 250.0",
                          "50; 100 | 50; 100",
                          "35; 280",
                          "40 | 105",
                          "190 >> 330.0",
                          "Unknown >> 100.0 >> 70.0",
                          "120; 130",
                          "70; 130 >> 145",
                          "25; 70 >> 85",
                          "25 >> 100 >> 70",
                          "160.0 >> 100.0",
                          "150.0 >> 110.0",
                          "130; 160",
                          "60; 25; 100",
                          "80; 150",
                          "190.0",
                          "25; 60; 65",
                          "70.0 | Unknown | 130.0",
                          "90.0; 100.0",
                          "90 | 150",
                          "100 >> 100",
                          "330",
                          "40; 55; 75; 100",
                          "Unknown >> 110.0; 120",
                          "70 >> 140",
                          "Unknown >> 90",
                          "Unknown >> Unknown >> 130.0",
                          "70 >> 75",
                          "150.0 >> 90.0",
                          "170; 100",
                          "65.0 >> 70.0",
                          "93.0",
                          "60; 80; 100",
                          "155.0",
                          "100.0 >> 130.0",
                          "25.0 >> 25.0",
                          "70.0 | 70.0",
                          "25; 130",
                          "25 >> 150",
                          "145.0",
                          "45; 160",
                          "65.0 >> 125.0",
                          "Unknown >> 130.0",
                          "120; 40",
                          "90.0 >> 85.0; 160",
                          "180.0 >> 150.0",
                          "Unknown >> 90.0 >> 90.0",
                          "110.0; 100.0",
                          "70 >> 70.0",
                          "25",
                          "70.0 >> 160.0",
                          "120.0 >> 150.0",
                          "100.0 >> 150.0",
                          "140.0 >> 140.0",
                          "35; 120; 165",
                          "280.0",
                          "Unknown >> 60; 70; 80; 90; 100",
                          "60.0",
                          "125.0",
                          "100 >> 90",
                          "80.0 >> 60.0",
                          "120.0 >> Unknown",
                          "70.0 >> Unknown",
                          "Unknown >> 180; 150",
                          "130",
                          "70.0 >> 95.0",
                          "Unknown >> 250",
                          "Unknown >> Unknown >> 350.0",
                          "100.0 >> 75.0 >> Unknown",
                          "60.0; 100 >> 100.0",
                          "Unknown >> 150.0; 100",
                          "400.0",
                          "70 | 150",
                          "75 >> 75",
                          "Unknown >> 180.0",
                          "80; 25 >> 80",
                          "Unknown >> 100.0",
                          "Unknown | 100",
                          "50.0; 100 >> 150.0",
                          "90.0 >> 110.0",
                          "40.0 >> 250.0",
                          "65; 125",
                          "50; 85",
                          "Unknown >> 75.0",
                          "50; 120",
                          "115.0",
                          "70.0 >> 140.0",
                          "Unknown >> Unknown >> 160",
                          "50.0; 150.0",
                          "25; 70; 100; 120",
                          "Unknown >> 140",
                          "90 >> Unknown",
                          "100.0 >> 70.0 >> 130.0",
                          "90 >> 90",
                          "60.0; 85.0",
                          "265.0 >> 100.0",
                          "80.0 | 150.0",
                          "100; 180",
                          "42; 160",
                          "75; 90",
                          "Unknown >> 100.0; 140.0",
                          "140",
                          "100.0 >> 70",
                          "70.0 >> 170.0",
                          "70; 275",
                          "80 >> 280",
                          "285",
                          "55; 250",
                          "65 >> 100",
                          "110; 115",
                          "130.0 >> 120.0",
                          "150.0 >> 170.0 >> 170.0 >> 170.0",
                          "80.0 >> 350.0",
                          "Unknown >> 150; 120",
                          "Unknown >> 170.0 >> 170.0 >> 170.0",
                          "550",
                          "40 >> 180 >> 150",
                          "120; 200",
                          "40; 55; 70; 100",
                          "Unknown >> 150 >> 100",
                          "25.0; 90.0",
                          "Unknown >> 160.0 >> 160.0",
                          "Unknown >> 135.0",
                          "100 >> 280",
                          "60 >> 200",
                          "70 >> 70 >> Unknown",
                          "Unknown >> 20.0",
                          "100.0 >> 165.0",
                          "100",
                          "75 >> 180",
                          "100.0",
                          "105.0",
                          "40; 70 >> 40; 100",
                          "65; 185",
                          "70 >> 100; 120",
                          "200; 130",
                          "75 >> 200",
                          "300.0 >> 150.0",
                          "50 >> 200; 150",
                          "80.0 >> Unknown",
                          "70; 25 >> 25 >> 70",
                          "60.0; 80",
                          "60.0 >> 110.0",
                          "90 >> 160",
                          "70; 120",
                          "80 >> 250",
                          "25; 280",
                          "Unknown >> Unknown >> 135",
                          "75; 125",
                          "50; 100 >> 50; 100",
                          "Unknown >> Unknown >> 100.0",
                          "70 >> 150 >> 100",
                          "70.0 >> 100.0 >> 100",
                          "300.0 >> 150",
                          "80 | 80",
                          "150 >> 25",
                          "60.0 >> 150.0",
                          "90.0 >> 70.0",
                          "70; 100 | 100",
                          "300 >> Unknown",
                          "120.0 >> 90.0",
                          "90.0 >> 250.0 >> Unknown",
                          "100.0 >> 120.0",
                          "200.0",
                          "70.0; 100 >> Unknown",
                          "300 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> 25 >> Unknown",
                          "70.0; 90.0; 100.0",
                          "Unknown >> 50.0; 80",
                          "95; 120",
                          "350.0",
                          "40; 120",
                          "72.0 >> Unknown >> 140.0",
                          "90.0; 120",
                          "60; 125",
                          "Unknown",
                          "70 >> 70; 100; 120",
                          "90.0 >> 90.0 >> 90.0",
                          "60; 90",
                          "90; 100",
                          "150 >> 280",
                          "50; 150",
                          "50; 130",
                          "40.0; 100.0 >> 40.0; 100.0",
                          "50; 100",
                          "110.0; 130.0",
                          "75 >> 130",
                          "70.0 >> 115.0",
                          "100; 140",
                          "75.0 >> 70.0",
                          "100.0 >> Unknown >> Unknown >> Unknown >> Unknown",
                          "100; 85",
                          "130; 170",
                          "105.0 >> 110.0",
                          "25 >> 25",
                          "25 >> 135",
                          "60 >> 100.0",
                          "340.0",
                          "Unknown >> 170.0",
                          "70.0 >> 25.0",
                          "120.0 >> 120",
                          "101.0 >> 100.0",
                          "70; 175",
                          "Unknown >> 125.0",
                          "Unknown >> 160.0",
                          "110.0 >> 100.0",
                          "85.0 >> 150.0",
                          "80 >> 90",
                          "160.0",
                          "40 >> 100",
                          "70 | 100",
                          "25; 80; 85; 90",
                          "60.0 >> 105.0",
                          "110.0 >> 75.0",
                          "100; 130",
                          "50; 140",
                          "90; 150",
                          "270.0",
                          "50; 75; 100",
                          "70; 100",
                          "25 >> 25 >> 100",
                          "170.0",
                          "Unknown >> 110.0",
                          "75; 100",
                          "120.0 >> 90.0 >> 80.0",
                          "100.0 >> 70.0",
                          "150 >> 150 >> 150",
                          "150.0 >> 70",
                          "80 >> 150",
                          "25; 85",
                          "170",
                          "200",
                          "70 >> 130",
                          "320; 300",
                          "25; 60; 100",
                          "Unknown >> 115.0; 100",
                          "70; 70 >> 145",
                          "100; 300 >> 100",
                          "55.0",
                          "65.0; 100.0",
                          "Unknown | 115.0",
                          "90 | Unknown",
                          "77",
                          "60; 105",
                          "105.0 >> Unknown",
                          "130; 130",
                          "50; 250",
                          "100.0 >> 140.0",
                          "25; 75 >> 135",
                          "340",
                          "50; 60; 70; 100",
                          "22.5; 70; 180",
                          "100.0; 120.0",
                          "70.0 >> 70.0",
                          "100 >> 250",
                          "180; 105",
                          "95.0 >> 60.0",
                          "40; 110 >> 110",
                          "60.0 >> 60.0 >> 60.0 >> Unknown",
                          "110.0 >> 145.0",
                          "65.0; 100",
                          "145",
                          "80.0 >> 150.0",
                          "Unknown >> 280",
                          "100; 500 >> 110",
                          "70 >> Unknown >> 150",
                          "25; 150",
                          "80.0 >> 100.0",
                          "25; 100.0",
                          "25; 120",
                          "44.0",
                          "110.0 >> 120.0",
                          "Unknown >> 100.0; 150",
                          "90.0 >> 70.0; 100.0",
                          "100.0 >> 280.0",
                          "80; 100",
                          "90; 120",
                          "Unknown >> 65; 100",
                          "50; 100; 160",
                          "35; 85",
                          "Unknown >> 170.0 >> Unknown",
                          "550.0",
                          "100 >> 25; 25",
                          "70; 150 >> 100",
                          "300.0",
                          "120.0 >> 135.0",
                          "Unknown >> 40.0; 100",
                          "185.0",
                          "3; 5 >> 5",
                          "90; 120 >> 100",
                          "120.0",
                          "0.0; 90.0",
                          "110.0 >> 110.0",
                          "450.0",
                          "90.0 >> 120.0",
                          "40.0; 100 >> 90.0 >> Unknown",
                          "25 >> 25 >> 70",
                          "150 >> 150",
                          "70; 150 >> 400",
                          "70 >> 90",
                          "Unknown >> 90.0; 120.0; 150.0",
                          "130.0",
                          "70.0 >> 150.0",
                          "Unknown >> 95.0",
                          "40.0 >> 100.0",
                          "100.0; 100.0",
                          "60.0; 100.0",
                          "50.0 >> 50.0 >> 50.0 >> Unknown",
                          "25.0 >> 110.0",
                          "75",
                          "110.0",
                          "70.0; 100.0",
                          "310.0",
                          "25.0; 100.0",
                          "100.0; 150.0",
                          "220",
                          "25 >> 70",
                          "70.0 >> 95.0 >> 95.0",
                          "25.0 >> 150.0",
                          "Unknown >> 200.0",
                          "100; 25 >> 25 >> 25",
                          "345.0",
                          "50.0; 85.0",
                          "Unknown >> 105.0",
                          "60.0; 100 >> 60; 100",
                          "110; 130; 150",
                          "Unknown >> 250.0",
                          "100.0; 280.0",
                          "170; 330",
                          "100.0 >> 150",
                          "225.0",
                          "60.0; 100 >> Unknown",
                          "70; 90 >> 70.0",
                          "160",
                          "80.0; 100.0",
                          "Unknown >> 120.0 >> 145.0",
                          "60.0 >> 70.0",
                          "25 >> 85",
                          "170; 150",
                          "100.0 | 100.0",
                          "70 >> 125",
                          "40.0; 160.0",
                          "40.0 >> 40.0",
                          "56; 240",
                          "100 >> 110; 100",
                          "100 | 100 >> 100",
                          "70 >> 75; 70",
                          "40 >> 100 >> 100",
                          "100.0 >> 155.0 >> 150.0",
                          "70; 100 >> 100",
                          "310.0 >> 150.0",
                          "100 >> 100; 100",
                          "Unknown >> 265.0",
                          "100 >> 110",
                          "10.0",
                          "70",
                          "140.0 >> 160.0",
                          "110.0 | 150.0",
                          "220; 105",
                          "70 >> 70.0 >> 70",
                          "42.0",
                          "150; 25 >> 100",
                          "70.0 >> 70.0 >> 70.0",
                          "150 >> 100",
                          "70 | 70",
                          "200.0 >> 80.0 >> 80.0",
                          "Unknown >> 120",
                          "250 | 100",
                          "60; 120",
                          "210.0",
                          "Unknown >> 100.0 >> Unknown",
                          "85.0 >> 100.0",
                          "75 >> 135",
                          "130.0 >> Unknown",
                          "43 >> 160",
                          "60; 110",
                          "90.0 >> 115.0",
                          "80.0 >> 80.0",
                          "70; 100 >> 135",
                          "120.0; 150.0",
                          "Unknown >> 85.0",
                          "50.0 >> 70.0",
                          "70.0 >> 100.0; 150.0",
                          "95.0 >> 100.0",
                          "350",
                          "75.0 >> 75.0",
                          "100.0 >> Unknown >> Unknown",
                          "32.0",
                          "100.0 >> 50.0; 250",
                          "40.0 >> Unknown",
                          "100.0 >> 155.0",
                          "60; 250",
                          "100; 160",
                          "90; 125",
                          "60.0 >> 60.0 >> 60.0 >> 60.0",
                          "25.0 >> 70.0",
                          "Unknown >> 85.0 >> 85.0",
                          "70.0 >> 135.0",
                          "110; 25",
                          "130; 100",
                          "Unknown >> 110",
                          "70.0 >> 70.0 >> Unknown",
                          "100.0 >> 140",
                          "Unknown >> 150.12",
                          "Unknown >> 380.0",
                          "25; 90; 100; 130",
                          "Unknown >> 350.0",
                          "45; 55; 75; 100",
                          "60; 130",
                          "60; 80; 140",
                          "25 >> 120",
                          "100.0 >> 25.0 >> 25.0",
                          "5; 95.0",
                          "80; 150; 350",
                          "80; 140; 160",
                          "265.0 >> 200.0",
                          "200; 170",
                          "150",
                          "45.0 >> 100.0; 150",
                          "90 >> 100",
                          "Unknown | 125",
                          "160.0; 100",
                          "260.0 >> Unknown",
                          "250.0 >> 80.0",
                          "80.0 >> 50.0; 120",
                          "65; 100",
                          "85.0 >> 250.0",
                          "150.0 >> Unknown",
                          "50; 100; 120 >> 25",
                          "30.0",
                          "55",
                          "Unknown >> 80",
                          "80; 90; 100; 110",
                          "60.0 >> 140.0",
                          "Unknown >> 175.0",
                          "100 >> Unknown >> Unknown",
                          "100; 150",
                          "70; 150",
                          "50; 60; 70; 80; 90; 100",
                          "25; 70",
                          "70.0 | 150.0",
                          "40; 100",
                          "25 >> 140",
                          "100.0 >> 110",
                          "70.0 >> 110.0 >> 40.0",
                          "25 >> 100",
                          "100 >> 75",
                          "335.0",
                          "95.0 >> Unknown",
                          "Unknown >> 145.0",
                          "70.0 >> 175.0",
                          "125.0 >> 160.0",
                          "80; 120",
                          "Unknown >> 115.0",
                          "Unknown >> 300.0",
                          "65.0 >> 100",
                          "25; 280 >> Unknown",
                          "120.0 >> 250.0",
                          "150 | 100",
                          "70.0; Unknown",
                          "90; 25 >> 25 >> 120",
                          "55.0; 60.0; 100.0",
                          "100 >> 100 >> 100",
                          "158.0",
                          "60 >> 150",
                          "50.0; 100 >> 100.0",
                          "80",
                          "75.0; 150.0",
                          "50 >> 280",
                          "120",
                          "1000.0 >> Unknown",
                          "100.0; 150",
                          "60; 100 >> 100",
                          "140.0",
                          "65; 75; 85; 95",
                          "25; 100; 25 >> 100",
                          "80.0",
                          "60",
                          "320.0",
                          "70 >> 150 >> 70",
                          "150.0 >> 120.0",
                          "120.0 >> 120.0",
                          "80.0 >> 70.0",
                          "Unknown >> 100.0 >> 100.0",
                          "60 >> 60 >> 60.0",
                          "70.0 >> 70.0 >> 70.0 >> Unknown",
                          "125.0 >> 125.0",
                          "100 >> 25",
                          "100.0 >> 100.0 >> 100",
                          "130; 140",
                          "130; 120",
                          "Unknown >> 60.0; 100",
                          "70.0 >> 250.0",
                          "100.0; 140.0",
                          "310",
                          "45; 120",
                          "60.0 >> Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "thermal_annealing_temperature",
                "description": "The temperatures of the thermal annealing program associated with each deposition step\n- When more than one reaction step, separate the annealing temperatures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- If no thermal annealing is occurring after the deposition of a layer, state that by stating the room temperature (assumed to 25\u00b0C if not further specified)\n- If the thermal annealing program is not known, state that by \u2018nan\u2019\nExample\n100\n70; 100 >> 100\n25 >> 90; 150",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "90.0",
                          "Unknown >> Unknown >> 60.0",
                          "45.0 >> 5.0",
                          "5.0; 20.0",
                          "Unknown >> 25.0",
                          "50.0",
                          "3.0 >> 3.0; 35.0",
                          "5.0 >> 5.0 >> 10.0",
                          "600.0 >> 30.0",
                          "1.0; 1.0; 10.0",
                          "180.0",
                          "45.0",
                          "10.0 >> 70.0",
                          "0.083",
                          "0.0; 5.0",
                          "5.0; 5.0; 5.0; 5.0",
                          "0.133",
                          "3.0; 10.0 >> 3.0; 10.0",
                          "1.0; 2.0",
                          "Unknown >> Unknown >> 20.0",
                          "60.0 >> 60.0; 10.0",
                          "2880.0 >> 1.0 >> 1.0 >> 15.0",
                          "Unknown >> 90.0",
                          "30.0 >> 60.0 >> 30.0",
                          "2.0; 28.0",
                          "720.0 >> 3.0",
                          "1.0 >> 1.0",
                          "10.0; 10.0 >> 30.0",
                          "4.0; 1.0",
                          "Unknown >> 720.0",
                          "0.1666",
                          "60.0 >> 2.0 >> Unknown",
                          "3.0 >> 2.0",
                          "5.0; 10.0 >> 10.0",
                          "15.0; 50.0",
                          "20.0 >> 40.0",
                          "30.0; Unknown >> Unknown >> 30.0",
                          "5.0 >> Unknown >> Unknown",
                          "0.0",
                          "0.066",
                          "5760.0",
                          "15.0 >> 15.0 >> 15.0",
                          "60.0 >> 5.0 >> 5.0 >> 5.0",
                          "15.0; 10.0 >> Unknown",
                          "10.0 >> 10.0 >> 30.0",
                          "0.07",
                          "Unknown >> 15.0; 60.0",
                          "0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0",
                          "0.33; 60.0",
                          "120.0 >> 30.0",
                          "3.0; 20.0",
                          "8.0 >> 120.0",
                          "4.0 >> 30.0",
                          "2.0; 30.0",
                          "30.0; 5.0",
                          "60.0; 10.0 >> 10.0",
                          "1.0 >> 25.0",
                          "5.0 >> 40.0",
                          "95.0",
                          "0.05",
                          "3.0; 5.0 >> 3.0; 5.0",
                          "Unknown >> 600.0; 10.0",
                          "Unknown >> 3.0; 15.0",
                          "Unknown >> 3.0; 30.0",
                          "5.0 >> 30.0 >> 30.0",
                          "3.0 >> 5.0",
                          "70.0",
                          "10.0 >> 30.0",
                          "10.0 >> 60.0 >> Unknown",
                          "Unknown >> 10.0; 20.0",
                          "Unknown; Unknown; Unknown; 30.0",
                          "2.0; 20.0",
                          "11.0",
                          "45.0 >> 45.0",
                          "1.5; 2.0",
                          "1.3 >> 10.0 >> 8.0",
                          "15.0; 10.0; 60.0",
                          "15.0 >> 5.0",
                          "60.0 >> 90.0 >> 90.0",
                          "3.0; 10.0 >> 3.0; 30.0",
                          "0.0 >> 40.0",
                          "10.0; 5.0; 2.0; 3.0; 50.0",
                          "5.0; 10.0; 5.0",
                          "0.016 >> 5.0",
                          "1.0",
                          "10.0; 20.0; 10.0",
                          "60.0 >> 90.0",
                          "10.0; 50.0",
                          "1.0 >> 10.0",
                          "60.0; 60.0",
                          "15.0; 25.0; 5.0",
                          "600.0 >> Unknown",
                          "60.0; 35.0",
                          "45.0 >> 10.0",
                          "25.0; 60.0",
                          "2.0 >> 2.0 >> 45.0",
                          "1.5 | 20.0",
                          "10.0 >> 0.5",
                          "5.0; 15.0",
                          "10.0 >> 15.0; 30.0",
                          "30.0 >> 60.0",
                          "10.0; 2.0",
                          "Unknown >> Unknown >> 15.0 >> 15.0",
                          "15.0 >> 60.0",
                          "0.05; 30.0",
                          "10.0 >> Unknown >> Unknown",
                          "Unknown >> 15.0",
                          "15.0 >> 4.0",
                          "15.0; 15.0; 15.0; 15.0",
                          "5.0; 30.0",
                          "Unknown >> 150.0",
                          "0.5 >> 40.0",
                          "3.0 >> 120.0",
                          "Unknown >> 320.0",
                          "240.0",
                          "5.0; 5.0",
                          "10.0; 10.0; 10.0; 10.0; 10.0; 50.0",
                          "5.0 >> 10.0 >> 10.0",
                          "Unknown >> 10.0; 40.0",
                          "10.0 >> 30.0 >> 30.0",
                          "10.0; 85.0; 10.0 >> Unknown",
                          "15.0; Unknown",
                          "Unknown >> Unknown",
                          "Unknown >> 6.0 >> Unknown",
                          "160.0; 17.0",
                          "15.0; 3.0",
                          "0.5; 30.0",
                          "15.0 | Unknown",
                          "2.0; 60.0",
                          "2.0; 3.0",
                          "10.0 >> 5.0",
                          "20.0 >> 15.0 >> 1.0",
                          "5.0 | Unknown | Unknown | 60.0",
                          "Unknown >> 240.0",
                          "15.0; 30.0",
                          "Unknown >> 5.0 >> 100.0",
                          "5.0; 5.0; 30.0",
                          "Unknown >> 30.0 >> 30.0",
                          "1.0 >> 1.0 >> 1.0 >> 2.0",
                          "3.0; 30.0",
                          "60.0 >> 120.0",
                          "1.0; 15.0",
                          "1.0; 10.0 >> Unknown",
                          "15.0 >> Unknown",
                          "30.0 >> 60.0 >> Unknown",
                          "10.0 >> 2.0",
                          "Unknown >> 6.0",
                          "9.0",
                          "1.0; 4.0",
                          "50.0 >> 5.0",
                          "30.0 >> 2.0",
                          "1.0; 80.0",
                          "Unknown >> 2.0 >> 2.0",
                          "10.0; 1.0",
                          "0.5; 30.0 >> 0.5",
                          "30.0 >> 30.0; 0.0",
                          "8.0",
                          "10.0; 10.0 >> 90.0",
                          "2.0; 25.0",
                          "40.0; 10.0; 10.0; 20.0",
                          "5.0 >> 150.0",
                          "60.0 >> 16.0 >> Unknown >> 60.0",
                          "13.0",
                          "0.0 >> 30.0",
                          "0.33 >> 20.0",
                          "1.0; 1.0",
                          "30.0 >> 480.0",
                          "3.0 | 5.0 | 5.0",
                          "Unknown >> 120.0",
                          "Unknown >> 30.0",
                          "20.0 >> 45.0",
                          "30.0 >> 65.0",
                          "10.0 >> 10.0 >> 60.0",
                          "Unknown >> 45.0",
                          "20.0",
                          "30.0; 2.0",
                          "15.0; 5.0",
                          "10.0; 10.0 >> 180.0",
                          "60.0 >> 1.0 >> 1.0 >> 15.0",
                          "20.0 >> 120.0",
                          "2.0 >> 540.0",
                          "15.0; 90.0; 15.0",
                          "90.0; 10.0",
                          "15.0 >> 2.0",
                          "30.0; 30.0; 10.0",
                          "40.0 >> 10.0",
                          "0.5 >> 5.0",
                          "25.0 | 30.0",
                          "5.0; 120.0; 100.0; 130.0",
                          "2.0 >> 15.0",
                          "25.0 >> 30.0",
                          "30.0 >> Unknown",
                          "5.0; 2.0",
                          "30.0 >> 5.0",
                          "5.0; 10.0",
                          "20.0 >> 10.0",
                          "4.0; 20.0",
                          "45.0; 50.0",
                          "0.0; 20.0",
                          "3.0; 5.0; 10.0",
                          "60.0 >> 30.0 >> 5.0",
                          "Unknown; 2.0",
                          "50.0 >> Unknown",
                          "10.0 >> 90.0",
                          "10.0 | 20.0",
                          "14.0",
                          "0.5 >> 30.0",
                          "0.0 >> 30.0 >> 10.0",
                          "10.0 >> 10.0 >> 90.0",
                          "10.0; 10.0 >> 150.0",
                          "50.0 >> 50.0",
                          "90.0 >> 10.0",
                          "30.0 >> 11.5",
                          "20.0; 10.0",
                          "0.5; 0.5",
                          "360.0 >> 30.0",
                          "5.0 >> 25.0",
                          "Unknown >> 10.0",
                          "3.0; 5.0 >> 10.0",
                          "10.0 | 10.0",
                          "45.0 | 5.0",
                          "30.0; 30.0",
                          "65.0",
                          "20.0 >> 30.0",
                          "Unknown; 5.0",
                          "20.0 >> Unknown",
                          "150.0",
                          "10.0; 15.0",
                          "1.0; 60.0",
                          "0.0 >> 60.0",
                          "7.0 >> 30.0",
                          "Unknown >> 420.0",
                          "3.0; 12.0",
                          "45.0 >> 60.0",
                          "Unknown >> 70.0",
                          "Unknown >> 5.0",
                          "Unknown >> 5.0; 60.0",
                          "60.0; 150.0; 15.0",
                          "4.0; 30.0",
                          "30.0; 180.0",
                          "Unknown >> 80.0",
                          "150.0; 20.0",
                          "0.3; 50.0",
                          "2.0; 5.0",
                          "3.0 >> 40.0",
                          "0.08; 15.0",
                          "30.0 | 30.0",
                          "Unknown >> Unknown >> Unknown >> 120.0",
                          "10.0; 10.0; 10.0; 30.0",
                          "5.0 >> 65.0",
                          "10.0; 600.0; 90.0",
                          "60.0 >> 60.0",
                          "Unknown >> 40.0",
                          "10.0; 5.0",
                          "0.0 | 15.0",
                          "150.0; 15.0 >> 30.0",
                          "1.5; 25.0",
                          "0.16; 14.0",
                          "10.0; 10.0 >> Unknown >> 10.0",
                          "5.0; 10.0 >> 5.0; 10.0",
                          "0.3",
                          "10.0; 10.0 >> 60.0",
                          "Unknown >> 50.0",
                          "0.12",
                          "10.0 >> 60.0",
                          "Unknown >> 140.0",
                          "5.0; 5.0 >> 5.0; 5.0",
                          "35.0",
                          "20.0; 20.0",
                          "15.0; 60.0",
                          "Unknown >> Unknown >> 30.0",
                          "120.0 >> 20.0",
                          "5.0 >> 15.0 >> 15.0",
                          "4.0 >> 20.0",
                          "30.0 >> 45.0",
                          "1.0 >> 40.0",
                          "30.0 | 10.0",
                          "30.0 >> 90.0",
                          "10.0 >> 0.17",
                          "30.0; 60.0",
                          "5.0; 15.0 >> 90.0 >> 5.0",
                          "90.0; 5.0",
                          "30.0 >> 30.0 >> 30.0",
                          "0.0 >> 10.0",
                          "30.0 >> 40.0",
                          "2.0; 2.0; 2.0; 60.0",
                          "33.0",
                          "7200.0",
                          "60.0; 10.0",
                          "1.0 >> 7.0",
                          "2.5",
                          "2.0 >> 20.0",
                          "15.0 >> 12.0",
                          "Unknown >> 1.0; 20.0",
                          "Unknown >> 10.0 >> 15.0",
                          "15.0; 10.0",
                          "0.25; 5.0",
                          "10.0 >> 1.0 >> 30.0",
                          "Unknown | 30.0",
                          "2.0 | 20.0",
                          "Unknown >> Unknown >> 10.0",
                          "20.0 | 20.0",
                          "10.0 >> 150.0",
                          "Unknown >> 600.0",
                          "5.0; 5.0; 5.0; 30.0",
                          "10.0 >> 50.0",
                          "181.0 >> 30.0",
                          "0.5; 10.0",
                          "60.0 >> 15.0 >> 10.0",
                          "23.0",
                          "30.0 >> Unknown >> Unknown",
                          "15.0; Unknown >> 15.0",
                          "10.0 | 60.0",
                          "5.0; 2.0; 3.0; 50.0",
                          "0.25",
                          "2.0 >> 10.0",
                          "15.0 >> 120.0",
                          "10.0; 10.0 >> 5.0",
                          "1.0 >> 3.0",
                          "10.0 >> 1.0",
                          "5.0; Unknown >> Unknown >> 90.0",
                          "30.0 | Unknown",
                          "25.0",
                          "30.0; 150.0",
                          "1.3 >> 10.0 >> 10.0",
                          "5.0 >> 1.0",
                          "1.0 | 20.0",
                          "15.0 >> 20.0",
                          "Unknown >> 0.5",
                          "10.0 >> 5.0 >> Unknown",
                          "15.0 >> 6.0",
                          "1.0 >> 120.0",
                          "80.0 >> 250.0",
                          "0.0 >> 20.0",
                          "Unknown >> 35.0",
                          "1.0 >> 20.0",
                          "40.0",
                          "1.0 >> 70.0",
                          "20.0; 40.0",
                          "30.0 | 20.0",
                          "2.0 >> 25.0",
                          "5.0 >> 0.0",
                          "120.0 >> 60.0",
                          "144.0",
                          "Unknown >> Unknown >> 120.0",
                          "2.0; 10.0",
                          "Unknown >> Unknown; Unknown",
                          "Unknown >> Unknown >> 150.0",
                          "Unknown | 20.0",
                          "0.08; 30.0",
                          "Unknown >> Unknown >> 180.0",
                          "10.0 >> 1.7",
                          "0.33 >> 10.0",
                          "10.0 >> 8.0",
                          "10.0; 20.0; 5.0; 30.0",
                          "2.0 >> 5.0",
                          "75.0",
                          "Unknown >> 60.0",
                          "30.0 >> 50.0; 30.0",
                          "60.0 >> 30.0",
                          "250.0 >> 30.0",
                          "60.0 >> 20.0",
                          "50.0 >> 20.0",
                          "20.0 >> 120.0; 2.0",
                          "480.0",
                          "90.0; 70.0; 45.0",
                          "60.0 >> 15.0",
                          "3.0; 5.0; 10.0 >> Unknown",
                          "30.0 >> 15.0",
                          "2.0 >> 390.0",
                          "60.0; 90.0",
                          "25.0 >> 25.0",
                          "10.0; 30.0",
                          "75.0; 15.0 >> 5.0",
                          "15.0 >> 0.0",
                          "11.0 >> 30.0",
                          "30.0 >> 150.0",
                          "720.0 >> 15.0",
                          "Unknown; 0.5; 3.0",
                          "30.0; Unknown",
                          "15.0 >> 15.0",
                          "31.0 >> 30.0",
                          "10.0 >> 10.0 >> 5.0",
                          "10.0; 420.0; 90.0",
                          "50.0; 30.0",
                          "20.0 >> 20.0",
                          "60.0; 2880.0",
                          "45.0 >> 10.0; 30.0",
                          "10.0 >> Unknown",
                          "5.0 >> 60.0",
                          "5.0; 5.0 | 5.0; 5.0",
                          "60.0",
                          "5.0",
                          "0.6",
                          "45.0; 70.0",
                          "7.0",
                          "120.0 >> Unknown",
                          "70.0 >> Unknown",
                          "0.07 >> 0.07",
                          "30.0; 30.0; 30.0",
                          "3.0; 60.0",
                          "3.0; 5.0",
                          "122.0",
                          "60.0 >> 10.0 >> 10.0",
                          "5.0 >> 390.0",
                          "Unknown >> 180.0",
                          "Unknown >> 100.0",
                          "15.0 >> 600.0",
                          "20.0; 20.0; 20.0; 40.0",
                          "1.5",
                          "Unknown >> 75.0",
                          "3.0; 2.0",
                          "3.0 >> Unknown",
                          "2.0",
                          "Unknown >> 10.0; 10.0; 10.0; 10.0; 40.0",
                          "5.0 >> 10.0",
                          "10.0; 10.0; 50.0",
                          "20.0; 5.0",
                          "10.0 >> 10.0 >> 180.0",
                          "1.0; 8.0",
                          "10.0 >> Unknown >> Unknown >> Unknown",
                          "10.0 >> 80.0",
                          "5.0 >> 5.0; 80.0",
                          "10.0 >> 75.0",
                          "5.0 >> 30.0",
                          "0.66",
                          "5.0 >> 20.0",
                          "4.0",
                          "120.0; 20.0",
                          "Unknown >> 0.333333333",
                          "121.0",
                          "1.0 | Unknown",
                          "12.0 >> 60.0",
                          "5.0 >> 5.0; 10.0; 10.0",
                          "180.0 >> 30.0",
                          "60.0 >> 5.0 >> Unknown",
                          "10.0; 4.0",
                          "30.0; 90.0",
                          "100.0; 20.0",
                          "15.0 >> 30.0",
                          "6.0 >> 30.0",
                          "10.0 | 1.4",
                          "60.0; 25.0",
                          "600.0",
                          "12.0",
                          "5.0 >> 2.0",
                          "Unknown | 120.0",
                          "5.0; 5.0 | Unknown",
                          "Unknown >> 20.0",
                          "16.0 >> 30.0",
                          "100.0",
                          "Unknown >> 5.0 >> 20.0",
                          "105.0",
                          "10.0 >> 10.0 >> 10.0",
                          "2.0 >> Unknown",
                          "15.0 >> 45.0",
                          "13.0 >> 60.0",
                          "720.0",
                          "10.0 >> 10.0",
                          "Unknown >> 45.0 >> Unknown",
                          "30.0; Unknown >> 30.0",
                          "10.0; 10.0 >> 120.0",
                          "3.0; 10.0",
                          "3.0; 5.0 >> 30.0",
                          "Unknown >> Unknown >> 90.0",
                          "Unknown; Unknown",
                          "10.0 >> 15.0",
                          "20.0 >> 30.0 >> Unknown",
                          "100.0 >> 2.0",
                          "5.0 >> 10.0; 10.0",
                          "15.0; 0.17 >> 4.0",
                          "0.5",
                          "0.3; 2.0",
                          "10.0 >> Unknown >> Unknown >> Unknown >> Unknown",
                          "2.0; 5.0 >> Unknown",
                          "Unknown >> 5.0; 5.0; 5.0",
                          "0.83; 0.83",
                          "2.0 >> 60.0",
                          "3.0 >> 5.0 >> 5.0",
                          "1.0; 2.0 >> Unknown",
                          "60.0 >> 5.0",
                          "Unknown >> Unknown >> 5.0",
                          "5.0; 2.0; 5.0",
                          "5.0; 5.0 >> 5.0",
                          "10.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0 >> 0.0",
                          "90.0; 15.0",
                          "Unknown >> Unknown >> Unknown >> 1.0",
                          "200.0",
                          "5.0 >> 150.0 >> 20.0",
                          "20.0 >> 5.0",
                          "Unknown; 10.0",
                          "10.0; 20.0; 0.0",
                          "10.0 >> 20.0; 60.0",
                          "15.0; 15.0; 90.0",
                          "1.2",
                          "30.0; 60.0 >> 60.0",
                          "15.0 | 60.0",
                          "3.0; 50.0",
                          "60.0; 1440.0",
                          "3.0",
                          "1.0 >> 2.0",
                          "10.0; 90.0",
                          "5.0; Unknown >> Unknown >> 10.0",
                          "Unknown",
                          "10.0 | 30.0",
                          "10.0 >> 40.0",
                          "Unknown >> 260.0",
                          "2.0 >> 100.0",
                          "Unknown >> 0.0",
                          "0.16 >> 15.0",
                          "60.0; 720.0",
                          "5.0; 60.0",
                          "60.0; 10.0 >> 5.0; 10.0",
                          "2.0; 6.0 >> 8.0",
                          "10.0 >> 4.0",
                          "1.0 | 10.0",
                          "10.0 | 120.0",
                          "1.0; 7.0",
                          "15.0 >> 150.0",
                          "Unknown >> Unknown >> Unknown >> 20.0",
                          "7.0; 1.0 >> 10.0",
                          "45.0; 45.0",
                          "Unknown >> 10.0 >> 10.0",
                          "Unknown >> 40.0; 100.0; 130.0",
                          "5.0; Unknown >> Unknown >> 30.0",
                          "2.0 >> 0.17",
                          "60.0; 15.0",
                          "15.0; 15.0 >> 15.0",
                          "10.0; 10.0; 0.0",
                          "30.0 >> 30.0",
                          "30.0; 150.0; 15.0",
                          "15.0; 15.0",
                          "20.0; 30.0",
                          "2.0; 30.0 >> 2.0; 30.0",
                          "10.0; 45.0",
                          "1.0 >> 30.0",
                          "0.17; 12.0",
                          "4.0 >> 4.0",
                          "15.0 >> 30.0 >> 10.0",
                          "0.17; 75.0",
                          "38.0",
                          "120.0 >> 1.0 >> 1.0 >> 15.0",
                          "10.0 >> 10.0 >> Unknown",
                          "30.0 >> 10.0 >> 10.0 >> 6.0",
                          "270.0",
                          "0.33; 2.0",
                          "Unknown >> 10.0; 60.0",
                          "15.0; 90.0; 60.0",
                          "Unknown >> 4.0",
                          "5.0; 30.0; 5.0; 30.0",
                          "3.0 >> 30.0",
                          "4.0; 10.0",
                          "3.0; 5.0 >> 15.0 >> Unknown",
                          "10.0 >> 20.0",
                          "15.0; 15.0; 120.0; 15.0",
                          "10.0 >> 110.0",
                          "4.0 >> 45.0",
                          "55.0",
                          "1.0 | 15.0",
                          "10.0; 60.0; 90.0",
                          "60.0; 30.0",
                          "10.0 >> 3.0",
                          "1.3 >> 10.0",
                          "50.0 | 10.0 >> 10.0",
                          "0.33 >> 15.0",
                          "Unknown >> 360.0; 10.0",
                          "6.0",
                          "30.0; 20.0",
                          "5.0; 60.0; 10.0",
                          "30.0 >> 18.5",
                          "Unknown >> 12.0",
                          "30.0; 30.0 >> 30.0",
                          "60.0 >> 10.0",
                          "10.0 >> 10.0 >> 120.0",
                          "30.0 >> 120.0",
                          "3.0 >> 10.0",
                          "15.0 >> 90.0",
                          "30.0 >> 20.0",
                          "3.0 >> 2.0; 20.0",
                          "15.0 >> 10.0",
                          "5.0 | 12.0",
                          "5.0 | 60.0",
                          "30.0 >> 0.0 >> 120.0",
                          "2.0; 2.0",
                          "Unknown; 20.0 >> 20.0",
                          "3.0; 6.0 >> 10.0",
                          "0.33; 10.0",
                          "Unknown >> 0.8541666666666666",
                          "2.0; 15.0",
                          "1.0 >> 1.0 >> 2.0",
                          "1.0 >> 15.0",
                          "15.0",
                          "1.0 >> 60.0",
                          "10.0 >> 10.0; 15.0",
                          "45.0 >> 30.0",
                          "30.0 >> 1.0",
                          "Unknown | 10.0",
                          "0.58 >> 5.0",
                          "Unknown >> 2.0 >> 3.0",
                          "45.0 >> Unknown",
                          "300.0",
                          "40.0; 100.0 >> 100.0",
                          "Unknown >> 60.0 >> Unknown",
                          "2.0; 6.0",
                          "120.0 >> 20.0 >> 5.0",
                          "10.0; 20.0; 20.0; 20.0",
                          "20.0 >> 15.0",
                          "15.0; Unknown >> 25.0 >> Unknown",
                          "120.0",
                          "0.5; 60.0",
                          "0.4305555555555556",
                          "20.0; 20.0; 20.0",
                          "Unknown >> Unknown >> 15.0",
                          "Unknown >> 10.0; 10.0; 10.0",
                          "5.0; 10.0 >> 30.0",
                          "40.0 >> 120.0",
                          "0.5; 15.0",
                          "1.0; 3.0",
                          "12.0; 10.0",
                          "5.0; Unknown >> Unknown >> 60.0",
                          "2.0; 5.0; 10.0",
                          "2.0 | Unknown",
                          "0.17",
                          "110.0",
                          "5.0 >> 12.0",
                          "20.0 | 15.0",
                          "1.0; 5.0",
                          "120.0 >> Unknown >> Unknown",
                          "1.0; 10.0",
                          "10.0 >> 10.0 >> 240.0",
                          "Unknown; Unknown >> 30.0",
                          "10.0 >> 10.0; 20.0",
                          "2.0 >> 2.0",
                          "5.0; 0.0",
                          "Unknown >> 10.0; 120.0",
                          "1.0 >> 16.0",
                          "5.0 >> 95.0",
                          "15.0; 120.0; 15.0",
                          "10.0 >> 0.0",
                          "15.0 >> 10.0 >> 10.0",
                          "Unknown >> 200.0",
                          "5.0 >> 312.0",
                          "Unknown >> 105.0",
                          "3.0 | 10.0",
                          "3.0 >> 5.0 >> 90.0",
                          "2.0; 4.0",
                          "50.0; 5.0 >> 5.0",
                          "Unknown >> 10.0 >> 60.0",
                          "0.1",
                          "10.0; 300.0; 90.0",
                          "15.0; 15.0; 90.0; 10.0",
                          "15.0 | 15.0",
                          "3.0; 5.0; 60.0",
                          "2.0 >> 45.0",
                          "0.13",
                          "2.0 >> 30.0",
                          "Unknown >> 1.0",
                          "7.0 >> 1.0",
                          "15.0; 45.0",
                          "2.0 >> 120.0",
                          "40.0 >> 40.0",
                          "10.0 >> 10.0 >> 10.0 >> 10.0",
                          "10.0",
                          "10.0; 40.0",
                          "10.0; 10.0; 10.0; 10.0; 40.0",
                          "Unknown >> 18.0",
                          "5.0 >> 15.0",
                          "5.0 >> 780.0",
                          "30.0; 15.0",
                          "Unknown >> 2.0",
                          "6.0; 10.0",
                          "3.0; 5.0 >> 15.0",
                          "0.5; 20.0",
                          "0.5; 5.0",
                          "2.0 >> 240.0",
                          "15.0; 0.05 >> 4.0",
                          "210.0",
                          "10.0; 10.0; 10.0",
                          "Unknown >> 7.0",
                          "0.5 >> 5.0 | 5.0",
                          "15.0; 20.0",
                          "120.0 >> 10.0",
                          "30.0 >> 600.0",
                          "150.0; 15.0",
                          "Unknown >> 8.0",
                          "10.0; 5.0; Unknown >> 5.0",
                          "40.0; 120.0; 100.0; 130.0",
                          "1.0; 9.0",
                          "Unknown >> 15.0 >> Unknown",
                          "1.0; 25.0",
                          "10.0 >> 120.0",
                          "1.45; 60.0",
                          "40.0 >> Unknown",
                          "15.0; 60.0 >> 5.0",
                          "10.0; 150.0; 90.0",
                          "5.0 | 10.0",
                          "5.0; 30.0; 2.0",
                          "30.0; 3.0 >> 15.0",
                          "Unknown | 5.0",
                          "1.0; 20.0",
                          "2.0 >> 4.0",
                          "Unknown >> 30.0; 30.0",
                          "24.0",
                          "5.0 >> 5.0",
                          "0.5; 2.0",
                          "30.0 >> 30.0; 30.0",
                          "30.0; 80.0",
                          "30.0 >> 30.0; 5.0",
                          "4320.0",
                          "10.0 >> 1.0 >> 10.0",
                          "8.0; 5.0",
                          "Unknown >> 65.0",
                          "100.0; 10.0",
                          "30.0",
                          "40.0; 10.0",
                          "2.0; 58.0",
                          "2.0 >> 5.0; 60.0",
                          "Unknown >> 3.0",
                          "1.0 >> 5.0",
                          "16.0 >> 10.0",
                          "Unknown >> 10.0; 100.0",
                          "1.6",
                          "15.0 >> Unknown >> Unknown",
                          "360.0",
                          "60.0; 20.0",
                          "10.0; 10.0",
                          "Unknown >> 10.4",
                          "10.0; 10.0; 10.0; 10.0; 10.0; 10.0",
                          "Unknown >> 1.0 >> 1.0 >> 15.0",
                          "3.0; 10.0 >> 0.25",
                          "10.0; 30.0; 90.0",
                          "600.0 >> 5.0",
                          "30.0 | 5.0",
                          "1.0; 2.0 >> 2.0; 4.0",
                          "20.0 >> 60.0",
                          "0.25; 60.0",
                          "1440.0",
                          "4.0 >> 15.0",
                          "5.0 >> 5.0 | Unknown",
                          "5.0; 5.0; 5.0; 10.0; 10.0; 10.0; 10.0; 90.0",
                          "30.0 | Unknown | 150.0",
                          "5.0 >> Unknown",
                          "4.0; 60.0",
                          "140.0",
                          "120.0; 10.0",
                          "3.0; 7.0",
                          "80.0",
                          "40.0 >> 30.0",
                          "120.0 >> 120.0",
                          "Unknown >> 15.0 >> 10.0",
                          "5.0 >> 15.0; 75.0",
                          "11.0 >> 60.0",
                          "5.0 >> 45.0",
                          "3.0; 5.0 >> 5.0",
                          "15.0; 0.08 >> 4.0",
                          "60.0 >> 5.0 >> 5.0",
                          "50.0 | 10.0",
                          "10.0 >> 10.0; 60.0",
                          "10.0; 60.0",
                          "1.0; 30.0",
                          "0.08; 20.0",
                          "Unknown >> Unknown >> 1.0",
                          "60.0; 60.0; 60.0",
                          "30.0 >> 10.0",
                          "180.0; 17.0",
                          "60.0 >> Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "thermal_annealing_time",
                "description": "The time program associated to the thermal annealing.\n- When more than one reaction step, separate the annealing times associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the associated times at those temperatures and separate them with semicolons.\n- The annealing times must align in terms of layers\u00b8 reaction steps and annealing temperatures in the previous filed.\n- If a time is not known, state that by \u2018nan\u2019\n- If no thermal annealing is occurring after the deposition of a layer, state that by \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 20 and not 10-30.\nExample\n60\n5; 30 >> 60\n0 >> 5; 5",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "N2",
                          "Unknown >> O2",
                          "Vacuum; N2",
                          "Air >> Air | Air",
                          "Air >> N2",
                          "N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2",
                          "Dry air >> Air",
                          "Unknown",
                          "N2 >> Vacuum",
                          "Vacuum; Unknown; Unknown",
                          "N2 >> N2",
                          "N2 | N2",
                          "N2; Air",
                          "Unknown >> Air",
                          "Dry air >> Dry air",
                          "Ambient",
                          "Unknown >> Unknown",
                          "Ar >> Ar",
                          "Unknown >> N2",
                          "Dry air",
                          "N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2 >> N2",
                          "Vacuum >> N2",
                          "Air",
                          "Unknown | 70",
                          "Vacuum",
                          "Ar >> Vacuum",
                          "Unknown >> Air >> Air",
                          "N2; Ambient",
                          "Air >> Air",
                          "Ar",
                          "N2 >> Air"
                        ]
                      }
                    }
                  ]
                },
                "name": "thermal_annealing_atmosphere",
                "description": "The atmosphere in which the thermal annealing is conducted.\n- When more than one reaction step, separate the atmospheres associated to each annealing step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of deposition steps must line up with the previous columns.\n- If the atmosphere is a mixture of different gases, i.e. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas.\n- This is often the same as the atmosphere under which the deposition is occurring, but not always.\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nAir >> N2\nAr",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0 >> 0",
                          "15",
                          "0; 60",
                          "32",
                          "50.0",
                          "30; 50",
                          "0; 0",
                          "60.0",
                          "43",
                          "0.9",
                          "45",
                          "20 >> 20",
                          "60",
                          "30",
                          "90",
                          "65.0",
                          "0 | 0",
                          "0 >> 25",
                          "50",
                          "10"
                        ]
                      }
                    }
                  ]
                },
                "name": "thermal_annealing_relative_humidity",
                "description": "The relative humidity during the thermal annealing\n- If there is more than one annealing step involved, list the associate relative humidity in the surrounding atmosphere and separate them by a double forward angel bracket (\u2018 >> \u2018)\n- The number and order of annealing steps must line up with the previous column\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.\n- If a humidity is not known, stat that as \u2018nan\u2019\nExample\n0\n35 >> 0\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.1 Torr >> 1 Torr",
                          "0.1 Torr",
                          "1 atm >> 1 atm",
                          " Vacuum >> 1 atm",
                          "1 bar",
                          "1 atm; 0.2 bar",
                          "1 atm | 1 atm",
                          "50 Pa; nan; nan",
                          "1 atm",
                          "0.001 bar",
                          "1 atm >> 1 atm | 1 atm",
                          "nan >> 700 Pa"
                        ]
                      }
                    }
                  ]
                },
                "name": "thermal_annealing_pressure",
                "description": "The atmospheric pressure during the thermal annealing\n- If there is more than one annealing step involved, list the associate atmospheric pressures and separate them by a double forward angel bracket (\u2018 >> \u2018)\n- The number and order of annealing steps must line up with the previous column\n- Pressures can be stated in different units suited for different situations. Therefore, specify the unit. The preferred units are:\no atm, bar, mbar, mmHg, Pa, torr, psi\n- If a pressure is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 100 pa and not 80-120 pa.\nExample\n1 atm\n1 atm >> 0.002 torr\n1 atm >> 1 atm >> nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "solvent_annealing",
                "description": "TRUE if there has been a separate solvent annealing step, i.e. a step where the perovskite has been annealing in an atmosphere with a significant amount of solvents. This step should also be included deposition procedure sequence but is also stated separately here to simplify downstream filtering.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Under",
                          "Before",
                          "After"
                        ]
                      }
                    }
                  ]
                },
                "name": "solvent_annealing_timing",
                "description": "The timing of the solvent annealing with respect to the thermal annealing step under which the perovskite is formed. There are three options.\n- The solvent annealing is conducted before the perovskite is formed.\n- The solvent annealing is conducted under the same annealing step in which the perovskite is formed\n- The solvent annealing is conducted after the perovskite has formed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 32,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "H2O",
                          "DMSO; H2O",
                          "TBP",
                          "Acetic acid; Chlorobenzene",
                          "Pyridine",
                          "4\u2010fluoroaniline",
                          "Chlorobenzene; DMSO",
                          "GBL",
                          "DMSO; IPA",
                          "Aminobutanol",
                          "Methylamin",
                          "Methanol; Methylamin",
                          "Unknown",
                          "Hac",
                          "Triethylenetetramine",
                          "Diethylenetriamine",
                          "Methanol",
                          "DMF",
                          "DMF; H2O",
                          "DMSO",
                          "Chlorobenzene",
                          "Chlorobenzene; DMF",
                          "HCl",
                          "Thiophene",
                          "DMF; DMSO",
                          "Toluene",
                          "DMF; IPA",
                          "Benzyl alcohol",
                          "NMP",
                          "Ethanol",
                          "Air",
                          "Air; DMSO",
                          "Vacuum",
                          "CCl4",
                          "MACl",
                          "DMSO; NMP",
                          "IPA",
                          "Hexane"
                        ]
                      }
                    }
                  ]
                },
                "name": "solvent_annealing_solvent_atmosphere",
                "description": "The solvents used in the solvent annealing step\n- If the solvent atmosphere is a mixture of different solvents and gases, e.g. A and B, list them in alphabetic order and separate them with semicolonsas in (A; B)\nExample\nDMSO\nDMF\nDMF; DMSO",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 33,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "40.0",
                          "90.0",
                          "2.5",
                          "50.0",
                          "10.0",
                          "60.0",
                          "5.0",
                          "120.0",
                          "Unknown",
                          "180.0",
                          "0.16666666666666666",
                          "80.0",
                          "480.0",
                          "1.5",
                          "0.25",
                          "30.0",
                          "0.3",
                          "2.0",
                          "1.0",
                          "20.0",
                          "0.08333333333333333",
                          "15.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "solvent_annealing_time",
                "description": "The extend of the solvent annealing step in minutes\n- If the time is not known, state that by \u2018nan\u2019\n- If the solvent annealing involves a temperature program with multiple temperature stages, list the associated times at each temperature and separate them with a semicolon (e.g. 5; 10)",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 34,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "200",
                          "120.0",
                          "Unknown",
                          "90.0",
                          "100",
                          "90",
                          "100.0",
                          "20",
                          "110.0",
                          "150.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "solvent_annealing_temperature",
                "description": "The temperature during the solvent annealing step\n- The temperature refers to the temperature of the sample\n- If the solvent annealing involves a temperature program with multiple temperature stages, list the associated temperatures and separate them with a semicolon (e.g. 5; 10) and make sure they align with the times in the previous field.\n- If the temperature is not known, state that by \u2018nan\u2019",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 35,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Washed with Ether",
                          "Ultrasonic vibration treatment",
                          "Washed with Toluene",
                          "DABr",
                          "Post annealing",
                          "Dipped in Toluene",
                          "Washed with DMSO",
                          "Degradation in air under AM 1.5",
                          "Magnetic field",
                          "CF4 plasma treatment",
                          "Deposition Nanocrystals of CsPbI3",
                          "Deposition Nanocrystals of CsPbBr3",
                          "Thermal radiation",
                          "Washed with Ethyl acetate",
                          "Washed with chloroform and Ether",
                          "Spin coating GASCN",
                          "Annealed under pulsed light",
                          "Vacuum oven annealing",
                          "Pressed with flat stamp",
                          "Pulsed light",
                          "Fast Cooling",
                          "Washed with IPA",
                          "Dipped in octadecene >> Washed with cyclohexane",
                          "TETA vapour treatment",
                          "Hot isostatic pressing",
                          "Drying cabine",
                          "Washed with IPA >> Thermal Annealing",
                          "Poling",
                          "Slow cooling",
                          "Washed with DMF",
                          "Photonic curing",
                          "IPA:ACE @ 1:1 washing",
                          "UV laser radiation",
                          "Repeated Spin-coating",
                          "Hot-pressing",
                          "Dipped in Chlorobenzene",
                          "Washed with acetylene black (15 mg/ml) solution in chlorobenzene",
                          "Micro contact inprinting",
                          "Spin coating@Guanidinium thiocyanate",
                          "Gas pump treatment",
                          "Spin coating GASCN; MACl",
                          "IR radiation",
                          "DCM:DEE @ 50:50 washing",
                          "Vaccum drying",
                          "fs laser polishing >> Washed with IPA >> Spin-coating solution of CsI, FAI, MABr in IPA >> annealed at 100",
                          "Washed with ACE",
                          "Degradation in air under dark",
                          "H2O2 treatment",
                          "Gradient thermal annealing",
                          "Soaking in Isopropyl",
                          "Washed with Acetone",
                          "Washed with IPA >>  Spin-coating Dichloromethane",
                          "Annealed under intense laser pulses",
                          "Graphdiyne passivation treatment",
                          "Ethylacetate washing",
                          "Cold-roll pressing",
                          "IPFB immersion",
                          "Washed with GBL",
                          "Dipped in Ethyl acetate",
                          "Ultrasonic transducer",
                          "Atmospheric-pressure dielectric barrier discharge",
                          "Washed with IPA >> Drying in flow of N2",
                          "Washed with Anisole",
                          "Dissolving polystyren template in toluene",
                          "Spin-coating Ethanol",
                          "Cold isostatic pressing",
                          "Pressed with dotted stamp",
                          "Washed with IPA >> Washed with Dichloromethane",
                          "Annealed in a perfluorodecalin bath",
                          "Intense pulsed light annealing",
                          "Inverted thermal annealing",
                          "Washed with MABr solution in IPA",
                          "Exposed to moist air",
                          "Dried by N2 gas",
                          "Intense light",
                          "FABr treatment >> Rinse with 2-propanol >> Thermal annealing >> Slow cooling",
                          "Washed with MAI solution in IPA",
                          "Dried under flow of N2",
                          "Spin coating GABr   >>   annealing",
                          "Toluene washing",
                          "Refrigerated",
                          "Ultrapure water spray",
                          "Moisture",
                          "Spin-coating iodopentafluorobenzene",
                          "Radiative thermal annealing",
                          "Near Infrared radiation",
                          "Light soaking",
                          "Vacuum annealing",
                          "UV radiation",
                          "Washed with Chlorobenzene",
                          "Microwave radiation",
                          "Dipped in FAI containing ethyl acetate solution",
                          "Heating >> Light exposure",
                          "Dipped in Anisole",
                          "Washed with Methyl acetate",
                          "Annealed under light",
                          "Spin-coating Pr-ITC; Ph-DTIC",
                          "Pressed with hexagonal stamp",
                          "Washed with IPA and drying with pressurized air",
                          "IR laser radiation",
                          "Stored at elavated temperature",
                          "Laser annealing",
                          "Dried under flow of clean air"
                        ]
                      }
                    }
                  ]
                },
                "name": "after_treatment_of_formed_perovskite",
                "description": "Any after treatment of the formed perovskite. Most possible reaction steps should have been entered before this point. This is an extra category for procedures that just does not fit into any of the other categories.\nExamples:\nHot isostatic pressing\nMagnetic field\nUV radiation",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 36,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "50 min",
                          "50 W/cm2; 2.42 s",
                          "Colling rate < GHT-3",
                          "40kHz; 5W; 2 min",
                          "40kHz; 10W; 2 min",
                          "10 pulses per sample",
                          "2.5",
                          "40kHz; 10W; 1 min",
                          "Colling rate < GHT-2",
                          "1",
                          "40kHz; 10W; 3 min",
                          "2.47 s",
                          "5",
                          "105 deg. C",
                          "70 C >> 254 nm",
                          "30% RH; 8 h",
                          "30 min",
                          "100 deg. C",
                          "40kHz; 5W; 1 min",
                          "7s",
                          "30% RH; 12 h",
                          "50 W/cm2; 2.40 s",
                          "50 W/cm2; 2.38 s",
                          "50 W/cm2; 2.50 s",
                          "40kHz; 10W; 4 min",
                          "40kHz; 5W; 3 min",
                          "30% RH; 4 h",
                          "2 min",
                          "85 deg. C in Air 50 % RH",
                          "9s",
                          "Colling rate < GHT-4",
                          "40kHz; 5W; 4 min",
                          "20 min",
                          "50 W/cm2; 2.45 s",
                          "10s",
                          "10 s",
                          "13s",
                          "45 deg. C",
                          "105 C",
                          "40 mW/cm2",
                          "Fast cooling in ice 150 >> 0",
                          "80 deg. C; 15 s",
                          "11s",
                          "50 W/cm2; 2.53 s",
                          "50 W/cm2; 2.55 s",
                          "50 W/cm2; 2.47 s",
                          "200 Mpa; 90 deg.C; 60 min",
                          "0.5",
                          "85 deg. C in O2",
                          "Several hours",
                          "Fast cooling in air 150 >> 0",
                          "85 deg. C in N2",
                          "nan >> 100 deg C 5 min",
                          "80W/cm 20.1mm/s",
                          "500W, 30 sec",
                          "200 Mpa;  60 min",
                          "Spin-coating>> 2 mg/ml>> 100 deg. C>> 10 min",
                          "70 deg. C; 60 min"
                        ]
                      }
                    }
                  ]
                },
                "name": "after_treatment_of_formed_perovskite_met",
                "description": "Connected to the previous field (After treatment of formed perovskite). The label describing the method should be in the previous filed, and the associated metrics in this one. For exampleThe sample is intense gamma radiation at a flux of X under 45 minutes. The \u201cgamma radiation\u201d is the label, and the time and the flux is the metrics. Give the units when you state the metrics\nExamples:\n40kHz; 5W; 4 min\n45 deg. C\n30 min\n50 W/cm2; 2.38 s",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "HTL",
            "description": "A section to describe information related to the Hole Transport Layer (**HTL**).",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "TAPC | MoO3; TAPC",
                          "1\u2010adamantylamine hydrochloride | Spiro-MeOTAD",
                          "MDMO-PPV",
                          "TTPA-OMeTPA",
                          "NiO | Br-BA",
                          "P3CT-K",
                          "TPB",
                          "ZnBu4Pc",
                          "BuO-DATPA",
                          "FT-OMeTPA",
                          "BChl-2",
                          "Graphene oxide | CuBuPc",
                          "PTZDPP-2",
                          "Al2O3-mp | Me2N-DATPA",
                          "po-TPE-4DPA",
                          "TDAC",
                          "Au-np | NiO-c",
                          "B58",
                          "CuSCN-3D",
                          "HMDI",
                          "Me6-ZnPc",
                          "PMT",
                          "T103",
                          "Ag-np; NiO-c",
                          "NiO-np | TPI-4MEO",
                          "CsPbI3-QD | Spiro-MeOTAD",
                          "P(BDTT-SePPD)",
                          "PDBT-co-TT",
                          "GD; P3HT",
                          "KY7F22-np | Spiro-MeOTAD",
                          "PDBT-T1 | WOx",
                          "YT3",
                          "M116",
                          "CH3O-PEIA | Spiro-MeOTAD",
                          "HTM-2",
                          "TaTM | F6-TCNNQ; TaTm",
                          "PEDOT:PSS | Perylene",
                          "F6-TCNNQ | TaTm",
                          "V842",
                          "PEDOT:PSS | PSS-Na",
                          "NiO-c | PNP-BC",
                          "PEDOT:PSS | Au-np; VOx",
                          "[BMPA-BTD]3-TPA",
                          "YKP06",
                          "DTBT",
                          "rGO-flakes | Spiro-MeOTAD",
                          "9,9'-([1,2,5]thiadiazolo[3,4-c]pyridine-4,7-diylbis(4,1- phenylene))bis(N3,N3,N6,N6-tetrakis(4-methoxyphenyl)-9H-carbazole-3,6-diamine)",
                          "PFO | Al2O3-np",
                          "4,4'-((2-Hexyl-2H-benzo[d][1,2,3]triazole-4,7-diyl)bis(thiophene5,2-diyl))bis(N,N-bis(4-(hexyloxy)phenyl)aniline)",
                          "TFB",
                          "V950",
                          "VOx | X-DVTPD",
                          "HB-Cz",
                          "C201",
                          "V1036",
                          "2-MP | Spiro-MeOTAD",
                          "SWCNTs | PTAA",
                          "HTM4",
                          "H-2,3",
                          "MoS2",
                          "CON-10 | PEDOT:PSS",
                          "PEDOT:PSS | PTB7",
                          "YKP03",
                          "TPA-NAP-TPA",
                          "PTAA | TPFB",
                          "TTPA-DTP",
                          "CS05",
                          "SGT-407",
                          "CuPcNO2-OBFPh",
                          "EGO-PPV",
                          "RE-ZnBu4Pc",
                          "CdSe-QD | Spiro-MeOTAD",
                          "NiO-c | 1ab",
                          "MoOx | F4TCNQ",
                          "WS2",
                          "WO3",
                          "dly-2",
                          "18-crown-6 ether | CuSCN",
                          "MoO3 | TBDI",
                          "BDTT:DPPD:TT",
                          "SY3",
                          "TTF1",
                          "PT",
                          "Tea Catachinrich biomolecules",
                          "PEH-9",
                          "NiO@C | Spiro-MeOTAD",
                          "ST1 (4-(4-(bis(4-(4-(dibutylamino)styryl)phenyl)amino)styryl)-N,N-dibutylaniline)",
                          "NiO-c | NBP-BC",
                          "CuPc-DMP",
                          "SGT-405",
                          "AL2O3-c | Spiro-MeOTAD",
                          "PTAA",
                          "di-TPA",
                          "2-((5-(4-(2-ethylhexyl)-4H-dithieno[3,2-b:2\u2032,3\u2032-d]pyrrol-2-yl) thiophen-2-yl)methylene) malononitrile",
                          "PBDT(T)(2F)T",
                          "PPP",
                          "B[BMPDP]2",
                          "V873",
                          "9,9\u2019-di{6-[3-(2-(4-methylphenyl)vinyl)-9-carbazol9-yl]hexyl}-[3,3\u2019]bicarbazole)",
                          "Caffeine | Spiro-MeOTAD",
                          "Poly-TBD",
                          "X60",
                          "HOFP | Spiro-MeOTAD",
                          "NP1",
                          "CuBuPc",
                          "PolyTPD | Spiro-MeOTAD",
                          "Al2O3-c | Ethyl acetate; I2; LiI; NMBI; Urea",
                          "PVBT-SO3",
                          "Spiro-MeOTAD | Cu1.75S",
                          "FBT-TH4 | CuxO",
                          "PTB1",
                          "Z34",
                          "PSS-g-PANI",
                          "MEAI | Spiro-MeOTAD",
                          "NiO-np | PMMA",
                          "M118",
                          "DPA-ANR-DPA",
                          "YR3",
                          "V997",
                          "DBT(QT-TPA)2",
                          "SO10",
                          "TaTm | TaTm:F6-TCNNQ",
                          "TBDI",
                          "PO-Spiro",
                          "TTPA-DSQT",
                          "Spiro-MeOTAD | PDPP4T",
                          "SnS-np; ZnS-np | NiO-np",
                          "1b @ triphenylamine modified azobenzene dyes",
                          "THY-1",
                          "SP-11",
                          "Zeocoat | Graphene | P3HT",
                          "P3HT | Spiro-MeOTAD",
                          "H11",
                          "CuI | PEDOT:PSS",
                          "PTAA | PFN-P2",
                          "PTTh",
                          "TaTm | TPBi | MoO3",
                          "DEH",
                          "Perylene",
                          "PEDOT:PSS | pTPD",
                          "SDTCz2F",
                          "TCTA-BVP",
                          "EDT; PbS",
                          "PDCBT",
                          "NiO-c | Au-np",
                          "MeOAc-Spiro-OMeTAD",
                          "C102",
                          "3,4-spiro",
                          "PTPD2",
                          "3,3\u2032,5,5\u2032-tetrasubstituted 1,1\u2032-biphenyl",
                          "X14",
                          "H101",
                          "POZ6-2",
                          "1a @ triphenylamine modified azobenzene dyes",
                          "PEDOT:PSS | TPA-NPA-TPA",
                          "SubPc",
                          "Z10",
                          "OIPC-Br",
                          "4b @ triphenylamine modified azobenzene dyes",
                          "X54",
                          "TPAC3M",
                          "5,7-disubstituted azulene",
                          "CZTPA-1",
                          "NiO-np | TPI",
                          "P3HT | Ta:Wox-np",
                          "FT73",
                          "TDT-OMeTAD",
                          "AQ310 | Spiro-MeOTAD",
                          "Spiro-MeO-TPD",
                          "BL40",
                          "PEDOT:SAF",
                          "YC-3",
                          "TPA3C",
                          "V1056",
                          "SCPDT-BiT",
                          "NiO-np | 2,2\u2019-BiPy",
                          "Fe3O4-np",
                          "Carbozole @ S14",
                          "PZn-DPPA",
                          "X2",
                          "SFD-Spiro",
                          "SWCNTs",
                          "HTB-Ome",
                          "CZTSSe; rGO",
                          "Q198",
                          "EVA; MWCNTs | Spiro-MeOTAD",
                          "BTPA",
                          "CsSnBr2I-QDs",
                          "MeoTPD",
                          "CuH",
                          "V2O5",
                          "HTM2",
                          "Graphene oxide | PTAA",
                          "N2,N2,N3',N3',N6',N6',N7,N7-octakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-2,3',6',7-tetraamine",
                          "M114",
                          "Benzylamine | Spiro-MeOTAD",
                          "pPh-2MODPACz",
                          "PMA | TaTm",
                          "DERDTS-TBDT",
                          "TTB3",
                          "BMIMBF4 | Spiro-MeOTAD",
                          "NBP-BC",
                          "TB-ZnPc",
                          "(OctPhO)8CuPc1",
                          "PEDOT:PSS | V2O5",
                          "BTP-1",
                          "M4",
                          "Benxylamine | Spiro-MeOTAD",
                          "BDT-4D",
                          "oxo-Graphene",
                          "4,4'-(5,10,11-Trihexyl-10,11-dihydro-5H-thieno[2\u2032,3':4,5]pyrrolo [3,2-g]thieno[3,2-b][1,2,3]triazolo[4,5-e]indole-2,8-diyl)bis(N,N-bis(4- (hexyloxy)phenyl)aniline)",
                          "PEDOT:PSS; PEG",
                          "Spiro-MeOTAD | Al2O3-c",
                          "mm-SFX-2PA",
                          "Spiro-tBuBED",
                          "PTB-BO",
                          "V1004",
                          "CZTS0.5Se0.5; rGO",
                          "MPA",
                          "PTAA | PS",
                          "P-SC6-TiOPc",
                          "PBDT(2H)T",
                          "POZ2",
                          "PIF8-TAA",
                          "Spiro-PT-OMeTAD",
                          "BT",
                          "BTPA-TCNE",
                          "NiMgO",
                          "POZ9",
                          "Thiophene | Spiro-MeOTAD",
                          "HMe2Pc",
                          "TCPI | Spiro-MeOTAD",
                          "NiO-c | 1bb",
                          "PCDTBT; PFN",
                          "MoO2-np",
                          "Carbon-nt; PEDOT:PSS | PEDOT:PSS",
                          "Graphene oxide; PEDOT:PSS",
                          "4-(4-phenyl-4-alfa-naphthylbutadienyl)-N,N-di(4-methoxyphenyl)-phenylamine",
                          "YC03",
                          "tetra-TPA",
                          "MHGO",
                          "P:ON",
                          "1,3-disubstituted azulene",
                          "Ni | Au | Cu",
                          "M113",
                          "2FBTA-2",
                          "NiO-c | NiO-np",
                          "DDOF",
                          "Trux-OMeTAD",
                          "PB2T-S",
                          "PEDOT:PSS | CuI",
                          "PEDOT:PSS | FrGO",
                          "PCE-10",
                          "HAB1",
                          "2,7-BCz-OMeTAD",
                          "2,5-bis (5-(5-(5-hexylthiophen-2-yl) thiophen2-yl) thiophen-2-yl) thiazolo[5,4-d]thiazole",
                          "BTF2",
                          "PEDOT:PSS | P3HT",
                          "CS04",
                          "PB(NAP-Th)TBT",
                          "[BMPA-EDOT]3-TPA",
                          "18-crown-6 ether | Spiro-MeOTAD",
                          "T30P",
                          "MoOx | TaTm",
                          "Z7",
                          "P(BDTT-ttPPD)",
                          "PEDOT:PSS | Porphyrin",
                          "Q221",
                          "SQ2 | Spiro-MeOTAD",
                          "Tetracene",
                          "TS-CuPc | PEDOT:PSS",
                          "D1",
                          "PTAA | Al2O3-mp",
                          "P3CT",
                          "MoO3",
                          "BTPA-5",
                          "P3HT",
                          "MoO3 | CuPc",
                          "V1012",
                          "EDOT-OMeTPA",
                          "CdTe@MAPbI3-QDs | Spiro-MeOTAD",
                          "NPD",
                          "Zn-Chl | H2-Chl",
                          "3C",
                          "FBA2",
                          "4-(2-(4-(Bis(4-(hexyloxy)phenyl)methyl)phenyl)-9-methyl-9H-naphtho[2,1-c]carbazol-12-yl)-N,N-bis(4-(hexyloxy)phenyl)aniline",
                          "ZnChl-3",
                          "2TPA-3-DP",
                          "Spiro-MeOTAD | P3HT; SWCNTs | PEDOT:PSS",
                          "2D-Sb",
                          "SY2",
                          "SFT-TPAM",
                          "Al2O3-np | CuBuPc",
                          "Th-PDI",
                          "TAA14",
                          "DPP-F",
                          "B74",
                          "Al-np; PEDOT:PSS",
                          "CuSCN | MoOx",
                          "I2; KI; Propylene carbonate; Polyethylene glycol",
                          "Z25",
                          "Black phosphorous 2D | CuSCN",
                          "Spiro-TTB | VOx",
                          "TPBC",
                          "POSS-SH | Spiro-MeOTAD",
                          "CZ-STA",
                          "PEDOT:PSS | 3-aminopropanoic acid-SAM",
                          "A-PDTON | PEDOT:PSS",
                          "T102",
                          "NO-Graphene-QDs",
                          "PTPD",
                          "Cu2MnSn4-np",
                          "PffBT4T-20D",
                          "M101",
                          "I2; LiI; Methoxypropionitrile",
                          "3,6-di(2H-imidazol-2-ylidene)cyclohexa 1,4-diene-C12",
                          "TAE",
                          "4-chlorothiophenol",
                          "X-DVTPD",
                          "HTM3",
                          "1-(N,N-di-p-methoxyphenylamine)pyrene",
                          "MEH-PPV | Spiro-MeOTAD",
                          "pm-TPE-4DPA",
                          "MoOx",
                          "P3CT-N",
                          "TTh101",
                          "TP1",
                          "CZTS",
                          "CT2",
                          "PEH-1",
                          "KR355",
                          "Poly(3-bromothiophene)",
                          "rGO-4FPH | Spiro-MeOTAD",
                          "TZ3",
                          "PEDOT:PSS",
                          "FTA2",
                          "FrGO",
                          "CzPAF-TPA",
                          "MeO-DATPA",
                          "PEDOT:LS",
                          "MTA",
                          "PCPD2FBT:BCF",
                          "SO8",
                          "4-F-br-4C",
                          "Polymer3",
                          "3,3'-(2,7-bis(bis(4-methoxyphenyl)amino)-9H-fluorene-9,9-diyl)bis(N-ethyl-N,N- dimethylpropan-1-aminium) bis(trifluoromethanesulfonyl)imide",
                          "PTB7-th",
                          "BTT-5",
                          "CuInS2 | Al2O3-mp",
                          "BTF1",
                          "DCZ-OMeTAD",
                          "NiO-c | CuI",
                          "TPA-Pc",
                          "P",
                          "Spiro-MeOTAD-F",
                          "Cu:NiO",
                          "Graphene-QDs",
                          "F33",
                          "PCDTBT8",
                          "X59",
                          "NiO-c | BMIMBF4",
                          "rGO",
                          "P3DDT",
                          "X21",
                          "TPASBP",
                          "poly(DTSTPD-r-BThTPD)",
                          "PEDOT:PSS | Propionic acid",
                          "1d @ triphenylamine modified azobenzene dyes",
                          "CuPc-Bu",
                          "MoS2; PEDOT:PSS",
                          "Al2O3-np | Spiro-MeOTAD",
                          "3-Hexylthiophene | Spiro-MeOTAD",
                          "COTT-1",
                          "Graphene aerogel | Spiro-MeOTAD",
                          "PCP-Na",
                          "X19",
                          "IDF-SFXPh | MoO3",
                          "DPA-TPM",
                          "Co0.817Cu0.183O1.19",
                          "DBTMT",
                          "BTT-Me",
                          "Carbon-QDs",
                          "Polystyrene | Spiro-MeOTAD",
                          "PEDOT:MNSF",
                          "TOPO | TaTm",
                          "PEDOT:PSS | PEDOT:GSL",
                          "BTDTP",
                          "9,9-bis(3-(dimethylamino)propyl)-N2,N2,N7,N7-tetrakis(4-methoxyphenyl)-9H-fluorene- 2,7-diamine",
                          "Spiro-MeOTAD; X60",
                          "CT1",
                          "PBDTT",
                          "PDO1",
                          "TTB1",
                          "JY7",
                          "4,8-bis-(5-bromothiophene-2-yl)-benzo thiadiazole",
                          "TbT-3",
                          "BL51",
                          "NiO-c | N719 dye",
                          "Aniline | Spiro-MeOTAD",
                          "KM03",
                          "PF8-TAA",
                          "H66",
                          "ZnPcNO2-OBFPh",
                          "alfa-NPD",
                          "WO3-nw@PEDOT",
                          "NP-BC",
                          "COTT-2",
                          "PEG | Spiro-MeOTAD",
                          "PPDI | Spiro-MeOTAD",
                          "PFBT-Na",
                          "FePc-Cou",
                          "PVBT-SB",
                          "PAH 2",
                          "N1,N3,N5-tris(4-n-butylphenyl)-N1,N3,N5-triphenylbenzene-1,3,5-triamine",
                          "Au; NiO",
                          "IEICO; PBDTTT-E-T",
                          "HPB-Ome",
                          "V911",
                          "Bis-amide-TTF",
                          "Aminothiazolium iodide | P3HT",
                          "S5",
                          "NiO-c | NP-BC",
                          "TFB | P3HT",
                          "PEDOT:PSS | PTPAFSONa",
                          "M2",
                          "PVP | Spiro-MeOTAD",
                          "BTTP-CN",
                          "X36",
                          "TiS2-np",
                          "YK2",
                          "PEDOT:PSS | PEI",
                          "PEDOT:PSS | CrO3",
                          "ZnMe2Pc",
                          "NiO-c | PFN-P2",
                          "Poly(TA) | Spiro-MeOTAD",
                          "2\u2010aminoterephthalic acid | Spiro-MeOTAD",
                          "Co0.39Cu0.61O",
                          "Ethyl acetate; I2; LiI; NMBI; Urea",
                          "H-Z2",
                          "MeO-2PACz",
                          "PEDOT:PSS; PEI | PEDOT:PSS",
                          "DTB",
                          "CuMePc",
                          "3-hydroxypyridine | Spiro-MeOTAD",
                          "TPB(2-MeOTAD)",
                          "Mo(tfd-COCF3)3 | SWCNTs | Spiro-MeOTAD",
                          "Spiro-MeOTAD | Rubrene",
                          "CA-Br; TPA-PT-C6",
                          "PEDOT:PSS; V2O5",
                          "Z28",
                          "CISZ-QDs",
                          "PTB7",
                          "LiNiO-c",
                          "A101",
                          "PVBT-TMA",
                          "SAF-5",
                          "M117",
                          "PBDTTT-E-T | MoO3",
                          "PD-10-DTTE-7 | Spiro-MeOTAD",
                          "4,4'-(1,3,4-Oxadiazole-2,5-diyl)bis(N,N-bis(4-methoxyphenyl)aniline)",
                          "WY-3",
                          "X55",
                          "BL25",
                          "pBDT-BODIPY | PFN",
                          "CuGaO2-np",
                          "NiO-np | PSS",
                          "pDPA-DBTP",
                          "BL52",
                          "CuCo2O4",
                          "PEDOT:PSS | PBDB-T:ITIC",
                          "HFB-OMeDPA",
                          "VOx | PEI",
                          "ATT-OHex",
                          "N-CuMe2Pc",
                          "PEDOT:PSS | Au-nw; VOx",
                          "CrO2",
                          "CoO",
                          "P5",
                          "M102",
                          "V1013",
                          "BX-OMeTAD",
                          "PEDOT:PSS; Graphene oxide",
                          "TAE4",
                          "TPADPP-2",
                          "3-F-br-4C",
                          "MoS2-QDs; rGO-flakes | Spiro-MeOTAD",
                          "Polyacrylonitrile-grafted rGO",
                          "D101",
                          "V2Ox",
                          "TbT-2",
                          "PEDOT:PSS | NiO-c",
                          "IDT-TPA",
                          "NaYF4:Yb:Tm-np | Spiro-MeOTAD",
                          "PBDTTT-CT | Spiro-MeOTAD",
                          "CzPAF\u2010SBF",
                          "BTT(DPP-Th)3-EH",
                          "PTZ-TPA",
                          "PBDTT-FTTE",
                          "SGT-420",
                          "P2Z1",
                          "C6TBPH2",
                          "PMMA | DTPC8-ThTPA",
                          "PEDOT:PSS | X-QUPD",
                          "V1209",
                          "HBT-ZnPc",
                          "CuInS2@ZnS-QDs",
                          "PEDOT:PSS | Au-nanobipyramide; VOx",
                          "ZnPcNO2-OPh",
                          "Rubrene",
                          "tert-CuBuPc",
                          "PCBM-60",
                          "SM01",
                          "X51",
                          "P3HT; Spiro-MeOTAD",
                          "OMe-TATPyr",
                          "Azomethine",
                          "DCZ-OMeTPA",
                          "SWCNTs | P3HT",
                          "Co0.817Cu0.183O",
                          "Y3",
                          "N2,N,N8,N8-tetrakis[2,2-bis(4-methoxyphenyl)ethenyl]-4,10-dimethyl-6H,12H-5,11-methanodibenzo[b,f][1,5]diazocine2,8-diamine",
                          "PEDOT:PSS | AuAg@SiO2-np",
                          "PZn-TPA",
                          "TPD",
                          "Ph-TPA-4A",
                          "IDTT-TPA",
                          "TRUX1",
                          "Ta2O5 | Spiro-MeOTAD",
                          "2mF-X59",
                          "YC-1",
                          "PMMA | Spiro-MeOTAD",
                          "LHTM-2",
                          "In2O3",
                          "TSHBC-CF3",
                          "PTAA | PFN",
                          "Spiro-TBB",
                          "HPPHT",
                          "Poly[4,8-bis(2-(4-(2-ethylhexyloxy)phenyl)-5-thienyl)benzo[1,2-b:4,5b\u2019]dithiophene-alt-1,3-bis(4-octylthien-2-yl)-5-(2-ethylhexyl)thieno[3,4-c]pyrrole-4,6-dione",
                          "SFX-TPA",
                          "PEDOT; Graphene",
                          "3,6-Cbz-EDOT",
                          "TPE-2,7-Carbazole W4",
                          "Choline chloride | Spiro-MeOTAD | SWCNTs",
                          "H-Z1",
                          "PEDOT:PSS | Dex-CB-MA",
                          "TTB2",
                          "COPV4",
                          "Cu0.8Cr0.2O2",
                          "Cz-OMeTAD",
                          "Cu3PS4-np",
                          "PDPPDBTE",
                          "NO2-PEIA | Spiro-MeOTAD",
                          "P3HT; SWCNTs; Spiro-MeOTAD",
                          "BL38",
                          "PEDOT:PSS | V2Ox",
                          "Co0.939Cu0.061O",
                          "Carbon-nt | PEDOT:PSS",
                          "DM2",
                          "CuI-np",
                          "PCz",
                          "H-3,4",
                          "TPA-ZnPc",
                          "TTz-1",
                          "Z1012",
                          "NH2-POSS | Spiro-MeOTAD",
                          "EP02",
                          "Triazine | Spiro-MeOTAD",
                          "Z7@MWCNTs",
                          "N3,N3,N9,N9\u2010tetrakis(4\u2010methoxyphenyl)xantheno[2,1,9,8\u2010klmna]xanthene\u20103,9\u2010diamine",
                          "H65",
                          "ZnPc | Spiro-MeOTAD",
                          "AS44",
                          "2FBTA-1",
                          "V886",
                          "PFB",
                          "IEICO; PBDB-T",
                          "NiO | CuSCN",
                          "PSQ1",
                          "M109",
                          "TRUX2",
                          "Spiro-MeOTAD | NaYF4",
                          "Poly-N-vinylcarbazole | Spiro-MeOTAD",
                          "Azu-Hex",
                          "p-DTS(FBTTh2)2",
                          "NiO-c | PCDTBT",
                          "TCP-OH",
                          "CuIn1.5Se3-QDs",
                          "3,6-cbz-EDOT",
                          "SO9",
                          "DOR3T-TBDT; PCBM-70",
                          "TPD | HAT-CN",
                          "AZ2",
                          "CuPcNO2-OPh",
                          "TPAC-SAM",
                          "Yih-1",
                          "V885",
                          "NiS",
                          "IT-4F; PBDB-T-SF",
                          "CuO",
                          "HBZ-70",
                          "NiO-np | ME2",
                          "OCNR; PEDOT:PSS",
                          "M:ON",
                          "P1-2",
                          "WY-1",
                          "TZ1",
                          "pBBTa\u2010BDT2",
                          "mm-SFX-3PA",
                          "EHCz-2EtCz",
                          "VB-Me-FDPA",
                          "TPA1C",
                          "H6-ZnPc",
                          "Fluorene-dithiophene",
                          "quart-p-phenylene1",
                          "NiO-c | NiO-c",
                          "PDTSTTz",
                          "PDCBT | MoO3",
                          "Graphene oxide | PMMA",
                          "H-FL",
                          "none",
                          "BTF3",
                          "YC02",
                          "Carbon-nt; P3HT | PEDOT:PSS",
                          "Al2O3-c | Spiro-MeOTAD",
                          "PEDOT:PSS | PDPP-DTT",
                          "Spiro-MeOTAD | Al2O3",
                          "Tris(4-(5-hexylthiophen-2-yl)phenyl)amine",
                          "NBNDD",
                          "TAZ-[MeOTPA]2",
                          "TPB-2-MOTPA",
                          "N,N\u2010di\u2010p\u2010methylthiophenylamine",
                          "TPC",
                          "SrGO",
                          "PEH-8",
                          "2PACz | MeO-2PACZ",
                          "PEDOT:PSS | PEI-HI",
                          "HL-1",
                          "Zn-Chl",
                          "POZ3",
                          "CZTS; rGO",
                          "PEDOT:PSS | Ethylene glycol",
                          "HT-ZnPc",
                          "LiMgNiO",
                          "BTTI-C8",
                          "X60(TFSI)2",
                          "CZTSe-QDs",
                          "RCP-BTT",
                          "NiO-c | YC-1",
                          "NiO-np | NaCl",
                          "PEO; KI; I2",
                          "rGO | PEDOT:PSS",
                          "KR133",
                          "Cz-N",
                          "CuI | Cu@CuI-nw",
                          "styryl-functionalized GO",
                          "H18",
                          "CuPc\u2010OTPAtBu",
                          "KR122",
                          "IDTC4-TPA",
                          "Vox | X-DVTPD",
                          "N2,N2,N2',N2',N7,N7,N7',N7'-octakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-2,2',7,7'-tetraamine",
                          "ZnPc-th-ZnPc",
                          "Tetrakis-Triphenylamine",
                          "CuPc-OBu",
                          "MeO-PPV | PFN-P2",
                          "J1",
                          "5,5',5''-(5,5',5''-(nitrilotris(benzene-4,1-diyl))tris(furan-5,2-diyl))tris(2-octylisoindoline-1,3-dione)",
                          "N2,N2,N7,N7-tetrakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-2,7-diamine",
                          "ZPPHT",
                          "Y2A2",
                          "BL50",
                          "LiI; I2; Methoxyacetonitrile",
                          "TPP-OMeTAD",
                          "Cu(In0.5Ga0.5)S2-np",
                          "PBTTT",
                          "PEDOT:PSS | NiPcS4",
                          "NiMgLiO-c",
                          "S2",
                          "TTA",
                          "FT37",
                          "PASQ-IDT",
                          "2D-PT",
                          "Graphene oxide | P3HT",
                          "PolyTPD | Al2O3-mp",
                          "PEDOT:PSS | PTPADCF3FSONa",
                          "CS03",
                          "MeO-PheDOT",
                          "1c @ triphenylamine modified azobenzene dyes",
                          "XY1",
                          "mp-SFX-2PA",
                          "F4-TCNQ | CuPc",
                          "PEDOT:PSS | NaI",
                          "TTB-TTQ",
                          "Rubene | P3HT",
                          "TPA-CN",
                          "4,4'-((2-Hexyl-2H-benzo[d][1,2,3]triazole-4,7-diyl)bis(thiophene5,2-diyl))bis(N,N-bis(4-methoxyphenyl)aniline)",
                          "M7-TFSI",
                          "DPA-ANT-DPA",
                          "CZTS-QDs",
                          "TAZ-[MeOTPATh]2",
                          "TPE-4DPA",
                          "LiCoO2",
                          "Graphene oxide; MoOx-np",
                          "TTA3",
                          "PTB9",
                          "iPrO-DATPA",
                          "PEH-2",
                          "EtO-DATPA",
                          "S,Si\u2010heteropentacene",
                          "XSln847",
                          "PFB | Al2O3-np",
                          "NiO-mp | Spiro-MeOTAD",
                          "PVCz-OMeDPD",
                          "MoO3 | TPTPA",
                          "CZTS0.75Se0.25; rGO",
                          "Graphene oxide | Spiro-MeOTAD",
                          "NiPcS4 | PEDOT:PSS",
                          "KR131",
                          "NiMgO | PVP",
                          "Adamantane | Spiro-MeOTAD",
                          "TAE3",
                          "PM-Spiro",
                          "PZn-3FTPA",
                          "TPBS",
                          "P3HT-MoS2",
                          "NiO-np | Graphene oxide",
                          "Al2O3 | CuPc(tBu)4",
                          "V1036:C2",
                          "Al2O3 | Sym-HTPcH",
                          "VO",
                          "Y4",
                          "Cu2O",
                          "GeO2",
                          "JY5",
                          "N 4 ,N 4'-(4,10-dimethyl-6H,12H-5,11-methanodibenzo[b,f][1,5]diazocine-2,8-diyl)bis(N 4 ,N 4' ,N 4' - tris(4-methoxyphenyl)-[1,1'-biphenyl]-4,4'-diamine)",
                          "2TPA-4-DP",
                          "Cu2O | PEDOT:PSS",
                          "TTBCPE",
                          "PEAI | Spiro-MeOTAD",
                          "CuO-nw | PEDOT:PSS",
                          "Cu0.5Cr0.5O2",
                          "Q216",
                          "M112",
                          "Co0.878Cu0.122O",
                          "Chl\u20101",
                          "C8Br | Spiro-MeOTAD",
                          "Al2O3 | CuSCN",
                          "Zr(acac)4",
                          "THY-5",
                          "M104",
                          "2,7-Ben",
                          "XMP",
                          "BTT-OMe",
                          "CuInSe2-QDs",
                          "1,2-Bis[3,6-(4,4`-dimethoxydiphenylamino)-9H-carbazol-9-methyl]benzene",
                          "MC-43",
                          "CuPc(tBu)4",
                          "MoO3 | NPB",
                          "CW5",
                          "mGO | P3HT",
                          "PEDOT:PSS | PCDTBT",
                          "Cu2BaSnS4",
                          "CuFeO2-np",
                          "PPyra-ACD",
                          "P3CT-K | CuZnS",
                          "NiO-mp",
                          "P1Z2",
                          "X1",
                          "H-Tri",
                          "Hexakis[4-(N,N-di-p-methoxyphenylamino)phenyl]benzene",
                          "PMMA | DTPC13-ThTPA",
                          "CS02",
                          "BDTS-2DPP",
                          "XPP",
                          "CuMePy",
                          "CH3-PEIA | Spiro-MeOTAD",
                          "P:OO",
                          "Spiro-MeOTAD | Cu9S5-np",
                          "2-(3,5-bis(5-(5-hexylthiophen-2-yl)thiophen-2-yl)thiophen-2-yl)-3,5-bis(5-(5-hexylthiophen-2-yl)thiophen-2-yl)thiophene",
                          "PZn-DPPA-O",
                          "MEH-PPV | PEDOT:PSS",
                          "4-(5-(5-(5-(5-(5-hexylthiophen-2-yl) thiophen-2-yl) thiophene-2-yl) thiazolo[5,4-d]thiazol-2-yl) thiophene2-yl)-N,N-diphenyl-benzenamine",
                          "Graphene",
                          "V1091",
                          "3,6-2,7-PCzTPA",
                          "PEDOT:PSS | Au@SiO2-np",
                          "Poly[4,8-bis(2-(4-(2-ethylhexyloxy)3,5-fluorophenyl)-5-thienyl)benzo[1,2-b:4,5-b']dithiophenealt-1,3-bis(4-octylthien-2-yl)-5-(2-ethylhexyl)thieno[3,4-c]pyrrole-4,6-dione",
                          "FeS2",
                          "NiO | Spiro-MeOTAD",
                          "Ome-DPA-CuPc",
                          "PTPD | Spiro-MeOTAD",
                          "NiO-np | M2",
                          "Bi2Te3 | Spiro-MeOTAD",
                          "DPEDOT-B[BMPDP]2",
                          "Florinated polymer | Spiro-MeOTAD",
                          "DA-PEDOT:PSS",
                          "Poly(ethylene oxide)",
                          "BChl-3",
                          "H-Tetra",
                          "Graphene oxide | PTFTS",
                          "PbPc",
                          "benzo[1,2b:4,5b\u2032]-dithiophene",
                          "SGT-410",
                          "P3HT | Carbon-nt",
                          "NiO-np | Glycerol",
                          "PEDOT:PSS | PTAA",
                          "HS-Ph-CN | Spiro-MeOTAD",
                          "Theobromine | Spiro-MeOTAD",
                          "NiMgLiO | 5-AVA",
                          "PTB7-TH; PFN",
                          "P6",
                          "[BMMIm]Cl",
                          "NiO-np | CuSCN",
                          "M106",
                          "SM-1",
                          "VOx | APPA",
                          "PEDOT:PSS | PEG",
                          "CJ-01",
                          "sGO",
                          "C4Br | Spiro-MeOTAD",
                          "Graphene oxide | PEDOT:PSS",
                          "(2Z,2'Z)-2,2'-((10-(2-ethylhexyl)-10H-phenothiazine-3,7-diyl) bis(4,1- phenylene)) bis(3-(4-(diphenylamino) phenyl) acrylonitrile",
                          "SWCNTs | Graphene oxide | PMMA",
                          "Z9",
                          "TAPC",
                          "V1102",
                          "Ph-TPA-6A",
                          "nPrO-DATPA",
                          "2,5-bis (5-(5-(5-hexylthiophen-2-yl)thiophen-2-yl) furan-2-yl) thiazolo[5,4-d] thiazole",
                          "TBP",
                          "TSHBC-tBu",
                          "(OctPhO)8ZnPc2",
                          "NiO-c | Al2O3-mp",
                          "TB(MA)",
                          "P2",
                          "ZnBChl",
                          "PEDOT:PSS | GeO2",
                          "PPN",
                          "OMeTP-SAM",
                          "PEO | Spiro-MeOTAD",
                          "PEDOT:PSS | PFI",
                          "TQ1d",
                          "NiO-np",
                          "V1021",
                          "CoOx",
                          "P3HT | SWCNTs | PMMA",
                          "5,6,11,12-Tetraphenylnaphthacene",
                          "Spiro-MeOTAD | PEDOT:PSS",
                          "Black phosphorous nanosheets",
                          "MC6Cz-TPA",
                          "CsSnI3-QDs",
                          "CuPc | PEI",
                          "ETH44",
                          "O5H-OMeDPA",
                          "HTM-3",
                          "PTB7-Th | MoOx",
                          "r-GO-HBS",
                          "PHPT-py",
                          "TET",
                          "NO HTL",
                          "PTAA | PEDOT:PSS",
                          "NiO-c | PEDOT:PSS",
                          "[Fe(bpyPY4)](OTf)2.5",
                          "Diketopyrrolopyrrole",
                          "F101",
                          "CPE-Na",
                          "ZnChl-2",
                          "3-Dodecylthiophene | Spiro-MeOTAD",
                          "BL08",
                          "PBDB-T | Spiro-MeOTAD",
                          "CuGaO2-mp",
                          "CuInS | Spiro-MeOTAD",
                          "MEH-PPV",
                          "TAE1",
                          "CL1-2",
                          "PII2T8T",
                          "NiO-c | SY4",
                          "3,8,13-tris[2,2-bis(4-methoxyphenyl)ethenyl]-5,10,15-triethyl-10,15-dihydro-5H-indolo-[3,2-a:3\u2032,2\u2032-c]carbazole",
                          "5,7-bis(9-ethyl-9H-carbazol-3-yl)-2,3-dihydrothieno[3,4-b][1,4]dioxine",
                          "H-Z3",
                          "PZn-FTPA",
                          "Ni | NiMgO",
                          "CZTS0.25Se0.75; rGO",
                          "FA-MeOPh",
                          "PTEG",
                          "Me-QTPA",
                          "MeO-PPV",
                          "H112",
                          "MoOx | PEDOT:PSS",
                          "CzPAF\u2010SBFN",
                          "4,4\u2032-(9-Methyl-9H-naphtho[2,1-c]carbazole-2,12-diyl)bis(N,N-bis(4-methoxyphenyl)aniline)",
                          "NiO-np | M3",
                          "PEDOT:PSS | Carbon-nt",
                          "Au@SiO2-nw | Spiro-MeOTAD",
                          "Pyridine | Spiro-MeOTAD",
                          "PEDOT:PSS | PTPD",
                          "PARA1",
                          "PEDOT:PSS | PCP-Na",
                          "AgI-QDs",
                          "TTPA-BDT",
                          "M7-Br",
                          "PANI-PAMPSA",
                          "C13-FAS | Spiro-MeOTAD",
                          "B1",
                          "LD29",
                          "SM09",
                          "ZnPc-flu-ZnPc",
                          "BTT(DPP)3-C8",
                          "KR360",
                          "Si-PO-2CN",
                          "IEICO-4F | Spiro-MeOTAD",
                          "SWCNTs | PMMA",
                          "HfO2 | PTAA",
                          "BzTA",
                          "DR3TBDTT; PDMS",
                          "TPA-QA-TPA",
                          "Cu0.33Cr0.67O2",
                          "CuSCN | NPB",
                          "H1",
                          "P3HT | P3HT; PMMA",
                          "TPAC0M",
                          "CZ-TA",
                          "V2O5 | P3CT-K",
                          "KR353",
                          "Spiro-MeOTAD | CuI",
                          "X61",
                          "CuS-np",
                          "Z8",
                          "NiO-c | CuGaO2-mp",
                          "C12-carbazole",
                          "CA-Br",
                          "Carbon-nt; P3HT",
                          "ZnChl",
                          "PDPP-3T",
                          "pp-TPE-4DPA",
                          "Triazine-Ph-OMeTPA",
                          "TIPS-pentacene",
                          "V1000",
                          "NiO-np | ME1",
                          "PIDT-DFBT",
                          "PCT",
                          "NiPcS4",
                          "SiO2",
                          "CTAB | Spiro-MeOTAD",
                          "TPA-BP-TPA",
                          "PPyra-TXA",
                          "r-GO-BH",
                          "Crosslinked TCTA-BVP",
                          "Sym-HTPcH",
                          "VB-DAAF",
                          "Spiro-MeOTAD | V2O5",
                          "OMeTPA-TPA",
                          "TPA-OMeTPA",
                          "PCA-1",
                          "OMeTPA-FA",
                          "POZ10",
                          "CuInS2-QDs",
                          "PAF-86",
                          "DMFA-FA",
                          "TATCz3",
                          "Carbon; NiS",
                          "BDT2FMeDPA",
                          "c-TCTA",
                          "Spiro-MeOTAD-I",
                          "OMETPA-DPP",
                          "Z1",
                          "TFAP",
                          "NiO-np | PAS",
                          "Ethyl acetate; I2; LiI; TBP",
                          "N3',N3',N6',N6'-tetrakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-3',6'-diamine",
                          "H4",
                          "Carbon-QDs | Spiro-MeOTAD",
                          "M4; PCBM-60",
                          "X23",
                          "ITIC",
                          "HMPDI",
                          "Au-np; P3HT",
                          "Graphene | Spiro-MeOTAD",
                          "TPA-BP-OXD",
                          "PEDOT:PSS | MoS2",
                          "c-OTPD",
                          "Porphyrin-H1",
                          "2,2'-[(4,5-Bis(2-ethylhexyl)-dithieno[2,3-d:2',3'-d']thieno[3,2-b:4,5-b']dipyrrole-2,7-diyl)-bis(3-hexylthien-5,5'-diyl)bis(methane-1-yl-1-ylidine)]dimalononitrile",
                          "CuHePc",
                          "CBP",
                          "S9",
                          "ACR-TPA",
                          "PBTTTV-h",
                          "PDVT-10",
                          "SGT-422",
                          "ZnPc-p-ZnPc",
                          "CI-GO | PTAA",
                          "NiO-c | Cysteine",
                          "DMFA-TPA",
                          "Alkoxy-PTEG",
                          "TATF8HBP",
                          "Ph-OMeTPA",
                          "Y1",
                          "FTA1",
                          "VOx | Cu phtalocyanine",
                          "TBASBP",
                          "V1061",
                          "Spiro-029",
                          "Cu12Sb4S13",
                          "PTB-DCB21",
                          "n-CuBuPc",
                          "DAHI | Spiro-MeOTAD",
                          "HTM-1",
                          "CuAlO2; CuO",
                          "PEDOT:PSS | Au@poly(4-styrenesulfonate)",
                          "Au@CuZnSnSe-np",
                          "M110",
                          "TFDIB | Spiro-MeOTAD",
                          "NaYF4:Yb:Er-np | Spiro-MeOTAD",
                          "Bp-OMe",
                          "PEDOT:PSS | 5,6,11,12-Tetraphenylnaphthacene",
                          "BP-DC",
                          "CuS",
                          "P3",
                          "C8-BTBT",
                          "Ome-TPA-CuPc",
                          "NiO-c | SY3",
                          "asy-PBTBDT",
                          "HS-Ph-SCH3 | Spiro-MeOTAD",
                          "Poly-N-vinylcarbazole | SP-11",
                          "PB2T-SO",
                          "SFX-TPAM",
                          "BTT(DPP)3-EH",
                          "V862",
                          "T40P",
                          "Z1011",
                          "1,3,6,8-tetrakis-(N,N-di-p-methoxyphenylamine)pyrene",
                          "MPA-BTI",
                          "DTP-C6Th",
                          "CS01",
                          "M1",
                          "Poly(2-ethyl-2-oxazoline); PEDOT:PSS",
                          "TPA4C",
                          "M103",
                          "TbT-1",
                          "MFGO",
                          "c-OTPD; TPACA",
                          "s-PANI:PSS",
                          "WT3",
                          "A102",
                          "Spiro-MeOTAD | ODA-FeS2-np",
                          "EHCz-MeFl",
                          "LD22",
                          "ZnPc",
                          "BTT-4",
                          "M115",
                          "Triazine-InT",
                          "Carbon-nt; Graphene oxide",
                          "MC6Cz-9-NPC",
                          "XDB",
                          "WOx",
                          "YN2",
                          "Bifluo",
                          "PEDOT:PSS | TS-CuPc",
                          "FH-3",
                          "Graphene oxide | Carbon-np",
                          "IDT2",
                          "PMAA; Spiro-MeOTAD | Spiro-MeOTAD",
                          "X50",
                          "NiO-np | Choline chloride",
                          "DEPT-SC",
                          "Spiro-MeOTAD | MoO3 | CuPc",
                          "ZnPc(tBu)4",
                          "BTPA-3",
                          "H16",
                          "TTPA-DBQT",
                          "PEDOT:PSS | PbI2",
                          "NiO-np | Al2O3-mp",
                          "L-f",
                          "Me-BPZTPA",
                          "Oleic-acid | P3HT",
                          "SP-01",
                          "2,2'-[(4,5-Bis(2-ethylhexyl)-dithieno[2,3-d:2',3'-d']thieno[3,2-b:4,5-b']dipyrrole-2,7-diyl)-bis(4,3'-dihexyl-2,2'-bithien-5,5'-diyl)bis(methane-1-yl-1-ylidine)]dimalononitrile",
                          "NiCo2O4",
                          "Py-C",
                          "T101",
                          "BEDN",
                          "SO7",
                          "NP-SC6-TiOPc",
                          "PTT | Spiro-MeOTAD",
                          "CdZnSe@ZnSe-QDs",
                          "Py-COF | PTAA",
                          "Li-TFSI; TBP",
                          "XSln1453",
                          "2,8-bis-[2,2-bis(4-methoxyphenyl)ethenyl]-5,11-diethyl-5,11-dihidroindolo[3,2-b]carbazole",
                          "Polymer4",
                          "PolyTPD | PFN",
                          "SM13",
                          "2,5\u2010bis(4,4\u2032\u2010bis(methoxyphenyl)aminophen\u20104\u2032\u2032\u2010yl)\u20103,4\u2010ethylenedioxythiophene",
                          "Z3",
                          "2-((2-(4-(2-ethylhexyl)-4H-dithieno[3,2-b:2\u2032,3\u2032-d]pyrrol-2-yl) thiazol-5-yl)methylene) malononitrile",
                          "H7",
                          "Theophylline | Spiro-MeOTAD",
                          "BPAPF",
                          "Acetonitrile; B2; LiBr",
                          "OMETPA-BDT",
                          "CF-BTz-ThR",
                          "SDTFCz2",
                          "Si-OMeTPA",
                          "EGO-PPV | PFN-P2",
                          "PANI-PAMSA",
                          "SP-12",
                          "Ethyl acetate; I2; LiI; TBP; Urea",
                          "TPTPA | MoO3",
                          "MC8-TPA",
                          "CZTS-np",
                          "1,4-di(1H-imidazol-2-yl)benzene-C6",
                          "PbS-QDs | Spiro-MeOTAD",
                          "Spiro p-xylene",
                          "PEDOT:PSS | 4-bromobenzenediazonium tetrafluoroborate",
                          "3,6-Cz-TPA",
                          "TPTPA | TPTPA; MoO3",
                          "CuInS2 | ZnS-QDs",
                          "V1050",
                          "tri-TPA",
                          "H6",
                          "CzP",
                          "CuPc",
                          "F23",
                          "CsBiBr3-QDs",
                          "NiO-np | Spiro-MeOTAD",
                          "Triazine-Flu",
                          "PMMA; rGO",
                          "TB4-ZnPc",
                          "2,7-Bis(4,4\u2032-dimethoxydiphenylamine)-9- (bis(methylsulfanyl)methylene)fluorene",
                          "YT2",
                          "PhNa-1T",
                          "Ag:CuO-nanofibers | PEDOT:PSS",
                          "Chl\u20102",
                          "cyclopenta[2,1-b; 3,4-b\u2032]dithiophene",
                          "COPV6",
                          "PTAA | TFPPy-ETTA",
                          "DBFMT",
                          "Pt-np",
                          "BDT0FMeDPA",
                          "PtMePy",
                          "H-Bi",
                          "3,6-di(2H-imidazol-2-ylidene)cyclohexa 1,4-diene-C6",
                          "Z2",
                          "PDPP3T",
                          "NiO-c | Sn2O3-qd",
                          "MC8-9-NPC",
                          "PTAA-1F",
                          "HTM5",
                          "NiO-np | TPI-2MEO",
                          "Spiro-MeOTAD | CANP | Spiro-MeOTAD",
                          "br-4C",
                          "Carbozole @ S12",
                          "IDF-DiDPA | MoO3",
                          "TPE-S",
                          "CsPbBr3-np | Spiro-MeOTAD",
                          "Rubrene | PEDOT:PSS",
                          "HA2",
                          "V2Ox | PEDOT:PSS",
                          "TP-FTzF-TP",
                          "SFT-TPA",
                          "3,6-Ben",
                          "NH-2,6",
                          "FU7",
                          "MoS2-QDs | Spiro-MeOTAD",
                          "PCDTBT",
                          "NiO-c | MoOx",
                          "Polymer2",
                          "NiO-c | n-Butylamine",
                          "MoO3 | PTAA",
                          "TOPO",
                          "HBZ-71",
                          "DFBT(DTS-FBTTh2)2",
                          "Cobalt\u2013porphyrin",
                          "TPA-ANR-TPA",
                          "Spiro-OEtTAD",
                          "TTE-2",
                          "NiO-c | NiO-nw",
                          "MEH-PPV-20",
                          "PEH-3",
                          "CsSnBr3-QDs",
                          "3,6-PCzTPA",
                          "NiO-c | Mercaptoethylamine chlorate",
                          "HPB-OMeDPA",
                          "PTh; Graphene",
                          "SCZF-5",
                          "Titanylphthalocyanine",
                          "NiMgLiO",
                          "BTTP",
                          "Spiro-TAD",
                          "3-Butylthiophene | Spiro-MeOTAD",
                          "Graphene oxide; NiO-c",
                          "BDT-PTZ",
                          "PMA",
                          "Cu3SbS4-np",
                          "Ni-acetate",
                          "TcTa",
                          "Ph-TPA-2A",
                          "P1",
                          "D205 | Spiro-MeOTAD",
                          "PDPPT-TT",
                          "ATT-ODec",
                          "Spiro-CPDT",
                          "P3HT; PFN",
                          "CuPcNO2-OMFPh",
                          "BChl-1",
                          "Spiro-OPrTAD",
                          "Al2O3-c",
                          "Carbon",
                          "PDTSTTz-4",
                          "Spiro-MeOTAD | MWCNTs; Spiro-MeOTAD",
                          "2,7-triphenylamine-carbazole",
                          "NiO-c | Ni",
                          "V859",
                          "DPBTD-B[BMPDP]2",
                          "CuSCN | rGO",
                          "2,2\u2032-[(4,5-Bis(1-octylnonyl)-dithieno[2,3-d:2\u20323\u2032-d]thieno[3,2-b:4,5-b\u2032]dipyrrole-2,7-diyl)bis(thien-5,5\u2032-diyl)bis(methane-1-yl-1-ylidine)]dimalononitrile",
                          "F4-TCNQ",
                          "PyThTPA",
                          "PSS-g-PANI:PFI",
                          "Spiro-TBB | Spiro-TBB",
                          "PDMS",
                          "NiO-np | TPI-6MEO",
                          "Lignosulfonate; PEDOT:PSS; PDA",
                          "TAPbI3 | Spiro-MeOTAD",
                          "Spiro-MeOTAD | WO3",
                          "DPPZnP-TSEH; PCBM-60 | BCP",
                          "BI25",
                          "PANI",
                          "T80P",
                          "CDTh 1",
                          "Au-np; PEDOT:PSS",
                          "4-(4-Phenyl-4-alfa-naphthylbutadienyl)-N,N-di(4-tolyl)-phenylamine",
                          "FBA3",
                          "Spiro-MeOTAD | WOx",
                          "LCS01",
                          "MeO-FDPA",
                          "TiO2-np | NiO-np",
                          "BTT-TPA",
                          "Cu0.67Cr0.33O2",
                          "P(VDF-TrFE) | Spiro-MeOTAD",
                          "NPB",
                          "TQ2",
                          "alkylammonium bromide | Spiro-MeOTAD",
                          "TPE-2,7-Carbazole W1",
                          "H64",
                          "BTTI-C6",
                          "Z30",
                          "CZTPA-2",
                          "PCBM-60 | bis-C60",
                          "TPASB",
                          "NiO-np | PTAA",
                          "KTM3",
                          "S197",
                          "Au-np; Graphene oxide",
                          "JY6",
                          "NiO-c | CuGaO2-c",
                          "TCPBr | Spiro-MeOTAD",
                          "PET-OMeDPA",
                          "AIGS-QDs",
                          "Polyrotaxane",
                          "PSQ2",
                          "KM05",
                          "CPE-K",
                          "NiO-np | ME3",
                          "Unknown",
                          "TPL",
                          "pTPA-DBTP",
                          "OAI | DM",
                          "NPB; PTAA",
                          "PEDOT:PSS | Al2O3-mp",
                          "PO-Spiro-OMeTAD",
                          "Carbon-nt | Spiro-MeOTAD",
                          "CON-16 | PEDOT:PSS",
                          "LHTM-1",
                          "CuGaO2",
                          "COPV3",
                          "PFO",
                          "CIGS",
                          "NiMgO-c",
                          "P3TAA",
                          "Carbon-nt",
                          "PffBT4T-2OD | WOx",
                          "C12H10B2O4 | Spiro-MeOTAD",
                          "NTPA",
                          "PBT",
                          "Li4Ti5O12 | Spiro-MeOTAD",
                          "2,2\u2032-[(4,5-Bis(1-octylnonyl)-dithieno[2,3-d:2\u20323\u2032-d]thieno[3,2-b:4,5-b\u2032]dipyrrole-2,7-diyl)bis(2,3-dihydrothieno[3,4-b][1,4]dioxin-5,5\u2032-diyl)bis(methane-1-yl-1-ylidine)]dimalononitrile",
                          "CuP",
                          "YN3",
                          "ZnChl-4",
                          "Carbon-np; PEDOT:PSS",
                          "2PACz",
                          "Spiro-MeOTAD | PbS",
                          "BTT-1",
                          "BTF4",
                          "PTAA; Spiro-MeOTAD",
                          "Y2",
                          "DNA",
                          "NiO-c | SDBS",
                          "PTZ2",
                          "NP2",
                          "IEICO; PBDTTT-E-T | MoO3",
                          "OIPC-I",
                          "2-F-br-4C",
                          "T1",
                          "B3",
                          "B63",
                          "COPV7",
                          "PCDTBT1",
                          "PBDTT-SeDPP; PCBM-70",
                          "Graphene oxide",
                          "DMZ",
                          "PMMA",
                          "Yih-2",
                          "ZnNc",
                          "PEDOT:PSS | PFN-P1",
                          "TTE-1",
                          "PbS",
                          "DH-MeO-FDPA",
                          "TPP-SMeTAD",
                          "DTS",
                          "SGT-409",
                          "S,N-heteropentacene",
                          "Poly-N-vinylcarbazole | SP-12",
                          "Spiro-MeOTAD | SWCNTs",
                          "1F-SAM | PEDOT:PSS",
                          "CPEPh-Na",
                          "KR216",
                          "TaTm | MoO3",
                          "SFXDAnCBZ",
                          "Carbon-nt | PMMA",
                          "PTAA | Spiro-MeOTAD",
                          "CuCrO2",
                          "NiO-c | N749",
                          "NiO-c | PhNa-1T",
                          "TQ1",
                          "PbS-QDs",
                          "DM",
                          "DIPO-Ph4",
                          "DTh101",
                          "PPyra-XA",
                          "IDF-TeDPA | MoO3",
                          "NiPc | V2O5",
                          "HTM1",
                          "NiO-c | NiO-mp",
                          "CuSeCN",
                          "PTQ10 | PTAA",
                          "Th101",
                          "PolyTPD",
                          "PBDTT-SeDPP",
                          "EDOT-MPH",
                          "2,7-Cbz-EDOT",
                          "DR3TBDTT",
                          "V1221",
                          "BTT-3",
                          "P3HT; SWCNTs | Spiro-MeOTAD",
                          "Ni | NiMgO | PVP",
                          "2F-SAM | PEDOT:PSS",
                          "BDT:TT",
                          "AQ | Spiro-MeOTAD",
                          "Poly(1,4-phenylenevinylene)",
                          "PCPDTBT",
                          "PEDOT:PSS | Al2O3-np",
                          "2,7-Pyr",
                          "JK-216D",
                          "BTSe-1",
                          "S:DIB",
                          "KR321",
                          "Spiro-TTB",
                          "PEDOT:P(SS-co-TFPMA)",
                          "X62",
                          "(BMPA-EDOT)3-TPA",
                          "TPA-BPFN-TPA",
                          "CoTh-TTPA",
                          "THY-4",
                          "Fu-OMeTPA",
                          "PEDOT:PSS-NH2-OH",
                          "VOx",
                          "TPADPP-1",
                          "M6",
                          "WO3-nw@PEDOT | PEDOT:PSS",
                          "Al2O3-c | PEDOT:PSS",
                          "HfO2 | Acetonitrile; I2; LiI; TBP",
                          "T60P",
                          "Graphene oxide | PFNBr",
                          "Spiro-MeOTAD | rGO",
                          "Al2O3-mp | MeO-DATPA",
                          "NiO-c | BBA",
                          "YT1",
                          "BAI | DM",
                          "3F-SAM | PEDOT:PSS",
                          "P3HT | Al2O3-mp",
                          "SY1",
                          "Triazine-Th-OMeTPA",
                          "Co3O4",
                          "SGT-411",
                          "NiO-c | FDA",
                          "BDT-POZ",
                          "J61-ITIC",
                          "SWCNTs | Graphene oxide",
                          "Spiro-MeOTAD | MoO3",
                          "CuInSe2-QDss",
                          "P3OT",
                          "T(EDOT-TPA)2",
                          "H5",
                          "apv-T",
                          "Graphene | PEDOT:PSS",
                          "FB-OMeTPA",
                          "TT80",
                          "BDT-4MeOTPA",
                          "CGS",
                          "2,4-spiro",
                          "TSHBC",
                          "TCP-OC8",
                          "YC04",
                          "SGT-404",
                          "P1Z1",
                          "Nafion; PEDOT:PSS",
                          "T5H-OMeDPA",
                          "(n-BuO)4ZnPc",
                          "SBFCz2",
                          "Polymer1",
                          "M3; PCBM-60",
                          "CzPF",
                          "PEDOT:PSS | SrGO",
                          "n-octylammonium iodide | Spiro-mF",
                          "CuSCN-nw",
                          "Py | Spiro-MeOTAD",
                          "PTAA | MoS2",
                          "B186",
                          "P3HT; SWCNTs | PEDOT:PSS",
                          "Al2O3 | Spiro-MeOTAD",
                          "ZnO-nw | PEDOT:PSS",
                          "NiO-c | Mg(AcO)2",
                          "HTM",
                          "Au-nw | Spiro-MeOTAD",
                          "NiO | PS",
                          "NiO-c | EPA",
                          "MeO-TPD",
                          "PTB7-Th",
                          "CuI | PbPc",
                          "Cu0.2Cr0.8O2",
                          "1\u2010adamantylamine | Spiro-MeOTAD",
                          "NiO-c | DEA",
                          "Imidazolium iodide | P3HT",
                          "Graphene; TSHBC  @ 5:1",
                          "TFM",
                          "YC01",
                          "PEDOT:PSS | NPB",
                          "BTPA-6",
                          "S,N-Heteroacene 2",
                          "Ag-np; PEDOT:PSS",
                          "COTT-1 | COTT-2",
                          "S7",
                          "WO3-nw",
                          "PdMe2Pc",
                          "PDCBT | WOx",
                          "PPDT2FBT",
                          "SWCNTs | Spiro-MeOTAD",
                          "CAS",
                          "Graphene; P3HT",
                          "Pentacene",
                          "Q219",
                          "Polythiophene",
                          "S,N-Heteroacene 1",
                          "CT3",
                          "MnS",
                          "PTAA | LiF",
                          "NiCoO",
                          "CuSCN | Spiro-MeOTAD",
                          "PDI",
                          "Tetrakis(4-methoxyphenyl)spiro[cyclopenta[1,2-b:5,4-b']dipyridine-5,9'-fluorene]-2',7'-diamine",
                          "V1207",
                          "Dispiro-OMeTAD",
                          "Au-np | Spiro-MeOTAD",
                          "PEDOT",
                          "SnS",
                          "NiO-np | Choline chloride; Glycerol",
                          "BEDCE | Spiro-MeOTAD",
                          "PZn-TPA-O",
                          "PTAA | PFN-Br",
                          "PP-Spiro",
                          "CuO2",
                          "MoO3 | TaTm",
                          "Phenethylamine | Spiro-MeOTAD",
                          "CdSe-QDs | Spiro-MeOTAD",
                          "PEDOT:PSS | MoO3",
                          "p-PFP-O | PTAA",
                          "PBTI-C",
                          "PTAA; TPFB",
                          "F6-TCNNQ; TaTm",
                          "NiO-c | SY1",
                          "TZ2",
                          "mDPA-DBTP",
                          "Montmorillonite | Spiro-MeOTAD",
                          "PCA-2",
                          "InP-np | Spiro-MeOTAD",
                          "TPA",
                          "H2",
                          "IEICO | MoO3",
                          "CsCuBr3-QDs",
                          "PolyTDP",
                          "NiPc-Cou",
                          "IDT1",
                          "TBC-1",
                          "PCPDTBT | PEDOT:PSS",
                          "Q197",
                          "P3HT | PEDOT:PSS",
                          "F16CuPc | Spiro-MeOTAD",
                          "TPB-4-MOTPA",
                          "TATSFHBP",
                          "ZnPc-p-ZnPc 1",
                          "HL-2",
                          "Tetracene | Spiro-MeOTAD",
                          "XOP",
                          "2,7-PCzTPA",
                          "SY4",
                          "TPDI",
                          "C60",
                          "BTTI-C12",
                          "Q205",
                          "YK1",
                          "PTB7:Th",
                          "ZnChl-1",
                          "NiO-c | PTAA",
                          "iDM1",
                          "THY-2",
                          "mp-SFX-3PA",
                          "CZ-STA; CZ-TA",
                          "AS37",
                          "TaTm",
                          "CuInS2 | Al2O3-np",
                          "P3HT | WOx",
                          "Azu-Oct",
                          "Imidazonium iodide | Spiro-MeOTAD",
                          "PEDOT; Spiro-MeOTAD",
                          "Al2O3-np | TPA-ZnPc",
                          "P3HT; SWCNTs-PhOMe",
                          "ADAHI",
                          "JW8",
                          "COPV5",
                          "NiO-c | PEAI",
                          "PTAA-2F",
                          "Cu2CoSn4-np",
                          "PBDT(2F)T",
                          "PEDOT:PSS | Black phosphorous QDs",
                          "PEDOT:PSS | VOx",
                          "BTT-2",
                          "Pentafluorobenzenethiol | Spiro-MeOTAD",
                          "TFB | Al2O3-np",
                          "CMO",
                          "NiCo2O4-np | Spiro-MeOTAD",
                          "TBC-2",
                          "1,3,6-tris-(N,N-di-p-methoxyphenylamine)pyrene",
                          "CuSCN | Graphene",
                          "C12-silane-SAM | Spiro-MeOTAD",
                          "Theophylline | PTAA",
                          "ZnPy",
                          "MPA-BTTI",
                          "Z1013",
                          "Ni | Au",
                          "P8TTT",
                          "CuSCN",
                          "P3OFHT",
                          "NH-2,7",
                          "NiO-c | CuGaO2",
                          "NiO-c | PMMA",
                          "PANI:PSS",
                          "P3HT | MoO3",
                          "CuAlO2 | PEDOT:PSS",
                          "CuSCN | Ta:Wox-np",
                          "No HTM",
                          "TPD-4EtCz",
                          "L-H",
                          "PT-DC",
                          "PDQT",
                          "DNA-CTMA",
                          "2EGO-PPV",
                          "Co0.695Cu0.305O",
                          "PDMS | CuSCN",
                          "PB2T-O",
                          "NiO-c",
                          "GO-nanoribbons",
                          "CMP",
                          "Azu-Me",
                          "Ag-nw; PEDOT:PSS",
                          "Ppy",
                          "YC06",
                          "TPD-4MeTPA",
                          "LGC-D013",
                          "NiO-np | KCl",
                          "M108",
                          "SiTP-OMeTPA",
                          "TBC-3",
                          "Cz-Pyr",
                          "PEDOT:PSS | PEDOT:PSS",
                          "10-butyl-3,7-diphenylphenoxazine",
                          "HTM-P1",
                          "apv-EC",
                          "Grafted rGO; Polyacrylonitrile",
                          "4C",
                          "CuI; CuSCN",
                          "P3HT; SWCNTs",
                          "JK-217D",
                          "NiO",
                          "ATT-OBu",
                          "DFH",
                          "NiO-c | SY2",
                          "HfO2 | CuI",
                          "DFTAB",
                          "0F",
                          "TAT-t BuSty",
                          "NiO-c | PTZ-1",
                          "DOR3T-TBDT",
                          "SWCNTs | PEDOT:PSS",
                          "PABA | Spiro-MeOTAD",
                          "BTBDT",
                          "PTAA | PMMA",
                          "PTZ1",
                          "M3",
                          "Cu2ZnSn4-np",
                          "KR374",
                          "P4",
                          "SGT-421",
                          "Al2O3-mp | Spiro-MeOTAD",
                          "V841",
                          "CuCrO2-np",
                          "BTX-OMeTAD",
                          "N1,N1',N1'',N1'''-(ethene-1,1,2,2-tetrayltetrakis(benzene-4,1-diyl))tetrakis(N1-(4-(dimethylamino)phenyl)-N4,N4-dimethylbenzene-1,4-diamine)",
                          "H-Ca",
                          "PTAA | Car-ETTA",
                          "TPA-BPV-TPA",
                          "MWCNTs; Spiro-MeOTAD",
                          "M107",
                          "PEDOT:PSS | Rubrene",
                          "H111",
                          "OTPA-ZnPc",
                          "PTPD | PFN",
                          "Azu-Bu",
                          "PEDOT:PSS | VB-DAAF",
                          "TRUX-E-T",
                          "DR3T",
                          "PEDOT:GSL",
                          "Fused-F (Tris[[4-[3,3'-dihexylsilylene-2,2'-bithiophene]-7-[5\u2032\u2032-n-hexyl-(2,2\u2032; 5\u2032,2\u2032\u2032-terthiophen\ne)-5-yl]-benzo[c]-[1,2,5]thiadiazole]-2,6,10-yl]-4,4,8,8,12,12-hexamethyl-4H,8H,12\nHbenzo[1,9]quinolizino [3,4,5,6,7,-defg]acridine )",
                          "PVDF-HFP | Spiro-MeOTAD",
                          "PEAI | PTAA",
                          "TS-CuPc",
                          "CsOAc | Spiro-MeOTAD",
                          "Ph-TPA-8A",
                          "ATT-OMe",
                          "PEDOT:PSS | PCPDTBT",
                          "PFN; PTPD",
                          "HPDI",
                          "PNP-BC",
                          "Oleylamine | Spiro-MeOTAD",
                          "CuOx",
                          "Z26",
                          "TPB(2-TPTZ)",
                          "P3CT-CH3NH2",
                          "CuMe2Pc",
                          "G2",
                          "KM07",
                          "JW6",
                          "MoO3 | TPA-2,7-FLTPA-TPA",
                          "HS-Ph-NO2 | Spiro-MeOTAD",
                          "DM1P",
                          "N2,N2,N12,N12-Tetrakis(4-methoxyphenyl)-9-methyl-9H-naphtho[2,1-c]carbazole-2,12-diamine",
                          "r-GO-NH",
                          "Ph-inv-OMeTPA",
                          "KR145",
                          "ZnP",
                          "3,6-triphenylamine-carbazole",
                          "Co-Porphyrin",
                          "D102",
                          "H-PheDOT",
                          "P-OR",
                          "Z33",
                          "Polypseudorotaxane",
                          "TDAB",
                          "Z29",
                          "TPA\u2010ANT\u2010TPA",
                          "SYN1",
                          "G1",
                          "HfO2 | Spiro-MeOTAD",
                          "V2O5 | PEDOT:PSS",
                          "CrO3",
                          "BV-FNPD",
                          "V1036:C4",
                          "Si-QDs | Spiro-MeOTAD",
                          "pDPP5T-2 | WOx",
                          "(2Z,2'Z)-2,2'-(((2,4-dimethylphenyl) azanediyl) bis([1,1'-biphenyl]-4',4-diyl)) bis(3-(4-(diphenylamino) phenyl) acrylonitrile",
                          "EH44",
                          "H2Pc-1",
                          "DPIE",
                          "DAI | DM",
                          "AZ1",
                          "D103",
                          "N-CuMe2Pc; P3HT",
                          "Cu2NiSn4-np",
                          "TT-3,6-TPA",
                          "Asy-PBTBDT",
                          "PTAA | PPNBr",
                          "PTA",
                          "CuPrPc",
                          "HA1",
                          "TPAC2M",
                          "M:OO",
                          "Cu:Ni acetate",
                          "YN1",
                          "ACE-QA-ACE",
                          "Spiro-OiPrTAD",
                          "PDCBT | Ta-Wox",
                          "tetra{4-[N,N-(4,4'-dimethoxydiphenylamino)]phenyl}ethene",
                          "Q222",
                          "DPP-Ome",
                          "P3CT-Na",
                          "PFN; TT",
                          "Spiro-MeOTAD | MoOx",
                          "CdSe-Qd | CsPbI3-QD | Spiro-MeOTAD",
                          "CoPcNO2-OPh",
                          "CW4",
                          "Selenium",
                          "3,6 \u00b4-BCz-OMeTAD",
                          "SAF\u2010OMe",
                          "2TPA-2-DP",
                          "LiF | PEDOT:PSS",
                          "NiO-c | PTZ-2",
                          "DM1",
                          "DPIO",
                          "PST1",
                          "PBDTP-DTDPP",
                          "BTPA-4",
                          "CsSnI2.95F0.05",
                          "P3TAA-co-P3HT",
                          "IDTC6-TPA",
                          "PBDTTT-C",
                          "2TPA-1-DP",
                          "NiO-c | Al2O3-mp; Au@SnO2-nw",
                          "4,4'-(5,10,11-Trihexyl-10,11-dihydro-5H-thieno[2\u2032,3':4,5]pyrrolo [3,2-g]thieno[3,2-b][1,2,3]triazolo[4,5-e]indole-2,8-diyl)bis(N,N-bis(4- methoxyphenyl)aniline)",
                          "FT55",
                          "BAI | Spiro-MeOTAD",
                          "Poly TPD-NPD",
                          "pentaerythritol tetrakis(3-mercaptopropionate) | Spiro-MeOTAD",
                          "C6Br | Spiro-MeOTAD",
                          "Spiro-MeOTAD | TS-CuPc",
                          "TT-2,5-TPA",
                          "DBC-OMeDPA",
                          "DPA-QA-DPA",
                          "PTB7-TH",
                          "Co(II)P",
                          "P1C1",
                          "MTDATA",
                          "CW3",
                          "V1225",
                          "FBA1",
                          "Spiro-MeOTAD",
                          "DTS(IIThThHEX)2",
                          "KR378",
                          "P3HT | WO3",
                          "EtheneTTPA",
                          "M105",
                          "CT4",
                          "VB-MeO-FDPA",
                          "THY-3",
                          "NiPc",
                          "MoS2 | Spiro-MeOTAD",
                          "pBBTa\u2010BDT1",
                          "Py-OMe",
                          "Cu:NiO-np",
                          "HTM-M1",
                          "CuSCN-2D",
                          "TT0",
                          "P3CT-Na | PASP",
                          "Spiro-MeOTAD | Cu2O",
                          "Graphene | AuCl3 | PEDOT:PSS",
                          "PTAA | CuSCN",
                          "rGO | PTAA",
                          "J2",
                          "DTPC8-ThDTPA",
                          "CF-Sp-BTh",
                          "TaTm | F6-TCNNQ; TaTm",
                          "PEDOT:PSS | Au@SiO2-nw",
                          "NiCo2O4-np",
                          "FH-0",
                          "FEH",
                          "IrTiOx-c",
                          "m-MTDATA",
                          "TPA-TPM",
                          "Spiro-OBuTAD",
                          "MoOx | Spiro-MeOTAD",
                          "Co(II)P; Co(III)P",
                          "H2Pc",
                          "Co(III)P",
                          "NiO-c | UiO-66",
                          "PQT-12",
                          "N,N-bis-[7-(4,4\u2032-dimethoxydiphenylamine)-9- (bis(methylsulfanyl)methylene)fluoren-2-yl]-4-methoxyaniline",
                          "CJ-02",
                          "M111",
                          "PVK",
                          "C202",
                          "MoO3 | TPA-3,6-FLTPA-TPA",
                          "P(BDTT-tPPD)",
                          "PTB7 | WOx",
                          "DIB; SeS2",
                          "Polyacrylonitrile",
                          "rGO | CuSCN",
                          "TT1",
                          "PTAA | NiO-c",
                          "MEH; PPV",
                          "PTAA | CuGaO2-mp",
                          "SnS-np | NiO-np",
                          "PEDOT:PSS | PFN",
                          "CuPc | PTAA",
                          "PBTTT-14",
                          "V1160",
                          "B2",
                          "PTB8",
                          "CuI",
                          "5,5',5''-(5,5',5''-(nitrilotris(benzene-4,1-diyl))tris(furan-5,2-diyl))tris(2-octylisoindoline-1,3-dione",
                          "1,6-di{3-[2-(4- methylphenyl)vinyl]carbazol-9-yl}hexane",
                          "RCP",
                          "PCBM-60 | BCP",
                          "Azu-EH",
                          "CuPs-TIPS",
                          "InP-np",
                          "Hexamethyl-substituted subphthalocyanine",
                          "Poly[4,8-bis(2-(4-(2-ethylhexyloxy)3-fluorophenyl)-5-thienyl)benzo[1,2-b:4,5-b'] dithiophenealt-1,3-bis(4-octylthien-2-yl)-5-(2-ethylhexyl)thieno[3,4-c]pyrrole-4,6-dione",
                          "HfO2 | Acetonitrile; I2; LiI; PMII; Propylene glycol; TBP",
                          "BPZTPA",
                          "PDO2",
                          "CrOx",
                          "Z35",
                          "F6-TCNNQ; TaTm | TaTm",
                          "ZnPor",
                          "TPA-NADT-TPA",
                          "Black phosphorous nanosheets | Spiro-MeOTAD",
                          "SP-02",
                          "PCBM-60 | Carbon",
                          "Spiro-N",
                          "PEDOT:PSS | TPD",
                          "3-Ethylthiophene | Spiro-MeOTAD",
                          "Spiro-E",
                          "CuAlO2",
                          "PdMePy",
                          "NDT",
                          "HS-Ph-OCH3 | Spiro-MeOTAD",
                          "TPE-2,7-Carbazole W2",
                          "CsSnBrI2-QDs",
                          "PEDOT:PSS | VB-MeO-FDPA",
                          "TTA2",
                          "TPA2C",
                          "BDT-2D",
                          "Vox",
                          "YC-2",
                          "Spiro-s",
                          "PII2T8TSi",
                          "PEDOT:PSS | CuSCN",
                          "SrCl2 | Spiro-MeOTAD",
                          "V852",
                          "2H-MoS2 | Spiro-MeOTAD",
                          "V866",
                          "ZnPc-DPP-ZnPc",
                          "PEA2PBI4",
                          "PTPAANT",
                          "FA-CN",
                          "Diazo-OMeTPA",
                          "EVA; SWCNTs | Spiro-MeOTAD",
                          "H3",
                          "Red Phosphorous-QDs",
                          "3EGO-PPV",
                          "Pyrmidine | Spiro-MeOTAD",
                          "WY-2",
                          "NiO-c | MOF-808",
                          "FDT",
                          "POSS-NH2 | Spiro-MeOTAD",
                          "MEH-PPV; PFN",
                          "dly-1",
                          "Spiro-MeOTAD | VOx",
                          "COPV2",
                          "ODA-FeS2-np",
                          "PEDOT:PSS | Pyrene",
                          "F8T2e",
                          "P3HT; PCBM-60",
                          "SM",
                          "N2',N2',N7',N7'-tetrakis(4-methoxyphenyl)spiro[fluorene-9,9'-xanthene]-2',7'-diamine",
                          "PPV",
                          "1-Donecyl Mercaptan | Spiro-MeOTAD",
                          "X25",
                          "PEDOT:PSS | Ca",
                          "F22",
                          "DPPS | Spiro-MeOTAD",
                          "TPA-MeOPh",
                          "BT41",
                          "NiO-nanowalls | Diethanolamine",
                          "S101",
                          "P3TI",
                          "3-Methylthiophene | Spiro-MeOTAD",
                          "H-Di",
                          "X26",
                          "NiO-np | Br-BPA-SAM",
                          "COPV1",
                          "MeO-BPZTPA",
                          "PEDOT:PSS | PTMA-BP",
                          "C5PcH2 | MoOx",
                          "BL07",
                          "Porphyrin",
                          "JW7",
                          "PEDOT:PSS | Na3C6H5O7",
                          "tetra-substituted azulene",
                          "X18",
                          "P-R",
                          "BDT-C1",
                          "Phosphor-QDs",
                          "PCBZANT",
                          "TPD-4MeOTPA",
                          "MoO3 | TPBi | TaTm",
                          "Bifluo-OMeTAD | MoO3",
                          "ACE\u2010ANT\u2010ACE",
                          "Cu2ZnSnS4",
                          "CIGGSe-np",
                          "DMF; I2; PVA; TBAI",
                          "PAH 1",
                          "NiO-c | Al2O3-mp; Au@SnO2-np",
                          "DORDTS\u2013TFBT",
                          "PEDOT:PSS | Graphene oxide; PEG",
                          "PEDOT:PSS | Graphene oxide",
                          "TPA-TVT-TPA",
                          "I2-electrolyte",
                          "PDBD-T",
                          "WO3 | Spiro-MeOTAD",
                          "TPA-AZO",
                          "YT4",
                          "Cs-oleate | Spiro-MeOTAD",
                          "TPDCN",
                          "YD2-o-C8 | Spiro-MeOTAD",
                          "Porphyrin-H2",
                          "PEDOT:PSS | PolyTPD",
                          "Th-OMeTPA",
                          "PDCBT | Ta:WOx",
                          "MoO3 | PEDOT:PSS",
                          "PVAc",
                          "Ph-TPM",
                          "CuPc | Spiro-MeOTAD",
                          "CuEtPc",
                          "TTA1",
                          "3,6-Pyr",
                          "CuGaO2-np | CuSCN",
                          "TPFPB | Spiro-MeOTAD",
                          "PhCz-4MeOTPA",
                          "EtheneDTPA",
                          "CDTh-EtHex 2",
                          "PZn-2FTPA",
                          "X22",
                          "NiO-c | PS",
                          "2F",
                          "PS | Spiro-MeOTAD",
                          "C101",
                          "NiO-nanowalls"
                        ]
                      }
                    }
                  ]
                },
                "name": "stack_sequence",
                "description": "The stack sequence describing the hole transport layer. Use the following formatting guidelines\n- With the HTL, we refer to any layer between the substrate and the perovskite in a pin-device, and any layer between the perovskite and the back contact in a nip-device.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\n- If no hole transport layer, state that as \u2018non\u2019\n- Use common abbreviations when appropriate but spell it out if risk for confusion.\n- If a material is doped, or have an additive, state the pure material here and specify the doping in the columns specifically targeting the doping of those layers.\n- There is no sharp well-defined boundary between when a material is best considered as doped or as a mixture of two materials. When in doubt if your material is best described as doped or as a mixture, use the notation that best capture the metaphysical essence of the situation.\n- There are a lot of stack sequences described in the literature. Try to find your one in the list. If it is not there (i.e. you may have done something new) define a new stack sequence according to the instructions.\nExample:\nSpiro-MeOTAD\nPEDOT:PSS\nnone\nNiO-c\nPTAA",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "7.8",
                          "nan | 250.0",
                          "2.5 | 30.0",
                          "15.0 | 10.0",
                          "89.0",
                          "90.0",
                          "2.0 | 50.0",
                          "250.0 | 70.0",
                          "100.0 | 10.0",
                          "40.0 | nan",
                          "325.0",
                          "50.0",
                          "220.0",
                          "50.0 | 200.0",
                          "137.0",
                          "180.0",
                          "45.0",
                          "20.0 | 40.0",
                          "nan | 130.0",
                          "167.0",
                          "nan | 33.0",
                          "168.0",
                          "nan | 160.0",
                          "803.0",
                          "0.0",
                          "10.0 | 6.0 | 1.0",
                          "259.0",
                          "10.0 | 160.0",
                          "300.0 | 15.0",
                          "15.0 | 150.0",
                          "65.0 | 1400.0",
                          "35.6",
                          "60.0 | 10.0",
                          "14.0 | 3.0",
                          "300.0 | 5.0",
                          "25.0 | 4.0",
                          "95.0",
                          "nan | 44.0",
                          "2.4",
                          "5.0 | 2.0",
                          "87.0",
                          "10.0 | 90.0",
                          "70.0",
                          "41.0",
                          "127.0",
                          "193.0",
                          "150.0 | 40.0",
                          "11.0",
                          "25.0 | 260.0",
                          "5.7",
                          "500.0",
                          "5.0 | nan",
                          "2000.0 | nan",
                          "73.0",
                          "184.0",
                          "4.0 | nan",
                          "76.0",
                          "True",
                          "2000.0",
                          "1.0",
                          "54.0",
                          "234.0",
                          "10.0 | 5.0",
                          "0.7 | nan",
                          "260.0",
                          "175.0",
                          "267.0",
                          "20.5",
                          "2.0 | 400.0",
                          "240.0",
                          "50.0 | 50.0",
                          "2.5 | 20.0",
                          "9.0 | nan",
                          "35.0 | 8.0",
                          "600.0 | nan",
                          "1.5 | 180.0",
                          "330.0",
                          "810.0",
                          "21.0",
                          "80.0 | 280.0",
                          "26.0",
                          "101.0",
                          "809.0",
                          "85.0",
                          "250.0 | 40.0",
                          "321.0",
                          "30.0 | 40.0",
                          "80.0 | 120.0",
                          "nan | 150.0",
                          "9.0",
                          "12.0 | 3.0",
                          "5.0 | 40.0",
                          "176.0",
                          "136.0 | 5.0",
                          "8.0",
                          "10.0 | 7.0",
                          "nan | 8.0",
                          "nan | 3.0",
                          "278.0",
                          "13.0",
                          "56.0",
                          "nan | 80.0",
                          "35.0 | 10.0",
                          "nan | nan | nan",
                          "650.0",
                          "49.4",
                          "20.0",
                          "136.0",
                          "20.0 | 10.0",
                          "295.0",
                          "52.0",
                          "265.0",
                          "165.0",
                          "70.0 | nan",
                          "40.4",
                          "200.0 | nan",
                          "82.0",
                          "nan | 6.5",
                          "36.0",
                          "6.5",
                          "239.0",
                          "14.0",
                          "20.0 | 2.0",
                          "1.5 | nan",
                          "nan | 100.0",
                          "250.0",
                          "2.0 | 60.0",
                          "21.6 | nan",
                          "10.0 | 10.0",
                          "65.0",
                          "9.2 | 10.0",
                          "16.0 | 200.0",
                          "150.0",
                          "42.4 | nan",
                          "100.0 | 7.0",
                          "7.0 | 10.0",
                          "47.35",
                          "108.0",
                          "9.0 | 200.0",
                          "14.0 | 7.0",
                          "110.0 | 7.0",
                          "811.0",
                          "25.0 | 15.0",
                          "nan | 140.0",
                          "7.9",
                          "12.0 | 7.0",
                          "nan | 20.0",
                          "nan | 150.3",
                          "33.1",
                          "15.0 | nan",
                          "232.0",
                          "2.5 | 40.0",
                          "5.0 | 20.0",
                          "10.0 | 2.0",
                          "1.0 | 180.0",
                          "33.5",
                          "244.0",
                          "50000.0",
                          "40.0 | 10.0",
                          "47.0",
                          "nan | 7.0",
                          "35.0",
                          "111.0",
                          "750.0",
                          "57.0",
                          "135.0",
                          "2.0 | nan",
                          "805.0",
                          "1.0 | nan",
                          "30.0 | 10.0",
                          "258.0",
                          "33.0",
                          "nan | 2.0",
                          "51.0",
                          "2.5",
                          "282.0",
                          "uknnown",
                          "60.0 | nan",
                          "807.0",
                          "2.0 | 20.0",
                          "160.0 | nan",
                          "183.0",
                          "80.0 | 350.0",
                          "35.2 | nan",
                          "20.0 | 20.0",
                          "49.0",
                          "200.0 | 10.0",
                          "23.0",
                          "59.0",
                          "285.0",
                          "90.0 | 80.0",
                          "25.0",
                          "2.8 | nan",
                          "7.5",
                          "40.0 | 350.0",
                          "80.0 | 20.0",
                          "40.0",
                          "98.0",
                          "35.0 | nan",
                          "nan | 150.1",
                          "16.0 | 250.0",
                          "230.0",
                          "75.0",
                          "20.0 | 5.0",
                          "10.0 | nan",
                          "37.5",
                          "60.0 | 5.0",
                          "40.0 | 200.0",
                          "28.0",
                          "480.0",
                          "190.0",
                          "50.0 | nan",
                          "nan | 180.0",
                          "nan | 300.0",
                          "3.0 | nan",
                          "8.0 | 4.0",
                          "0.8 | 180.0",
                          "15000.0",
                          "10.0 | 325.0",
                          "380.0",
                          "700.0",
                          "155.0",
                          "211.0",
                          "14.0 | 14.0",
                          "22.0",
                          "10.0 | 40.0",
                          "145.0",
                          "131.0",
                          "63.0",
                          "60.0 | 3.0",
                          "34.0",
                          "0.8",
                          "1500.0",
                          "37.0",
                          "60.0 | 7.0",
                          "280.0",
                          "60.0",
                          "5.0",
                          "125.0",
                          "nan | 30.0",
                          "7.0",
                          "804.0",
                          "160.0 | 8.0",
                          "400.0",
                          "143.0",
                          "10.2",
                          "25000.0",
                          "nan | 15.0",
                          "71.0",
                          "115.0",
                          "2.0",
                          "30.0 | 14.0",
                          "20.0 | nan",
                          "250.0 | 50.0",
                          "130.0 | 10.0",
                          "315.0",
                          "4.0",
                          "50.0 | 150.0",
                          "253.0",
                          "15.0 | 40.0",
                          "34.4",
                          "242.0",
                          "40.9",
                          "352.0",
                          "nan | 200.0",
                          "12.0",
                          "600.0",
                          "300.0 | 8.0",
                          "100.0",
                          "105.0",
                          "8.0 | nan",
                          "485.0",
                          "120.0 | 350.0",
                          "252.0",
                          "48.0",
                          "96.0",
                          "10.0 | 2.0 | 5.0",
                          "200.0",
                          "70.0 | 10.0",
                          "150.0 | nan",
                          "113.0",
                          "80.0 | 8.0",
                          "24.0 | 3.0",
                          "1.2",
                          "350.0",
                          "290.0",
                          "8.0 | 130.0",
                          "3.0",
                          "178.0",
                          "10.0 | 30.0",
                          "50.0 | 100.0",
                          "10.0 | 120.0",
                          "200.0 | 350.0",
                          "nan | nan",
                          "48.3",
                          "0.0 | 700.0",
                          "806.0",
                          "340.0",
                          "35.0 | 210.0",
                          "94.0",
                          "181.0",
                          "160.0",
                          "38.0",
                          "nan | 15000.0",
                          "100.0 | 8.0",
                          "nan | 50.0",
                          "nan | 14.0",
                          "270.0",
                          "170.0",
                          "200.0 | 0.0",
                          "7.0 | 115.0",
                          "2.5 | 10.0",
                          "15.0 | 45.0",
                          "nan | 170.0",
                          "55.0",
                          "0.4 | 180.0",
                          "25.71",
                          "7.0 | 2.0 | 10.0",
                          "6.0",
                          "80.0 | nan",
                          "66.52",
                          "20.0 | 100.0",
                          "7.0 | nan",
                          "60.0 | 1.0",
                          "250.0 | 60.0",
                          "nan | 9.0",
                          "200.0 | 700.0",
                          "17.0",
                          "44.0",
                          "5.5 | 10.0",
                          "293.0",
                          "6.0 | 200.0",
                          "12.0 | 200.0",
                          "550.0",
                          "15.0",
                          "25.0 | 250.0",
                          "215.0",
                          "300.0",
                          "nan | 150.2",
                          "245.0",
                          "10.0 | 5.0 | 5.0",
                          "185.0",
                          "120.0",
                          "180.0 | 160.0",
                          "450.0",
                          "18.0",
                          "130.0",
                          "153.0",
                          "39.0",
                          "nan | 350.0",
                          "110.0",
                          "20.0 | 15.0",
                          "310.0",
                          "23.8",
                          "808.0",
                          "11000.0",
                          "58.0",
                          "345.0",
                          "5.3",
                          "3.0 | 10.0",
                          "31.6",
                          "1000.0",
                          "25.0 | nan",
                          "27.0",
                          "188.0",
                          "66.0",
                          "225.0",
                          "261.0",
                          "46.2",
                          "235.0",
                          "60000.0",
                          "nan | 4.0",
                          "802.0",
                          "1200.0",
                          "70.0 | 20.0",
                          "390.0",
                          "10.0",
                          "43.0",
                          "90.0 | 7.0",
                          "0.2 | 180.0",
                          "1.8 | 180.0",
                          "30.0 | nan",
                          "432.0",
                          "nan | 11.0",
                          "173.0",
                          "210.0",
                          "397.0",
                          "10.0 | 240.0",
                          "2.5 | nan",
                          "800.0",
                          "nan | 190.0",
                          "198.0",
                          "80.0 | 7.0",
                          "271.0",
                          "32.0",
                          "5.0 | 10.0",
                          "25.0 | 20.0",
                          "nan | 295.0",
                          "163.0",
                          "50.2",
                          "24.0",
                          "5.2",
                          "40.0 | 20.0",
                          "72.0",
                          "nan | 10.0",
                          "99.0",
                          "20.0 | 60.0",
                          "200.0 | 5.0",
                          "97.0",
                          "196.0",
                          "30.0",
                          "nan | 22.0",
                          "18.3 | 10.0",
                          "1.6",
                          "2.0 | 180.0",
                          "470.0",
                          "680.0",
                          "333.0",
                          "35.0 | 348.0",
                          "174.0",
                          "158.0",
                          "21.5",
                          "24.0 | 7.0",
                          "67.5",
                          "35.0 | 475.0",
                          "150.0 | 9.0",
                          "116.0",
                          "140.0",
                          "100.0 | nan",
                          "80.0",
                          "801.0",
                          "nan | 5.0",
                          "46.0",
                          "320.0",
                          "138.0",
                          "nan | 400.0",
                          "45.6",
                          "10.0 | 5.0 | 2.0",
                          "70.0 | 7.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "thickness_list",
                "description": "A list of thicknesses of the individual layers in the stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous filed.\n- State thicknesses in nm\n- Every layer in the stack have a thickness. If it is unknown, state this as \u2018nan\u2019\n- If there are uncertainties, state the best estimate, e.g write 100 and not 90-110\nExample\n200\nnan |250\n100 | 5 | 8",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Li-TFSI; PEG; TBP",
                          "Co2f; Li-TFSI; TBP",
                          "FK209; Li-TFSI; Rutin-Ag-np; TBP",
                          "AMH",
                          "AgNO3",
                          "D102; Li-TFSI; TBP",
                          "Cu | Ag; Cu",
                          "2,6-ludidine; Li-TFSI",
                          "Graphene Oxide",
                          "TBA-PF6",
                          "Ag-TFSI; Li-TFSI; TNP",
                          "Poly(ethylene glycol) tridecyl ether",
                          "Tb",
                          "Li(CF3SO2)2N; TBP",
                          "Co1f; Li-TFSI; TBP",
                          "NDP9",
                          "PSS-Na",
                          "TBP; Triphenylamine",
                          "B",
                          "Pb",
                          "DMPS",
                          "Zn(TFSI)2",
                          "Diethylene glycol",
                          "TBP | Unknown",
                          "rGO-PhOHex",
                          "EMIC",
                          "Unknown | T4-TCNQ",
                          "Carbon-nano onions",
                          "Pyridine",
                          "Y",
                          "Undoped | Undoped",
                          "Ag-TFSI; Li-TFSI; TBP",
                          "Unknown | FK209; Li-TFSI; TBP",
                          "Ni",
                          "Ag",
                          "LiN(SO2CF3)2; t-BtPy",
                          "Cu-2Cl; Li-TFSI; TBP",
                          "Mg",
                          "Pd-PVP",
                          "AgI; Li-TFSI; TBP",
                          "Co-TFSI; TBP",
                          "FK209; Li-TFSI; TBP; POM@Cu-BTC",
                          "2-6-lutidin; Li-TFSI",
                          "Unknown | Zn",
                          "Cs",
                          "Silane",
                          "MoS2",
                          "Li-TFSI; TPB",
                          "NH3",
                          "CSA",
                          "Mo(tfd-COCF3)3",
                          "NiOx",
                          "Undoped | Li-TFSI; TBP",
                          "Unknown | Li-TSFI; TBP",
                          "Li-bis; Li-TFSI; TBP",
                          "TFMS | Li-TFSI; TBP",
                          "Urea",
                          "BF4; TBP; TEMPO",
                          "Chlorobenzol; Li-TFSI; TBP",
                          "EDTA",
                          "K102; Li-TFSI",
                          "PTAA",
                          "Ethanolamine",
                          "FK209; Li-TFSI; TBP; CuPc",
                          "PEO",
                          "Ti",
                          "Unknown | 2-Py; Li-TFSI",
                          "BuPyIm-TFSI",
                          "FK269; Li-TFSI; nan; TBP",
                          "Sr",
                          "FK211",
                          "TBP; Li-TFSI; Co(III) TFSI",
                          "KMnO4; Li-TFSI; TBP",
                          "f-SWCNTs",
                          "acetylacetone",
                          "PSSH",
                          "GeO2-np",
                          "Co(PyPyz)3[TFSI]3; Li-TFSI; TBP",
                          "JQ3; Li-TFSI; TBP",
                          "Li-TFSI; PMo11V; TBP",
                          "aYF4:Yb,Er@NaYF4; Li-TFSI; TBP",
                          "PVA",
                          "Li-TFSI; Polystyrene; TBP",
                          "LiN(CF3SO2)2N; TBP",
                          "Li@C60-TFSI; TBP",
                          "CuSCN",
                          "Li-TFSI; TBP | Undoped | Li-TFSI; TBP",
                          "Nd",
                          "NaLuF4:Yb,Er@NaLuF4; Li-TFSI; TBP",
                          "FK212",
                          "TiO2@MoO3-np",
                          "ethanolamine",
                          "LiNO3",
                          "FK209; FN-Br; TBP",
                          "WOx",
                          "CMP",
                          "F8BT",
                          "nan | DPITPFB",
                          "Co-TFSI; Li-TFSI; TBP",
                          "TMAH",
                          "PFI",
                          "MoO3-np",
                          "Graphene; Li-TFSI; TBP",
                          "Co-TFSI",
                          "acetylacetonate",
                          "Co-TPTB; Li-TFSI; TBP",
                          "FK209; Li-TFIS; TBP",
                          "Rb",
                          "TCNQ | Unknown",
                          "Li-TFSI; TBP; FK102(II)PF6",
                          "Li",
                          "Ag-TFSI; TBP",
                          "Ag; Li",
                          "Tetrafluoro-tetracyanoquinodimethane",
                          "Li-TFSI; TBP",
                          "PZ0.020",
                          "F6-TCNNQ",
                          "Er; Yb | Li-TFSI; TBP",
                          "FK102",
                          "FK209; H3BTC; Li-TFSI; TBP; nan",
                          "Eu",
                          "PFN-P2",
                          "Li-TFSI; TBP; TEMPO",
                          "D2; Li-TFSI; TBP",
                          "Graphdiyne",
                          "NaYF4:Yb,Er; Li-TFSI; TBP",
                          "CNT",
                          "Li-TFSI; Ni-nanobelts; TBP",
                          "Li-TFSI; TPBA",
                          "AgOTf-doped GO",
                          "Cu(bpcm)2; Li-TFSI; TBP",
                          "TPFB",
                          "PMPS",
                          "TS-CuPc",
                          "Cu | Unknown",
                          "Yb",
                          "Li-TFSI; TBP; FK102",
                          "F-graphene",
                          "SrCl2",
                          "FK209; Li-TFSI; TBP | N",
                          "CZTS-np",
                          "C3-SAM",
                          "D-TBP; Li-TFSI",
                          "WO3-np",
                          "Li-TFSI",
                          "Li-TFSI; PTAA; TBP",
                          "ox-Carbon-nano onions",
                          "Thiourea",
                          "4-Py",
                          "TBFB",
                          "HCl",
                          "Li-TFSI; SpiroTFSI2; TBP",
                          "BCF",
                          "PFPPY",
                          "Li-bisLi-TFSI; TBP",
                          "Li; Co",
                          "FK209; 3PO4; Li-TFSI; TBP",
                          "NE",
                          "CrO3",
                          "D1; Li-TFSI; TBP",
                          "Undoped; Unknown",
                          "Sc3N@C80",
                          "DIO",
                          "Co(II)(dpzpyr)2; Li-TFSI; TBP",
                          "NaCl",
                          "Glycerol",
                          "Benzoyl peroxide",
                          "Glucose; Graphene oxide",
                          "EDA",
                          "PDA",
                          "Butylamine",
                          "Co(III)(pztbpy)3; Li-TFSI; TBP",
                          "Unknown | TPFB",
                          "Li-TFSI; MoS2; TBP",
                          "LAD",
                          "I2; Li-TFSI; TBP",
                          "H-TFSI; TBP",
                          "Zn(TFSI)2; TBP",
                          "nan | Graphene oxide",
                          "Ag-np",
                          "Cu; Li",
                          "Cu(Oac)2",
                          "F4-TCNQ | Undoped",
                          "Fe",
                          "Cu",
                          "Zn",
                          "EHCz-2EtCz-ox",
                          "DOPA",
                          "Unknown | Ta",
                          "GeO2",
                          "WOx | Unknown",
                          "Undoped",
                          "FK209; Li-TFSI; rGO; TBP",
                          "BMPyTFSI",
                          "TPACA",
                          "D-sorbitol",
                          "FK209; Li-TFS; TBP",
                          "Li-TFSI; TBP; V2O5",
                          "FK209; Li-TFSI",
                          "F4-TCNQ",
                          "LiClO4",
                          "2-amylpyridine; Li-TFSI",
                          "Ca",
                          "Unknown | Undoped",
                          "Glucose",
                          "MoO3",
                          "PDMS",
                          "Li; Mg",
                          "Cu9S5-np",
                          "DOBD",
                          "Polydopamine",
                          "Carbon-nt-G; Li-TFSI; TBP",
                          "FK209; Li-TFSI; TBP | Er3+; Yb3+",
                          "Co-LTFSI; Li-LTFSI; TBP",
                          "Ce",
                          "Diphenyliodonium-hexafluorophosphat",
                          "PEG",
                          "Li-TFSI; Li(Gd, Y)F4-Yb; TBP",
                          "Li-TFSI; TBA",
                          "Li; Pb",
                          "NPB",
                          "Pd",
                          "IrCp*Cl(PyPyz)[TFSI]; Li-TFSI; TBP",
                          "Unknown | AgSbF6",
                          "F4-TCNQ | Unknown",
                          "Li-TFSI; TBP; FK209",
                          "Co3f; Li-TFSI; TBP",
                          "Unknown | Li",
                          "CuH; Li-TFSI; TBP",
                          "Unknown | FK269; Li-TFSI; TBP",
                          "Unknown",
                          "FK209",
                          "Undoped | Cu",
                          "ClO4-",
                          "FK210",
                          "Undoped | glacial acetic acid",
                          "CuI; Li-TFSI",
                          "EHCz-MeFl-ox",
                          "CI",
                          "FK102; Li-TFS",
                          "K",
                          "Zonyl FS-300",
                          "GSL",
                          "Cu | Cu",
                          "Cu-2Cl; Li-TFSI",
                          "FK209; LiNO3",
                          "Graphene",
                          "F2-TCNQ | Unknown",
                          "FK209; Li-TFSI; TBP",
                          "EDT",
                          "Co; Li-TFSI; TBP",
                          "Mo(tfd-CO2Me)3",
                          "FK209; Zn(TFSI)2; TBP",
                          "EHCz-3EtCz-ox",
                          "Li-TFSI; TBP | D-sorbitol",
                          "Ba",
                          "Carbon-nt; Li-TFSI; TBP",
                          "Co(III)(pztbpy)3; LiNTf2; TBP",
                          "4-isopropyl-4\u2032-methyldiphenyliodonium tetrakis(pentafluorophenyl)borate",
                          "Au-np; Li-TFSI; TBP",
                          "JQ1; Li-TFSI; TBP",
                          "La",
                          "In10-2,4,6; Li-TFSI; TBP",
                          "FK102; Li-TFSI; TBP",
                          "CuPc; Li-TFSI; TBP",
                          "2-Py",
                          "Li-TFSI; O2; TBP",
                          "n-Butylamine",
                          "sGO",
                          "nan | Li-TFSI; TBP",
                          "CuI",
                          "Li-TFSI; TBP; TeCA",
                          "PMMA",
                          "P3HT | Unknown",
                          "Fe(ttb)(TFSI)3; Li-TFSI; TBP",
                          "Co-TFSI; Li-TFSI",
                          "N",
                          "Lithium acetate",
                          "TAPC",
                          "Unknown | MoO3",
                          "Co",
                          "Li-TFSI; TBP | Undoped",
                          "TPE-NM3; Mo(tfdCOCF3)3",
                          "JQ2; Li-TFSI; TBP",
                          "TBP",
                          "Unknown | TBP",
                          "FK102; TBP",
                          "Unknown | Et4N-TFSI; H-TFSI",
                          "D4; Li-TFSI; TBP",
                          "Unknown | JQ1; Li-TFSI; TBP",
                          "FK209; Li-TFSI; TBP | Undoped",
                          "CuAlO2",
                          "FK209; H2SO4; Li-TFSI; TBP",
                          "Li-TFSI; TBP | Undoped | Unknown",
                          "rGO",
                          "FK269; Li-TFSI; TBP",
                          "Unknown | VOx",
                          "HA",
                          "Unknown | Unknown | TBP",
                          "CF3PA; FK209; Li-TFSI; TBP",
                          "Li-TFSI; TBP | Cu2O",
                          "O2",
                          "Li-TFSI; Si NPs",
                          "FN-Br",
                          "CsI",
                          "TBA-BF4",
                          "N2",
                          "Ethylene glycol | Unknown",
                          "PolyTPD",
                          "Triethanolamine",
                          "Unknown | FK209; Li-TSFI; TBP",
                          "Carbon-QDs",
                          "Alanine",
                          "2-Py; Li-TFSI",
                          "Spiro-(TFSI)2; TBP",
                          "AuAg-np",
                          "Au-np",
                          "Li-TFSI; TBP; acetonitrile",
                          "Br-BA",
                          "NPh2O2C2H6",
                          "Unknown | FK102; Li-TFSI; TBP",
                          "DPITPFB",
                          "Cu-Bix; Li-TFSI; TBP",
                          "Amonia | Unknown",
                          "SrCl2 | Undoped",
                          "Li-TFSI; TBP | Li-TFSI; TBP",
                          "VOx",
                          "Spiro-(TFSI)2",
                          "Mo(tfd-COCF3)3; TBP",
                          "H2O2",
                          "Triton-X",
                          "Oleylamine | Li-TFSI; TBP",
                          "FK209; TBP",
                          "Sodium Citrate",
                          "PS",
                          "CTAB",
                          "RbCl",
                          "[In2(phen)3Cl6]CH3CN; Li-TFSI; TBP",
                          "BCF; Li-TFSI; TBP",
                          "Ox-SWCNTs",
                          "PCBTBT",
                          "SiO-np",
                          "Carbon-nt@G; Li-TFSI; TBP",
                          "Cu9S5@SiO2-np",
                          "FK209; Li-TFSI; Pb(NO3)2; TBP",
                          "PCDSA",
                          "Li-TFSI; TBP; MWCNTs",
                          "Graphydine-QDs; Li-TFSI; TBP; nan",
                          "Sb",
                          "FK102; Li-TFSI",
                          "Li-TFSI; TBP | Unknown",
                          "Li-TFSI; P4VP; TBP",
                          "Cu(TFSI)2",
                          "TEMPOL",
                          "FK209; Li-TFSI; Pb-MOFs; TBP",
                          "D3; Li-TFSI; TBP",
                          "PZ0.025",
                          "Li-TFSI; TBP; V2O5 | Undoped",
                          "Unknown | TBA",
                          "AcOH; FK209; Li-TFSI; TBP",
                          "F6-TCNNQ | Unknown",
                          "Cu-2Cl",
                          "DIO; PCDTBT",
                          "I2",
                          "DMC; F4-TCNQ",
                          "TPFPB",
                          "DPPS",
                          "PZ0.030",
                          "NaLuF4:Yb,Er; Li-TFSI; TBP",
                          "DMSO",
                          "FeCl3; Li-TFSI; TBP",
                          "D-TBP",
                          "Unknown | Cu",
                          "NiPcS4",
                          "rGO-PhBiTh",
                          "ETH44-ox",
                          "Unknown | TBP | Unknown",
                          "Unknown | Li-TFSI; TBP",
                          "GD-QDs; Li-TFSI; TBP",
                          "TBA-TFSI"
                        ]
                      }
                    }
                  ]
                },
                "name": "additives_compounds",
                "description": "List of the dopants and additives that are in each layer of the HTL-stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous fields.\n- If several dopants/additives, e.g. A and B, are present in one layer, list the dopants/additives in alphabetic order and separate them with semicolons, as in (A; B)\n- If no dopants/additives, state that as \u201cUndoped\u201d\n- If the doping situation is unknown, stat that as\u2018Unknown\u2019\nExample\nLi-TFSI; TBP\nFK209; Li-TFSI; TBP\nF4-TCNQ\nUndoped\nCu | Ag; Cu",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.1 %; nan",
                          "2 mg/ml; 520 mg/ml; 0.036 vol%",
                          "520 mg/ml; 0.036 mL",
                          "9 uL(520mg/mLACN); 15 uL",
                          "6.76 mg/ml; 0.5 vol%",
                          "1 %; nan",
                          "1.79 vol%; 2.5 vol%",
                          "0.90 vol%; 2.07 vol%; 3.60 vol%",
                          "11.4 mg/ml; 36 \u00b5l/ml",
                          "35 uL(260mg/1mLACN); 30 uL/mL",
                          "35 uL(260mg/mLACN); 30 uL",
                          "3 %",
                          "nan | 2 uL/mL",
                          "2.85 vol%; 1.75 vol% | nan",
                          "520 mg/ml; 2.88 vol%",
                          "11.7 mg/ml; 36 \u00b5l/ml",
                          "520 mg/ml; 0.0338 vol%",
                          "0.064 M; 0.198 M",
                          "0.6 %",
                          "8.7 mg/ml; 8.7 mg/ml; 2.88 vol%",
                          "0.064; 0.198 M; nan",
                          "50 vol%",
                          "nan | 1 vol%",
                          "0.29 vol%; 1.75 vol%; 2.88 vol%",
                          "0.2",
                          "17.5 uL(300mg/1mLACN); 28.8 uL",
                          "3 mol%; 50 mol%; 330 mol%",
                          "9.1 mg/ml; 30 \u00b5l/ml",
                          "67 vol%",
                          "30 mM; 30 mM",
                          "0.6 vol%",
                          "5 mg/ml; 520 mg/ml; 0.036 vol%",
                          "8 %",
                          "0.03 M; 0.5 M; 3.3 M",
                          "7 %",
                          "10 %; nan",
                          "32 mM; 28.5 \u00b5l/ml",
                          "33 vol%",
                          "0.029 vol%; 28.3 mg/ml; 0.0288 vol%",
                          "1.75 vol%; 2.85 vol%",
                          "6.24 mg/ml; 8 \u00b5l/ml",
                          "6 mol%",
                          "0.6 mg/ml",
                          "30 mM; 200 mM",
                          "0.32 mg/ml",
                          "10.4 mg/ml; 0.03 ml/ml",
                          "0.1",
                          "0.5 %; nan",
                          "nan; nan; 1 mol%",
                          "520 mg/ml; 0.036 vol%",
                          "9.1 mg/ml; 0.029 ml/ml",
                          "9.1 mg/ml; 28.8 \u00b5l/ml",
                          "1.7 vol%; 2.0 vol%",
                          "nan; nan; 2 mol%",
                          "5.2 mg/ml; 0.02 ml/ml",
                          "15.08 mg/ml; 9.1 mg/ml; 28.8 \u00b5l/ml",
                          "2.88 vol%",
                          "5 wt%; 1 wt%",
                          "0.32 mg/ml | nan",
                          "0.5 vol%; 6.76 mg/ml; 0.5 vol%",
                          "1.5 %",
                          "0.035 M; 0.231 M",
                          "nan; 0.8 wt%; nan",
                          "5.3 mol%",
                          "30 mol%; 80 mol%",
                          "7 %; nan",
                          "2 vol%; nan; nan",
                          "10 mol%",
                          "9.1 mg/ml; 0.028 ml/ml",
                          "54 uL(10mg/mLACN); 11.2 uL",
                          "1 mg/ml; 520 mg/ml; 0.036 vol%",
                          "0.05 M; 0.5 M; 3.3 M",
                          "4 wt%",
                          "9.1 mg/ml; 0.03 ml/ml",
                          "17.5 uL(520mg/mLACN); 28.8 uL",
                          "17.5 uL(520mg/mLACN); 29 uL",
                          "0.05",
                          "0.5 mg/ml",
                          "nan; 0.6 wt%; nan",
                          "45 uL(2mg/mLACN); 10.2 uL",
                          "12 \u00b5l/ml",
                          "2 wt%",
                          "30 mM.200mM",
                          "0.075",
                          "nan; nan; nan",
                          "0.05 wt%",
                          "40 uL(40mg/mLACN); 23 uL(520mg/mLACN); 40 uL",
                          "520 mg/ml; 2.85 vol%",
                          "nan; 0.4 wt%; nan",
                          "0.025",
                          "300 mg/ml; 520 mg/ml; 0.028 vol%",
                          "2 mM; 2.88 vol%",
                          "0.15",
                          "0.015",
                          "500 mg/ml; 0.03 vol%",
                          "1 vol%; nan; nan",
                          "0.01 %; nan; nan",
                          "2.45 mM; 40 mM; 270 mM",
                          "nan | 1.75 vol%; 2.88 vol%",
                          "520 mg/ml; 0.0288 vol%",
                          "40 mol%",
                          "7.8 mol%",
                          "6 wt%",
                          "3.38 mg/ml; 22.5 \u00b5l/ml",
                          "7.5 mg/ml; 7.65 mg/ml; 0.01 ml/ml",
                          "10 mg/ml",
                          "10 wt%",
                          "32 mM; 195 mM",
                          "520 mg/ml; 334 mol%",
                          "3.0 vol%; 3.6 vol%",
                          "1.8 mM; 30 mM; 200 mM",
                          "2.88 vol%; 1.75 vol%",
                          "12.3 mol%",
                          "0.01 %; nan",
                          "17.5 uL(520mg/mlACN); 28.8 uL",
                          "20 mol%",
                          "50 %; nan",
                          "170 mg/ml; nan",
                          "5.6 mg/ml; 30 mg/ml",
                          "35 mM; 210 mM",
                          "0.4 %",
                          "4 mM; 30 mM; 200 mM | nan",
                          "0.3 wt%",
                          "0.007",
                          "18 uL(1MACN); 29 uL(1MCB)",
                          "2.2 mg/ml",
                          "12 %",
                          "1.44 vol%; 2.88 vol%",
                          "0.5 mg/ml; 0.5 vol%",
                          "8.7 mg/ml; 9.8 mg/ml; 0.029 ml/ml",
                          "11 %",
                          "1 %",
                          "10 uL(300mg/mLACN); 17.5 uL(520mg/mLACN); 28.8 uL",
                          "4 %",
                          "1.5 mM; 14 mM; 56 mM",
                          "4 mM; 30 mM; 200 mM",
                          "3.0 wt%",
                          "29 uL(300mg/mL); 18 uL(520mg/mLACN); 29 uL",
                          "0.0018",
                          "9 mM; 55 mM",
                          "11.4 mg/ml; 0.036 ml/ml",
                          "nan | nan",
                          "20 uL(517mg/1mLACN); 36 uL; 8 uL(375mg/mLACN)",
                          "6 %",
                          "5.4 mg/ml; 9.36 mg/ml; 0.028 ml/ml",
                          "18 uL(520mg/1mLACN); 30 uL; 29 uL(300mg/MLACN)",
                          "11.34 mg/ml; 0.0176 ml/ml",
                          "2.0 mg/ml",
                          "0.0056 M; 0.031 M; 0.19 M",
                          "30 mol%",
                          "520 mg/ml; 0.285 vol%",
                          "20 uL(517mg/mLACN); 36 uL; 8 uL(376mg/mLACN)",
                          "nan; nan; 4 mol%",
                          "0.44 M",
                          "170 mg/ml; 0.5 vol%",
                          "31.5 uL(300mg/mLACN); 17.5 uL(520mg/mL/ACN); 28.8 uL",
                          "8.7 mg/m; 9.1 mg/ml; 0.029 ml/ml",
                          "7.5 uL(170mg/mLACN); 4 uL",
                          "8.7 mg/ml; 9.1 mg/ml; 28.8 \u00b5l/ml",
                          "9.1 mg/ml; 28.8 \u00b5l/ml | 9.1 mg/ml; 28.8 \u00b5l/ml",
                          "1.6 vol%; 2.1 vol%; 3.6 vol%",
                          "0.0175 mL/mL; 0.0285 mL/mL",
                          "10.1 mol%",
                          "0.1 wt%",
                          "22.5 uL; 15 uL",
                          "0.5 vol%; nan; nan",
                          "9 %",
                          "0.0175 vol%; 0.0288 vol%",
                          "nan | 17.5 uL(520mg/mLACN); 28.8 uL",
                          "7.65 mg/ml; 1 vol%",
                          "1.75 vol%; 3.1 vol%",
                          "35 uL(520mg/mLACN); 60 uL",
                          "1.7 mg/ml; 7 \u00b5l/ml",
                          "0.0035",
                          "170 mg/ml; 0.004 vol%",
                          "2 %",
                          "1.75 vol%; 2.88 vol%",
                          "0.82 mg/ml; 2 \u00b5l/ml",
                          "3 %; nan",
                          "9.1 mg/ml; 0.0288 ml/ml",
                          "0.15 wt%",
                          "23 uL(90.9mg/mLACN); 39 uL",
                          "nan; nan; 3 mol%",
                          "2.5 %",
                          "17.5 uL(520mg/mLACN); 28.5 uL",
                          "18.2 mg/ml; 8 \u00b5l/ml",
                          "1.0 wt%",
                          "nan; 0.2 wt%; nan",
                          "nan | 2 vol%",
                          "520 mg/ml; 1.4 vol%",
                          "5 mol%",
                          "0.5 wt%",
                          "0.019 M; 0.007 M; 0.2 wt% | nan",
                          "8.8 mg/ml; 0.028 vol%; 0.035 vol%",
                          "nan | 20 vol%",
                          "30.2 uL(1756mg/mLACN); 9.7 uL",
                          "1.5 wt%",
                          "11.44 mg/ml; 36 \u00b5l/ml",
                          "0.5 mg/ml; 520 mg/ml; 0.036 vol%",
                          "1 wt%",
                          "70 uL(170mg/1mLACN); 20 uL",
                          "5.0 mg/ml",
                          "10 uL(520mg/mLACN); 28 uL; 35 uL(18.8mg/50mLACN)",
                          "17.5 uL(520mg/mLACN); 28.8 uK",
                          "1.5 mg/ml",
                          "30 uL(270mg/mLACN); 35 uL",
                          "3 wt%",
                          "5 at%",
                          "5 %",
                          "10 uL(170mg/mLACN); 5 uL",
                          "nan | 5 vol%",
                          "9.14 uL(0.25MACN); 21.02 uL(1.8MACN); 35.65 uL",
                          "5 wt%",
                          "8.67 mg/ml; 9.1 mg/ml; 28.8 \u00b5l/ml",
                          "6.8 vol%; 3.4 vol%",
                          "0.0052",
                          "0.03; 3.3; 0.5",
                          "12 mol%",
                          "5 %; nan",
                          "0.8 %",
                          "nan | 10 vol%",
                          "520 mg/ml"
                        ]
                      }
                    }
                  ]
                },
                "name": "additives_concentrations",
                "description": "The concentration of the dopants/additives.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If more than one dopant/additive in the layer, e.g. A and B, separate the concentration for each dopant/additive with semicolons, as in (A; B)\n- For each dopant/additive in the layer, state the concentration.\n- The order of the dopants/additives must be the same as in the previous filed.\n- For layers with no dopants/additives, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used.\n- The preferred way to state the concentration of a dopant/additive is to refer to the amount in the final product, i.e. the material in the layer. When possible, use on the preferred units\no wt%, mol%, vol%, ppt, ppm, ppb\n- When the concentration of the dopant/additive in the final product is unknown, but where the concentration of the dopant/additive in the solution is known, state that concentration instead. When possible, use on the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n5 vol%; nan | 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | 0.3 M",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Spin-coating | Spin-coating >> Spin-coating",
                          "CBD | Dipp-coating",
                          "Spin-coating >> Spin-coating",
                          "Roller coating",
                          "Spin-coating >> Unknown",
                          "Spray-coating | Spray-coating",
                          "Electropolymerisation",
                          "Spin-coating | Spin-coating",
                          "Spray-pyrolys | Screen printing",
                          "Slot-die coating",
                          "Brush painting",
                          "Lamination | Spin-coating | Spin-coating",
                          "Spin-coating | Evaporation",
                          "Evaporation | Spin-coating",
                          "Ultrasonic spray",
                          "Sputtering",
                          "Spin-coating >> MeOH wash",
                          "Sputtering | Unknown",
                          "Spin-coating | Spray-coating | Spin-coating",
                          "Evaporation | Co-evaporation",
                          "CBD | Spin-coating",
                          "Doctor blading | Spin-coating",
                          "Dropcasting | Spin-coating",
                          "Spin-coating | Sputtering",
                          "Spin-coating | Unknown",
                          "Electrodeposition | Spin-coating",
                          "Evaporation | ALD",
                          "Magnetron sputtering >> Gas reaction",
                          "SILAR",
                          "Inkjet printing",
                          "Electrospinning | Spin-coating",
                          "Evaporation >> Oxidation",
                          "RF sputtering",
                          "Spin-coating >> Spin-coating >> Spin-coating",
                          "Spin-coating | Spin-coating >> Spin-coating >> Spin-coating",
                          "Evaoration | Spin-coating",
                          "Spin-coating | Lamination",
                          "Pulsed laser deposition | Sputtering",
                          "Evaporation | Evaporation",
                          "Spin-coating | RF sputtering",
                          "Electropolymerization",
                          "Spin-coating | Spin-coating | Lamination",
                          "Air brush spray",
                          "Spin-coating | Spray-coating",
                          "Spin-coating | Doctor blading",
                          "Sputtering | Sputtering",
                          "Sprinkling",
                          "Spray-coating | Spin-coating",
                          "Spin-coating | Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating",
                          "Spin-coating | Spin-coating >> Lamination",
                          "Spin-coating | Spray-pyrolys",
                          "Spin-coating | Dipp-coating",
                          "Hydrothermal | Spin-coating",
                          "Spin-coating >> Blowing hot air",
                          "Lamination | Spin-coating",
                          "Spin-coating | Spin-coating | Spin-coating",
                          "Sputtering | Sputtering | Spin-coating",
                          "Magnetron sputtering | Spin-coating",
                          "Lamination",
                          "Evaporation >> Gas reaction",
                          "E-beam evaporation | Spin-coating",
                          "Evaporation | Evaporation | Evaporation",
                          "PVD",
                          "Press-transfer | Spin-coating | Spin-coating",
                          "Dipp-coating >> Spin-drying | Spin-coating",
                          "Dipp-coating",
                          "Cryo-controlled quasi-congealing spin-coating",
                          "Slot-die coating | Evaporation",
                          "Evaporation",
                          "Electrospraying",
                          "Spray-pyrolys",
                          "Unknown",
                          "CBD",
                          "DC Magnetron Sputtering | Spin-coating",
                          "Drop-infiltration",
                          "ALD | Spin-coating",
                          "CVD",
                          "Screen printing",
                          "Slot-die coating | Spin-coating",
                          "Centrifuge-casting",
                          "Doctor blading",
                          "Spin-coating | E-beam evaporation",
                          "Magnetron sputtering",
                          "Substrate vibration assisted dropcasting",
                          "Dropcasting | Lamination",
                          "Sputtering | Spin-coating",
                          "DC Sputtering >> Oxidation",
                          "E-beam evaporation",
                          "Spin-coating | Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating",
                          "Unknown | Spin-coating",
                          "Spin-coating | Dropcasting",
                          "Spray-pyrolys | Dipp-coating",
                          "Dropcasting",
                          "Spin-coating >> Spin-coating >> Spin-coating >> Spin-coating",
                          "Pulsed laser deposition",
                          "DC Magnetron Sputtering",
                          "Evaporation >> Gas-reaction",
                          "Blow-drying",
                          "Hydrothermal",
                          "Electrodeposition",
                          "E-beam evaporation | E-beam evaporation",
                          "Spray-pyrolys | Spin-coating",
                          "Dipp-coating | Spin-coating",
                          "Evaporation >> Polymerisation",
                          "RF magnetron sputtering",
                          "Dipp-coating | Evaporation",
                          "Slot-die coating | Slot-die coating",
                          "Anti-solvent quenching | Spin-coating",
                          "Gelation",
                          "Spin-coating",
                          "Spin-coating | ALD",
                          "Doctor blading | Doctor blading",
                          "Spray-coating",
                          "Spin-coating | Evaporation | Evaporation",
                          "ALD",
                          "Co-evaporation | Evaporation",
                          "Spin-coating | Drop-infiltration",
                          "Reactive magnetron sputtering",
                          "Electrospraying | Spin-coating",
                          "Hydrolys | Drop-infiltration"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_procedure",
                "description": "The deposition procedures for the HTL-stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate them by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Thermal annealing is generally not considered as an individual reaction step. The philosophy behind this is that every deposition step has a thermal history, which is specified in a separate filed. In exceptional cases with thermal annealing procedures clearly disconnected from other procedures, state \u2018Thermal annealing\u2019 as a separate reaction step.\n- Please read the instructions under \u201cPerovskite. Deposition. Procedure\u201d for descriptions and distinctions between common deposition procedures and how they should be labelled for consistency in the database.\nExample\nSpin-coating\nSpin-coating | Spin-coating\nEvaporation\nSpray-pyrolys",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Solid",
                          "Liquid",
                          "Liquid | Liquid",
                          "Unknown",
                          "Liquid | Liquid | Liquid",
                          "Liquid | Liquid >> Liquid >> Liquid >> Liquid >> Liquid",
                          "Liquid >> Liquid",
                          "Gas",
                          "Gas >> Gas",
                          "Liquid | Liquid >> Liquid >> Liquid >> Liquid",
                          "Liquid | Liquid >> Liquid >> Liquid",
                          "Gas | Liquid",
                          "Gas | Gas",
                          "Liquid | Gas"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_aggregation_state_of_reactants",
                "description": "The physical state of the reactants.\n- The three basic categories are Solid/Liquid/Gas\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the aggregation state associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Most cases are clear cut, e.g. spin-coating involves species in solution and evaporation involves species in gas phase. For less clear-cut cases, consider where the reaction really is happening as in:\no For a spray-coating procedure, it is droplets of liquid that enters the substrate (thus a liquid phase reaction)\no For sputtering and thermal evaporation, it is species in gas phase that reaches the substrate (thus a gas phase reaction)\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nLiquid\nGas | Liquid\nLiquid | Liquid >> Liquid",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "N2 | Vacuum",
                          "Vacuum >> Air",
                          "N2",
                          "Vacuum | Ar",
                          "Unknown",
                          "Air | N2",
                          "N2 >> methanol",
                          "N2 >> N2",
                          "N2 | N2",
                          "Ar | Ar",
                          "Air | Vacuum",
                          "Ambient",
                          "Air | Air",
                          "Dry air",
                          "Vacuum | Vacuum",
                          "Air",
                          "Vacuum",
                          "Ar; O2",
                          "Ar"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere",
                "description": "The synthesis atmosphere.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nVacuum | N2\nAir | Ar; H2O >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.006 Torr",
                          "0.002 Pa",
                          "0.0001 Pa | nan",
                          "1 atm | 0.00004 Torr",
                          "0.000001 mbar | 0.000001 mbar",
                          "1 atm | 0.00003 mbar",
                          "1 atm | 1 atm",
                          "6 Pa",
                          "1 atm | 0.0001 Pa",
                          "1 atm | 0.000001 atm",
                          "1 atm | 0.000002 Torr",
                          "0.0001 Pa",
                          "1 atm",
                          "4 Pa",
                          "1 atm | 0.000001 Torr",
                          " N2",
                          "2 Pa"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_pressure_total",
                "description": "The total gas pressure during each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- Pressures can be stated in different units suited for different situations. Therefore, specify the unit. The preferred units are:\no atm, bar, mbar, mmHg, Pa, torr, psi\n- If a pressure is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 100 pa and not 80-120 pa.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 1 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1 atm | 0.00004 Torr",
                          "0.000001 mbar | 0.000001 mbar",
                          "1 atm | 0.00003 mbar",
                          "0.003 Torr; 0.003 Torr",
                          "1 atm | 1 atm",
                          "1 atm | 0.000001 atm",
                          "1 atm | 0.000002 Torr",
                          "1 atm",
                          "1 atn",
                          "1 atm | 0.000001 Torr",
                          "1 atm | 0.0001 Pa"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_pressure_partial",
                "description": "The partial pressures for the gases present during each reaction step.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the partial pressures and separate them with semicolons, as in (A; B). The list of partial pressures must line up with the gases they describe.\n- In cases where no gas mixtures are used, this field will be the same as the previous filed.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 0.99 atm; 0.01 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "30 | 30",
                          "0.9",
                          "25",
                          "15",
                          "30.0",
                          "90.0",
                          "20.0",
                          "30",
                          "0.35",
                          "30 | 0",
                          "50.0",
                          "65.0",
                          "10.0",
                          "80.0",
                          "0 | 0"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_relative_humidity",
                "description": "The relative humidity during each deposition step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the relative humidity associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns\n- If the relative humidity for a step is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 35 and not 30-40.\nExample\n35\n0 | 20\nnan >> 25 | 0",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Ethanol; Water",
                          "Chloroform",
                          "Ethylene glycol",
                          "2-methoxyethanol",
                          "Etyl cellulose; Terpineol",
                          "Diethyl sulfide",
                          "Dichlorobenzene",
                          "Unknown | Chlorobenzene",
                          "acetonitrile; Chlorobenzene",
                          "2-methoxyethanol; monoethanolamine",
                          "IPA | Chlorobenzene",
                          "Unknown",
                          "Chlorobenzene | none",
                          "Ethanol | TMAOH solution",
                          "Chlorobenzene | Unknown",
                          "Toluene | Methanol",
                          "none",
                          "2-methoxyethanol; ethanolamine | none",
                          "acetonitrile",
                          "Methanol",
                          "IPA; Water",
                          "Water | Chlorobenzene",
                          "Water; Methanol",
                          "IPA | Diethyl sulfide",
                          "Toluene | DMF",
                          "DMF",
                          "Water | 2-metoxyethanol",
                          "1,2-dichlorobenzene",
                          "Chlorobenzene >> 2-Butanol",
                          "IPA | IPA",
                          "IPA | Unknown",
                          "Chlorobenzene",
                          "Chlorobenzene; acetonitrile",
                          "Hexanethiol",
                          "Ethyl acetate",
                          "2-methoxyethanol; ethanolamine",
                          "Water; IPA",
                          "DMF | Chlorobenzene",
                          "Toluene",
                          "Water",
                          "Chlorobenzene | Chlorobenzene",
                          "Ethanol",
                          "none | 2-metoxyethanol",
                          "Ethylene glycol | Methanol",
                          "Water | IPA",
                          "none | Chlorobenzene",
                          "Water | Water",
                          "IPA",
                          "none | none",
                          "Hexane | Unknown",
                          "Chlorobenzene | IPA"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents",
                "description": "The solvents used in each deposition procedure for each layer in the stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvents associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the solvents in alphabetic order and separate them with semicolons, as in (A; B)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For non-liquid processes with no solvents, state the solvent as \u2018none\u2019\n- If the solvent is not known, state this as \u2018Unknown\u2019\n- Use common abbreviations when appropriate but spell it out when risk for confusion\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nChlorobenzene\nAcetonitile; Ethanol | Chlorobenzene\nnone >> Ethanol; Methanol; H2O | DMF; DMSO",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1; 8",
                          "0.1; 51",
                          "1 >> 1",
                          "1; 0.006 | nan",
                          "1 | nan",
                          "nan | 1",
                          "1",
                          "1; 0.006",
                          "5; 1",
                          "1 | 1",
                          "1; 0.012",
                          "1; 1",
                          "1; 0.1",
                          "1; 3"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_mixing_ratios",
                "description": "The mixing ratios for mixed solvents\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent mixing ratios associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For pure solvents, state the mixing ratio as 1\n- For non-solvent processes, state the mixing ratio as 1\n- For unknown mixing ratios, state the mixing ratio as \u2018nan\u2019\n- For solvent mixtures, i.e. A and B, state the mixing ratios by using semicolons, as in (VA; VB)\n- The preferred metrics is the volume ratios. If that is not available, mass or mol ratios can be used instead, but it the analysis the mixing ratios will be assumed to be based on volumes.\nExample\n1\n4; 1 | 1\n1 >> 5; 2; 0.3 | 2; 1",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown | Sigma Aldrich",
                          "Fisher Chemical | ACROS Organic",
                          "Unknown",
                          "Fisher Scientific",
                          "Heraeus",
                          "Guangzhou Seaside Technology",
                          "Nacalai Tesque; Wako Pure Chemical",
                          "Aladdin",
                          "Unknown; Sigma Aldrich",
                          "J&K",
                          "Sigma Aldrich; Sigma Aldrich",
                          "Sigma Aldrich",
                          "Xi'an Polymer Light Technology; Xi'an Polymer Light Technology"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_supplier",
                "description": "The suppliers of all the solvents.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For non-liquid processes with no solvents, mark the supplier as \u2018none\u2019\n- If the supplier for a solvent is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nSigma Aldrich\nSigma Aldrich; Fisher | Acros\nnone >> Sigma Aldrich; Sigma Aldrich | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "anhydrous; 99%",
                          "Pro analysis",
                          "Unknown",
                          "Puris; Puris",
                          "0.998",
                          "99.8%; 99.8%",
                          "Puris"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_purity",
                "description": "The purity of the solvents used.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For non-liquid processes with no solvents, state the purity as \u2018none\u2019\n- If the purity for a solvent is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\nPuris; Puris| Tecnical\nnone >> Pro analysis; Pro analysis | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "NiPc | Vanadium(V)\noxytriisopropoxide; IPA",
                          "FK209; Li-TFSI; CS03; TBP",
                          "Spiro-oF; Li-TFSI; Co-TFSI; TBP",
                          "FK209; Li-TFSI; CS01; TBP",
                          "(NiAc)4H2O",
                          "Spiro-MeOTAD; nan",
                          "Ni(Ac)2\u00b74H2O; SrCl2",
                          "P3CT-Na",
                          "Spiro-MeOTAD | MoOx",
                          "Clevios PVP Al 4083; Black phosphorous QDs",
                          "Li-TFSI; Spiro-MeOTAD",
                          "Ni; O2",
                          "NiO-np",
                          "Spiro-MeOTAD; Co(III)(pztbpy)3; Li-TFSI; TBP",
                          "P3HT; rGO-PhBiTh",
                          "NiO-np | PAS",
                          "FK209; Li-TFSI; LCS01; TBP",
                          "NaYF4:Yb,Er; Li-TFSI; TBP; PTAA",
                          "CuPc | PEI",
                          "Li-TFSI; H-Z3; TBP",
                          "FK209; Li-TFSI; H-Lin; TBP",
                          "Oleylamine | Li-TFSI; Spiro-MeOTAD; TBP",
                          "TRUX-E-T; Li-TFSI; TBP",
                          "PEDOT:PSS | TPA-NPA-TPA",
                          "P3HT; rGO-PhOHex",
                          "PTAA; Li-TFSI; TBP",
                          "aYF4:Yb,Er@NaYF4; Li-TFSI; TBP; PTAA",
                          "PTB7-Th | MoOx",
                          "PEDOT:PSS | MoO3",
                          "DIPO-Ph4",
                          "Nickel acetate tetrahydrate; ethanolamine",
                          "Spiro-MeOTAD; Li; Co",
                          "NiO Target",
                          "P3CT",
                          "Li-TFSI; NiPc; TBP",
                          "S; Oleylamine; 1-octadecane; diphenylphosphine; Indium acetate; CuI",
                          "Spiro-MeOTAD; Li-TFSI; TBP | MoO3",
                          "IEICO | MoO3",
                          "MoO3",
                          "FK209; Li-TFSI; B186; TBP",
                          "P3HT",
                          "H-Lin",
                          "PBTTTV-h",
                          "CuSO4; Lactic Acid; NaOH",
                          "Clevios PVP Al 4083",
                          "rGO-4FPH | Spiro-MeOTAD; Li-TFSI; TBP",
                          "Rubrene",
                          "M2; Li-TFSI; TBP",
                          "CF-BTz-ThR",
                          "Al(C2H5)3 | nan",
                          "MEH-PPV",
                          "Graphene oxide | Carbon dots",
                          "NiOx-np solution",
                          "Li-TFSI; H-Z2; TBP",
                          "Li-TFSI; Spiro-MeOTAD; TBP; Co-TFSI",
                          "Nickel acetate hexahydrate; ethanolamine | ethylphosphonic acid",
                          "NaLuF4:Yb,Er@NaLuF4; Li-TFSI; TBP; PTAA",
                          "Clevios PVP Al 4083 | PEI",
                          "Spiro-MeOTAD",
                          "Nickel Nitrate hexahydrate",
                          "CZ-TA; Li-TFSI; TBP",
                          "FK102; Li-TFSI; Spiro-MeOTAD; TBP",
                          "M1; Li-TFSI; TBP",
                          "Spiro-MeOTAD; Li-TFSI; TBP",
                          "Copper thiocyanate",
                          "Graphene oxide | PFNBr",
                          "Graphene oxide | PTAA",
                          "NiO-np | PTAA",
                          "CZTS-np",
                          "Li-TFSI; H-Z1; TBP",
                          "Spiro-MeOTAD; Li-TFSI; TBP | MoOx",
                          "Co(PyPz)3(TFSI)3; Li-TFSI; Spiro-MeOTAD; TBP",
                          "Li-TFSI; MWCNTs; Spiro-MeOTAD; TBP",
                          "PTAA | PFN",
                          "Nickel Chloride hexahydrate; HNO3",
                          "C102; FK209; Li-TFSI; TBP",
                          "Nickel acetate hexahydrate; ethanolamine",
                          "InP-np | Li-TFSI; Spiro-MeOTAD; TBP",
                          "C13-FAS | Spiro-MeOTAD",
                          "Li-TFSI; PTAA; TBP",
                          "TaTm | F6-TCNNQ; TaTm",
                          "FK209; iDM1; Li-TFSI; TBP",
                          "P3HT; Li-TFSI; TBP",
                          "H-Star",
                          "polyacrylonitrile; rGO",
                          "Ni(CH3COO)2\u00b74H2O",
                          "Vanadium(V)\noxytriisopropoxide; IPA",
                          "PTAA",
                          "PBDT(T)(2F)T",
                          "CZTS-np; hexanethiol",
                          "FK209; Li-TFSI; Spiro-MeOTAD; TBP",
                          "PBDT(2F)T",
                          "PEDOT:PSS; PEG",
                          "Li-TFSI; Spiro-MeOTAD; TBP",
                          "Spiro-MeOTAD; Li-TFSI; Co-TFSI; TBP",
                          "FK209; Li-TFSI; H-Star; TBP",
                          "FK209; Li-TFSI; Spiro-MeOTAD; TBP | Vanadium(V)\noxytriisopropoxide; IPA",
                          "PBDT(2H)T",
                          "Ni(Ac)2\u00b74H2O; SrCl2 | nan",
                          "2PACz",
                          "B186",
                          "Li-TFSI; Spiro-MeOTAD; TBP; V2O3 | Clevios PVP Al 4083",
                          "Li-TFSI; P3HT; TBP",
                          "Carbon Paste",
                          "DTP-C6Th",
                          "Graphene oxide | PTFTS",
                          "Spiro-MeOTAD; TBP",
                          "IEICO; PBDTTT-E-T | MoO3",
                          "MeO-2PACz",
                          "nickel acetate tetrahydrate",
                          "PTAA >> Sb 2D-nanosheets",
                          "TPE-S",
                          "Rubrene | PEDOT:PSS",
                          "nickel acetylacetonate",
                          "HA2",
                          "Cu >> iodine",
                          "Nickel acetate tetrahydrate",
                          "Spiro-MeOTAD; Co(III)(pztbpy)3; LiNTf2; TBP",
                          "PEDOT:PSS",
                          "Graphene oxide",
                          "Li-TFSI; BTPA-3; TBP",
                          "HA1",
                          "Nickel acetate hexahydrate; ethanolamine | 4-Bromobenzoic acid",
                          "Li-TFSI; TBP; Spiro-MeOTAD; acetonitrile",
                          "Li-TFSI; Spiro-MeOTAD; TBP | Li-TFSI; MWCNTs; Spiro-MeOTAD; TBP",
                          "Cu-np; NiOx-np",
                          "C101; FK209; Li-TFSI; TBP",
                          "InP-np",
                          "Oleylamine",
                          "FK209; Li-TFSI; EP02; TBP",
                          "PBDTTT-E-T | MoO3",
                          "nickel (II) acetate tetrahydrate",
                          "ethanolamine; nickel acetate tetrahydrate",
                          "Nickel acetate; ethylene glycol; ethylenediamine",
                          "pentaerythritol tetrakis(3-mercaptopropionate) | Spiro-MeOTAD; Li-TFSI; TBP",
                          "PTAA | PFN-P2"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds",
                "description": "The non-solvent precursor chemicals used in each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemicals associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several compounds, e.g. A and B, list the associated compounds in alphabetic order and separate them with semicolons, as in (A; B)\n- Note that also dopants/additives should be included\n- When several precursor solutions are made and mixed before the reaction step, it is the properties of the final mixture used in the reaction we here describe.\n- The number and order of layers and reaction steps must line up with the previous columns.\n- For gas phase reactions, state the reaction gases as if they were in solution.\n- For solid-state reactions, state the compounds as if they were in solution.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- If the compounds for a deposition step is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nFK209; Li-TFSI; Spiro-MeOTAD; TBP\nNiO-np\nPTAA | CuSCN",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Heraeus | synthesized",
                          "Energy Chemical; Sigma Aldrich; Sigma Aldrich; Sigma Aldrich",
                          "Xi\u2019an p-OLED; Sigma Adrich; Xi\u2019an p-OLED; Sigma Adrich",
                          "Sigma Aldrich",
                          "Sigma Aldrich; Lumtec; Sigma Aldrich",
                          "Xi\u2019an p-OLED",
                          "Unknown",
                          "Lumtec, Sigma Aldrich, Lumtec, Sigma Aldrich",
                          "Reike Metals",
                          "Unknown >> 0.1 mg/ml",
                          "Clevios PVP",
                          "Xi'an Polymer Light Technology; Xi'an Polymer Light Technology; Xi'an Polymer Light Technology",
                          "Sigma Adrich; Shenzhen Feiming Science and Technology; Sigma Adrich; Dyesol",
                          "Dysole; Sigma Aldrich; Dyenamo; Sigma Aldrich",
                          "Unknown; Borun Chemical; Unknown",
                          "Clevious",
                          "Dyesol; Sigma Aldrich; Shenzen Feiminf Science and Technology; Sigma Aldrich",
                          "Sigma Aldrich; Merck; Sigma Aldrich",
                          "Sigma Aldrich; Sigma Aldrich; Dalian HeptaChroma SolarTech Co. Ltd.; Sigma Aldrich",
                          "Advanced Election Technology Co., Ltd; Unknown",
                          "Tokyo Chemical Industry; Wako Pure Chemical; Wako Pure Chemical",
                          "Sigma Adrich; Sigma Adrich; Sigma Adrich; Acros Organics",
                          "Aladdin; Aladdin; Aladdin",
                          "Alfa-Aesar",
                          "Unknown | Sigma Aldrich; Sigma Aldrich; Sigma Aldrich",
                          "Heraeus",
                          "1-Material",
                          "Kojundo Chemical Lab. Co.",
                          "1-Material, NICT-7",
                          "Sigma Adrich; Merck; Sigma Adrich",
                          "Showa Chemical | ACROS Organic",
                          "Dyesol; Sigma Aldrich; Shenzhen Feiming Science and Technology; Sigma Aldrich",
                          "Synthesized",
                          "Guangzhou Seaside Technology",
                          "Sigma Adrich; Sigma Adrich; Sigma Adrich",
                          "Dyesol; Aladdin; Merck; Aladdin",
                          "Tokyo Chemical Industry",
                          "Aladdin | Aladdin",
                          "Sigma Aldrich; Sigma Aldrich; Sigma Aldrich",
                          "Borun Chemicals; Sigma Aldrich; Unknown",
                          "Baytron",
                          "Clevios Heraeus",
                          "Ossila",
                          "Xi\u2019an p-OLED | Aladdin",
                          "1-Material >> synthesized",
                          "Synthesized; Synthesized",
                          "Shanghai Aladdin Bio-Chem. Technology; Shanghai Aladdin Bio-Chem. Technology; Shanghai Aladdin Bio-Chem. Technology; Sigma Aldrich; Sigma Aldrich",
                          "Sinopharm Chemical Reagent Co. Ltd.,",
                          "J&K Scientific; Merck; Sigma Aldrich",
                          "Derthon; Sigma Aldrich; Sigma Aldrich",
                          "Novaled GmbH | Novaled GmbH",
                          "1-Material; Unknown; Nichem Chemicals; 1-Material"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds_supplier",
                "description": "The suppliers of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemical suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For gas phase reactions, state the suppliers for the gases or the targets/evaporation sources that are evaporated/sputtered/etc.\n- For solid state reactions, state the suppliers for the compounds in the same way.\n- For reaction steps involving only pure solvents, state the supplier as \u2018none\u2019 (as that that is entered in a separate filed)\n- For chemicals that are lab made, state that as \u201cLab made\u201d or \u201cLab made (name of lab)\u201d\n- If the supplier for a compound is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nDysole; Sigma Aldrich; Dyenamo; Sigma Aldrich\nSigma Aldrich; Fisher | Acros\nLab made (EPFL) | Sigma Aldrich >> none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Puris; Puris; Puris; Pro analysis",
                          "Unknown",
                          "Unknown; puris; puris",
                          "99%; 99%",
                          "Unknown; 96%; Unknown; 99%",
                          "Puris; Puris; Technical",
                          "99.5; 99.8; Unknown",
                          "99.95%; Unknown; 96%",
                          "0.98",
                          "Puris; Puris; Puris",
                          "99.9; Pro analysis; Tecnical; Puris",
                          "Unknown; Pro analysis; Puris; Puris",
                          "0.999"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds_purity",
                "description": "The purity of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the compound purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, i.e. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019 (as that is stated in another field)\n- If the purity for a compound is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\n99.999; Puris| Tecnical\nUnknown >> Pro analysis; Pro analysis | none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "35 mg/ml",
                          "1.75 vol%; 80 mg/ml; 2.85 vol%",
                          "1.55 wt%",
                          "0.15 M; 1 M",
                          "72 mg/ml; 1.7 vol%; 2.0 vol%",
                          "30 mM; 50 mg/ml; 200 mM",
                          "72.3 mg/ml; 2.85 vol%; 1.75 vol% | nan",
                          "20 mg/ml | 1 mg/ml",
                          "4 mM; 30 mM; 80 mg/ml; 200 mM",
                          "5.4 mg/ml; 9.36 mg/ml; 72.3 mg/ml; 0.028 ml/ml",
                          "30 mol%; 8 wt%; 80 mol%",
                          "0.14 wt%; 2.24 wt%",
                          "51.43 mg/ml; 1.79 vol%; 2.5 vol%",
                          "1 M; 6 mL; 6 mL; 6 mL; 1 mL; 0.3 mmol; 0.3 mmol",
                          "72.3 mg/ml; 6.76 mg/ml; 0.5 vol%",
                          "9.1 mg/ml; 90 mg/ml; 0.029 ml/ml",
                          "0.2 M",
                          "72 mg/ml; 91 mg/ml; 2.85 vol% | nan",
                          "1 mg/ml",
                          "0.82 mg/ml; 10 mg/ml; 2 \u00b5l/ml",
                          "15 mg/ml; 1.5 mg/ml",
                          "9.1 mg/ml; 80 mg/ml; 0.0288 ml/ml",
                          "18.2 mg/ml; 72.3 mg/ml; 8 \u00b5l/ml",
                          "5 mg/ml",
                          "25 mg/ml; 0.32 mg/ml | 2 mg/ml",
                          "9.1 mg/ml; 72.3 mg/ml; 0.029 ml/ml",
                          "1 mg/ml; 520 mg/ml; 0.036 vol%; 36 mg/ml",
                          "0.15 M; nan",
                          "9.1 mg/ml; 1 wt%; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "90 mg/ml",
                          "5.6 mg/ml; 56 mg/ml; 30 mg/ml",
                          "90 mg/ml; 7.65 mg/ml; 1 vol%",
                          "90 mg/ml; 0.0225 mL; 0.036 mL | nan",
                          "nan | 72.3 mg/ml; 1.75 vol%; 2.88 vol%",
                          "2 wt% | nan",
                          "70 mg/ml",
                          "72.3 mg/ml; 2.88 vol%; 1.75 vol%",
                          "520 mg/ml; 72.3 mg/ml; 0.0288 vol%",
                          "9.1 mg/ml; 70 mg/ml; 28.8 \u00b5l/ml",
                          "72.3 mg/ml; 520 mg/ml; 1",
                          "182 mg/ml; 6 vol%",
                          "11.44 mg/ml; 90 mg/ml; 36 \u00b5l/ml",
                          "2 mg/ml | nan",
                          "1.3 mg/ml",
                          "1 mg/ml | 0.05 mg/ml",
                          "17.5 mM",
                          "4 mg/ml",
                          "30 mg/ml; nan",
                          "40 mg/ml; 10 mg/ml",
                          "8.7 mg/ml; 9.1 mg/ml; 72.3 mg/ml; 0.029 ml/ml",
                          "1.5 wt% | 2 mg/ml >> 2 mg/ml >> 2 mg/ml >> 2 mg/ml",
                          "25 mg/ml; 0.32 mg/ml",
                          "11.4 mg/ml; 90 mg/ml; 36 \u00b5l/ml",
                          "520 mg/ml; 72.3 mg/ml; 2.88 vol%",
                          "20 mg/ml",
                          "5.2 mg/ml; 52.8 mg/ml; 0.02 ml/ml",
                          "70 mM",
                          "3.83 mg/ml; 50 mg/ml; 22.5 \u00b5l/ml",
                          "0.5 vol%; 6.76 mg/ml; 30 mg/ml; 0.5 vol%",
                          "12 \u00b5l/ml; 0.2 M",
                          "73 mg/ml",
                          "500 mg/ml; 80 mg/ml; 0.03 vol%",
                          "60 mg/ml",
                          "9.1 mg/ml; 72.3 mg/ml; 28.8 \u00b5l/ml | 9.1 mg/ml; 0.5 wt%; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "32 mM; 75 mg/ml; 28.5 \u00b5l/ml",
                          "8 mg/ml",
                          "9.1 mg/ml; 72.3 mg/ml; 0.0288 ml/ml",
                          "8.7 mg/ml; 9.8 mg/ml; 72.3 mg/ml; 0.029 ml/ml",
                          "30 mg/ml | 0.005 vol%; 0.995 vol%",
                          "0.5 vol%; 6.76 mg/ml; 10 mg/ml; 0.5 vol%",
                          "12.5 mg/ml | nan",
                          "73.2 mg/ml | 5 mg/ml",
                          "9.1 mg/ml; 2 wt%; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "1 mg/ml | 0.1 mg/ml",
                          "5 mg/ml >> nan",
                          "11.34 mg/ml; 72.3 mg/ml; 0.0176 ml/ml",
                          "1.5 wt% | 2 mg/ml >> 2 mg/ml >> 2 mg/ml",
                          "2.5 wt%",
                          "1.2 mg/ml",
                          "nan; nan; 70 mg/ml; nan",
                          "63 mg/ml; 170 mg/ml; 2 vol%",
                          "80 mg/ml; 1.45 mg/ml; 2.85 mg/ml",
                          "15 mg/ml; 0.75 vol%; 0.75 vol%",
                          "72 mg/ml; 1.44 vol%; 2.88 vol%",
                          "9.1 mg/ml; 80 mg/ml; 0.03 ml/ml",
                          "1.7 mg/ml; 10 mg/ml; 7 \u00b5l/ml",
                          "63 mg/ml",
                          "0.035 M; 0.07 M; 0.231 M",
                          "10 mg/ml",
                          "2 mg/ml; 520 mg/ml; 0.036 vol%; 36 mg/ml",
                          "0.3 M; 2 M; nan",
                          "12.5 mg/ml; 10 mg/ml | nan",
                          "0.2 M | 0.03 M",
                          "30 mM; 85 mg/ml; 30 mM",
                          "182 mg/ml; 6 vol% | 0.5 mg/ml",
                          "9.1 mg/ml; 80 mg/ml; 0.028 ml/ml",
                          "78 mM",
                          "8.8 mg/ml; 0.028 vol%; 70 mg/ml; 0.035 vol%",
                          "0.058 M; 0.0056 M; 0.031 M; 0.19 M",
                          "nan; 90 mg/ml; nan",
                          "9.1 mg/ml; 60 mM; 0.029 ml/ml",
                          "9.1 mg/ml; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "520 mg/ml; 82 mg/ml; 1.4 vol%",
                          "15 mg/ml; 0.5 mg/ml; 0.5 vol%",
                          "80 mg/ml; 5 mg/ml",
                          "25 mg/ml",
                          "0.2 M | 0.01 M",
                          "3 mol%; 50 mol%; 70 mM; 330 mol%",
                          "0.2 M | 0.05 M",
                          "10 mg/ml; 170 mg/ml; 0.004 vol%",
                          "35 mM",
                          "8.75 mM",
                          "200 mg/ml",
                          "72.3 mg/ml; 2.88 vol%",
                          "1.8 mM; 30 mM; 60 mM; 200 mM",
                          "72.5 mg/ml",
                          "1.5 mg/ml | 0.5 mg/ml",
                          "6.43 mg/ml",
                          "80 mg/ml",
                          "7.5 mg/ml; 7.65 mg/ml; 90 mg/ml; 0.01 ml/ml",
                          "0.064 M; 0.17 M; 0.198 M",
                          "8.7 mg/ml; 9.1 mg/ml; 72 mg/ml; 28.8 \u00b5l/ml",
                          "0.1 M",
                          "0.0175 vol%; 72.3 mg/ml; 0.0288 vol%",
                          "2 mg/ml",
                          "8.7 mg/ml; 8.7 mg/ml; 72.3 mg/ml; 2.88 vol%",
                          "9.1 mg/ml; 72.3 mg/ml; 30 \u00b5l/ml",
                          "0.3 mg/ml",
                          "1.5 wt% | 2 mg/ml >> 2 mg/ml >> 2 mg/ml >> 2 mg/ml >> 2 mg/ml",
                          "15 mM",
                          "10.4 mg/ml; 60 mg/ml; 0.03 mg/ml",
                          "102 mg/ml",
                          "2.5 mg/ml",
                          "10 mg/ml | nan",
                          "30 mg/ml",
                          "1 mg/ml | 0.025 mg/ml",
                          "72.3 mg/ml; 520 mg/ml; 0.3 vol%",
                          "0.44 M",
                          "11.4 mg/ml; 90 mg/ml; 0.036 mg/ml",
                          "0.90 vol%; 2.07 vol%; 0.091 mg/ml; 3.60 vol%",
                          "72.3 mg/ml; 1.75 vol%; 2.88 vol%",
                          "9.1 mg/ml; 72.3 mg/ml; 28.8 \u00b5l/ml | 9.1 mg/ml; 1 wt%; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "10.4 mg/ml; 80 mg/ml; 0.03 ml/ml",
                          "4 mM; 30 mM; 80 mg/ml; 200 mM | 0.005 vol%; 0.995 vol%",
                          "35 mM; 35 mM; 210 mM",
                          "72.3 mg/ml; 2 mM; 2.88 vol%",
                          "80 mg/ml; 10 mg/ml",
                          "68 mM; 9 mM; 55 mM",
                          "1.6 vol%mM; 2.1 vol%; 91 mg/ml; 3.6 vol%",
                          "2 mg/ml | 0.5 mg/ml",
                          "0.2 M | 0.02 M",
                          "0.2 M | 0.04 M",
                          "100 mg/ml",
                          "72.3 mg/ml; 0.029 vol%; 28.3 mg/ml; 0.0288 vol%",
                          "2.45 mM; 40 mM; 81.6 mM; 270 mM",
                          "72.3 mg/ml",
                          "60 mM; 32 mM; 195 mM",
                          "0.5 mg/ml; 520 mg/ml; 0.036 vol%; 36 mg/ml",
                          "9.1 mg/ml; 72 mg/ml; 0.028 mg/ml",
                          "0.170 M; 0.064 M; 0.198 M",
                          "9.1 mg/ml; 0.5 wt%; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "1.5 wt% | 2 mg/ml",
                          "2.38 wt%",
                          "300 mg/ml; 520 mg/ml; 72.3 mg/ml; 0.028 vol%",
                          "0.5 wt%",
                          "73.2 mg/ml",
                          "1.5 wt%",
                          "54 mol%; 30 mg/ml; 334 mol%",
                          "72.3 mg/ml; 1.7 vol%; 2.8 vol%",
                          "2.8 vol%mM; 1.85 vol%; 72.3 mg/ml; 2.9 vol%",
                          "8.67 mg/ml; 9.1 mg/ml; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "520 mg/ml; 83.2 mg/ml; 0.0338 vol%",
                          "0.175 vol%; 80 mg/ml; 0.285 vol%",
                          "1.5 wt% | 2 mg/ml >> 2 mg/ml",
                          "9.1 mg/ml; 72.5 mg/ml; 0.028 mg/ml",
                          "6 mg/ml",
                          "15 mg/ml",
                          "520 mg/ml; 36 mg/ml; 0.036 vol%",
                          "1 mg/ml; 1 mg/ml",
                          "9 mM; 68 mM; 55 mM",
                          "1.5 mg/ml",
                          "20 mg/ml; 170 mg/ml; 34.78 vol%",
                          "50 mg/ml",
                          "32 mM; 15 mg/ml; 28.5 \u00b5l/ml",
                          "72.3 mg/ml; 1.75 vol%; 3.1 vol%",
                          "72 mg/ml",
                          "97 mg/ml",
                          "30 mM; 72.3 mg/ml; 200 mM",
                          "15.08 mg/ml; 9.1 mg/ml; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "1 mM",
                          "6.24 mg/ml; 72 mg/ml; 8 \u00b5l/ml",
                          "0.005 vol%; 0.995 vol%",
                          "5 mg/ml; 520 mg/ml; 0.036 vol%; 36 mg/ml",
                          "9.1 mg/ml; 72.3 mg/ml; 28.8 \u00b5l/ml | 9.1 mg/ml; 2 wt%; 72.3 mg/ml; 28.8 \u00b5l/ml",
                          "20 mg/ml; 6.8 vol%; 3.4 vol%"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_concentrations",
                "description": "The concentration of the non-solvent precursor chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the concentrations associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated concentrations and separate them with semicolons, as in (A; B)\n- The order of the compounds must be the same as in the previous filed.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used. When possible, use one of the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml, wt%, mol%, vol%, ppt, ppm, ppb\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n0.2 M; 0.15 M| 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "0.02",
                          "0.045",
                          "33.0",
                          "0.0175; 0.9537; 0.0288",
                          "0.029; 0.0175; Unknown; 0.288",
                          "0.03; 0.94; 0.03",
                          "1.0; 0.015; 0.008",
                          "0.0088; 0.0144",
                          "0.05",
                          "Unknown",
                          "0.065",
                          "0.95; 0.0075; 0.004",
                          "0.035",
                          "0.018; 0.018; 0.936; 0.028",
                          "1.3",
                          "1.5",
                          "0.006; 0.0175; 0.9485; 0.028",
                          "1.7",
                          "0.06",
                          "19.0; 7.0; 8.0; 0.2 | 33.33",
                          "0.0175; Unknown; 0.0285",
                          "1.0",
                          "0.0075; 0.47; 0.0169",
                          "0.0175; 0.95; 0.0288",
                          "0.018; 0.94; 0.028; 0.018",
                          "0.018; Unknown; 0.028",
                          "0.0175; 0.028",
                          "0.92; 0.029; 0.0175; 0.0288"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_volumes",
                "description": "The volume of the reaction solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the volumes associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The volumes refer the volumes used, not the volume of the stock solutions. Thus if 0.15 ml of a solution is spin-coated, the volume is 0.15 ml\n- For reaction steps without solvents, state the volume as \u2018nan\u2019\n- When volumes are unknown, state that as \u2018nan\u2019\nExample\n0.1\n0.1 >> 0.05 | 0.05\nnan | 0.15",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "48.0",
                          "Unknown",
                          "0.33",
                          "10.0",
                          "0.0167",
                          "4.0",
                          "2.0",
                          "4.0 | 0.0",
                          "24.0",
                          "3.0",
                          "0.5"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_age",
                "description": "The age of the solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the age of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- As a general guideline, the age refers to the time from the preparation of the final precursor mixture to the reaction procedure.\n- When the age of a solution is not known, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state this as \u2018nan\u2019\n- For solutions that is stored a long time, an order of magnitude estimate is adequate.\nExample\n2\n0.25 |1000 >> 10000\nnan | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "70; 25",
                          "25",
                          "Unknown",
                          "70 | 25",
                          "90",
                          "60; 25",
                          "50",
                          "25 | Unknown",
                          "70 | Unknown",
                          "70",
                          "60",
                          "24",
                          "25 | 25"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_temperature",
                "description": "The temperature of the reaction solutions.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a reaction solution undergoes a temperature program, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons, e.g. 25; 100\n- When the temperature of a solution is unknown, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state the temperature of the gas or the solid if that make sense. Otherwise state this as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume an undetermined room temperature to be 25\nExample\n25\n100; 50 | 25\nnan | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "25",
                          "Unknown",
                          "25 | 15",
                          "120 | 25",
                          "25 | 25 >> 25",
                          "120",
                          "25 >> 100",
                          "25 | 25 >> 25 >> 25",
                          "25 | 25 >> 25 >> 25 >> 25 >> 25",
                          "25 | 25 >> 25 >> 25 >> 25",
                          "25 | 25",
                          "21"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_substrate_temperature",
                "description": "The temperature of the substrate.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the substrates (i.e. the last deposited layer) associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The temperature of the substrate refers to the temperature when the deposition of the layer is occurring.\n- If a substrate undergoes a temperature program before the deposition, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- When the temperature of a substrate is not known, state that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume that an undetermined room temperature is 25\nExample\n25\nnan\n125; 325; 375; 450 | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "25",
                          "550",
                          "25 >> 80",
                          "300",
                          "475",
                          "13 | Unknown",
                          "18 | Unknown",
                          "160",
                          "25 >> 550",
                          "140 | 100",
                          "5",
                          "600",
                          "140 | 100 >> 100 >> 100 >> 100",
                          "650",
                          "5 | 0",
                          "25 >> 250",
                          "70",
                          "325",
                          "75; 120; 300",
                          "25 | 25",
                          "400",
                          "80",
                          "200",
                          "140 | 100 >> 100 >> 100 >> 100 >> 100",
                          "Unknown",
                          "130 | 60",
                          "100",
                          "130",
                          "120",
                          "500",
                          "150",
                          "235 | 15",
                          "165",
                          "100 | 100",
                          "110.0",
                          "60",
                          "25 | 55",
                          "25 >> 650",
                          "120 | 150",
                          "150 | Unknown",
                          "30 | Unknown",
                          "90",
                          "100 >> 100",
                          "100 | 25",
                          "25 >> 450",
                          "12 | Unknown",
                          "95",
                          "235",
                          "145",
                          "450",
                          "7 | Unknown",
                          "125",
                          "135",
                          "140 | 100 >> 100",
                          "235 | 25",
                          "300 | 120",
                          "140",
                          "25; 100",
                          "350",
                          "140 | 100 >> 100 >> 100",
                          "25 >> 100",
                          "11 | Unknown",
                          "50",
                          "120 | 60",
                          "9 | Unknown",
                          "15 | Unknown",
                          "130 | 25",
                          "200.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_temperature",
                "description": "The temperatures of the thermal annealing program associated with depositing the layers\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing temperatures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- If no thermal annealing is occurring after the deposition of a layer, state that by stating the room temperature (assumed to 25\u00b0C if not further specified)\n- If the thermal annealing program is not known, state that by \u2018nan\u2019\nExample\n25\n50 | nan\n450 | 125; 325; 375; 450 >> 125; 325; 375; 450",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "40.0",
                          "10.0 | 5.0 >> 5.0 >> 5.0",
                          "10.0 | 5.0 >> 5.0 >> 5.0 >> 5.0 >> 5.0",
                          "10.0",
                          "5.0",
                          "60.0",
                          "45.0 | 0.0",
                          "12.0",
                          "Unknown",
                          "5.0 >> 2.0",
                          "120.0",
                          "45.0",
                          "10.0 | 0.0",
                          "15.0 | 25.0",
                          "10.0 | 5.0",
                          "30.0",
                          "10.0 | 10.0",
                          "0.0 >> 30.0",
                          "Unknown | 25.0",
                          "30.0; 30.0",
                          "10.0; 15.0; 60.0",
                          "10.0 | Unknown",
                          "60.0 | 15.0",
                          "10.0 | 5.0 >> 5.0 >> 5.0 >> 5.0",
                          "15.0 | 5.0",
                          "1.0",
                          "25.0",
                          "20.0",
                          "20.0 | 10.0",
                          "10.0 | 5.0 >> 5.0",
                          "2.0 | 2.0",
                          "15.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_time",
                "description": "The time program associated to the thermal annealing program.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing times associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the associated times at those temperatures and separate them with semicolons.\n- The annealing times must align in terms of layers\u00b8 reaction steps and annealing temperatures in the previous filed.\n- If a time is not known, state that by \u2018nan\u2019\n- If no thermal annealing is occurring after the deposition of a layer, state that by \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 20 and not 10-30.\nExample\nnan\n60 | 1000\n30 | 5; 5; 5; 30 >> 5; 5; 5; 30",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Dry air",
                          "Unknown",
                          "Air | Vacuum",
                          "Air | N2",
                          "Air",
                          "Ambient",
                          "N2",
                          "Ambient | Ar",
                          "O2",
                          "Vacuum",
                          "N2 >> N2",
                          "Air | Air",
                          "N2 | N2",
                          "Ar | Ar",
                          "Ar"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_atmosphere",
                "description": "The atmosphere during thermal annealing\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each annealing step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the atmosphere is a mixture of different gases, i.e. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas.\n- This is often the same as the atmosphere under which the deposition is occurring, but not always.\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nVacuum | N2\nAir | Ar >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "12.0",
                          "Unknown",
                          "20.0",
                          "24.0",
                          "4.0",
                          "15.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_time_until_next_deposition_step",
                "description": "The time between the HTL stack is finalised and the next layer is deposited\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Dry air",
                          "Unknown",
                          "Air",
                          "Ambient",
                          "Vacuum",
                          "N2",
                          "O2"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_atmosphere",
                "description": "The atmosphere in which the sample with the finalised HTL stack is stored until the next deposition step.\nExample\nAir\nN2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "20.0",
                          "10.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_relative_humidity",
                "description": "The relive humidity under which the sample with the finalised HTL stack is stored until next deposition step\n- If there are uncertainties, only state the best estimate, e.g write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Plasma",
                          "Ar plasma",
                          "Ozone",
                          "UV-Ozone",
                          "He plasma",
                          "Washed with methanol",
                          "IPA dipping",
                          "DMF"
                        ]
                      }
                    }
                  ]
                },
                "name": "surface_treatment_before_next_deposition_step",
                "description": "Description of any type of surface treatment or other treatment the sample with the finalised HTL stack undergoes before the next deposition step.\n- If more than one treatment, list the treatments and separate them by a double forward angel bracket (\u2018 >> \u2018)\n- If no special treatment, state that as \u2018none\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nnone\nAr plasma\nUV-ozone",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "Backcontact",
            "description": "A section to describe information related to the back contact of the solar cell.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Au | ITO",
                          "rGO | Au",
                          "MoO3 | Ag | WO3",
                          "Carbon; WO3-np",
                          "ITO | MgF2",
                          "Al | Al2O3",
                          "Ag | Alq3",
                          "AgAu",
                          "MoOx | Ag",
                          "Carbon-nt; PCBM-60",
                          "ITO",
                          "AgAl",
                          "Cr | Cu",
                          "AgZn | Al",
                          "Mo | Ag",
                          "Cu-CFN",
                          "Field's metal",
                          "Al | Ag",
                          "Ag-nw | ZnO-np",
                          "Carbon; NiS",
                          "PEDOT:PSS | PDMS",
                          "Carbon; Graphite; PANI",
                          "MoOx | Au",
                          "Ni-grid",
                          "GaIn",
                          "Cu",
                          "Ag | MoO3",
                          "CNTs",
                          "none",
                          "MoOx | Al",
                          "MWCNTs; ONC1",
                          "Cu | Au",
                          "Cr | Au",
                          "MoOx | Au | Cu | MoOx",
                          "Pt-sheet",
                          "MoO3 | Ag",
                          "Carbon | IPA",
                          "KIPIG",
                          "T-MWCNTs",
                          "AZO",
                          "CSCNT@SnO2",
                          "B-MWCNTs",
                          "Carbon black | Carbon",
                          "Ag | SiO2 | ZnS | Ag | ZnS",
                          "Carbon-nt | PMMA",
                          "MoO3 | Ag | MoO3",
                          "PEDOT:PSS | Graphene",
                          "Pb",
                          "ITO | SLG",
                          "Carbon; NiO:rGO",
                          "Carbon; NiO",
                          "NiO",
                          "Cu; Cu2O",
                          "Graphene | PDMS",
                          "Carbon black; Graphite",
                          "N-Graphene",
                          "CuPc | Carbon",
                          "Carbon",
                          "Carbon-paper",
                          "Au | Al",
                          "Carbon; WO2-np",
                          "FTO",
                          "CNTs | Mxene",
                          "Graphite | Cu-tape",
                          "H2PtCl6",
                          "PTAA | FTO | SLG",
                          "PEI | PEDOT:PSS | PDMS",
                          "Bi2Te3",
                          "Pt",
                          "Carbon-nw",
                          "Cu | Ag | MoO3",
                          "MoO2 | ITO",
                          "Ca | Al",
                          "AZO | Ni | Al | Ni",
                          "MoOx | Cu",
                          "Carbon-tape",
                          "Carbon | Au",
                          "Carbon | CuSCN",
                          "PEDOT:PSS | Al",
                          "TFSA-Graphene | PET | Ag",
                          "ITO | Ag-grid",
                          "Ca",
                          "Mo2O3 | Ag",
                          "SnO2-c | Ag | SnO2-c",
                          "Candle soot | FTO | SLG",
                          "MoOx | IZO",
                          "Au | Ag-nw",
                          "Au",
                          "TETA-Graphene | PET",
                          "W",
                          "Transparent Conductive Adhesive | PET:Ni mesh",
                          "Graphene | PMMA | PDMS",
                          "MoO3 | Au | MoO3",
                          "Au | LiF",
                          "MoO3 \u2223 ITO",
                          "Au-np",
                          "Mg | Al",
                          "Carbon | Ag",
                          "TETA-Graphene | PET | Ag",
                          "Graphite | Cu",
                          "Ag-nw",
                          "Ni",
                          "Na@Carbon-nanowalls",
                          "Carbon black",
                          "Au | Organosilicate",
                          "AZO-c",
                          "Carbon; NiO-np",
                          "Ag",
                          "Ag | FTO",
                          "IZTO",
                          "ITO | MWCNTs",
                          "Ag-nw | PCBM-60",
                          "PEDOT:PSS | PEDOT:PSS | PDMS",
                          "Carbon | FTO | SLG",
                          "SWCNTs",
                          "Cr",
                          "IZO | Ag",
                          "FTO | SLG",
                          "Graphite | FTO",
                          "AZO | Ni | Al",
                          "Pd",
                          "Carbon | FAAc",
                          "Carbon black; Carbon-nt; Graphite",
                          "Carbon black; Graphite | MWCNTs",
                          "TeO2 | Ag",
                          "Au | MoO3",
                          "AZO | NiAl",
                          "Bi | Au",
                          "Carbon; MAI | Carbon",
                          "NiO | Ag | NiO",
                          "MoO3 | ITO | MgF2",
                          "PH 1000",
                          "Ag | ITO | Ag",
                          "ITO | LiF",
                          "Ag | IZO",
                          "LiF | Al",
                          "H:MoO3-nanobelts",
                          "Carbon | CNTs",
                          "Ti | Au",
                          "Carbon | Al",
                          "MoOx | Au | MoOx",
                          "Ag-sheet",
                          "TFSA-Graphene | PET",
                          "Graphene | PET",
                          "Graphene | PEDOT",
                          "MoOx | Ag | MoOx",
                          "MoO3 | AuAg | MoO3",
                          "Carbon | Carbon-fibre",
                          "MoO3 | Au | Ag",
                          "Ba | Ag",
                          "Graphen",
                          "Mg | Ag",
                          "Carbon | MAAc",
                          "MoO3 | Au",
                          "MoOx | ITO",
                          "Graphite | Pt",
                          "MWCNTs; ONC2",
                          "IZO",
                          "Ag | Ni",
                          "PANI | FTO | SLG",
                          "Al | Au",
                          "MoO3 \u2223 Au \u2223 Ag \u2223 MoO3 | Alq3",
                          "PEDOT:PSS | Ag-nw | PDMS",
                          "MWCNTs",
                          "Cr | Pt | FTO",
                          "SnO2-c | Ag",
                          "Carbon | Sn",
                          "Unknown",
                          "Carbon; PEMA",
                          "Carbon | Graphite",
                          "MoP3 | Ag",
                          "Ag | Ta2O3",
                          "Cr2O3:Cr",
                          "Graphene | Au",
                          "PEDOT:PSS | FTO | SLG",
                          "Carbon | CNTs | Mxene",
                          "AlAg",
                          "AZO | Au",
                          "AV-Carbon; MAI",
                          "Graphite; Carbon black@5:1",
                          "NiO | Ag | NiO | NaYF4 | Ag",
                          "AV-carbon; MAI",
                          "SWCNTs | PMMA",
                          "Ba | Al",
                          "Pt-Carbon-nt",
                          "Sb",
                          "Carbon-epoxy | Ag",
                          "ITO | Ni | Al",
                          "Ni | Al",
                          "Ag | V2O5",
                          "Pt | FTO | SLG",
                          "PEDOT:PSS | ITO | SLG",
                          "Graphene",
                          "Cu | Au | BCP",
                          "IZO | Au",
                          "Au | Ni",
                          "Au | ITO | Au",
                          "MoO3 | AZO | AlNi-grid",
                          "WO3 | Ag",
                          "Au | Ag",
                          "SnO2-c | Cu | SnO2-c",
                          "Carbon | FTO",
                          "CSCNT@Al2O3-c | CSCNT@SnO2",
                          "Ti",
                          "Carbon-nt",
                          "AZO-np | Ag",
                          "Carbon; NiPt-nw",
                          "D-Sorbito; PEDOT:PSSl | Ag-nw | PET",
                          "Carbon; LPP",
                          "MoOx | Cu | MoOx",
                          "PEDOT:PSS | ITO | PET",
                          "In",
                          "Carbon-nanowalls",
                          "NiS | Cr | Pt | FTO | SLG",
                          "Ag | ITO",
                          "Ca | Ag",
                          "Ag-nw | C60",
                          "MoOx | Ag | ZnS",
                          "Au | FTO",
                          "Pt | Si",
                          "Al",
                          "Ag@Au-np",
                          "Graphite",
                          "PEDOT:PSS:PSA",
                          "MnO3 | Ag",
                          "AgAu-mp",
                          "ITO | Al",
                          "Ag | SnO2-c",
                          "ICO",
                          "Ti-grid",
                          "ITO | Au",
                          "MoO3 | Au | Ag | MoO3 | Alq3",
                          "Au-np; NiO",
                          "Carbon-nt | Carbon",
                          "MoOx | ITO | Au",
                          "PEDOT:PSS; Sorbitol | Ag-grid | PET",
                          "MoO3 | ITO",
                          "Pt | FTO",
                          "MoOx | IO | ITO | Au",
                          "Carbon | Galinstan",
                          "P3HT | FTO | SLG",
                          "ITO | Ag",
                          "Ni | Au",
                          "Ag | Au",
                          "SWCNTs | Ag",
                          "Ag | Al",
                          "MoOx | IAI",
                          "Cu | Ag",
                          "Perovskite | PEDOT:PSS | ITO | SLG",
                          "Graphene oxide | Carbon",
                          "Ag-nanocubes | Ag | MoO3",
                          "MoO3 | IZO",
                          "Carbon-mp",
                          "MoOx | ITO | MgF2",
                          "NbS2",
                          "MoO3 | Al",
                          "Ti3C2",
                          "MWCNTs; ONC3",
                          "Carbon | PEDOT:PSS | FTO | SLG",
                          "MoOx | IZO | Au",
                          "LiF | Ag",
                          "ITO | Au-grid",
                          "PEDOT:PSS",
                          "3D potassium-ion preintercalated graphene (KIPIG)",
                          "PEI | PH 1000",
                          "Filed's metal",
                          "Ti | Cu",
                          "Au | Au-wire",
                          "AlNi-grid",
                          "Carbon-nt | PMMA | Au",
                          "ITO | PEN",
                          "Carbon black; MWCNTs",
                          "Carbon | Silica gel electrolyte | Carbon",
                          "CSCNT@Al2O3-c | CSCNT",
                          "Ag-np | ITO",
                          "Carbon; MAI",
                          "PTCBI | Ag | WO3 | PTCBI | Ag",
                          "Carbon | KAc",
                          "Ag | CsF",
                          "Liq | Al",
                          "Graphite | FTO | SLG",
                          "Cu-ribbon",
                          "ITO | Cu",
                          "Mo",
                          "Metal",
                          "AZO | Ag | AZO",
                          "Graphite ribbon",
                          "Pt-np | FTO | SLG",
                          "Carbon | CsAc"
                        ]
                      }
                    }
                  ]
                },
                "name": "stack_sequence",
                "description": "The stack sequence describing the back contact.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\n- If no back contact, state that as \u2018non\u2019\n- Use common abbreviations when appropriate but spell it out if risk for confusion.\n- If a material is doped, or have an additive, state the pure material here and specify the doping in the columns specifically targeting the doping of those layers.\n- There is no sharp well-defined boundary between when a material is best considered as doped or as a mixture of two materials. When in doubt if your material is best described as doped or as a mixture, use the notation that best capture the metaphysical essence of the situation.\n- There are a lot of stack sequences described in the literature. Try to find your one in the list. If it is not there (i.e. you may have done something new) define a new stack sequence according to the instructions.\nExample:\nAu\nAg\nAl\nCarbon\nMoO3 | Ag",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "89.0",
                          "90.0",
                          "40.0 | 11.0",
                          "5.0 | 130.0",
                          "50.0",
                          "70.0 | 10.0 | 10.0",
                          "220.0",
                          "230.0 | 100.0",
                          "81.0",
                          "180.0",
                          "45.0",
                          "15.0 | 80.0",
                          "14000.0",
                          "50.0 | 4000.0",
                          "7.0 | 80.0",
                          "24.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "10.0 | 100.0 | 200.0",
                          "203.0",
                          "10.0 | 120.0 | 70.0",
                          "11.0 | 30.0",
                          "1.0 | 200.0",
                          "30.0 | 120.0 | nan",
                          "60.9",
                          "11000.0 | nan",
                          "1.3 | 100.0",
                          "300.0 | 250.0",
                          "2.0 | 1.0 | 7.0 | 5.0 | 50.0",
                          "15.0 | 150.0",
                          "60.4",
                          "35.0 | 103.0 | 35.0",
                          "2.5 | 154.0",
                          "6.0 | 11.0 | 20.0",
                          "1800.0",
                          "22000.0",
                          "11.0 | 50.0",
                          "60.5",
                          "95.0",
                          "20.0 | 10.0 | 20.0",
                          "10.0 | 110.0",
                          "20.0 | 14.0",
                          "87.0",
                          "10.0 | 90.0",
                          "70.0",
                          "12.0 | 40.0",
                          "21.0 | 250.0",
                          "11.0",
                          "500.0",
                          "2000.0 | nan",
                          "5.0 | nan",
                          "53150.0",
                          "2000.0",
                          "20.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "10.0 | 80.0",
                          "1.0 | 7.0 | 40.0",
                          "21.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "8.0 | 120.0",
                          "5.0 | 150.0",
                          "nan | 6.0 | nan",
                          "61210.0",
                          "260.0",
                          "201.0",
                          "3.0 | 1.0 | 7.0 | 5.0 | 50.0",
                          "2.0 | 100.0",
                          "7.0 | 60.0",
                          "100.0 | 1000.0",
                          "16500.0 | nan",
                          "10.0 | 15.0 | 30.0",
                          "240.0",
                          "7.2 | 70.0",
                          "50.0 | 50.0",
                          "11.0 | nan",
                          "9.0 | nan",
                          "35.0 | 95.0 | 35.0",
                          "330.0",
                          "10.0 | 30000.0",
                          "60.3",
                          "85.0",
                          "60.1",
                          "130.0 | 100.0",
                          "2.5 | 154.0 | 50.0",
                          "nan | 150.0",
                          "15.0 | 12.0",
                          "10.0 | 70.0",
                          "9.0",
                          "15.0 | 12.0 | 60.0",
                          "150.0 | 500.0",
                          "8.0",
                          "0.5 | 60.0",
                          "10.0 | 200.0",
                          "13.0",
                          "7.0 | 12.0 | 30.0",
                          "820.0",
                          "1.0 | 6.0",
                          "nan | 80.0",
                          "13.0 | 80.0",
                          "25.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "2.0 | 250.0",
                          "93.2",
                          "500.0 | 150.0",
                          "5000.0",
                          "20.0",
                          "52.0",
                          "7.0 | 18.0 | 30.0",
                          "21.0 | 7.0 | 20.0",
                          "60.11",
                          "82.0",
                          "15.0 | 12.0 | 20.0",
                          "6.0 | 1.5 | 9.5 | 20.0",
                          "7870.0",
                          "8.0 | 20.0 | 115.0 | 8.0 | 20.0",
                          "30.0 | 120.0",
                          "30.0 | 80.0",
                          "10.0 | 20.0",
                          "14.0",
                          "8.0 | 20.0 | 65.0 | 8.0 | 20.0",
                          "80.0 | 10.0",
                          "2001.0 | nan",
                          "nan | 100.0",
                          "250.0",
                          "10.0 | 10.0",
                          "nan | 220.0",
                          "65.0",
                          "150.0",
                          "15.0 | 50.0",
                          "4000000000.0",
                          "15.0 | 200.0",
                          "46530.0",
                          "nan | 70.0",
                          "23.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "35.0 | 10.0 | 35.0",
                          "100000.0 | nan",
                          "88.0 | 700.0",
                          "5.0 | 12.0 | 40.0",
                          "1.0 | 250.0",
                          "8000.0 | nan",
                          "60.8",
                          "12000.0",
                          "15.0 | nan",
                          "60.7",
                          "nan | 25000.0",
                          "1.0 | 100.0",
                          "30.0 | 70.0",
                          "50000.0",
                          "30.0 | 135.0",
                          "8.0 | 200.0",
                          "35.0",
                          "180.0 | 50.0",
                          "30.0 | 7.0 | 80.0",
                          "750.0",
                          "32000.0",
                          "1.0 | nan",
                          "5.0 | 90.0",
                          "8.0 | 80.0",
                          "150.0 | 4900.0",
                          "90.0 | 200.0",
                          "51.0",
                          "22.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "4500.0",
                          "16000.0",
                          "24000.0",
                          "30000.0",
                          "10.0 | 60.0",
                          "12.0 | 100.0",
                          "7.0 | 120.0",
                          "9.0 | 100.0",
                          "6.7 | 100.0",
                          "154.0 | 50.0",
                          "25.0",
                          "10.0 | 202.0",
                          "20.0 | 10.0 | 35.0",
                          "80.0 | 20.0",
                          "40.0",
                          "65.0 | nan",
                          "83.0",
                          "11200.0",
                          "8.0 | 90.0",
                          "20.0 | 7.0 | 20.0",
                          "230.0",
                          "75.0",
                          "8.0 | 60.0",
                          "190.0",
                          "6.0 | 100.0",
                          "7.0 | 1.0",
                          "3.0 | nan",
                          "15000.0",
                          "35.0 | 84.0 | 35.0",
                          "60.6",
                          "9.0 | 80.0",
                          "nan | 400.0 | 500.0",
                          "10.0 | 40.0",
                          "145.0",
                          "nan | 50.0 | 4000.0",
                          "1500.0",
                          "100.0 | 125.0",
                          "2.0 | 200.0",
                          "28.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "7.0 | 70.0",
                          "60.0",
                          "125.0",
                          "5.0",
                          "40000.0",
                          "45.0 | nan",
                          "35.0 | 76.0 | 35.0",
                          "900.0",
                          "400.0",
                          "105.0 | 90.0",
                          "25000.0",
                          "8.0 | 30.0 | 100.0",
                          "180.0 | 100.0",
                          "2.0",
                          "20.0 | nan",
                          "80.0 | 150.0",
                          "30.0 | 100.0",
                          "11.0 | 10.0",
                          "5.0 | 120.0",
                          "4.0",
                          "1.0 | 10.0 | 20.0",
                          "14.0 | 20.0",
                          "15.0 | 40.0",
                          "40.0 | 120.0",
                          "20.0 | 250.0",
                          "600.0",
                          "nan | 200.0",
                          "12.0",
                          "12000.0 | nan",
                          "6.0 | nan",
                          "100.0",
                          "105.0",
                          "8.0 | 110.0",
                          "15.0 | 120.0",
                          "37500.0",
                          "23000.0 | nan",
                          "5.0 | 10.0 | 35.0",
                          "10.0 | 40.0 | nan",
                          "80.0 | 50.0",
                          "10000.0 | nan",
                          "8.0 | 20.0 | 85.0 | 8.0 | 20.0",
                          "28000.0",
                          "21000.0",
                          "48.0",
                          "9.0 | 25.0",
                          "4.0 | 80.0",
                          "15.0 | 100.0",
                          "96.0",
                          "3.0 | 80.0",
                          "200.0",
                          "70.0 | 10.0",
                          "4000.0 | nan",
                          "150.0 | nan",
                          "80.0 | 8.0",
                          "350.0",
                          "110.0 | 120.0",
                          "1.0 | 10.0 | 35.0",
                          "90.0 | 100.0",
                          "50.0 | 100.0",
                          "80000.0",
                          "10.0 | 120.0",
                          "202.0",
                          "200000.0",
                          "8000.0",
                          "35.0 | 120.0 | 70.0",
                          "160.0",
                          "10.0 | 55.0",
                          "3.5 | 100.0",
                          "2000.0 | 100.0 | nan",
                          "10.0 | 150.0",
                          "25.0 | 100.0",
                          "12.0 | 80.0",
                          "5.0 | 10.0 | 40.0",
                          "170.0",
                          "35.0 | 64.0 | 35.0",
                          "1500-2000",
                          "55.0",
                          "9000.0",
                          "6.0",
                          "4900.0",
                          "10.0 | 100.0 | 10.0 | 100.0",
                          "100.0 | 20.0",
                          "20.0 | 100.0",
                          "7.0 | nan",
                          "34.0 | 20.0 | 25.0 | nan | 8.0",
                          "3333.0",
                          "2.5 | 80.0",
                          "20.0 | 80.0",
                          "18.0 | 10.0 | 19.0",
                          "150.0 | 100.0",
                          "5.0 | 60.0",
                          "6.0 | 10.0 | 35.0",
                          "3500.0",
                          "550.0",
                          "15.0",
                          "12500.0",
                          "35.0 | 120.0",
                          "8.0 | 100.0",
                          "7.0 | 24.0 | 30.0",
                          "300.0",
                          "11.0 | 80.0",
                          "50.0 | 101.0",
                          "185.0",
                          "71600.0",
                          "77.0 | nan",
                          "5.0 | 100.0",
                          "120.0",
                          "88.0",
                          "130.0",
                          "3000.0",
                          "110.0",
                          "20.0 | 15.0",
                          "120000.0",
                          "300000.0",
                          "10.0 | 100.0",
                          "26.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "11000.0",
                          "6500.0",
                          "1000.0",
                          "5.0 | 10.0 | 5.0",
                          "10.0 | 1.0 | 10.0 | 40.0",
                          "34.0 | 20.0 | 55.0 | nan | 15.0",
                          "6.3 | 70.0",
                          "60000.0",
                          "100.0 | 100.0",
                          "10.0 | 35.0",
                          "1200.0",
                          "60.2",
                          "390.0",
                          "10.0",
                          "11.0 | 20.0",
                          "25800.0",
                          "35.0 | 160.0",
                          "35.0 | 53.0 | 35.0",
                          "30.0 | nan",
                          "1.0 | 120.0",
                          "120.0 | 70.0",
                          "20000.0",
                          "5.0 | 20.0 | 35.0",
                          "210.0",
                          "2500.0",
                          "5.0 | 300.0",
                          "5.0 | 80.0",
                          "10.0 | 10.0 | 35.0",
                          "800.0",
                          "1.9 | 70.0",
                          "1.45 | nan",
                          "9.0 | 110.0",
                          "40.0 | 4000.0",
                          "3.0 | 100.0",
                          "20.0 | 14.0 | 20.0",
                          "15.0 | 350.0",
                          "53.0",
                          "70.0 | 30.0",
                          "250.0 | 50.0 | 1000.0",
                          "86.0",
                          "1600.0",
                          "3.0 | 200.0",
                          "7000.0",
                          "97.0",
                          "30.0",
                          "6.0 | 60.0",
                          "7.0 | 100.0",
                          "3.0 | 150.0",
                          "10.0 | nan | nan",
                          "10.0 | 75.0",
                          "10.0 | 50.0",
                          "70000.0",
                          "9600.0",
                          "140.0",
                          "50.0 | 120.0",
                          "100.0 | nan",
                          "80.0",
                          "nan | 5.0",
                          "27.0 | 15.0 | 20.0 | 480.0 | 8.0",
                          "80.0 | 80.0",
                          "6.0 | 80.0",
                          "13000.0",
                          "35.0 | 88.0 | 35.0",
                          "4000.0",
                          "100000.0",
                          "60.0 | 40.0",
                          "84.0",
                          "16.0",
                          "10.0 | 201.0",
                          "10000.0",
                          "34.0 | 20.0 | 75.0 | nan | 35.0",
                          "10.0 | 8.5 | 10.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "thickness_list",
                "description": "A list of thicknesses of the individual layers in the stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous filed.\n- State thicknesses in nm\n- Every layer in the stack have a thickness. If it is unknown, state this as \u2018nan\u2019\n- If there are uncertainties, state the best estimate, e.g write 100 and not 90-110\nExample\n100\n10 | 80\nnan | 100",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Undoped | Undoped",
                          "TiO2-np",
                          "Undoped | Undoped | Undoped | Undoped | Undoped",
                          "B; P",
                          "C; NiO",
                          "B4C",
                          "WO3-np",
                          "P",
                          "B",
                          "Undoped",
                          "CuS"
                        ]
                      }
                    }
                  ]
                },
                "name": "additives_compounds",
                "description": "List of the dopants and additives that are in each layer of the HTL-stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous fields.\n- If several dopants/additives, e.g. A and B, are present in one layer, list the dopants/additives in alphabetic order and separate them with semicolons, as in (A; B)\n- If no dopants/additives, state that as \u201cUndoped\u201d\n- If the doping situation is unknown, stat that as\u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template, even if to most common back contacts is undoped metals\nExample\nCuS\nB; P\nAu-np | Undoped",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "4; 1",
                          "10 wt%",
                          "2 wt%",
                          "7; 3",
                          "5 wt%",
                          "0.1 wt%",
                          "9; 1",
                          "3.5 wt%",
                          "7.5 wt%",
                          "8 wt%",
                          "6.5 wt%",
                          "0.5 wt%"
                        ]
                      }
                    }
                  ]
                },
                "name": "additives_concentrations",
                "description": "The concentration of the dopants/additives.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If more than one dopant/additive in the layer, e.g. A and B, separate the concentration for each dopant/additive with semicolons, as in (A; B)\n- For each dopant/additive in the layer, state the concentration.\n- The order of the dopants/additives must be the same as in the previous filed.\n- For layers with no dopants/additives, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used.\n- The preferred way to state the concentration of a dopant/additive is to refer to the amount in the final product, i.e. the material in the layer. When possible, use on the preferred units\no wt%, mol%, vol%, ppt, ppm, ppb\n- When the concentration of the dopant/additive in the final product is unknown, but where the concentration of the dopant/additive in the solution is known, state that concentration instead. When possible, use on the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n5 vol%; nan | 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | 0.3 M",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Evaporation | Evaporation | Evaporation | Evaporation",
                          "Doctor blading | Doctor blading | Doctor blading",
                          "Pressed",
                          "Spray-coating | Spray-coating",
                          "Spin-coating | Spin-coating",
                          "Electropolymerisation | Sandwiching",
                          "Brush painting",
                          "Evaporation | DC Sputtering",
                          "Screen printing | Lamination",
                          "Spin-coating | Evaporation",
                          "Sputtering | Sputtering | Sputtering",
                          "Evaporation | Spin-coating",
                          "Sputtering",
                          "Screen printing | Spray-coating",
                          "DC Sputtering",
                          "Evaporation | Sputtering | Sputtering",
                          "Evaporation | RF sputtering | E-beam evaporation",
                          "Doctor blading | Spin-coating",
                          "Dropp casting",
                          "Lamination | Lamination",
                          "RF sputtering | Evaporation | Evaporation",
                          "Evaporation | ALD",
                          "Inkjet printing",
                          "RF sputtering",
                          "E-beam evaporation | E-beam evaporation | E-beam evaporation | PVD | Evaporation",
                          "Sputtering | Spray-coating",
                          "Candle burning | Sandwiching",
                          "Brush painting | Brush painting",
                          "Evaporation | Evaporation",
                          "E-beam evaporation | E-beam evaporation | E-beam evaporation",
                          "CVD | Spin-coating >> reactive ion etching",
                          "Evaporation | Activated reactive evaporation",
                          "Spin-coating | Doctor blading",
                          "Sputtering | Sputtering",
                          "Drop coated",
                          "Sandwithcing",
                          "CVD >> Lamination",
                          "Unknown | Ultrasonic  welding",
                          "Sputtering | Evaporation | Evaporation | Evaporation",
                          "Evaporation | Magnetron sputtering",
                          "Candel burning >> Sandwiching | Unknown | Unknown",
                          "Evaporation | RF magnetron sputtering",
                          "Candle burning | Lamination",
                          "ALD | Evaporation | ALD",
                          "Spray-pyrolys | Sandwiching",
                          "Spin-coating | Screen printing",
                          "Lamination | Spin-coating",
                          "Evaporation | DC Magnetron Sputtering",
                          "Lamination | Painting",
                          "Lamination",
                          "Doctor blading | Ultrasonic  welding",
                          "Evaporation | Evaporation | Evaporation",
                          "Brush painting | Unknown",
                          "Evaporation | Sputtering",
                          "PVD",
                          "Dipp-coating",
                          "Screen printing >> Lamination",
                          "Springkling | Sandwiching",
                          "Magnetron sputtering | Magnetron sputtering",
                          "Sputtering | Lamination",
                          "Spin-coating | Sandwiching",
                          "Evaporation",
                          "Unknown",
                          "Unknown | Doctor blading",
                          "Evaporation | Magnetron sputtering | E-beam evaporation",
                          "Lamination | Evaporation",
                          "CVD",
                          "Lamination >> Isostatic pressing",
                          "ALD | Evaporation",
                          "Screen printing",
                          "Evaporation | Sputtering | Evaporation",
                          "Unknown | Evaporation",
                          "Evaporation | Sputtering | Sputtering | Evaporation",
                          "Doctor blading",
                          "Magnetron sputtering",
                          "Evaporation | Evaporation | Evaporation | Evaporation | Evaporation",
                          "RF Magnetron Sputtering",
                          "DC Sputtering | Evaporation",
                          "Candle burning >> Sandwiching",
                          "Dropcasting | Lamination",
                          "Lamination | Dropcasting",
                          "Electrospinning",
                          "Suttering",
                          "E-beam evaporation",
                          "Candle burning >> Lamination",
                          "Screen printing | Painting",
                          "Evaporation >> Evaporation >> Oxidation",
                          "Evaporation | E-beam evaporation | E-beam evaporation | E-beam evaporation | E-beam evaporation",
                          "DC Magnetron Sputtering | Evaporation",
                          "Sputtering >> Lamination",
                          "Evaporation | Sandwiching",
                          "Dropcasting",
                          "Pulsed laser deposition",
                          "DC Magnetron Sputtering",
                          "Screen printing | Unknown",
                          "E-beam evaporation | E-beam evaporation",
                          "Sputtering | Evaporation",
                          "Lamination | Spin-coating | Evaporation",
                          "Brush painting | Sandwiching",
                          "Spin-coating",
                          "Sputtering | E-beam evaporation | E-beam evaporation",
                          "Doctor blading | Doctor blading",
                          "Spray-coating",
                          "Spin-coating | Evaporation | Evaporation",
                          "Doctor blading | Sandwhiching",
                          "Sandwiching",
                          "Painting",
                          "Mechanical clipping",
                          "Evaporation | Spray-coating",
                          "Candel burning | Sandwiching",
                          "Doctor blading | Lamination",
                          "Screen printing | Screen printing",
                          "Evaporation | DC Magnetron Sputtering | E-beam evaporation"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_procedure",
                "description": "The deposition procedures for the HTL-stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate them by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Thermal annealing is generally not considered as an individual reaction step. The philosophy behind this is that every deposition step has a thermal history, which is specified in a separate filed. In exceptional cases with thermal annealing procedures clearly disconnected from other procedures, state \u2018Thermal annealing\u2019 as a separate reaction step.\n- Please read the instructions under \u201cPerovskite. Deposition. Procedure\u201d for descriptions and distinctions between common deposition procedures and how they should be labelled for consistency in the database.\n- A few additional clarifications:\n- Lamination\no A readymade film is transferred directly to the device stack. A rather broad concept. An everyday kitchen related example of lamination would eb to place a thin plastic film over a slice of pie.\n- Sandwiching\no When a readymade top stack simply is placed on top of the device stack. Could be held together with clams. The typical example is a when a \u201cCarbon | FTO | SLG\u201d is placed on top of the device stack. Standard procedure in the DSSC filed.\nExample\nEvaporation\nEvaporation | Evaporation\nDoctor blading\nScreen printing\nSputtering\nLamination\nE-beam evaporation\nSandwiching",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Solid",
                          "Liquid",
                          "Unknown",
                          "Gas | Gas | Gas | Gas | Gas",
                          "Solid | Gas",
                          "Solid | Solid | Solid",
                          "Liquid | Gas | Gas",
                          "Liquid | Solid",
                          "Gas",
                          "Liquid >> Solid",
                          "Gas | Gas",
                          "Liquid | Gas"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_aggregation_state_of_reactants",
                "description": "The physical state of the reactants.\n- The three basic categories are Solid/Liquid/Gas\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the aggregation state associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Most cases are clear cut, e.g. spin-coating involves species in solution and evaporation involves species in gas phase. For less clear-cut cases, consider where the reaction really is happening as in:\no For a spray-coating procedure, it is droplets of liquid that enters the substrate (thus a liquid phase reaction)\no For sputtering and thermal evaporation, it is species in gas phase that reaches the substrate (thus a gas phase reaction)\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nLiquid\nGas | Liquid\nLiquid | Liquid >> Liquid",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "N2 | Vacuum",
                          "Vacuum | Vacuum",
                          "Unknown",
                          "Air",
                          "Vacuum",
                          "Vacuum | Vacuum | Vacuum | Vacuum | Vacuum",
                          "Air | Vacuum | Vacuum",
                          "Air >> Air",
                          "Ar",
                          "Ar | O2"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere",
                "description": "The synthesis atmosphere.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nVacuum\nVacuum | N2\nAir | Ar; H2O >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.0006 Pa",
                          "0.000009 mbar",
                          "0.0001 Torr",
                          "0.01 Torr",
                          "0.0000002 Torr",
                          "0.000005 mbar",
                          "0.000002 bar",
                          "0.0001 mbar",
                          "0.0001 Pa | 0.0001 Pa",
                          "0.0005 Pa",
                          "0.00001 mbar",
                          "0.0004 Pa",
                          "0.00005 Torr",
                          "0.0003 bar",
                          "0.0000019 Torr",
                          "0.1 Torr",
                          "0.000001 mbar",
                          "1 atm >> 0.2 MPa",
                          "0.0000001 Torr",
                          "0.00001 Pa",
                          "0.000001 bar",
                          "0.000000001 bar",
                          "0.000006 Torr",
                          "0.000007 Torr",
                          "1.2 mTorr",
                          "0.006 Torr",
                          "0.000004 Torr",
                          "10 E-7Torr",
                          "0.00005 mbar",
                          "0.00001 Torr",
                          "2 e-05",
                          "2 E-10Torr",
                          "0.00005 Pa",
                          "0.000008 bar",
                          "0.00000003 Torr",
                          "0.0001 Pa",
                          "0.000001 Torr",
                          "0.0002 Pa",
                          "0.0000048 Torr",
                          "0.000002 Torr",
                          "0.0003 Pa",
                          "0.00003 mbar",
                          "0.0000001 mbar",
                          "0.000002 mbar",
                          "1 atm",
                          "0.000005 Torr"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_pressure_total",
                "description": "The total gas pressure during each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- Pressures can be stated in different units suited for different situations. Therefore, specify the unit. The preferred units are:\no atm, bar, mbar, mmHg, Pa, torr, psi\n- If a pressure is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 100 pa and not 80-120 pa.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 1 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.0001 mbar",
                          "0.0001 Pa | 0.0001 Pa",
                          "0.00001 mbar",
                          "0.0004 Pa",
                          "0.0003 bar",
                          "0.000001 mbar",
                          "1 atm >> 0.2 MPa",
                          "0.00001 Pa",
                          "0.000006 Torr",
                          "0.000007 Torr",
                          "0.006 Torr",
                          "0.000004 Torr",
                          "0.00001 Torr",
                          "0.000001 Torr",
                          "0.000002 Torr",
                          "0.00003 mbar",
                          "0.0003 Pa",
                          "0.0000001 mbar",
                          "0.000002 mbar",
                          "1 atm",
                          "0.000005 Torr"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_pressure_partial",
                "description": "The partial pressures for the gases present during each reaction step.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the partial pressures and separate them with semicolons, as in (A; B). The list of partial pressures must line up with the gases they describe.\n- In cases where no gas mixtures are used, this field will be the same as the previous filed.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 0.99 atm; 0.01 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "25.0",
                          "30 >> 30",
                          "30.0",
                          "50 | nan | nan",
                          "50.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_synthesis_atmosphere_relative_humidity",
                "description": "The relative humidity during each deposition step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the relative humidity associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns\n- If the relative humidity for a step is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 35 and not 30-40.\nExample\n35\n0 | 20\nnan >> 25 | 0",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "none",
                          "Methanol | none | none",
                          "Ethyl cellulose; Terpineol",
                          "IPA | none",
                          "Ethyl cellulose; Terpineol | Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents",
                "description": "The solvents used in each deposition procedure for each layer in the stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvents associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the solvents in alphabetic order and separate them with semicolons, as in (A; B)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For non-liquid processes with no solvents, state the solvent as \u2018none\u2019\n- If the solvent is not known, state this as \u2018Unknown\u2019\n- Use common abbreviations when appropriate but spell it out when risk for confusion\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nnone\nAcetonitile; Ethanol | Chlorobenzene\nnone >> Ethanol; Methanol; H2O | DMF; DMSO",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "1",
                          "1 | 1",
                          "1 | nan | nan"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_mixing_ratios",
                "description": "The mixing ratios for mixed solvents\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent mixing ratios associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For pure solvents, state the mixing ratio as 1\n- For non-solvent processes, state the mixing ratio as 1\n- For unknown mixing ratios, state the mixing ratio as \u2018nan\u2019\n- For solvent mixtures, i.e. A and B, state the mixing ratios by using semicolons, as in (VA; VB)\n- The preferred metrics is the volume ratios. If that is not available, mass or mol ratios can be used instead, but it the analysis the mixing ratios will be assumed to be based on volumes.\nExample\n1\n4; 1 | 1\n1 >> 5; 2; 0.3 | 2; 1",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Shanghai MaterWin New Material",
                          "Guangzhou Seaside Technology",
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_supplier",
                "description": "The suppliers of all the solvents.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For non-liquid processes with no solvents, mark the supplier as \u2018none\u2019\n- If the supplier for a solvent is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nSigma Aldrich\nSigma Aldrich; Fisher | Acros\nnone >> Sigma Aldrich; Sigma Aldrich | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_solvents_purity",
                "description": "The purity of the solvents used.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For non-liquid processes with no solvents, state the purity as \u2018none\u2019\n- If the purity for a solvent is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\nPuris; Puris| Tecnical\nnone >> Pro analysis; Pro analysis | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Al",
                          "Graphite",
                          "Mg | Ag",
                          "Carbon Paste",
                          "ITO",
                          "AgAl",
                          "Carbon | nan | nan",
                          "IZO",
                          "Au",
                          "Ag | Au",
                          "Cu",
                          "Ag | MoO3",
                          "Cu | Ag",
                          "Cr | Au",
                          "Ag-nanocubes | Ag | MoO3",
                          "Carbon | Ag",
                          "MoO3 | Al",
                          "Ag",
                          "IZTO",
                          "PEDOT:PSS",
                          "AZO",
                          "Adhesive; PEDOT:PSS | PET; Ni-mesh",
                          "PTCBI | Ag | WO3 | PTCBI | Ag",
                          "AZO-np | Ag",
                          "Carbon",
                          "PEDOT:PSS | Al"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds",
                "description": "The non-solvent precursor chemicals used in each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemicals associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several compounds, e.g. A and B, list the associated compounds in alphabetic order and separate them with semicolons, as in (A; B)\n- Note that also dopants/additives should be included\n- When several precursor solutions are made and mixed before the reaction step, it is the properties of the final mixture used in the reaction we here describe.\n- The number and order of layers and reaction steps must line up with the previous columns.\n- For gas phase reactions, state the reaction gases as if they were in solution.\n- For solid-state reactions, state the compounds as if they were in solution.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- If the compounds for a deposition step is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nAu\nCuI\nAg",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "DongDaLai company",
                          "Unknown",
                          "Solaronix",
                          "Styccobond; Agfa | Epigem",
                          "Heraeus",
                          "Guangzhou Seaside Technology",
                          "Sigma Aldrich | Unknown",
                          "Sigma Aldrich",
                          "Ulet",
                          "Shanghai MaterWin New Materials Co., Ltd"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds_supplier",
                "description": "The suppliers of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemical suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For gas phase reactions, state the suppliers for the gases or the targets/evaporation sources that are evaporated/sputtered/etc.\n- For solid state reactions, state the suppliers for the compounds in the same way.\n- For reaction steps involving only pure solvents, state the supplier as \u2018none\u2019 (as that that is entered in a separate filed)\n- For chemicals that are lab made, state that as \u201cLab made\u201d or \u201cLab made (name of lab)\u201d\n- If the supplier for a compound is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nDysole; Sigma Aldrich; Dyenamo; Sigma Aldrich\nSigma Aldrich; Fisher | Acros\nLab made (EPFL) | Sigma Aldrich >> none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "99.99"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_compounds_purity",
                "description": "The purity of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the compound purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, i.e. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019 (as that is stated in another field)\n- If the purity for a compound is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\n99.999; Puris| Tecnical\nUnknown >> Pro analysis; Pro analysis | none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "57.2 wt%; 42.8 wt% | nan",
                          "8 mg/ml | nan"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_concentrations",
                "description": "The concentration of the non-solvent precursor chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the concentrations associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated concentrations and separate them with semicolons, as in (A; B)\n- The order of the compounds must be the same as in the previous filed.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used. When possible, use one of the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml, wt%, mol%, vol%, ppt, ppm, ppb\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n0.2 M; 0.15 M| 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "15.0 | Unknown | Unknown",
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_volumes",
                "description": "The volume of the reaction solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the volumes associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The volumes refer the volumes used, not the volume of the stock solutions. Thus if 0.15 ml of a solution is spin-coated, the volume is 0.15 ml\n- For reaction steps without solvents, state the volume as \u2018nan\u2019\n- When volumes are unknown, state that as \u2018nan\u2019\nExample\n0.1\n0.1 >> 0.05 | 0.05\nnan | 0.15",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_age",
                "description": "The age of the solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the age of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- As a general guideline, the age refers to the time from the preparation of the final precursor mixture to the reaction procedure.\n- When the age of a solution is not known, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state this as \u2018nan\u2019\n- For solutions that is stored a long time, an order of magnitude estimate is adequate.\nExample\n2\n0.25 |1000 >> 10000\nnan | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "25",
                          "Unknown",
                          "25 | 25"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_reaction_solutions_temperature",
                "description": "The temperature of the reaction solutions.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a reaction solution undergoes a temperature program, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons, e.g. 25; 100\n- When the temperature of a solution is unknown, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state the temperature of the gas or the solid if that make sense. Otherwise state this as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume an undetermined room temperature to be 25\nExample\n25\n100; 50 | 25\nnan | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "25",
                          "Unknown",
                          "15",
                          "100",
                          "100 | 25",
                          "60",
                          "40",
                          "22",
                          "25 | 25",
                          "80"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_substrate_temperature",
                "description": "The temperature of the substrate.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the substrates (i.e. the last deposited layer) associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The temperature of the substrate refers to the temperature when the deposition of the layer is occurring.\n- If a substrate undergoes a temperature program before the deposition, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- When the temperature of a substrate is not known, state that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume that an undetermined room temperature is 25\nExample\n25\nnan\n125; 325; 375; 450 | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "25",
                          "350.0",
                          "85",
                          "120 >> 120",
                          "400",
                          "80",
                          "Unknown",
                          "450.0",
                          "100",
                          "120",
                          "450 | 25",
                          "60",
                          "250.0",
                          "60; 120",
                          "450",
                          "150.0",
                          "25; 100",
                          "100 | Unknown",
                          "550.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_temperature",
                "description": "The temperatures of the thermal annealing program associated with depositing the layers\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing temperatures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- If no thermal annealing is occurring after the deposition of a layer, state that by stating the room temperature (assumed to 25\u00b0C if not further specified)\n- If the thermal annealing program is not known, state that by \u2018nan\u2019\nExample\n25\n50 | nan\n450 | 125; 325; 375; 450 >> 125; 325; 375; 450",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "40.0",
                          "Unknown",
                          "30.0",
                          "20.0",
                          "15.0; 5.0",
                          "100.0",
                          "30.0; 30.0",
                          "60.0",
                          "15.0 >> 5.0",
                          "10.0",
                          "10.0 | Unknown",
                          "15.0",
                          "30.0 | Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_time",
                "description": "The time program associated to the thermal annealing program.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing times associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the associated times at those temperatures and separate them with semicolons.\n- The annealing times must align in terms of layers\u00b8 reaction steps and annealing temperatures in the previous filed.\n- If a time is not known, state that by \u2018nan\u2019\n- If no thermal annealing is occurring after the deposition of a layer, state that by \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 20 and not 10-30.\nExample\nnan\n60 | 1000\n30 | 5; 5; 5; 30 >> 5; 5; 5; 30",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "Air",
                          "Vacuum",
                          "N2",
                          "Air >> Air"
                        ]
                      }
                    }
                  ]
                },
                "name": "deposition_thermal_annealing_atmosphere",
                "description": "The atmosphere during thermal annealing\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each annelaing step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the atmosphere is a mixture of different gases, i.e. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas.\n- This is often the same as the atmosphere under which the deposition is occurring, but not always.\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nVacuum | N2\nAir | Ar >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "24.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_time_until_next_deposition_step",
                "description": "The time between the back contact is finalised and the next layer is deposited\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.\n- If this is the last layer in the stack, state this as \u2018nan\u2019",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Dry air",
                          "N2",
                          "Unknown",
                          "Air"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_atmosphere",
                "description": "The atmosphere in which the sample with the finalised back contact is stored until the next deposition step or device performance measurement\nExample\nAir\nN2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "5.0",
                          "10",
                          "10.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_relative_humidity",
                "description": "The relive humidity under which the sample with the finalised back contact is stored until the next deposition step or device performance measurement\n- If there are uncertainties, only state the best estimate, e.g write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "EDA gas",
                          "DEDA gas",
                          "MEA immersion >> 125C 20 min",
                          "TETA gas"
                        ]
                      }
                    }
                  ]
                },
                "name": "surface_treatment_before_next_deposition_step",
                "description": "Description of any type of surface treatment or other treatment the sample with the finalised back contact is stored until the next deposition step or device performance measurement\n- If more than one treatment, list the treatments and separate them by a double forward angel bracket (\u2018 >> \u2018)\n- If no special treatment, state that as \u2018none\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nnone\nAr plasma\nUV-ozone",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "name": "Add",
            "description": "A section to describe **additional layers** present in the device besides the *Substrate*, *ETL*, *Perovskite*, *HTL* and *back contact*.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "lay_front",
                "description": "TRUE if there is a functional layer below the substrate, i.e. on the opposite side of the substrate from with respect to the perovskite.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Antireflection",
                          "Unknown",
                          "Down conversion",
                          "A.R.C.",
                          "Light management"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_function",
                "description": "The function of the additional layers on the substrate side\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If a layer has more than one function, e.g. A and B, list the functions in order and separate them with semicolons, as in (A; B)\nExample:\nA.R.C.\nBack reflection\nDown conversion\nEncapsulation\nLight management\nUpconversion",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "ZnSe-QDs",
                          "N-Graphene-QDs",
                          "Ag-np",
                          "Moth eye PDMS",
                          "Polyimide",
                          "PDMS",
                          "Unknown",
                          "NaYF4:Eu-np",
                          "NaF",
                          "Eu(TTA)2(Phen)MAA",
                          "MgF2",
                          "Y2O3:Eu3",
                          "CdSeS-QDs",
                          "Y2O3:Eu3 | Au-np",
                          "Mica",
                          "Eu-complex LDL",
                          "textured antireflective foil",
                          "Phosphor-in-glass",
                          "INVAR",
                          "Mn:CsPbCl3-QDs",
                          "LiF"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_stack_sequence",
                "description": "The stack sequence describing the additional layers on the substrate side\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\n- Use common abbreviations when appropriate but spell it out if risk for confusion.\n- There are separate filed for doping. Indicate doping with colons. E.g. wither aluminium doped NiO-np as Al:NiO-np\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nMgF2\nAu-np\nNaYF4:Eu-np",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "90.0",
                          "100.0",
                          "50.0",
                          "80.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_thickness_list",
                "description": "A list of thicknesses of the individual layers in the stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous filed.\n- State thicknesses in nm\n- Every layer in the stack have a thickness. If it is unknown, state this as \u2018nan\u2019\n- If there are uncertainties, state the best estimate, e.g write 100 and not 90-110\nExample\n200\nnan |250\n100 | 5 | 8",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_additives_compounds",
                "description": "List of the dopants and additives that are in each layer of the HTL-stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous fields.\n- If several dopants/additives, e.g. A and B, are present in one layer, list the dopants/additives in alphabetic order and separate them with semicolons, as in (A; B)\n- If no dopants/additives, state that as \u201cUndoped\u201d\n- If the doping situation is unknown, stat that as\u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template, even if to most common back contacts is undoped metals\nExample\nCuS\nB; P\nAu-np | Undoped",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_additives_concentrations",
                "description": "The concentration of the dopants/additives.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If more than one dopant/additive in the layer, e.g. A and B, separate the concentration for each dopant/additive with semicolons, as in (A; B)\n- For each dopant/additive in the layer, state the concentration.\n- The order of the dopants/additives must be the same as in the previous filed.\n- For layers with no dopants/additives, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used.\n- The preferred way to state the concentration of a dopant/additive is to refer to the amount in the final product, i.e. the material in the layer. When possible, use on the preferred units\no wt%, mol%, vol%, ppt, ppm, ppb\n- When the concentration of the dopant/additive in the final product is unknown, but where the concentration of the dopant/additive in the solution is known, state that concentration instead. When possible, use on the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n5 vol%; nan | 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | 0.3 M",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Evaporation",
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_procedure",
                "description": "The deposition procedures for the HTL-stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate them by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Thermal annealing is generally not considered as an individual reaction step. The philosophy behind this is that every deposition step has a thermal history, which is specified in a separate filed. In exceptional cases with thermal annealing procedures clearly disconnected from other procedures, state \u2018Thermal annealing\u2019 as a separate reaction step.\n- Please read the instructions under \u201cPerovskite. Deposition. Procedure\u201d for descriptions and distinctions between common deposition procedures and how they should be labelled for consistency in the database.\n- A few additional clarifications:\n- Lamination\no A readymade film is transferred directly to the device stack. A rather broad concept. An everyday kitchen related example of lamination would eb to place a thin plastic film over a slice of pie.\n- Sandwiching\no When a readymade top stack simply is placed on top of the device stack. Could be held together with clams. The typical example is a when a \u201cCarbon | FTO | SLG\u201d is placed on top of the device stack. Standard procedure in the DSSC filed.\nExample\nEvaporation\nEvaporation | Evaporation\nDoctor blading\nScreen printing\nSputtering\nLamination\nE-beam evaporation\nSandwiching",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_aggregation_state_of_reactants",
                "description": "The physical state of the reactants.\n- The three basic categories are Solid/Liquid/Gas\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the aggregation state associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Most cases are clear cut, e.g. spin-coating involves species in solution and evaporation involves species in gas phase. For less clear-cut cases, consider where the reaction really is happening as in:\no For a spray-coating procedure, it is droplets of liquid that enters the substrate (thus a liquid phase reaction)\no For sputtering and thermal evaporation, it is species in gas phase that reaches the substrate (thus a gas phase reaction)\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nLiquid\nGas | Liquid\nLiquid | Liquid >> Liquid",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_synthesis_atmosphere",
                "description": "The synthesis atmosphere.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nVacuum\nVacuum | N2\nAir | Ar; H2O >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_synthesis_atmosphere_pressure_total",
                "description": "The total gas pressure during each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- Pressures can be stated in different units suited for different situations. Therefore, specify the unit. The preferred units are:\no atm, bar, mbar, mmHg, Pa, torr, psi\n- If a pressure is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 100 pa and not 80-120 pa.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 1 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_synthesis_atmosphere_pressure_partial",
                "description": "The partial pressures for the gases present during each reaction step.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the partial pressures and separate them with semicolons, as in (A; B). The list of partial pressures must line up with the gases they describe.\n- In cases where no gas mixtures are used, this field will be the same as the previous filed.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 0.99 atm; 0.01 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_synthesis_atmosphere_relative_humidity",
                "description": "The relative humidity during each deposition step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the relative humidity associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns\n- If the relative humidity for a step is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 35 and not 30-40.\nExample\n35\n0 | 20\nnan >> 25 | 0",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_solvents",
                "description": "The solvents used in each deposition procedure for each layer in the stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvents associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the solvents in alphabetic order and separate them with semicolons, as in (A; B)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For non-liquid processes with no solvents, state the solvent as \u2018none\u2019\n- If the solvent is not known, state this as \u2018Unknown\u2019\n- Use common abbreviations when appropriate but spell it out when risk for confusion\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nnone\nAcetonitile; Ethanol | Chlorobenzene\nnone >> Ethanol; Methanol; H2O | DMF; DMSO",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_solvents_mixing_ratios",
                "description": "The mixing ratios for mixed solvents\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent mixing ratios associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For pure solvents, state the mixing ratio as 1\n- For non-solvent processes, state the mixing ratio as 1\n- For unknown mixing ratios, state the mixing ratio as \u2018nan\u2019\n- For solvent mixtures, i.e. A and B, state the mixing ratios by using semicolons, as in (VA; VB)\n- The preferred metrics is the volume ratios. If that is not available, mass or mol ratios can be used instead, but it the analysis the mixing ratios will be assumed to be based on volumes.\nExample\n1\n4; 1 | 1\n1 >> 5; 2; 0.3 | 2; 1",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_solvents_supplier",
                "description": "The suppliers of all the solvents.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For non-liquid processes with no solvents, mark the supplier as \u2018none\u2019\n- If the supplier for a solvent is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nSigma Aldrich\nSigma Aldrich; Fisher | Acros\nnone >> Sigma Aldrich; Sigma Aldrich | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_solvents_purity",
                "description": "The purity of the solvents used.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For non-liquid processes with no solvents, state the purity as \u2018none\u2019\n- If the purity for a solvent is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\nPuris; Puris| Tecnical\nnone >> Pro analysis; Pro analysis | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_reaction_solutions_compounds",
                "description": "The non-solvent precursor chemicals used in each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemicals associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several compounds, e.g. A and B, list the associated compounds in alphabetic order and separate them with semicolons, as in (A; B)\n- Note that also dopants/additives should be included\n- When several precursor solutions are made and mixed before the reaction step, it is the properties of the final mixture used in the reaction we here describe.\n- The number and order of layers and reaction steps must line up with the previous columns.\n- For gas phase reactions, state the reaction gases as if they were in solution.\n- For solid-state reactions, state the compounds as if they were in solution.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- If the compounds for a deposition step is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nAu\nCuI\nAg",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_reaction_solutions_compounds_supplier",
                "description": "The suppliers of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemical suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For gas phase reactions, state the suppliers for the gases or the targets/evaporation sources that are evaporated/sputtered/etc.\n- For solid state reactions, state the suppliers for the compounds in the same way.\n- For reaction steps involving only pure solvents, state the supplier as \u2018none\u2019 (as that that is entered in a separate filed)\n- For chemicals that are lab made, state that as \u201cLab made\u201d or \u201cLab made (name of lab)\u201d\n- If the supplier for a compound is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nDysole; Sigma Aldrich; Dyenamo; Sigma Aldrich\nSigma Aldrich; Fisher | Acros\nLab made (EPFL) | Sigma Aldrich >> none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_reaction_solutions_compounds_purity",
                "description": "The purity of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the compound purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, i.e. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019 (as that is stated in another field)\n- If the purity for a compound is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\n99.999; Puris| Tecnical\nUnknown >> Pro analysis; Pro analysis | none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_reaction_solutions_concentrations",
                "description": "The concentration of the non-solvent precursor chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the concentrations associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated concentrations and separate them with semicolons, as in (A; B)\n- The order of the compounds must be the same as in the previous filed.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used. When possible, use one of the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml, wt%, mol%, vol%, ppt, ppm, ppb\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n0.2 M; 0.15 M| 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_reaction_solutions_volumes",
                "description": "The volume of the reaction solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the volumes associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The volumes refer the volumes used, not the volume of the stock solutions. Thus if 0.15 ml of a solution is spin-coated, the volume is 0.15 ml\n- For reaction steps without solvents, state the volume as \u2018nan\u2019\n- When volumes are unknown, state that as \u2018nan\u2019\nExample\n0.1\n0.1 >> 0.05 | 0.05\nnan | 0.15",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_reaction_solutions_age",
                "description": "The age of the solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the age of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- As a general guideline, the age refers to the time from the preparation of the final precursor mixture to the reaction procedure.\n- When the age of a solution is not known, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state this as \u2018nan\u2019\n- For solutions that is stored a long time, an order of magnitude estimate is adequate.\nExample\n2\n0.25 |1000 >> 10000\nnan | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_reaction_solutions_temperature",
                "description": "The temperature of the reaction solutions.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a reaction solution undergoes a temperature program, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons, e.g. 25; 100\n- When the temperature of a solution is unknown, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state the temperature of the gas or the solid if that make sense. Otherwise state this as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume an undetermined room temperature to be 25\nExample\n25\n100; 50 | 25\nnan | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_substrate_temperature",
                "description": "The temperature of the substrate.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the substrates (i.e. the last deposited layer) associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The temperature of the substrate refers to the temperature when the deposition of the layer is occurring.\n- If a substrate undergoes a temperature program before the deposition, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- When the temperature of a substrate is not known, state that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume that an undetermined room temperature is 25\nExample\n25\nnan\n125; 325; 375; 450 | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_thermal_annealing_temperature",
                "description": "The temperatures of the thermal annealing program associated with depositing the layers\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing temperatures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- If no thermal annealing is occurring after the deposition of a layer, state that by stating the room temperature (assumed to 25\u00b0C if not further specified)\n- If the thermal annealing program is not known, state that by \u2018nan\u2019\nExample\n25\n50 | nan\n450 | 125; 325; 375; 450 >> 125; 325; 375; 450",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_thermal_annealing_time",
                "description": "The time program associated to the thermal annealing program.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing times associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the associated times at those temperatures and separate them with semicolons.\n- The annealing times must align in terms of layers\u00b8 reaction steps and annealing temperatures in the previous filed.\n- If a time is not known, state that by \u2018nan\u2019\n- If no thermal annealing is occurring after the deposition of a layer, state that by \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 20 and not 10-30.\nExample\nnan\n60 | 1000\n30 | 5; 5; 5; 30 >> 5; 5; 5; 30",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_deposition_thermal_annealing_atmosphere",
                "description": "The atmosphere during thermal annealing\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each annelaing step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the atmosphere is a mixture of different gases, i.e. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas.\n- This is often the same as the atmosphere under which the deposition is occurring, but not always.\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nVacuum | N2\nAir | Ar >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_storage_time_until_next_deposition_step",
                "description": "The time between the back contact is finalised and the next layer is deposited\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.\n- If this is the last layer in the stack, state this as \u2018nan\u2019",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_storage_atmosphere",
                "description": "The atmosphere in which the sample with the finalised back contact is stored until the next deposition step or device performance measurement\nExample\nAir\nN2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_storage_relative_humidity",
                "description": "The relive humidity under which the sample with the finalised back contact is stored until the next deposition step or device performance measurement\n- If there are uncertainties, only state the best estimate, e.g write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_front_surface_treatment_before_next_deposition_step",
                "description": "Description of any type of surface treatment or other treatment the sample with the finalised back contact is stored until the next deposition step or device performance measurement\n- If more than one treatment, list the treatments and separate them by a double forward angel bracket (\u2018 >> \u2018)\n- If no special treatment, state that as \u2018none\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nnone\nAr plasma\nUV-ozone",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "lay_back",
                "description": "TRUE if there is a functional layer above the back contact, i.e. layers deposited after the back contact has been finalised.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 32,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Upconversion",
                          "Dielectric mirror",
                          "Antireflection"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_function",
                "description": "The function of the additional layers on the backcontact side.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If a layer has more than one function, e.g. A and B, list the functions in order and separate them with semicolons, as in (A; B)\nExample:\nA.R.C.\nBack reflection\nDown conversion\nEncapsulation\nLight management\nUpconversion",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 33,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "MgF2",
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_stack_sequence",
                "description": "The stack sequence describing the additional layers on the backcontact side.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\n- Use common abbreviations when appropriate but spell it out if risk for confusion.\n- There are now separate filed for doping. Indicate doping with colons. E.g. wither aluminium doped NiO-np as Al:NiO-np\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 34,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "105.0",
                          "90.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_thickness_list",
                "description": "A list of thicknesses of the individual layers in the stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous filed.\n- State thicknesses in nm\n- Every layer in the stack have a thickness. If it is unknown, state this as \u2018nan\u2019\n- If there are uncertainties, state the best estimate, e.g write 100 and not 90-110",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 35,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_additives_compounds",
                "description": "List of the dopants and additives that are in each layer of the HTL-stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- The layers must line up with the previous fields.\n- If several dopants/additives, e.g. A and B, are present in one layer, list the dopants/additives in alphabetic order and separate them with semicolons, as in (A; B)\n- If no dopants/additives, state that as \u201cUndoped\u201d\n- If the doping situation is unknown, stat that as\u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template, even if to most common back contacts is undoped metals\nExample\nCuS\nB; P\nAu-np | Undoped",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 36,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_additives_concentrations",
                "description": "The concentration of the dopants/additives.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If more than one dopant/additive in the layer, e.g. A and B, separate the concentration for each dopant/additive with semicolons, as in (A; B)\n- For each dopant/additive in the layer, state the concentration.\n- The order of the dopants/additives must be the same as in the previous filed.\n- For layers with no dopants/additives, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used.\n- The preferred way to state the concentration of a dopant/additive is to refer to the amount in the final product, i.e. the material in the layer. When possible, use on the preferred units\no wt%, mol%, vol%, ppt, ppm, ppb\n- When the concentration of the dopant/additive in the final product is unknown, but where the concentration of the dopant/additive in the solution is known, state that concentration instead. When possible, use on the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n5 vol%; nan | 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | 0.3 M",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 37,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Evaporation",
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_procedure",
                "description": "The deposition procedures for the HTL-stack.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate them by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Thermal annealing is generally not considered as an individual reaction step. The philosophy behind this is that every deposition step has a thermal history, which is specified in a separate filed. In exceptional cases with thermal annealing procedures clearly disconnected from other procedures, state \u2018Thermal annealing\u2019 as a separate reaction step.\n- Please read the instructions under \u201cPerovskite. Deposition. Procedure\u201d for descriptions and distinctions between common deposition procedures and how they should be labelled for consistency in the database.\n- A few additional clarifications:\n- Lamination\no A readymade film is transferred directly to the device stack. A rather broad concept. An everyday kitchen related example of lamination would eb to place a thin plastic film over a slice of pie.\n- Sandwiching\no When a readymade top stack simply is placed on top of the device stack. Could be held together with clams. The typical example is a when a \u201cCarbon | FTO | SLG\u201d is placed on top of the device stack. Standard procedure in the DSSC filed.\nExample\nEvaporation\nEvaporation | Evaporation\nDoctor blading\nScreen printing\nSputtering\nLamination\nE-beam evaporation\nSandwiching",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 38,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_aggregation_state_of_reactants",
                "description": "The physical state of the reactants.\n- The three basic categories are Solid/Liquid/Gas\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the aggregation state associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- Most cases are clear cut, e.g. spin-coating involves species in solution and evaporation involves species in gas phase. For less clear-cut cases, consider where the reaction really is happening as in:\no For a spray-coating procedure, it is droplets of liquid that enters the substrate (thus a liquid phase reaction)\no For sputtering and thermal evaporation, it is species in gas phase that reaches the substrate (thus a gas phase reaction)\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nLiquid\nGas | Liquid\nLiquid | Liquid >> Liquid",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 39,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_synthesis_atmosphere",
                "description": "The synthesis atmosphere.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nVacuum\nVacuum | N2\nAir | Ar; H2O >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 40,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_synthesis_atmosphere_pressure_total",
                "description": "The total gas pressure during each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- Pressures can be stated in different units suited for different situations. Therefore, specify the unit. The preferred units are:\no atm, bar, mbar, mmHg, Pa, torr, psi\n- If a pressure is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 100 pa and not 80-120 pa.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 1 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 41,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_synthesis_atmosphere_pressure_partial",
                "description": "The partial pressures for the gases present during each reaction step.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the pressures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the synthesis atmosphere is a mixture of different gases, e.g. A and B, list the partial pressures and separate them with semicolons, as in (A; B). The list of partial pressures must line up with the gases they describe.\n- In cases where no gas mixtures are used, this field will be the same as the previous filed.\nExample\n1 atm\n0.002 torr | 10000 Pa\nnan >> 0.99 atm; 0.01 atm | 1 atm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 42,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_synthesis_atmosphere_relative_humidity",
                "description": "The relative humidity during each deposition step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the relative humidity associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns\n- If the relative humidity for a step is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 35 and not 30-40.\nExample\n35\n0 | 20\nnan >> 25 | 0",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 43,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_solvents",
                "description": "The solvents used in each deposition procedure for each layer in the stack\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvents associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the solvents in alphabetic order and separate them with semicolons, as in (A; B)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For non-liquid processes with no solvents, state the solvent as \u2018none\u2019\n- If the solvent is not known, state this as \u2018Unknown\u2019\n- Use common abbreviations when appropriate but spell it out when risk for confusion\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nnone\nAcetonitile; Ethanol | Chlorobenzene\nnone >> Ethanol; Methanol; H2O | DMF; DMSO",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 44,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_solvents_mixing_ratios",
                "description": "The mixing ratios for mixed solvents\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent mixing ratios associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- For pure solvents, state the mixing ratio as 1\n- For non-solvent processes, state the mixing ratio as 1\n- For unknown mixing ratios, state the mixing ratio as \u2018nan\u2019\n- For solvent mixtures, i.e. A and B, state the mixing ratios by using semicolons, as in (VA; VB)\n- The preferred metrics is the volume ratios. If that is not available, mass or mol ratios can be used instead, but it the analysis the mixing ratios will be assumed to be based on volumes.\nExample\n1\n4; 1 | 1\n1 >> 5; 2; 0.3 | 2; 1",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 45,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_solvents_supplier",
                "description": "The suppliers of all the solvents.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For non-liquid processes with no solvents, mark the supplier as \u2018none\u2019\n- If the supplier for a solvent is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nSigma Aldrich\nSigma Aldrich; Fisher | Acros\nnone >> Sigma Aldrich; Sigma Aldrich | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 46,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_solvents_purity",
                "description": "The purity of the solvents used.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the solvent purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solvent is a mixture of different solvents, e.g. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For non-liquid processes with no solvents, state the purity as \u2018none\u2019\n- If the purity for a solvent is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\nPuris; Puris| Tecnical\nnone >> Pro analysis; Pro analysis | Unknown",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 47,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_reaction_solutions_compounds",
                "description": "The non-solvent precursor chemicals used in each reaction step\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemicals associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several compounds, e.g. A and B, list the associated compounds in alphabetic order and separate them with semicolons, as in (A; B)\n- Note that also dopants/additives should be included\n- When several precursor solutions are made and mixed before the reaction step, it is the properties of the final mixture used in the reaction we here describe.\n- The number and order of layers and reaction steps must line up with the previous columns.\n- For gas phase reactions, state the reaction gases as if they were in solution.\n- For solid-state reactions, state the compounds as if they were in solution.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- If the compounds for a deposition step is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nAu\nCuI\nAg",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 48,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_reaction_solutions_compounds_supplier",
                "description": "The suppliers of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the non-solvent chemical suppliers associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated suppliers and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- For gas phase reactions, state the suppliers for the gases or the targets/evaporation sources that are evaporated/sputtered/etc.\n- For solid state reactions, state the suppliers for the compounds in the same way.\n- For reaction steps involving only pure solvents, state the supplier as \u2018none\u2019 (as that that is entered in a separate filed)\n- For chemicals that are lab made, state that as \u201cLab made\u201d or \u201cLab made (name of lab)\u201d\n- If the supplier for a compound is unknown, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nDysole; Sigma Aldrich; Dyenamo; Sigma Aldrich\nSigma Aldrich; Fisher | Acros\nLab made (EPFL) | Sigma Aldrich >> none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 49,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_reaction_solutions_compounds_purity",
                "description": "The purity of the non-solvent chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the compound purities associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, i.e. A and B, list the associated purities and separate them with semicolons, as in (A; B)\n- The number and order of layers, reaction steps, and solvents must line up with the previous columns.\n- Use standard nomenclature for purities, e.g. pro analysis, puris, extra dry, etc.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019 (as that is stated in another field)\n- If the purity for a compound is not known, state this as \u2018Unknown\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is short. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nPro analysis\n99.999; Puris| Tecnical\nUnknown >> Pro analysis; Pro analysis | none",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 50,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_reaction_solutions_concentrations",
                "description": "The concentration of the non-solvent precursor chemicals.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the concentrations associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a solution contains several dissolved compounds, e.g. A and B, list the associated concentrations and separate them with semicolons, as in (A; B)\n- The order of the compounds must be the same as in the previous filed.\n- For reaction steps involving only pure solvents, state this as \u2018none\u2019\n- When concentrations are unknown, state that as \u2018nan\u2019\n- Concentrations can be stated in different units suited for different situations. Therefore, specify the unit used. When possible, use one of the preferred units\no M, mM, molal; g/ml, mg/ml, \u00b5g/ml, wt%, mol%, vol%, ppt, ppm, ppb\n- For values with uncertainties, state the best estimate, e.g write 4 wt% and not 3-5 wt%.\nExample\n4 wt%\n0.2 M; 0.15 M| 10 mg/ml\n0.3 mol% | 2 mol%; 0.2 wt% | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 51,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_reaction_solutions_volumes",
                "description": "The volume of the reaction solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the volumes associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The volumes refer the volumes used, not the volume of the stock solutions. Thus if 0.15 ml of a solution is spin-coated, the volume is 0.15 ml\n- For reaction steps without solvents, state the volume as \u2018nan\u2019\n- When volumes are unknown, state that as \u2018nan\u2019\nExample\n0.1\n0.1 >> 0.05 | 0.05\nnan | 0.15",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 52,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_reaction_solutions_age",
                "description": "The age of the solutions\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the age of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- As a general guideline, the age refers to the time from the preparation of the final precursor mixture to the reaction procedure.\n- When the age of a solution is not known, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state this as \u2018nan\u2019\n- For solutions that is stored a long time, an order of magnitude estimate is adequate.\nExample\n2\n0.25 |1000 >> 10000\nnan | nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 53,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_reaction_solutions_temperature",
                "description": "The temperature of the reaction solutions.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the solutions associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If a reaction solution undergoes a temperature program, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons, e.g. 25; 100\n- When the temperature of a solution is unknown, state that as \u2018nan\u2019\n- For reaction steps where no solvents are involved, state the temperature of the gas or the solid if that make sense. Otherwise state this as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume an undetermined room temperature to be 25\nExample\n25\n100; 50 | 25\nnan | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 54,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_substrate_temperature",
                "description": "The temperature of the substrate.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the temperatures of the substrates (i.e. the last deposited layer) associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The temperature of the substrate refers to the temperature when the deposition of the layer is occurring.\n- If a substrate undergoes a temperature program before the deposition, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- When the temperature of a substrate is not known, state that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- Assume that an undetermined room temperature is 25\nExample\n25\nnan\n125; 325; 375; 450 | 25 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 55,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_thermal_annealing_temperature",
                "description": "The temperatures of the thermal annealing program associated with depositing the layers\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing temperatures associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the temperatures (e.g. start, end, and other important points) and separate them with semicolons (e.g. 25; 100)\n- For values with uncertainties, state the best estimate, e.g. write 120 and not 110-130.\n- If no thermal annealing is occurring after the deposition of a layer, state that by stating the room temperature (assumed to 25\u00b0C if not further specified)\n- If the thermal annealing program is not known, state that by \u2018nan\u2019\nExample\n25\n50 | nan\n450 | 125; 325; 375; 450 >> 125; 325; 375; 450",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 56,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_thermal_annealing_time",
                "description": "The time program associated to the thermal annealing program.\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the annealing times associated to each reaction step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the thermal annealing involves a temperature program with multiple temperature stages, list the associated times at those temperatures and separate them with semicolons.\n- The annealing times must align in terms of layers\u00b8 reaction steps and annealing temperatures in the previous filed.\n- If a time is not known, state that by \u2018nan\u2019\n- If no thermal annealing is occurring after the deposition of a layer, state that by \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 20 and not 10-30.\nExample\nnan\n60 | 1000\n30 | 5; 5; 5; 30 >> 5; 5; 5; 30",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 57,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_deposition_thermal_annealing_atmosphere",
                "description": "The atmosphere during thermal annealing\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- When more than one reaction step, separate the atmospheres associated to each annelaing step by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- The number and order of layers and deposition steps must line up with the previous columns.\n- If the atmosphere is a mixture of different gases, i.e. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas.\n- This is often the same as the atmosphere under which the deposition is occurring, but not always.\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nVacuum | N2\nAir | Ar >> Ar",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 58,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_storage_time_until_next_deposition_step",
                "description": "The time between the back contact is finalised and the next layer is deposited\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.\n- If this is the last layer in the stack, state this as \u2018nan\u2019",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 59,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown"
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_storage_atmosphere",
                "description": "The atmosphere in which the sample with the finalised back contact is stored until the next deposition step or device performance measurement\nExample\nAir\nN2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 60,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_storage_relative_humidity",
                "description": "The relive humidity under which the sample with the finalised back contact is stored until the next deposition step or device performance measurement\n- If there are uncertainties, only state the best estimate, e.g write 35 and not 20-50.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 61,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "lay_back_surface_treatment_before_next_deposition_step",
                "description": "Description of any type of surface treatment or other treatment the sample with the finalised back contact is stored until the next deposition step or device performance measurement\n- If more than one treatment, list the treatments and separate them by a double forward angel bracket (\u2018 >> \u2018)\n- If no special treatment, state that as \u2018none\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nnone\nAr plasma\nUV-ozone",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "name": "Encapsulation",
            "description": "A section to describe information about the encapsulation of the device.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "Encapsulation",
                "description": "TRUE if the cell is encapsulated",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Parylene | SLG",
                          "Plastic tape",
                          "Parylene-C",
                          "UV-curated glue | SLG",
                          "SLG | Ossila E131 epoxy resin",
                          "Field's metal",
                          "Scribbling UV-glue",
                          "Kapton tape | Glue",
                          "UV-curable epoxy",
                          "UV-glue | SLG",
                          "Surlyn | SLG",
                          "Epoxy",
                          "Eu(TTA)2(Phen)MAA",
                          "Cover glass-QDs; Epoxy",
                          "Al2O3 | SLG",
                          "Pattex silicon",
                          "UV-glue (NOA 68, Norland products)",
                          "Kapton PI tape with Silicone adhesive",
                          "Polymer | SLG",
                          "Ossila E131 Epoxy Resin",
                          "Viewbarrier (mitsibushi plastic, inc)",
                          "Cavity glass",
                          "Epoxy (3124L(MS), Three Bond)",
                          "Polymer",
                          "SLG",
                          "FTO",
                          "UV curable glue",
                          "Surlyn",
                          "UV-glue (ThreeBond)",
                          "Epoxy | SLG",
                          "Cyanoacrylate",
                          "UV-curated epoxy | SLG",
                          "Parylene-film",
                          "UV-curable epoxy | Cover glass-QDs",
                          "EVOH | S5 | UV | G1",
                          "Face-sealing adhesive sheets",
                          "Polystyrene microgel particles",
                          "Cover glass-QDs | UV-curable epoxy",
                          "Polyolefin",
                          "Paraffin",
                          "PDMS",
                          "SiO2 | Desiccant | SLG",
                          "UV-glue",
                          "Barrier foil",
                          "EVA",
                          "Polyisobutylene",
                          "SiO2 | AB epoxy glue (Super Glue Corp.) | Desiccant | SLG",
                          "UVCA (3035B)",
                          "SLG; UV-selant",
                          "UV epoxy",
                          "SLG | Epoxy",
                          "Glass cyclindrical tube",
                          "Norland Optical Adhesive (NOA) layers on (PET) | micropatterned NOA",
                          "LDPE | PP",
                          "Thermoplastic sealant",
                          "PVP | UV-Epoxy | SLG",
                          "Fluoropolymeric layer",
                          "3M acrylic elastomer (3M VHB 4905)",
                          "SLG | LT-U001",
                          "Cover glass-QDs",
                          "UV curing epoxy",
                          "UV-cured epoxy; Cavity glass",
                          "UHPBF",
                          "UV filter glass and light curable epoxy",
                          "Polyvinyl pyrrolidone | Epoxy resin | SLG",
                          "SnO2-c",
                          "UV Epoxy",
                          "Surlyn | Gover glass",
                          "Unknown",
                          "SL; Unknown:UV cured adhesive",
                          "UV epoxy | SLG",
                          "Glass (Ossila E131)",
                          "UV-glue (ThreeBond, 3052)",
                          "UV-curable epoxy | SLG",
                          "PCL",
                          "Graphene",
                          "Al2O3 | PET",
                          "PDMS-nanocone",
                          "Hot melt polymer foil (Oxford PV) | Cover glass-QDs",
                          "Norland Optical Adhesive (NOA) layers on (PET)",
                          "Carbon-nt",
                          "PET",
                          "Cover glass-QDs; Water-absorbent sealant (HD-S051414W-40, Dynic)",
                          "Desiccant | SLG",
                          "Graphene oxide | Desiccant | SLG",
                          "Ossila E132 resin",
                          "Kapton tape",
                          "Kapton tape | SLG",
                          "UV curable resin",
                          "UV-glue (3035B, ThreeBond Holdings)",
                          "Al2O3 | pV3D3",
                          "Surlyn | FTO",
                          "Cover glass with ultraviolet-curable adhesive",
                          "Polyisobutene",
                          "Cover glass-QDs; Expoxy",
                          "SLG | FTO",
                          "polyisobutylene | SLG",
                          "PMMA; PU",
                          "UVCA (3035B) | Paraffin",
                          "Ag; Carbon-epoxy",
                          "UV sealant | Surlyn | SLG",
                          "PEN",
                          "Self-mixing epoxy",
                          "Teflon",
                          "Al2O3",
                          "UV glue",
                          "Kapton | Ligh-curated glue | SLG",
                          "Adhesive glue 3025 B (Three Bond Holding Co. Ltd)",
                          "ITO | PEN",
                          "Ethylene-vinyl acetate",
                          "EVA | SLG",
                          "PCPD2FBT:BCF",
                          "PMMA",
                          "Desiccant",
                          "SiO2",
                          "Scotch tape",
                          "Meltronix",
                          "Al2O3 | O-Al-CH3 | Al2O3"
                        ]
                      }
                    }
                  ]
                },
                "name": "stack_sequence",
                "description": "The stack sequence of the encapsulation\n- Every layer should be separated by a space, a vertical bar, and a space, i.e. (\u2018 | \u2018)\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\n- Use common abbreviations when appropriate but spell it out if risk for confusion.\n- There are now separate filed for doping. Indicate doping with colons. E.g. wither aluminium doped NiO-np as Al:NiO-np\nExample:\nSLG\nEpoxy\nCover glass\nPMMA",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Epoxy  (Pacer  Technology,  SY-QS )",
                          "Thermoplastic",
                          "Araldite 2011",
                          "Kapton tape | Light-curable glue",
                          "NOA 89",
                          "Epoxy; Silicone",
                          "Hot-melting polymer",
                          "UV-glue (3035B, ThreeBond Holdings)",
                          "Ossila Epoxy E131",
                          "467 MP 3M Adhesive Transfer Tape",
                          "PDMS",
                          "polyisobutylene",
                          "Unknown",
                          "UV-curable epoxy",
                          "NOA 88",
                          "UV-curable epoxy (ThreeBond)",
                          "Polymer foil",
                          "Clamp",
                          "Epoxy",
                          "none",
                          "Glue",
                          "UV-glue",
                          "Epoxy adhesive",
                          "Polyurathene",
                          "Epoxy (XNR 5516Z-B1, Nagase ChemteX Corporation)",
                          "NOA 63",
                          "Polyisobutylene",
                          "Epoxy sealant Ossila E131",
                          "UV-glue (NOA 68, Norland products)",
                          "Kapton tape | UV-curable Glue",
                          "Threebond glue",
                          "Light-curated glue",
                          "Surlyn (Du Pont)",
                          "Epoxy; Polymer",
                          "Polymer",
                          "SLG",
                          "Polyolefin elastomer",
                          "Thermally curable epoxy (Kyoritsu Chemical)",
                          "Surlyn",
                          "UV-glue (ThreeBond)",
                          "UV-curable epoxy (Ossila E131)",
                          "Butyl rubber",
                          "Cover glass-QDs",
                          "Polydimethylsiloxane"
                        ]
                      }
                    }
                  ]
                },
                "name": "edge_sealing_materials",
                "description": "Edge sealing materials\n- If two materials, e.g. A and Bare used, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\nExample:\nEpoxy\nSurlyn\nUV-glue",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Dry air",
                          "Unknown",
                          "Air",
                          "Ambient",
                          "N2",
                          "Vacuum",
                          "Ar"
                        ]
                      }
                    }
                  ]
                },
                "name": "atmosphere_for_encapsulation",
                "description": "The surrounding atmosphere during encapsulation.\n- If the surrounding atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\nExample\nN2\nVacuum\nAir",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "water_vapour_transmission_rate",
                "description": "The water vapour transmission rate trough the encapsulation.\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "oxygen_transmission_rate",
                "description": "The oxygen transmission rate trough the encapsulation.\n- If there are uncertainties, only state the best estimate, e.g. write 35 and not 20-50.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 11,
            "m_parent_sub_section": "section_definitions",
            "name": "JVcurve",
            "description": "Section describing a current density, voltage curve.",
            "more": {
              "label_quantity": "cell_name"
            },
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_values",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "cell_name",
                "description": "Cell identification name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "voltage",
                      "y": "current_density"
                    }
                  ]
                },
                "name": "current_density",
                "description": "Current density array of the *JV* curve.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "voltage",
                      "y": "current_density"
                    }
                  ]
                },
                "name": "voltage",
                "description": "Voltage array of the of the *JV* curve.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "volt"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 12,
            "m_parent_sub_section": "section_definitions",
            "name": "JV",
            "description": "This section descirbes the current density *J* and voltage *V* characteristics of the solar cell. It includes the device parameters and information about how the\nmeasurements were performed.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "FileEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "data_file",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "measured",
                "description": "TRUE if IV-data has been measured and is reported.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "average_over_n_number_of_cells",
                "description": "The number of cells the reported IV data is based on.\n- The preferred way to enter data is to give every individual cell its own entry in the data template/data base. If that is done, the data is an average over 1 cell.\n- If the reported IV data is not the data from one individual cell, but an average over N cells. Give the number of cells.\n- If the reported value is an average, but it is unknown over how many cells the value has been averaged (and no good estimate is available), state the number of cells as 2, which is the smallest number of cells that qualifies for an averaging procedure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "certified_values",
                "description": "TRUE if the IV data is measured by an independent and certification institute. If your solar simulator is calibrated by a calibrated reference diode, that does not count as a certified result.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "National Institute ofMetrology, China",
                          "Quality supervision\uff06Testing Center of Chemical\uff06Physical Power Sources of Information Industry",
                          "CREST, Photovoltaic Meaasurement and calibration Laboratory at Universit of Loughborough",
                          "Photovoltaic and Wind Power Systems Quality Test Center, Chinese Academy of Sciences",
                          "NREL",
                          "Institute of Metrology (NIM) of China",
                          "PVEVL, National Central University, Taiwan",
                          "NIM, National Institute of Metrology of China",
                          "Fraunhofer ISE",
                          "SIMIT, Shanghai Institute of Microsystem and Information Technology",
                          "Newport",
                          "CSIRO, PV Performance Lab at Monash University",
                          "AIST, National Institute of Advanced Industrial Science and Technology",
                          "CPVT, National Center of Supervision and Inspection on Solar Photovoltaic Products Quality of China",
                          "KIER, Korea Institute of Energy Research",
                          "Newport Corporation",
                          "Solar Power Lab at Arizona State University"
                        ]
                      }
                    }
                  ]
                },
                "name": "certification_institute",
                "description": "The name of the certification institute that has measured the certified device.\nExample:\nNewport\nNIM, National Institute of Metrology of China\nKIER, Korea Institute of Energy Research",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "1.0",
                          "Unknown",
                          "7.0",
                          "4.0",
                          "2.0",
                          "28.0",
                          "58.0",
                          "8.0",
                          "0.01",
                          "0.5",
                          "5.0",
                          "6.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_age_of_cell",
                "description": "The age of the cell with respect to when the last deposition step was finalised.\n- If there are uncertainties, only state the best estimate, e.g. write 3 and not 1-5.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Dry air",
                          "Unknown",
                          "Air",
                          "Ambient",
                          "N2",
                          "Vacuum"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_atmosphere",
                "description": "The atmosphere in which the sample was stored between the device finalisation and the IV measurement.\n- If the atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\n- If the atmosphere has changed during the storing time, separate the different atmospheres by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nN2\nAir\nN2 >> Air",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.9",
                          "65.0",
                          "5.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "storage_relative_humidity",
                "description": "The relative humidity in the atmosphere in which the sample was stored between the device finalisation and the IV measurement.\n- If the relative humidity has changed during the storing time, separate the different relative humidity by a double forward angel bracket with one blank space on both sides (\u2018 >> \u2018)\n- If the relative humidity is not known, stat that as \u2018nan\u2019\n- For values with uncertainties, state the best estimate, e.g. write 35 and not 30-40.\nExample\n35\n0\n0 >> 25",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Water",
                          "Dry air",
                          "Unknown",
                          "Air",
                          "Ambient",
                          "Outdoor",
                          "N2",
                          "Vacuum",
                          "Ar",
                          "Near-space"
                        ]
                      }
                    }
                  ]
                },
                "name": "test_atmosphere",
                "description": "The atmosphere in which the IV measurement is conducted\n- If the atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\nExample\nAir\nN2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "test_relative_humidity",
                "description": "The relive humidity in which the IV measurement is conducted\n- If there are uncertainties, only state the best estimate, e.g write 35 and not 20-50.\n- If the relative humidity is not known, stat that as \u2018nan\u2019",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "test_temperature",
                "description": "The temperature of the device during the IV-measurement\n- If the temperature is not controlled and not is known, assume a standard room temperature of 25\u00b0C.\n- If there are uncertainties, only state the best estimate, e.g write 35 and not 20-50.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "degree_Celsius"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Unknown",
                          "White LED",
                          "Solar Simulator",
                          "Fluorescent lamp",
                          "Solar simulator",
                          "solar simulator",
                          "Laser",
                          "Xenon"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_source_type",
                "description": "The type of light source used during the IV-measurement\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\n- The category Solar simulator should only be used when you do not really know which type of light source you have in your solar simulator.\nExample:\nLaser\nMetal halide\nOutdoor\nSolar simulator\nSulfur plasma\nWhite LED\nXenon plasma",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "EC-lab T-5A",
                          "ABET 11000",
                          "Wavelabs",
                          "ABET Technologies 10500",
                          "Newport model 94023A-U",
                          "McScience K3000",
                          "BOS-X-1000G",
                          "Solar light 16S-300",
                          "Enlitech",
                          "Newport, model 94063A",
                          "Wacom Denso model WXS-155S-10",
                          "Sciencetech Inc. SS-150",
                          "WAVELABS SINUS-70 LED",
                          "Oriel Sol2ATM",
                          "Newport model 91195A",
                          "Newport ORIEL LCS100",
                          "Oriel 91160",
                          "Newport Verasol",
                          "Solar IV-150A, Zolix",
                          "WAVELABS SINUS-220",
                          "Newport 91195A",
                          "San-ei Electric XES-301S",
                          "Newport model 94043A",
                          "Cree XML T6",
                          "Bunkoukeiki CEP-2000SRR",
                          "Peccell Technologies PEC-L01",
                          "XES-70S1",
                          "Sciencetech",
                          "Oriel 91160A",
                          "Oriel VeraSol-2",
                          "CEP-2000SRR, Bunkou-Keiki Inc",
                          "Zolix SS150A",
                          "SANEI",
                          "PET Photo Emission Tech Inc. Model SS",
                          "Enlitech SS-F7-3A",
                          "Newport 91160",
                          "ABET Technology Sun 2000",
                          "Oriel 9119",
                          "Peccell PEC-L01",
                          "Bunkoukeiki BSS-150T",
                          "Enlitech SS-F5",
                          "Global (G)",
                          "Wacom WXs-156s-l2",
                          "Photo Emission Tech Inc SS150",
                          "Newport Oriel LCS-100",
                          "Oriel 92251A",
                          "Newport 94123A",
                          "Oriel 94023 A",
                          "Newport model 94023A",
                          "Newport Oriel 92192",
                          "Newport model 94022",
                          "Bunkoukeiki KHP-1",
                          "YAMASHITA DENSO model YSS-150A",
                          "Oriel 300",
                          "Newport AAA",
                          "KHP-1, Bunko-Keiki, Japan",
                          "Spectra-Nova",
                          "Sol3A, Oriel Instruments",
                          "Abet Technologies Sun 3000",
                          "IV5, PV Measurements, Inc., USA",
                          "Newport Oriel PVIV-201 V",
                          "Photo Emission Tech.",
                          "Newport model 91192",
                          "XES-40S1, SAN-E1",
                          "San-ei Electric",
                          "Oriel 92251A-1000",
                          "Newport Oriel 94043A",
                          "So13A",
                          "Newport Oriel Sol3A",
                          "ABET Sun 3000",
                          "KHS Steuernagel",
                          "Zolix Sirius-SS",
                          "Oriel 81172",
                          "PV Measurements Inc.",
                          "Oriel",
                          "XEF-300",
                          "Oriel Sol3A",
                          "Peceell PEC-L01",
                          "Ushio Optical ModuleX",
                          "Newport Oriel 96000",
                          "Oriel 94023A",
                          "McScience K401",
                          "Newport Oriel 3A",
                          "94011A-ES Sol",
                          "Bunkoukeiki CEP-25ML",
                          "Newport 6279 NS",
                          "Sharif Solar 10\u20132",
                          "SAN-EI (XES-50S1)",
                          "Enlitech SS-F5-3A",
                          "ScienceTech model SF-150",
                          "Newport Oriel",
                          "Newport Oriel Sol2A",
                          "Batsol PEC-L01"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_source_brand_name",
                "description": "The brand name and model number of the light source/solar simulator used\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nNewport model 91192\nNewport AAA\nAtlas suntest",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "ABB",
                          "A",
                          "AAA",
                          "ABA",
                          "AAB"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_source_simulator_class",
                "description": "The class of the solar simulator\n- A three-letter code of As, Bs, and Cs. The order of the letters represents the quality ofspectral match, spatial non-uniformity, and temporal instability\nExample\nAAA\nABB\nCAB",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "light_intensity",
                "description": "The light intensity during the IV measurement\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- Standard AM 1.5 illumination correspond to 100 mW/cm2\n- If you need to convert from illumination given in lux; at 550 nm, 1 mW/cm2 corresponds to 6830 lux. Be aware that the conversion change with the spectrum used. As a rule of thumb for general fluorescent/LED light sources, around 0.31mW corresponded to 1000 lux. If your light intensity is measured in lux, it probably means that your light spectra deviates quite a lot from AM 1.5, wherefore it is very important that you also specify the light spectra in the next column.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliwatt / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Indoor light",
                          "AM 1.5",
                          "Monochromatic",
                          "Am 1.5"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_spectra",
                "description": "The light spectrum used (or simulated as best as possible) during the IV measurement\nExample\nAM 1.0\nAM 1.5\nIndoor light\nMonochromatic\nOutdoor\nUV",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "nan; nan",
                          "250; 1200"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_wavelength_range",
                "description": "The wavelength range of the light source\n- Separate the lower and upper bound by a semicolon.\n- For monochromatic light sources, only give the constant value.\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- State unknown values as \u2018nan\u2019\nExample:\n330; 1000\n400; nan\n550",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Superstrate",
                          "Substrate"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_illumination_direction",
                "description": "The direction of the illumination with respect to the device stack\n- If the cell is illuminated trough the substrate, state this as \u2018Substrate\u2019\n- If the cell is illuminated trough the top contact, state this as \u2018Superstrate\u2019\n- For back contacted cells illuminated from the non-contacted side, state this as \u2018Superstrate\u2019\nExample\nSubstrate\nSuperstrate",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "light_masked_cell",
                "description": "TRUE if the cell is illuminated trough a mask with an opening that is smaller than the total cell area.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "light_mask_area",
                "description": "The area of the opening in the mask trough with the cell is illuminated (if there is a mask)\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- If there is no light mask, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "scan_speed",
                "description": "The speed of the potential sweep during the IV measurement",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "millivolt / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "scan_delay_time",
                "description": "The time at each potential value before integration in the potential sweep.\n- For some potentiostats you need to specify this value, whereas for others it is set automatically and is not directly accessible.\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- If unknown, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "millisecond"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "scan_integration_time",
                "description": "The integration time at each potential value in the potential sweep.\n- For some potentiostats you need to specify this value, whereas for others it is set automatically and is not directly accessible.\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- If unknown, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "millisecond"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "scan_voltage_step",
                "description": "The distance between the measurement point in the potential sweep\n- If unknown, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "millivolt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Light soaking",
                          "Potential biasing",
                          "Heating",
                          "Unknown",
                          "MPPT",
                          "Voc stabilization",
                          "Bending",
                          "Light Soaking",
                          "Light Soaking; Potential biasing",
                          "Electroluminescence measurement",
                          "Light soaking; Potential biasing",
                          "Heating; Light soaking",
                          "Light soaking; Potential cykling",
                          "Cooling"
                        ]
                      }
                    }
                  ]
                },
                "name": "preconditioning_protocol",
                "description": "Any preconditioning protocol done immediately before the IV measurement\n- If no preconditioning was done, state this as \u2018none\u2019\n- If more than one preconditioning protocol was conducted in parallel, separate them with semicolons\n- If more than one preconditioning protocol was conducted in sequence, separate them by a double forward angel bracket (\u2018 >> \u2018)\nExample\nCooling\nHeeting\nLight soaking\nLight soaking; Potential biasing\nPotential biasing",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "preconditioning_time",
                "description": "The duration of the preconditioning protocol\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "preconditioning_potential",
                "description": "The potential at any potential biasing step\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "preconditioning_light_intensity",
                "description": "The light intensity at any light soaking step\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliwatt / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "reverse_scan_Voc",
                "description": "The open circuit potential, Voc, at the reverse voltage sweep (when U scanned from Voc to 0)\n- Give Voc in volts [V]\n- If there are uncertainties, only state the best estimate, e.g. write 1.03 and not 1.01-1.05\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "reverse_scan_Jsc",
                "description": "The short circuit current, Jsc, at the reverse voltage sweep (when U scanned from Voc to 0)\n- Give Jsc in mA/cm2\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "reverse_scan_FF",
                "description": "The fill factor, FF, at the reverse voltage sweep (when U scanned from Voc to 0)\n- Give FF as the ratio between Vmp*Jmp/(Voc*Jsc) which gives it a value between 0 and 1\n- If there are uncertainties, only state the best estimate, e.g. write 0.73 and not 0.7-0.76\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "reverse_scan_PCE",
                "description": "The efficiency, PCE, at the reverse voltage sweep (when U scanned from Voc to 0)\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 32,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "reverse_scan_Vmp",
                "description": "The potential at the maximum power point, Vmp, at the reverse voltage sweep (when U scanned from Voc to 0)\n- Give Vmp in volts [V]\n- If there are uncertainties, only state the best estimate, e.g. write 1.03 and not 1.01-1.05\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 33,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "reverse_scan_Jmp",
                "description": "The current density at the maximum power point, Jmp, at the reverse voltage sweep (when U scanned from Voc to 0)\n- Give Jmp in mA/cm2\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 34,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "reverse_scan_series_resistance",
                "description": "The series resistance as extracted from the reverse voltage sweep (when U scanned from Voc to 0)",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2 * ohm"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 35,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "reverse_scan_shunt_resistance",
                "description": "The shunt resistance as extracted from the reverse voltage sweep (when U scanned from Voc to 0)",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2 * ohm"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 36,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "forward_scan_Voc",
                "description": "The open circuit potential, Voc, at the forward voltage sweep (when U scanned from 0 to Voc)\n- Give Voc in volts [V]\n- If there are uncertainties, only state the best estimate, e.g. write 1.03 and not 1.01-1.05\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 37,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "forward_scan_Jsc",
                "description": "The short circuit current, Jsc, at the forward voltage sweep (when U scanned from 0 to Voc)\n- Give Jsc in mA/cm2\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 38,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "forward_scan_FF",
                "description": "The fill factor, FF, at the forward voltage sweep (when U scanned from 0 to Voc)\n- Give FF as the ratio between Vmp*Jmp/(Voc*Jsc) which gives it a value between 0 and 1\n- If there are uncertainties, only state the best estimate, e.g. write 0.73 and not 0.7-0.76\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 39,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "forward_scan_PCE",
                "description": "The efficiency, PCE, at the forward voltage sweep (when U scanned from 0 to Voc)\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 40,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "forward_scan_Vmp",
                "description": "The potential at the maximum power point, Vmp, at the forward voltage sweep (when U scanned from 0 to Voc)\n- Give Vmp in volts [V]\n- If there are uncertainties, only state the best estimate, e.g. write 1.03 and not 1.01-1.05\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 41,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "forward_scan_Jmp",
                "description": "The current density at the maximum power point, Jmp, at the forward voltage sweep (when U scanned from 0 to Voc)\n- Give Jmp in mA/cm2\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 42,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "forward_scan_series_resistance",
                "description": "The series resistance as extracted from the forward voltage sweep (when U scanned from 0 to Voc)",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2 * ohm"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 43,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "forward_scan_shunt_resistance",
                "description": "The shunt resistance as extracted from the forward voltage sweep (when U scanned from 0 to Voc)",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2 * ohm"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 44,
                "m_parent_sub_section": "quantities",
                "name": "link_raw_data",
                "description": "A link to where the data file for the IV-data is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for IV data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw IV-data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 45,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "default_Voc",
                "description": "Open circuit voltage.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 46,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "default_Jsc",
                "description": "Short circuit current density.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 47,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "default_FF",
                "description": "Fill factor.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 48,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "default_PCE",
                "description": "Power conversion efficiency.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 49,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Reversed",
                          "",
                          "Forward"
                        ]
                      }
                    }
                  ]
                },
                "name": "default_Voc_scan_direction",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 50,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Reversed",
                          "",
                          "Forward"
                        ]
                      }
                    }
                  ]
                },
                "name": "default_Jsc_scan_direction",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 51,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Reversed",
                          "",
                          "Forward"
                        ]
                      }
                    }
                  ]
                },
                "name": "default_FF_scan_direction",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 52,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Reversed",
                          "",
                          "Stabilised",
                          "Forward"
                        ]
                      }
                    }
                  ]
                },
                "name": "default_PCE_scan_direction",
                "description": "nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 53,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "hysteresis_index",
                "description": "nan",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "jv_curve",
                "sub_section": "/packages/5/section_definitions/11",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 13,
            "m_parent_sub_section": "section_definitions",
            "name": "Stabilised",
            "description": "A section describing if a stabilised efficiency has been measured in the solar cell.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "performance_measured",
                "description": "TRUE if a stabilised cell efficiency has been measured\n- A stabilised efficiency requires a continuous measurement. Measuring an IV-curve, storing the cell in the dark for a while, and then measure a new IV-curve does thus not count as a stabilised efficiency measurement.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "MPPT",
                          "Constant potential",
                          "Constant Potential",
                          "Constant current"
                        ]
                      }
                    }
                  ]
                },
                "name": "performance_procedure",
                "description": "The Potentiostatic load condition during the stabilised performance measurement\nExamples:\nConstant current\nConstant potential\nMPPT\nPassive resistance\nShort circuit",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "0.8",
                          "0.82",
                          "0.885",
                          "0.99",
                          "0.64",
                          "0.91",
                          "0.757",
                          "0.97",
                          "0.76",
                          "0.92",
                          "0.7959999999999999",
                          "0.895",
                          "0.96",
                          "1.19",
                          "0.85",
                          "0.94",
                          "0.61",
                          "0.83",
                          "1.31",
                          "0.87",
                          "0.9",
                          "0.86",
                          "0.78",
                          "0.93",
                          "0.74",
                          "0.79",
                          "0.867",
                          "0.98",
                          "0.73",
                          "1.3",
                          "0.8140000000000001",
                          "0.8740000000000001",
                          "0.8590000000000001",
                          "1.23",
                          "0.81",
                          "0.818",
                          "0.71",
                          "0.75",
                          "1.0",
                          "0.62",
                          "0.66",
                          "0.88",
                          "0.84",
                          "0.95",
                          "0.72",
                          "0.77",
                          "1.35"
                        ]
                      }
                    }
                  ]
                },
                "name": "performance_procedure_metrics",
                "description": "The metrics associated to the load condition in the previous filed\n- For measurement under constant current, state the current in mA/cm2\n- For measurement under constant potential. State the potential in V\n- For a measurement under constant resistive load, state the resistance in ohm",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "performance_measurement_time",
                "description": "The duration of the stabilised performance measurement.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "minute"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "performance_PCE",
                "description": "The stabilised efficiency, PCE\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "performance_Vmp",
                "description": "The stabilised Vmp\n- Give Vmp in volts [V]\n- If there are uncertainties, only state the best estimate, e.g. write 1.03 and not 1.01-1.05\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "performance_Jmp",
                "description": "The stabilised Jmp\n- Give Jmp in mA/cm2\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "false",
                          "www.testsite\u2026"
                        ]
                      }
                    }
                  ]
                },
                "name": "performance_link_raw_data",
                "description": "A link to where the data file for the stability measurement is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for IV data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw IV-data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 14,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ],
              "plot": [
                {
                  "label": "Raw EQE",
                  "x": "raw_wavelength_array",
                  "y": "raw_eqe_array",
                  "layout": {
                    "yaxis": {
                      "type": "lin"
                    }
                  }
                },
                {
                  "label": "Interpolated/extrapolated EQE log scale",
                  "x": "wavelength_array",
                  "y": "eqe_array",
                  "layout": {
                    "yaxis": {
                      "type": "log"
                    }
                  },
                  "config": {
                    "editable": "true"
                  }
                }
              ]
            },
            "name": "EQE",
            "description": "A section describing the External Quantum Efficiency **EQE** of the solar cell and additional parameteres derived from it. If used as an ELN, a file containing\nthe EQE spectrum in columns can be uploaded in the quantity `data_file` to process\nautomatic calculations of several parameteres like the `bandgap` or `Urbach energy`.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "FileEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "eqe_data_file",
                "description": "Drop here your eqe file and click save for processing.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "header_lines",
                "description": "Number of header lines in the file.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "default": 0
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "measured",
                "description": "TRUE if the external quantum efficiency has been measured",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "light_bias",
                "description": "The light intensity of any bias light during the EQE measurement\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliwatt / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "bandgap_eqe",
                "description": "Bandgap derived form the eqe in eV.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "integrated_Jsc",
                "description": "The integrated current from the EQE measurement\n- Give Jsc in mA/cm2\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "integrated_J0rad",
                "description": "The integrated J<sub>{0, Rad}</sub> from the EQE measurement\n- Give J<sub>{0, Rad}</sub> in mA/cm2\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "voc_rad",
                "description": "Radiative V<sub>oc</sub> derived from the eqe in V.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "urbach_energy",
                "description": "Urbach energy fitted from the eqe in eV.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "n_values",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "n_raw_values",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "photon_energy_array",
                      "y": "raw_eqe_array"
                    }
                  ]
                },
                "name": "raw_eqe_array",
                "description": "EQE array of the spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_raw_values"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "raw_photon_energy_array",
                      "y": "raw_eqe_array"
                    }
                  ]
                },
                "name": "raw_photon_energy_array",
                "description": "Raw Photon energy array of the eqe spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_raw_values"
                ],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "raw_wavelength_array",
                      "y": "raw_eqe_array"
                    }
                  ]
                },
                "name": "raw_wavelength_array",
                "description": "Raw wavelength array of the eqe spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_raw_values"
                ],
                "unit": "nanometer"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "photon_energy_array",
                      "y": "eqe_array"
                    }
                  ]
                },
                "name": "eqe_array",
                "description": "EQE array of the spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "wavelength_array",
                      "y": "eqe_array"
                    }
                  ]
                },
                "name": "wavelength_array",
                "description": "Interpolated/extrapolated wavelength array with *E<sub>u</sub>* of the eqe spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "nanometer"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "photon_energy_array",
                      "y": "eqe_array"
                    }
                  ]
                },
                "name": "photon_energy_array",
                "description": "Interpolated/extrapolated photon energy array with a *E<sub>u</sub>*  of the eqe spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "name": "link_raw_data",
                "description": "A link to where the data file for the EQE measurement is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for IV data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw IV-data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 15,
            "m_parent_sub_section": "section_definitions",
            "name": "Stability",
            "description": "A section decsirbing the stability measurements performed in the device.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "measured",
                "description": "TRUE if some kind of stability measurement has been done.\n- There is no sharp boundary between a stability measurement and a measurement of stabilised efficiency. Generally, a measurement under a few minutes is considered as a measurement of stabilised efficiency, whereas a stability measurement is sufficiently long for degradation to be seen (unless the device is really good)",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Indoor light",
                          "IEC 61646",
                          "ISOS-L-1",
                          "Bending test",
                          "Other",
                          "ISOS-LC-1",
                          "ISOS-T-1",
                          "ISOS-D-1I",
                          "ISOS-V-2",
                          "ISOS-L-2I",
                          "ISOS-D-1",
                          "IEC 61215",
                          "ISOS-L-C1I",
                          "ISOS\u2010L\u20101",
                          "ISOS-L-3",
                          "ISOS-L-1I",
                          "ISOS-D-2",
                          "ISOS-V-1",
                          "ISOS-L-2",
                          "ISOS\u2010D\u20103",
                          "ISOS-D-2I",
                          "ISOS-D-3",
                          "ISOS-V-1I",
                          "ISOS-O-1",
                          "UV-stability",
                          "ISOS-T-3"
                        ]
                      }
                    }
                  ]
                },
                "name": "protocol",
                "description": "The stability protocol used for the stability measurement.\n- For a more detailed discussion on protocols and standard nomenclature for stability measurements, please see the following paper:\no Consensus statement for stability assessment and reporting for perovskite photovoltaics based on ISOS procedures byM. V. Khenkin et al. Nat. Energ. 2020. DOI10.1038/s41560-019-0529-5\nExample:\nISOS-D-1\nISOS-D-1I\nISOS-L-2\nISOS-T-3\nIEC 61215",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "average_over_n_number_of_cells",
                "description": "The number of cells the reported stability data is based on.\n- The preferred way to enter data is to give every individual cell its own entry in the data template/data base. If that is done, the data is an average over 1 cell.\n- If the reported stability data is not the data from one individual cell, but an average over N cells. Give the number of cells.\n- If the reported value is an average, but it is unknown over how many cells the value has been averaged (and no good estimate is available), state the number of cells as 2, which is the smallest number of cells that qualifies for an averaging procedure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Indoor light",
                          "Solar Simulator",
                          "UV lamp",
                          "Natural sunlight",
                          "LED",
                          "White Led",
                          "Synchrotron",
                          "Light",
                          "Mercury",
                          "Sulfur plasma",
                          "Halogen",
                          "Tungsten; Gamma rays",
                          "White LED",
                          "Dark",
                          "Solar simulator",
                          "solar simulator",
                          "Sun",
                          "Tungsten",
                          "Xenon",
                          "Fluorescent lamp",
                          "Metal halide"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_source_type",
                "description": "The type of light source used during the stability measurement\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nLaser\nMetal halide\nOutdoor\nSolar simulator\nSulfur plasma\nWhite LED\nXenon plasma",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "light_source_brand_name",
                "description": "The brand name and model number of the light source/solar simulator used\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nNewport model 91192\nNewport AAA\nAtlas suntest",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "light_source_simulator_class",
                "description": "The class of the solar simulator\n- A three-letter code of As, Bs, and Cs. The order of the letters represents the quality ofspectral match, spatial non-uniformity, and temporal instability\nExample\nAAA\nABB\nCAB",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "light_intensity",
                "description": "The light intensity during the stability measurement\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- Standard AM 1.5 illumination correspond to 100 mW/cm2\n- If you need to convert from illumination given in lux; at 550 nm, 1 mW/cm2 corresponds to 6830 lux",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliwatt / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Indoor light",
                          "X-ray, 17.998 keV",
                          "UV",
                          "AM 1.5",
                          "Monochromatic",
                          "Outdoor ligth",
                          "Yellow light",
                          "Am 1.5"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_spectra",
                "description": "The light spectrum used (or simulated as best as possible) during the stability measurement\n- For an unspecified light spectra (that not is dark), state this as \u2018Light\u2019\nExample\nAM 1.0\nAM 1.5\nIndoor light\nMonochromatic\nOutdoor\nUV",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "nan; nan",
                          "325; 325",
                          "300; 800",
                          "340.0; 340.0",
                          "365.0; 365.0",
                          "254.0; 254.0",
                          "267.0; 267.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_wavelength_range",
                "description": "The wavelength range of the light source\n- Separate the lower and upper bound by a semicolon.\n- For monochromatic light sources, only give the constant value.\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- State unknown values as \u2018nan\u2019\nExample:\n330; 1000\n400; nan\n550",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Substrate"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_illumination_direction",
                "description": "The direction of the illumination with respect to the device stack\n- If the cell is illuminated trough the substrate, state this as \u2018Substrate\u2019\n- If the cell is illuminated trough the top contact, state this as \u2018Superstrate\u2019\n- For back contacted cells illuminated from the non-contacted side, state this as \u2018Superstrate\u2019\nExample\nSubstrate\nSuperstrate",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "constant",
                          "Uncontrolled",
                          "Cycled",
                          "Day-Night cycle",
                          "Constant"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_load_condition",
                "description": "The load situation of the illumination during the stability measurement.\n- If the illumination is constant during the entire stability measurement, or if the cell is stored in the dark, state this as \u2018Constant\u2019.\n- If the situation periodically is interrupted by IV-measurements, continue to consider the load condition as constant\n- If there is a cycling between dark and light, state this as \u2018Cycled\u2019\n- If the illumination varies in an uncontrolled way, state this as \u2018Uncontrolled\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nConstant\nCycled\nDay-Night cycle\nUncontrolled",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "0.16; 12.0",
                          "12.0; 12.0",
                          "10.0; 14.0",
                          "0.6"
                        ]
                      }
                    }
                  ]
                },
                "name": "light_cycling_times",
                "description": "If the illumination load is cycled during the stability measurement, state the time in low light followed by the time in high light for the cycling period.\n- If not applicable, leave blank\nExample\n12; 12\n6; 10\nnan; nan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "light_UV_filter",
                "description": "TRUE if a UV-filter of any kind was placed between the illumination source and the device during the stability measurement.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Short circuit",
                          "MPPT",
                          "Open circuit",
                          "Constant potential",
                          "Passive resistance"
                        ]
                      }
                    }
                  ]
                },
                "name": "potential_bias_load_condition",
                "description": "The Potentiostatic load condition during the stability measurement\n- When the cell is not connected to anything, state this as \u2018Open circuit\u2019\nExamples:\nConstant current\nConstant potential\nMPPT\nOpen circuit\nPassive resistance\nShort circuit",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "0.9; 0.9",
                          "0.85; 0.85",
                          "nan; nan",
                          "0.8465; 0.8465",
                          "0.47; 0.47",
                          "0.7499; 0.7499",
                          "0.937; 0.937",
                          "1.2; 1.2",
                          "0.65; 0.65",
                          "0.95; 0.95",
                          "0.84; 0.84",
                          "0.71; 0.71",
                          "1.0; 1.0",
                          "0.86; 0.86",
                          "1.413; 1.413",
                          "0.76; 0.76",
                          "0.7; 0.7",
                          "0.908; 0.908",
                          "0.72; 0.72",
                          "0.8; 0.8",
                          "0.89; 0.89"
                        ]
                      }
                    }
                  ]
                },
                "name": "potential_bias_range",
                "description": "The potential range during the stability measurement\n- Separate the lower and upper bound by a semicolon.\n- For constant values, state only that value.\n- For open circuit conditions, state this as \u2018nan\u2019\n- If there are uncertainties, only state the best estimate, e.g. write 1 and not 0.90-1.1\n- State unknown values as \u2018nan\u2019\nExample:\n0.9; 1.02\n1.5\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "potential_bias_passive_resistance",
                "description": "The passive resistance in the measurement circuit if a resistor was used\n- Give the value in ohm\n- If there are uncertainties, only state the best estimate, e.g. write 1.03 and not 1.01-1.05\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "ohm"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "constant",
                          "Uncontrolled",
                          "Cycled",
                          "uncontrolled",
                          "Constant"
                        ]
                      }
                    }
                  ]
                },
                "name": "temperature_load_condition",
                "description": "The load situation of the temperature during the stability measurement.\n- If the temperature is constant during the entire stability measurement, state this as \u2018Constant\u2019.\n- If there is a cycling between colder and hotter conditions, state this as \u2018Cycled\u2019\n- If the temperature varies in an uncontrolled way, state this as \u2018Uncontrolled\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nConstant\nUncontrolled\nCycled",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "22.0; 22.0",
                          "70; 70",
                          "-10.0; -10.0",
                          "80; 80",
                          "55.0; 55.0",
                          "50.0; 50.0",
                          "10; 25",
                          "nan; nan",
                          "75.0; 75.0",
                          "20; 20",
                          "120.0; 120.0",
                          "-40.0; 85.0",
                          "85.0; 85.0",
                          "0.0; 0.0",
                          "26.0; 26.0",
                          "27.5; 27.5",
                          "28.0; 28.0",
                          "25; 85",
                          "25; 25",
                          "65; 65",
                          "22.3; 22.7",
                          "110.0; 110.0",
                          "25; 80",
                          "21.0; 21.0",
                          "14.0; 14.0",
                          "20; 25",
                          "23; 23",
                          "-22.0; 100",
                          "100.0; 100.0",
                          "95.0; 95.0",
                          "23.5; 23.5",
                          "15; 25",
                          "30; 30",
                          "25; 35",
                          "18; 22",
                          "42.0; 42.0",
                          "17.0; 17.0",
                          "22.5; 22.5",
                          "28; 32",
                          "25; 30",
                          "20; 30",
                          "60; 60",
                          "2; 70",
                          "75; 75",
                          "80.0; 80.0",
                          "45.0; 45.0",
                          "160.0; 160.0",
                          "90.0; 90.0",
                          "53.0; 53.0",
                          "30.0; 30.0",
                          "20; 40",
                          "45; 45",
                          "150.0; 150.0",
                          "40.0; 40.0",
                          "-20.0; -20.0",
                          "20.0; 20.0",
                          "25.0; 25.0",
                          "70.0; 70.0",
                          "41.0; 41.0",
                          "50; 50",
                          "40; 40",
                          "65.0; 65.0",
                          "35.0; 35.0",
                          "25.5; 25.5",
                          "24.0; 24.0",
                          "15.0; 15.0",
                          "82.0; 82.0",
                          "23.0; 23.0",
                          "28; 28",
                          "60.0; 60.0",
                          "85; 85",
                          "100; 100",
                          "23.1; 23.1",
                          "nan; 120",
                          "21.5; 21.5",
                          "27.0; 27.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "temperature_range",
                "description": "The temperature range during the stability measurement\n- Separate the lower and upper bound by a semicolon.\n- For constant values, state only that value.\n- If there are uncertainties, only state the best estimate, e.g. write 1 and not 0.90-1.1\n- State unknown values as \u2018nan\u2019\nExample:\n30\n25; 85\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "15.0; 15.0",
                          "100.0; 100.0",
                          "25.0; 25.0",
                          "60.0; 120.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "temperature_cycling_times",
                "description": "If the temperature is cycled during the stability measurement, state the time in low temperature followed by the time in high temperature for the cycling period.\n- If not applicable, leave blank\n- Separate the lower and upper bound by a semicolon.\n- If there are uncertainties, only state the best estimate, e.g. write 1 and not 0.90-1.1\n- State unknown values as \u2018nan\u2019\nExample:\n2; 2\n0.5; 10",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "temperature_ramp_speed",
                "description": "The temperature ramp speed\n- If there are uncertainties, only state the best estimate, e.g. write 1.03 and not 1.01-1.05\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "degree_Celsius / minute"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Water",
                          "Dry air",
                          "Unknown",
                          "Air",
                          "Air. Desiccator",
                          "Ambient",
                          "N2",
                          "Vacuum",
                          "O2",
                          "N2; O2",
                          "Glovebox",
                          "Ar",
                          "Near-space"
                        ]
                      }
                    }
                  ]
                },
                "name": "atmosphere",
                "description": "The atmosphere in which the stability measurement is conducted\n- If the atmosphere is a mixture of different gases, e.g. A and B, list the gases in alphabetic order and separate them with semicolons, as in (A; B)\n- \u201cDry air\u201d represent air with low relative humidity but where the relative humidity is not known\n- \u201cAmbient\u201d represent air where the relative humidity is not known. For ambient conditions where the relative humidity is known, state this as \u201cAir\u201d\n- \u201cVacuum\u201d (of unspecified pressure) is for this purpose considered as an atmospheric gas\nExample\nAir\nN2\nVacuum",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "atmosphere_oxygen_concentration",
                "description": "The oxygen concentration in the atmosphere\n- If unknown, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "constant",
                          "Controlled",
                          "Ambient",
                          "ambient",
                          "Constant"
                        ]
                      }
                    }
                  ]
                },
                "name": "relative_humidity_load_conditions",
                "description": "The load situation of the relative humidity during the stability measurement.\n- If the relative humidity is constant during the entire stability measurement, state this as \u2018Constant\u2019.\n- If there is a cycling between dryer and damper conditions, state this as \u2018Cycled\u2019\n- If the relative humidity varies in an uncontrolled way, i.e. the cell is operated under ambient conditions, state this as \u2018Ambient\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample\nAmbient\nControlled\nCycled",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "40; 50",
                          "61; 75",
                          "30; 80",
                          "80; 80",
                          "60; 70",
                          "25; 45",
                          "nan; nan",
                          "25; 50",
                          "20; 20",
                          "50; 70",
                          "30; 50",
                          "60; 80",
                          "35; 35",
                          "0; 0",
                          "55; 70",
                          "75; 85",
                          "65; 65",
                          "50; 60",
                          "50.60; 50.60",
                          "1; 50",
                          "25; 25",
                          "20; 70",
                          "25; 35",
                          "30; 30",
                          "10; 15",
                          "45; 55",
                          "15; 25",
                          "15; 15",
                          "15; 20",
                          "42.2; 54.4",
                          "35; 40",
                          "30; 70",
                          "25; 40",
                          "25; 30",
                          "20; 30",
                          "60; 60",
                          "20; 40",
                          "30; 35",
                          "45; 45",
                          "40; 80",
                          "5; 5",
                          "40; 60",
                          "90; 95",
                          "50; 50",
                          "40; 40",
                          "45; 60",
                          "12; 18",
                          "35; 45",
                          "10; 20",
                          "45; 50",
                          "40; 45",
                          "85; 85",
                          "10; 30",
                          "30; 40",
                          "100; 100"
                        ]
                      }
                    }
                  ]
                },
                "name": "relative_humidity_range",
                "description": "The relative humidity range during the stability measurement\n- Separate the lower and upper bound by a semicolon.\n- For constant values, state only that value.\n- If there are uncertainties, only state the best estimate, e.g. write 1 and not 0.90-1.1\n- State unknown values as \u2018nan\u2019\nExample:\n45\n35; 65\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "relative_humidity_average_value",
                "description": "The average relative humidity during the stability measurement.\n- If there are uncertainties, only state the best estimate, e.g. write 1 and not 0.90-1.1\n- If unknown, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "time_total_exposure",
                "description": "The total duration of the stability measurement.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "periodic_JV_measurements",
                "description": "TRUE if the stability measurement periodically is interrupted for JV-measurements. A typical example is a cell that is stored in the dark and once in a wile is take out from storage for an IV-measurement.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "40.0",
                          "85.0",
                          "90.0",
                          "50.0",
                          "24.0",
                          "1440.0",
                          "10.0",
                          "3.0",
                          "3.2",
                          "220.0",
                          "60.0",
                          "5.0",
                          "125.0",
                          "9.0",
                          "120.0",
                          "Unknown",
                          "72.0",
                          "7.0",
                          "180.0",
                          "75.0",
                          "100.0",
                          "400.0",
                          "240.0",
                          "80.0",
                          "6.0",
                          "0.067",
                          "480.0",
                          "30.0",
                          "0.3",
                          "0.167",
                          "2.0",
                          "0.016",
                          "0.5",
                          "168.0",
                          "48.0",
                          "25.0",
                          "0.1",
                          "52.0",
                          "20.0",
                          "360.0",
                          "160.0",
                          "34.0",
                          "1680.0",
                          "15.0",
                          "200.0"
                        ]
                      }
                    }
                  ]
                },
                "name": "periodic_JV_measurements_time_between_jv",
                "description": "The average time between JV-measurement during the stability measurement.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_initial_value",
                "description": "The efficiency, PCE, of the cell before the stability measurement routine starts\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "PCE_burn_in_observed",
                "description": "TRUE if the performance has a relatively fast initial decay after which the decay rate stabilises at a lower level.\n- There are no sharp boundary between an initial burn in phase an a catastrophic failure, but if the performance of the cell quickly degrade by more than half, it is stretching it a bit to label this as an initial burn in phase.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_end_of_experiment",
                "description": "The efficiency, PCE, of the cell at the end of the stability routine\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_T95",
                "description": "The time after which the cell performance has degraded by 5 % with respect to the initial performance.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 32,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_Ts95",
                "description": "The time after which the cell performance has degraded by 5 % with respect to the performance after any initial burn in phase.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 33,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_T80",
                "description": "The time after which the cell performance has degraded by 20 % with respect to the initial performance.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 34,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_Ts80",
                "description": "The time after which the cell performance has degraded by 20 % with respect to the performance after any initial burn in phase.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 35,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_Te80",
                "description": "An estimated T80 for cells that were not measured sufficiently long for them to degrade by 20 %. with respect to the initial performance.\n- This value will by definition have a significant uncertainty to it, as it is not measured but extrapolated under the assumption linearity but without a detailed and stabilised extrapolation protocol. This estimate is, however, not without value as it enables a rough comparison between all cells for with the stability has been measured.\n- If there is an experimental T80, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 36,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_Tse80",
                "description": "An estimated T80s for cells that was not measured sufficiently long for them to degrade by 20 %. with respect to the performance after any initial burn in phase.\n- This value will by definition have a significant uncertainty to it, as it is not measured but extrapolated under the assumption linearity but without a detailed and stabilised extrapolation protocol. This estimate is, however, not without value as it enables a ruff comparison between all cells for with the stability has been measured.\n- If there is an experimental T80s, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 37,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_after_1000_h",
                "description": "The efficiency, PCE, of the cell after 1000 hours\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 38,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "lifetime_energy_yield",
                "description": "The lifetime energy yield\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour * kilowatt / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 39,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "flexible_cell_number_of_bending_cycles",
                "description": "Number of bending cycles for a flexible cell in a mechanical stability test",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 40,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "flexible_cell_bending_radius",
                "description": "The bending radius of the flexible cell during the mechanical stability test",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "degree"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 41,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "flexible_cell_PCE_initial_value",
                "description": "The efficiency, PCE, of the cell before the mechanical stability measurement routine starts\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 42,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "flexible_cell_PCE_end_of_experiment",
                "description": "The efficiency, PCE, of the cell after the mechanical stability measurement routine\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 43,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "www.testsite\u2026"
                        ]
                      }
                    }
                  ]
                },
                "name": "link_raw_data_for_stability_trace",
                "description": "A link to where the data file for the stability data is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for stability data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw stability data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 16,
            "m_parent_sub_section": "section_definitions",
            "name": "Outdoor",
            "description": "A section describing measurements performed in outdoor conditions",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "tested",
                "description": "TRUE if the performance of the cell has been tested outdoors.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "ISOS-O-1",
                          "IEC 61853-1"
                        ]
                      }
                    }
                  ]
                },
                "name": "protocol",
                "description": "The protocol used for the outdoor testing.\n- For a more detailed discussion on protocols and standard nomenclature for stability measurements, please see the following paper:\no Consensus statement for stability assessment and reporting for perovskite photovoltaics based on ISOS procedures byM. V. Khenkin et al. Nat. Energ. 2020. DOI10.1038/s41560-019-0529-5\nExample:\nIEC 61853-1\nISOS-O-1\nISOS-O-2\nISOS-O-3",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "average_over_n_number_of_cells",
                "description": "The number of cells the reported outdoor data is based on.\nExample:\n- The preferred way to enter data is to give every individual cell its own entry in the data template/data base. If that is done, the data is an average over 1 cell.\n- If the reported data is not the data from one individual cell, but an average over N cells. Give the number of cells.\n- If the reported value is an average, but it is unknown over how many cells the value has been averaged (and no good estimate is available), state the number of cells as 2, which is the smallest number of cells that qualifies for an averaging procedure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Italy",
                          "Switzerland",
                          "Slovenia",
                          "China",
                          "Great Britain",
                          "Colombia",
                          "Spain",
                          "Israel",
                          "Space International",
                          "Saudi Arabia"
                        ]
                      }
                    }
                  ]
                },
                "name": "location_country",
                "description": "The country where the outdoor testing was occurring\n- For measurements conducted in space, state this as \u2019Space International\u2019\nExample:\nSweden\nSwitzerland\nSpace International",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Ljubljana",
                          "Hong Kong"
                        ]
                      }
                    }
                  ]
                },
                "name": "location_city",
                "description": "The city where the outdoor testing was occurring",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "nan; nan"
                        ]
                      }
                    }
                  ]
                },
                "name": "location_coordinates",
                "description": "The coordinates fort the places where the outdoor testing was occurring.\n- Use decimal degrees (DD) as the format.\nExample:\n59.839116; 17.647979\n52.428150; 13.532134",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Subtropical",
                          "Cold",
                          "Desert",
                          "Temperate"
                        ]
                      }
                    }
                  ]
                },
                "name": "location_climate_zone",
                "description": "The climate zone for the places where the outdoor testing was occurring.\nExample:\nCold\nDesert\nSubtropical\nTeperate\nTropical",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "installation_tilt",
                "description": "The tilt of the installed solar cell.\n- A module lying flat on the ground have a tilt of 0\n- A module standing straight up has a tilt of 90",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "degree"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "installation_cardinal_direction",
                "description": "The cardinal direction of the installed solar cell.\n- North is 0\n- East is 90\n- South is 180\n- West is 270",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "degree"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "installation_number_of_solar_tracking_axis",
                "description": "The number of tracking axis in the installation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Summer",
                          "Autumn; Spring; Summer; Winter",
                          "Autumn; Winter",
                          "Winter",
                          "Spring",
                          "Autumn; Summer"
                        ]
                      }
                    }
                  ]
                },
                "name": "time_season",
                "description": "The time of year the outdoor testing was occurring.\n- Order the seasons in alphabetic order and separate them with semicolons.\n- For time periods longer than a year, state all four seasons once.\nExample:\nAutumn\nAutumn; Summer\nAutumn; Spring, Winter\nAutumn; Spring; Summer; Winter\nSpring; Winter",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "0000:00:00:00:00"
                        ]
                      }
                    }
                  ]
                },
                "name": "time_start",
                "description": "The starting time for the outdoor measurement.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "0000:00:00:00:00",
                          "0000:03:14:00:00"
                        ]
                      }
                    }
                  ]
                },
                "name": "time_end",
                "description": "The ending time for the outdoor measurement.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "time_total_exposure",
                "description": "The total duration of the outdoor measurement in days.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "MPPT"
                        ]
                      }
                    }
                  ]
                },
                "name": "potential_bias_load_condition",
                "description": "The Potentiostatic load condition during the outdoor measurement\n- When the cell is not connected to anything, state this as \u2018Open circuit\u2019\nExamples:\nConstant current\nConstant potential\nMPPT\nOpen circuit\nPassive resistance\nShort circuit",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "nan; nan"
                        ]
                      }
                    }
                  ]
                },
                "name": "potential_bias_range",
                "description": "The potential range during the outdoor measurement\n- Separate the lower and upper bound by a semicolon.\n- For constant values, state only that value.\n- For open circuit conditions, state this as \u2018nan\u2019\n- If there are uncertainties, only state the best estimate, e.g. write 1 and not 0.90-1.1\n- State unknown values as \u2018nan\u2019\nExample:\n0.9; 1.02\n1.5\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "potential_bias_passive_resistance",
                "description": "The passive resistance in the measurement circuit if a resistor was used\n- Give the value in ohm\n- If there are uncertainties, only state the best estimate, e.g. write 1.03 and not 1.01-1.05\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "ohm"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "",
                          "Uncontrolled"
                        ]
                      }
                    }
                  ]
                },
                "name": "temperature_load_condition",
                "description": "The load situation of the temperature during the outdoor measurement.\n- If the temperature is constant during the entire stability measurement, state this as \u2018Constant\u2019.\n- If there is a cycling between colder and hotter conditions, state this as \u2018Cycled\u2019\n- If the temperature varies in an uncontrolled way, state this as \u2018Uncontrolled\u2019\n- This category was included after the projects initial phase wherefor the list of reported categories is\nshort. Thus, be prepared to expand the given list of alternatives in the data template.\nExample:\nConstant\nUncontrolled\nCycled",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "nan; nan",
                          "15; 60"
                        ]
                      }
                    }
                  ]
                },
                "name": "temperature_range",
                "description": "The temperature range during the outdoor measurement\n- Separate the lower and upper bound by a semicolon.\n- For constant values, state only that value.\n- If there are uncertainties, only state the best estimate, e.g. write 1 and not 0.90-1.1\n- State unknown values as \u2018nan\u2019\nExample:\n30\n-10; 85\nnan",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "temperature_tmodule",
                "description": "The effective temperature of the module during peak hours.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "degree_Celsius"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "periodic_JV_measurements",
                "description": "TRUE if the outdoor measurement periodically is interrupted for JV-measurements.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "periodic_JV_measurements_time_between_measurements",
                "description": "The average time between JV-measurement during the outdoor measurement.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_initial_value",
                "description": "The efficiency, PCE, of the cell before the measurement routine starts\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "PCE_burn_in_observed",
                "description": "TRUE if the performance has a relatively fast initial decay after which the decay rate stabilises at a lower level.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_end_of_experiment",
                "description": "The efficiency, PCE, of the cell at the end of the experiment\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_T95",
                "description": "The time after which the cell performance has degraded by 5 % with respect to the initial performance.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_Ts95",
                "description": "The time after which the cell performance has degraded by 5 % with respect to the performance after any initial burn in phase.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_T80",
                "description": "The time after which the cell performance has degraded by 20 % with respect to the initial performance.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_Ts80",
                "description": "The time after which the cell performance has degraded by 20 % with respect to the performance after any initial burn in phase.\n- If there are uncertainties, only state the best estimate, e.g. write 1000 and not 950-1050\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_Te80",
                "description": "An estimated T80 for cells that was not measured sufficiently long for them to degrade by 20 %. with respect to the initial performance.\n- This value will by definition have a significant uncertainty to it, as it is not measured but extrapolated under the assumption linearity but without a detailed and stabilised extrapolation protocol. This estimate is, however, not without value as it enables a ruff comparison between all cells for with the stability has been measured.\n- If there is an experimental T80, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_Tse80",
                "description": "An estimated T80s for cells that was not measured sufficiently long for them to degrade by 20 %. with respect to the performance after any initial burn in phase.\n- This value will by definition have a significant uncertainty to it, as it is not measured but extrapolated under the assumption linearity but without a detailed and stabilised extrapolation protocol. This estimate is, however, not without value as it enables a ruff comparison between all cells for with the stability has been measured.\n- If there is an experimental T80s, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "hour"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "PCE_after_1000_h",
                "description": "The efficiency, PCE, of the cell after 1000 hours\n- Give the efficiency in %\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 32,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "power_generated",
                "description": "The yearly power generated during the measurement period in kWh/year/m^2.\n- If there are uncertainties, only state the best estimate, e.g. write 20.5 and not 19-20\n- If unknown or not applicable, leave this field empty.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 33,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "link_raw_data_for_outdoor_trace",
                "description": "A link to where the data file for the measurement is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for stability data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 34,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "detaild_weather_data_available",
                "description": "TRUE if detailed weather data is available for the measurement period",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 35,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "link_detailed_weather_data",
                "description": "A link to where the data file for the measurement is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for stability data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 36,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "spectral_data_available",
                "description": "TRUE measured spectral data are available for the measurement period",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 37,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "link_spectral_data",
                "description": "A link to where the data file for the measurement is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for stability data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 38,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "irradiance_measured",
                "description": "TRUE measured irradiance data are available for the measurement period",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 39,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                "name": "link_irradiance_data",
                "description": "A link to where the data file for the measurement is stored\n- This is a beta feature. The plan is to create a file repository where the raw files for stability data can be stored and disseminated. With the link and associated protocols, it should be possible to programmatically access and analyse the raw data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 17,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "400px"
                }
              ]
            },
            "name": "PerovskiteSolarCell",
            "label": "Perovskite Solar Cell",
            "description": "This schema is adapted to map the data in the [Perovskite Solar Cell Database Project](https://www.perovskitedatabase.com/). The descriptions in the quantities\nrepresent the instructions given to the user who manually curated the data.",
            "categories": [
              "/packages/14/category_definitions/4"
            ],
            "base_sections": [
              "/packages/14/section_definitions/1"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "ref",
                "sub_section": "/packages/5/section_definitions/0"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "cell",
                "sub_section": "/packages/5/section_definitions/1"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "module",
                "sub_section": "/packages/5/section_definitions/2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "substrate",
                "sub_section": "/packages/5/section_definitions/3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "etl",
                "sub_section": "/packages/5/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "perovskite",
                "sub_section": "/packages/5/section_definitions/5"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "name": "perovskite_deposition",
                "sub_section": "/packages/5/section_definitions/6"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 7,
                "m_parent_sub_section": "sub_sections",
                "name": "htl",
                "sub_section": "/packages/5/section_definitions/7"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 8,
                "m_parent_sub_section": "sub_sections",
                "name": "backcontact",
                "sub_section": "/packages/5/section_definitions/8"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 9,
                "m_parent_sub_section": "sub_sections",
                "name": "add",
                "sub_section": "/packages/5/section_definitions/9"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 10,
                "m_parent_sub_section": "sub_sections",
                "name": "encapsulation",
                "sub_section": "/packages/5/section_definitions/10"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 11,
                "m_parent_sub_section": "sub_sections",
                "name": "jv",
                "sub_section": "/packages/5/section_definitions/12"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 12,
                "m_parent_sub_section": "sub_sections",
                "name": "stabilised",
                "sub_section": "/packages/5/section_definitions/13"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 13,
                "m_parent_sub_section": "sub_sections",
                "name": "eqe",
                "sub_section": "/packages/5/section_definitions/14"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 14,
                "m_parent_sub_section": "sub_sections",
                "name": "stability",
                "sub_section": "/packages/5/section_definitions/15"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 15,
                "m_parent_sub_section": "sub_sections",
                "name": "outdoor",
                "sub_section": "/packages/5/section_definitions/16"
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 6,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.eln.nexus_data_converter",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "ElnYamlConverter",
            "base_sections": [
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "output",
                "description": "Output yaml file to save all the data. Default: eln_data.yaml",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "eln_data.yaml"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "NexusDataConverter",
            "base_sections": [
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "AutocompleteEditQuantity"
                    }
                  ]
                },
                "name": "reader",
                "description": "The reader needed to run the Nexus converter.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "apm",
                    "ellips",
                    "em_nion",
                    "em_om",
                    "em_spctrscpy",
                    "example",
                    "hall",
                    "json_map",
                    "json_yml",
                    "mpes",
                    "rii_database",
                    "sts",
                    "transmission",
                    "xps"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "AutocompleteEditQuantity"
                    }
                  ]
                },
                "name": "nxdl",
                "description": "The nxdl needed for running the Nexus converter.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "NXarchive",
                    "NXarpes",
                    "NXcanSAS",
                    "NXdirecttof",
                    "NXfluo",
                    "NXindirecttof",
                    "NXiqproc",
                    "NXlauetof",
                    "NXmonopd",
                    "NXmx",
                    "NXrefscan",
                    "NXreftof",
                    "NXsas",
                    "NXsastof",
                    "NXscan",
                    "NXspe",
                    "NXsqom",
                    "NXstxm",
                    "NXtas",
                    "NXtofnpd",
                    "NXtofraw",
                    "NXtofsingle",
                    "NXtomo",
                    "NXtomophase",
                    "NXtomoproc",
                    "NXxas",
                    "NXxasproc",
                    "NXxbase",
                    "NXxeuler",
                    "NXxkappa",
                    "NXxlaue",
                    "NXxlaueplate",
                    "NXxnb",
                    "NXxrot",
                    "NXaberration",
                    "NXaberration_model",
                    "NXaberration_model_ceos",
                    "NXaberration_model_nion",
                    "NXactivity",
                    "NXadc",
                    "NXamplifier",
                    "NXaperture_em",
                    "NXapm",
                    "NXapm_composition_space_results",
                    "NXapm_input_ranging",
                    "NXapm_input_reconstruction",
                    "NXapm_paraprobe_config_clusterer",
                    "NXapm_paraprobe_config_distancer",
                    "NXapm_paraprobe_config_intersector",
                    "NXapm_paraprobe_config_nanochem",
                    "NXapm_paraprobe_config_ranger",
                    "NXapm_paraprobe_config_selector",
                    "NXapm_paraprobe_config_spatstat",
                    "NXapm_paraprobe_config_surfacer",
                    "NXapm_paraprobe_config_tessellator",
                    "NXapm_paraprobe_config_transcoder",
                    "NXapm_paraprobe_results_clusterer",
                    "NXapm_paraprobe_results_distancer",
                    "NXapm_paraprobe_results_intersector",
                    "NXapm_paraprobe_results_nanochem",
                    "NXapm_paraprobe_results_ranger",
                    "NXapm_paraprobe_results_selector",
                    "NXapm_paraprobe_results_spatstat",
                    "NXapm_paraprobe_results_surfacer",
                    "NXapm_paraprobe_results_tessellator",
                    "NXapm_paraprobe_results_transcoder",
                    "NXbeam_path",
                    "NXbeam_splitter",
                    "NXbias_spectroscopy",
                    "NXcalibration",
                    "NXcg_alpha_complex",
                    "NXcg_cylinder_set",
                    "NXcg_ellipsoid_set",
                    "NXcg_face_list_data_structure",
                    "NXcg_geodesic_mesh",
                    "NXcg_grid",
                    "NXcg_half_edge_data_structure",
                    "NXcg_hexahedron_set",
                    "NXcg_marching_cubes",
                    "NXcg_parallelogram_set",
                    "NXcg_point_set",
                    "NXcg_polygon_set",
                    "NXcg_polyhedron_set",
                    "NXcg_polyline_set",
                    "NXcg_roi_set",
                    "NXcg_sphere_set",
                    "NXcg_tetrahedron_set",
                    "NXcg_triangle_set",
                    "NXcg_triangulated_surface_mesh",
                    "NXcg_unit_normal_set",
                    "NXchamber",
                    "NXchemical_composition",
                    "NXchemical_process",
                    "NXcircuit",
                    "NXcircuit_board",
                    "NXclustering",
                    "NXcollectioncolumn",
                    "NXcontainer",
                    "NXcoordinate_system_set",
                    "NXcorrector_cs",
                    "NXcs_computer",
                    "NXcs_cpu",
                    "NXcs_filter_boolean_mask",
                    "NXcs_gpu",
                    "NXcs_io_obj",
                    "NXcs_io_sys",
                    "NXcs_mm_sys",
                    "NXcs_prng",
                    "NXcs_profiling",
                    "NXcs_profiling_event",
                    "NXcsg",
                    "NXcxi_ptycho",
                    "NXdac",
                    "NXdeflector",
                    "NXdelocalization",
                    "NXdispersion",
                    "NXdispersion_function",
                    "NXdispersion_repeated_parameter",
                    "NXdispersion_single_parameter",
                    "NXdispersion_table",
                    "NXdispersive_material",
                    "NXdistortion",
                    "NXebeam_column",
                    "NXelectronanalyser",
                    "NXelectrostatic_kicker",
                    "NXellipsometry",
                    "NXem",
                    "NXem_ebsd",
                    "NXem_ebsd_conventions",
                    "NXem_ebsd_crystal_structure_model",
                    "NXenergydispersion",
                    "NXevent_data_em",
                    "NXevent_data_em_set",
                    "NXfabrication",
                    "NXfiber",
                    "NXgraph_edge_set",
                    "NXgraph_node_set",
                    "NXgraph_root",
                    "NXibeam_column",
                    "NXimage_set",
                    "NXimage_set_em_adf",
                    "NXimage_set_em_kikuchi",
                    "NXinteraction_vol_em",
                    "NXion",
                    "NXisocontour",
                    "NXiv_bias",
                    "NXiv_temp",
                    "NXlab_electro_chemo_mechanical_preparation",
                    "NXlab_sample_mounting",
                    "NXlens_em",
                    "NXlens_opt",
                    "NXlockin",
                    "NXmagnetic_kicker",
                    "NXmanipulator",
                    "NXmatch_filter",
                    "NXmpes",
                    "NXms",
                    "NXms_feature_set",
                    "NXms_score_config",
                    "NXms_score_results",
                    "NXms_snapshot",
                    "NXms_snapshot_set",
                    "NXopt",
                    "NXoptical_system_em",
                    "NXorientation_set",
                    "NXpeak",
                    "NXphysical_process",
                    "NXpid",
                    "NXpolarizer_opt",
                    "NXpositioner_sts",
                    "NXprogram",
                    "NXpulser_apm",
                    "NXpump",
                    "NXquadric",
                    "NXquadrupole_magnet",
                    "NXreflectron",
                    "NXregion",
                    "NXregistration",
                    "NXrotation_set",
                    "NXsample_component_set",
                    "NXsample_history",
                    "NXscanbox_em",
                    "NXsensor_scan",
                    "NXsensor_sts",
                    "NXseparator",
                    "NXsimilarity_grouping",
                    "NXsingle_crystal",
                    "NXslip_system_set",
                    "NXsnsevent",
                    "NXsnshisto",
                    "NXsolenoid_magnet",
                    "NXsolid_geometry",
                    "NXspatial_filter",
                    "NXspectrum_set",
                    "NXspectrum_set_em_eels",
                    "NXspectrum_set_em_xray",
                    "NXspin_rotator",
                    "NXspindispersion",
                    "NXstage_lab",
                    "NXsts",
                    "NXsubsampling_filter",
                    "NXsubstance",
                    "NXtransmission",
                    "NXunit_cell",
                    "NXwaveplate",
                    "NXxpcs",
                    "NXroot"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "FileEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "input_files",
                "description": "Input files needed to run the nexus converter.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "output",
                "description": "Output Nexus filename to save all the data. Default: output.nxs",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "output.nxs"
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 7,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.eln",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "User",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "AuthorEditQuantity"
                    }
                  ]
                },
                "name": "user",
                "description": "The corresponding user for the activity.",
                "type": {
                  "type_kind": "Author",
                  "type_data": "Author"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "ElnBaseSection",
            "description": "A generic abstract base section for ELNs that provides a few commonly used properties. If you inherit from this section, but do not need some quantities, list those\nquantities in the `eln.hide` annotation of your inheriting section definition.\n\nBesides predefining some quantities, these base sections will add some metadata\nto NOMAD's search. A particular example are `tags`, if you define a string\nor enum quantity in your sections named `tags`, its values will be searchable.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Short name"
                    }
                  ]
                },
                "name": "name",
                "description": "A short human readable and descriptive name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "DateTimeEditQuantity"
                    }
                  ]
                },
                "name": "datetime",
                "description": "The date and time associated with this section.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "ID"
                    }
                  ]
                },
                "name": "lab_id",
                "description": "An ID string that is unique at least for the lab that produced this\ndata.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "RichTextEditQuantity"
                    }
                  ]
                },
                "name": "description",
                "description": "Any information that cannot be captured in the other fields.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ]
            },
            "name": "BasicEln",
            "label": "Basic ELN",
            "description": "The most basic ELN to instantiate.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/7/section_definitions/1",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ]
            },
            "name": "ELNProcess",
            "label": "Material Processing ELN",
            "description": "A basic electronic lab notebook for a material processing activity.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/15/section_definitions/20",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ],
                  "template": [
                    {
                      "process_identifiers": {}
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "process_identifiers",
                "sub_section": "/packages/15/section_definitions/31"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "BasicMeasurementResult",
            "label": "Measurement Result",
            "description": "A basic section for describing the result of a measurement.",
            "base_sections": [
              "/packages/15/section_definitions/24"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "RichTextEditQuantity"
                    }
                  ]
                },
                "name": "result",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ],
              "template": [
                {
                  "measurement_identifiers": {}
                }
              ]
            },
            "name": "ELNMeasurement",
            "label": "Measurement ELN",
            "description": "A basic electronic lab notebook for a measurement activity.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/15/section_definitions/25",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "measurement_identifiers",
                "sub_section": "/packages/15/section_definitions/31"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "BasicAnalysisResult",
            "label": "Analysis Result",
            "description": "A basic section for describing the result of an analysis.",
            "base_sections": [
              "/packages/15/section_definitions/21"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "RichTextEditQuantity"
                    }
                  ]
                },
                "name": "result",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ],
              "template": [
                {
                  "analysis_identifiers": {}
                }
              ]
            },
            "name": "ELNAnalysis",
            "label": "Analysis ELN",
            "description": "A basic electronic lab notebook for an analysis activity.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/15/section_definitions/22",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "analysis_identifiers",
                "sub_section": "/packages/15/section_definitions/31"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "outputs",
                "description": "The input data of the analysis.",
                "sub_section": "/packages/7/section_definitions/6",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ],
              "template": [
                {
                  "sample_identifiers": {}
                }
              ]
            },
            "name": "ELNSample",
            "label": "Generic Sample ELN",
            "description": "A basic electronic lab notebook for a generic sample.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/15/section_definitions/17",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "sample_identifiers",
                "sub_section": "/packages/15/section_definitions/31"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ],
              "template": [
                {
                  "substance_identifiers": {},
                  "substance": {
                    "m_def": "nomad.datamodel.metainfo.basesections.PubChemPureSubstanceSection"
                  }
                }
              ]
            },
            "name": "ELNSubstance",
            "label": "Substance ELN",
            "description": "A basic electronic lab notebook for a generic sample.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/15/section_definitions/26",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "substance_identifiers",
                "sub_section": "/packages/15/section_definitions/31"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ],
              "template": [
                {
                  "instrument_identifiers": {}
                }
              ]
            },
            "name": "ELNInstrument",
            "label": "Instrument ELN",
            "description": "A basic electronic lab notebook for a generic instrument.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/15/section_definitions/11",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "instrument_identifiers",
                "sub_section": "/packages/15/section_definitions/31"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 11,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ],
              "template": [
                {
                  "collection_identifiers": {}
                }
              ]
            },
            "name": "ELNCollection",
            "label": "Collection ELN",
            "description": "A basic electronic lab notebook for a collection of entities.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/15/section_definitions/8",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "collection_identifiers",
                "sub_section": "/packages/15/section_definitions/31"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 12,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ],
              "template": [
                {
                  "experiment_identifiers": {}
                }
              ]
            },
            "name": "ELNExperiment",
            "label": "Experiment ELN",
            "description": "A basic electronic lab notebook for a collection of activities.",
            "categories": [
              "/packages/14/category_definitions/2"
            ],
            "base_sections": [
              "/packages/15/section_definitions/7",
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "tags",
                "description": "Add a tag that can be used for search.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "experiment_identifiers",
                "sub_section": "/packages/15/section_definitions/31"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 13,
            "m_parent_sub_section": "section_definitions",
            "name": "SampleID",
            "description": "A base section that can be used for sample IDs. If the `sample_owner`, `sample_short_name`, `institute`, and `creation_datetime`\nquantities are provided, the sample_id will be automatically created as a combination\nof these four quantities.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "institute",
                "description": "Alias/short name of the home institute of the owner, i.e. *HZB*.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "sample_owner",
                "description": "Name or alias of the process operator, e.g. jmp",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "DateTimeEditQuantity"
                    }
                  ]
                },
                "name": "creation_datetime",
                "description": "Creation date of the sample.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "sample_short_name",
                "description": "A short name of the sample (the identifier scribed on the smaple,\nor in the sample container), e.g. 4001-8, YAG-2-34.\nThis is to be managed and decided internally by the labs,\nalthough we recomend to avoid the following characters on it: \"_\", \"/\", \"\" and \".\"",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "sample_id",
                "description": "Full sample id. Ideally a human readable sample id convention,\nwhich is simple, understandable and still having chances of becoming unique.\nIf the `sample_owner`, `sample_short_name`, `\u00ecnstitute`, and `creation_datetime`\nare provided, this will be formed automatically by joining these components by an underscore (_).\nSpaces in any of the individual components will be replaced with hyphens (-).\nAn example would be hzb_oah_20200602_4001-08",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 14,
            "m_parent_sub_section": "section_definitions",
            "name": "CASExperimentalProperty",
            "description": "A section for experimental properties retrieved from the CAS API.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "CAS experimental property name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "property",
                "description": "CAS experimental property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "sourceNumber",
                "description": "CAS experimental property source.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 15,
            "m_parent_sub_section": "section_definitions",
            "name": "CASPropertyCitation",
            "description": "A section for citations of the experimental properties retrieved from the CAS API.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "docUri",
                "description": "CAS property citation document uri.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "sourceNumber",
                "more": {
                  "decription": "CAS property citation source number."
                },
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "source",
                "description": "CAS property citation source.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 16,
            "m_parent_sub_section": "section_definitions",
            "name": "Substance",
            "description": "A base section for any substance defined in the ELN.",
            "base_sections": [
              "/packages/15/section_definitions/10"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Substance name"
                    }
                  ]
                },
                "name": "name",
                "description": "The name of the substance entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Substance ID"
                    }
                  ]
                },
                "name": "lab_id",
                "description": "A human human readable substance ID that is at least unique for the lab.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "CAS uri"
                    }
                  ]
                },
                "name": "cas_uri",
                "description": "CAS uri",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "CAS number"
                    }
                  ]
                },
                "name": "cas_number",
                "description": "CAS number.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "CAS name"
                    }
                  ]
                },
                "name": "cas_name",
                "description": "CAS name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "FileEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "image",
                "description": "CAS image.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "inchi",
                "description": "CAS inchi.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "inchi_key",
                "description": "CAS inchi key.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "smile",
                "description": "CAS smile.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "canonical_smile",
                "description": "CAS canonical smile.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "molecular_formula",
                "description": "CAS molecular formula.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "molecular_mass",
                "description": "CAS molecular mass.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "dalton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "cas_synonyms",
                "description": "CAS synonyms.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "RichTextEditQuantity",
                      "label": "Detailed substance description"
                    }
                  ]
                },
                "name": "description",
                "description": "A field for adding additional information about the substance that is not captured\nby the other quantities and subsections.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "cas_experimental_properties",
                "sub_section": "/packages/7/section_definitions/14",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "cas_property_citations",
                "sub_section": "/packages/7/section_definitions/15",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 17,
            "m_parent_sub_section": "section_definitions",
            "name": "ElnWithFormulaBaseSection",
            "description": "A generic abstract base section for ELNs that provides a few commonly used for items with a chemical formula, e.g. chemicals or samples.",
            "base_sections": [
              "/packages/7/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "chemical_formula",
                "description": "The chemical formula. This will be used directly and indirectly in the search. The formula will be used itself as well as the extracted chemical elements.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 18,
            "m_parent_sub_section": "section_definitions",
            "name": "Chemical",
            "description": "A ELN base section that can be used for chemicals.",
            "base_sections": [
              "/packages/7/section_definitions/17"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 19,
            "m_parent_sub_section": "section_definitions",
            "name": "Sample",
            "description": "A ELN base section that can be used for samples.",
            "base_sections": [
              "/packages/7/section_definitions/17"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 20,
            "m_parent_sub_section": "section_definitions",
            "name": "ElnWithStructureFile",
            "description": "A base section for for parsing crystal structure files, e.g. `.cif`, and populating the Material section in Results.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "FileEditQuantity"
                    }
                  ]
                },
                "name": "structure_file",
                "description": "The structure file.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 21,
            "m_parent_sub_section": "section_definitions",
            "name": "SolarCellDefinition",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": []
                      }
                    }
                  ]
                },
                "name": "stack_sequence",
                "description": "The stack sequence describing the cell. Use the following formatting guidelines\n- Start with the substrate to the left and list the materials in each layer of the device\n- If two materials, e.g. A and B, are mixed in one layer, list the materials in alphabetic order and separate them with semicolons, as in (A; B)\n- The absorber layer in other databases is commonly stated with a generaic name as \u201cPerovskite\u201d, regardless of composition, mixtures, dimensionality etc.\n    There are other fields to describe in depth the absorber layer.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "solar_cell_area",
                "description": "The total cell area in cm^2.\nThe total area is defined as the area that would provide photovoltaic performance.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Unknown",
                          "Pn-Heterojunction",
                          "Front contacted",
                          "Back contacted",
                          "pin",
                          "nip",
                          "Schottky"
                        ]
                      }
                    }
                  ]
                },
                "name": "architecture",
                "description": "The cell architecture with respect to the direction of current flow and\nthe order in which layers are deposited.\nThe two most common are nip (also referred to as normal) and pin (also referred to as inverted)\nbut there are also a few others, e.g. Back contacted.\n- *nip* architecture means that the electrons are collected at the substrate side.\nThe typical example is in perovskite solar cells when a TiO2 electron selective contact is deposited\nbetween the perovskite and the substrate (e.g. SLG | FTO | TiO2-c | Perovskite | \u2026)\n- *pin* architecture means that it instead is the holes that are collected at the substrate side. The typical example is when a PEDOT:PSS hole selective contact is deposited between the perovskite and the substrate (e.g. SLG | FTO | PEDOT:PSS |Perovskite | \u2026)",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 22,
            "m_parent_sub_section": "section_definitions",
            "name": "SolarCellLayer",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "Substrate",
                          "Absorber",
                          "Hole Transport Layer",
                          "Electron Transport Layer",
                          "Contact",
                          "Buffer",
                          "p-type contact",
                          "n-type contact",
                          "other"
                        ]
                      }
                    }
                  ]
                },
                "name": "solar_cell_layer_type",
                "description": "type of the layer",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": []
                      }
                    }
                  ]
                },
                "name": "layer_name",
                "description": "The name of the layer.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "layer_thickness",
                "description": "The thickness of the layer in nm.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "nanometer"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 23,
            "m_parent_sub_section": "section_definitions",
            "name": "SolarCellBaseSectionWithOptoelectronicProperties",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "bandgap",
                "description": "The bandgap of the solar cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "electron_volt"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 24,
            "m_parent_sub_section": "section_definitions",
            "name": "SolarCellJV",
            "more": {
              "label_quantity": "cell_name"
            },
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "FileEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "data_file",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "certified_values",
                "description": "TRUE if the IV data is measured by an independent and certification institute.\nIf your solar simulator is calibrated by a calibrated reference diode,\nthat does not count as a certified result.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": [
                          "AIST, National Institute of Advanced Industrial Science and Technology",
                          "CPVT, National Center of Supervision and Inspection on Solar Photovoltaic Products Quality of China",
                          "CREST, Photovoltaic Meaasurement and calibration Laboratory at Universit of Loughborough",
                          "CSIRO, PV Performance Lab at Monash University",
                          "Fraunhofer ISE",
                          "Institute of Metrology (NIM) of China",
                          "KIER, Korea Institute of Energy Research",
                          "NIM, National Institute of Metrology of China",
                          "NREL",
                          "National Institute ofMetrology, China",
                          "Newport",
                          "Newport Corporation",
                          "PVEVL, National Central University, Taiwan",
                          "Photovoltaic and Wind Power Systems Quality Test Center, Chinese Academy of Sciences",
                          "Quality supervision\uff06Testing Center of Chemical\uff06Physical Power Sources of Information Industry",
                          "SIMIT, Shanghai Institute of Microsystem and Information Technology",
                          "Solar Power Lab at Arizona State University"
                        ]
                      }
                    }
                  ]
                },
                "name": "certification_institute",
                "description": "The name of the certification institute that has measured the certified device.\nExample:\nNewport\nNIM, National Institute of Metrology of China\nKIER, Korea Institute of Energy Research",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "light_intensity",
                "description": "The light intensity during the IV measurement\n- If there are uncertainties, only state the best estimate, e.g. write 100 and not 90-100.\n- Standard AM 1.5 illumination correspond to 100 mW/cm2\n- If you need to convert from illumination given in lux; at 550 nm, 1 mW/cm2 corresponds to 6830 lux. Be aware that the conversion change with the spectrum used. As a rule of thumb for general fluorescent/LED light sources, around 0.31mW corresponded to 1000 lux. If your light intensity is measured in lux, it probably means that your light spectra deviates quite a lot from AM 1.5, wherefore it is very important that you also specify the light spectra in the next column.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliwatt / centimeter ** 2",
                "default": 100.0
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "open_circuit_voltage",
                "description": "Open circuit voltage.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "short_circuit_current_density",
                "description": "Short circuit current density.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "fill_factor",
                "description": "Fill factor.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "efficiency",
                "description": "Power conversion efficiency.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "potential_at_maximum_power_point",
                "description": "The potential at the maximum power point, Vmp.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "current_density_at_maximun_power_point",
                "description": "The current density at the maximum power point, *Jmp*.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "series_resistance",
                "description": "The series resistance as extracted from the *J-V* curve.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2 * ohm"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "shunt_resistance",
                "description": "The shunt resistance as extracted from the *J-V* curve.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "centimeter ** 2 * ohm"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "n_values",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 25,
            "m_parent_sub_section": "section_definitions",
            "name": "SolarCellJVCurve",
            "base_sections": [
              "/packages/7/section_definitions/24"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "cell_name",
                "description": "Cell identification name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "voltage",
                      "y": "current_density"
                    }
                  ]
                },
                "name": "current_density",
                "description": "Current density array of the *JV* curve.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "voltage",
                      "y": "current_density"
                    }
                  ]
                },
                "name": "voltage",
                "description": "Voltage array of the of the *JV* curve.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "volt"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 26,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "eln": [
                {
                  "lane_width": "600px"
                }
              ]
            },
            "name": "SolarCellEQE",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "FileEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "eqe_data_file",
                "description": "Drop here your eqe file and click save for processing.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "header_lines",
                "description": "Number of header lines in the file. Edit in case your file has a header.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int64"
                },
                "default": 0
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "light_bias",
                "description": "The light intensity of any bias light during the EQE measurement.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliwatt / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "bandgap_eqe",
                "description": "Bandgap derived from the EQE spectrum.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "integrated_jsc",
                "description": "The integrated short circuit current density $J_{SC}$ from the product of the EQE spectrum\nwith the *AM 1.5G* sun spectrum.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "integrated_j0rad",
                "description": "The integrated $J_{0, Rad}$ derived from the EQE data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "milliampere / centimeter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "voc_rad",
                "description": "Radiative $V_{OC}$ derived from the EQE data in V.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "urbach_energy",
                "description": "Urbach energy fitted from the eqe in eV.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "urbach_energy_fit_std_dev",
                "description": "Standard deviation of the fitted Urbach energy parameter from the eqe in eV.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "n_values",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "n_raw_values",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "photon_energy_array",
                      "y": "raw_eqe_array"
                    }
                  ]
                },
                "name": "raw_eqe_array",
                "description": "EQE array of the spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_raw_values"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "raw_photon_energy_array",
                      "y": "raw_eqe_array"
                    }
                  ]
                },
                "name": "raw_photon_energy_array",
                "description": "Raw Photon energy array of the eqe spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_raw_values"
                ],
                "unit": "electron_volt"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "raw_wavelength_array",
                      "y": "raw_eqe_array"
                    }
                  ]
                },
                "name": "raw_wavelength_array",
                "description": "Raw wavelength array of the eqe spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_raw_values"
                ],
                "unit": "nanometer"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "photon_energy_array",
                      "y": "eqe_array"
                    }
                  ]
                },
                "name": "eqe_array",
                "description": "EQE array of the spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "wavelength_array",
                      "y": "eqe_array"
                    }
                  ]
                },
                "name": "wavelength_array",
                "description": "Interpolated/extrapolated wavelength array with *E<sub>u</sub>* of the eqe spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "nanometer"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "plot": [
                    {
                      "x": "photon_energy_array",
                      "y": "eqe_array"
                    }
                  ]
                },
                "name": "photon_energy_array",
                "description": "Interpolated/extrapolated photon energy array with a *E<sub>u</sub>*  of the eqe spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "electron_volt"
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 8,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.downloads",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Download",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "url",
                "description": "A valid and downloadable URL. Will be downloaded on the servers that\nrun this entries processing (e.g. NOMAD servers). The files will be\nadded to the given output directory.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "output",
                "description": "A relative path that denotes the file to download the given URL to.\nAny parent directories will be created if they do not exist.\nFiles that are marked to be extracted will be downloaded and extracted into\nthe parent directory of the given file path.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "./"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "extract",
                "description": "If the given URL denotes a compressed file and this flag is set to true,\nthe downloaded file will be extracted and removed. Supported file formats\nare `.zip`, `.tgz`, `.tar.gz`.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Downloads",
            "description": "Allows you to upload a very small file that will add very large files to your upload. Imagine there are large file resources in the internet (e.g. on a data sharing service)\nthat you need to add to your upload. This way you do not need to download those large\nfiles first, just to upload them to NOMAD.\n\nWhen this section is processed, it will download files from given URLs, add\nthem to the upload, and trigger processing for given mainfiles.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "description": "Provides some additional description for these downloads.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "mainfiles",
                "description": "A list of relative paths that denote mainfiles. These files are subjected\nto NOMAD processing after all files have been downloaded and potentially\nextracted.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "skip_download",
                "description": "If true, the downloads will not be performed and no processing is triggered.\nIf false, this will be changed to true by the processing after performing\nthe downloads.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "downloads",
                "description": "Defines URLs and how to download them.",
                "sub_section": "/packages/8/section_definitions/0",
                "repeats": true
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 9,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.eln.labfolder",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderDataElementDataContent",
            "description": "The content of a labfolder data grid.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "title",
                "description": "the title of the table",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "type",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "value",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "unit",
                "description": "unit",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "physical_quantity_id",
                "description": "physical_quantity_id",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "description": "physical_quantity_id",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "children",
                "sub_section": "/packages/9/section_definitions/1",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderDataElementGrid",
            "description": "A labfolder grid containing data elements.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "title",
                "description": "the title of the table",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "the title of the table",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "children",
                "sub_section": "/packages/9/section_definitions/0",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderElement",
            "more": {
              "label_quantity": "element_type"
            },
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "id",
                "description": "the stable pointer to the element",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "entry_id",
                "description": "the id of the stable pointer to the entry",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "version_id",
                "description": "the unique id of the element",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "version_date",
                "description": "the creation date of the entry element version (same with the creation date on the first version)",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "creation_date",
                "description": "the creation date of the entry element (first version)",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "owner_id",
                "description": "the id of the original author",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "element_type",
                "description": "Denotes that this is a file element. The value is always `FILE`",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "TEXT",
                    "DATA",
                    "FILE"
                  ]
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderEntry",
            "more": {
              "label_quantity": "title"
            },
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "id",
                "description": "Labfolder entry id",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "version_id",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "author_id",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "project_id",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "version_date",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "creation_date",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "custom_dates",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "tags",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "title",
                "description": "Labfolder entry title",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "hidden",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "editable",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "elements",
                "sub_section": "/packages/9/section_definitions/2",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderTextElement",
            "base_sections": [
              "/packages/9/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "browser": [
                    {}
                  ]
                },
                "name": "content",
                "description": "The text based content of this element",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderFileElement",
            "base_sections": [
              "/packages/9/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "file_name",
                "description": "The name of the file",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "file_size",
                "description": "The size of the file in bytes",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "content_type",
                "description": "The type of the binary content which is sent on header parameter `Content-Type`",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "file",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderImageElement",
            "base_sections": [
              "/packages/9/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "title",
                "description": "the title of the image element",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "file_size",
                "description": "the size of the image file in bytes",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "preview_height",
                "description": "height of the downscaled image version, in px",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "preview_width",
                "description": "width of the downscaled image version, in px",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "preview_zoom",
                "description": "image zoom in the ELN UI, in percentage",
                "type": {
                  "type_kind": "python",
                  "type_data": "float"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "original_file_content_type",
                "description": "the content type of the original uploaded image file",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "annotation_layer_svg",
                "description": "The vector graphic used for the image annotation layer, defined in SVG format",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "original_image_file",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "preview_image_file",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderTableElement",
            "base_sections": [
              "/packages/9/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "title",
                "description": "the title of the table",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "browser": [
                    {}
                  ]
                },
                "name": "content",
                "description": "The JSON content of the table element",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._JSON"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderDataElement",
            "base_sections": [
              "/packages/9/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "browser": [
                    {}
                  ]
                },
                "name": "labfolder_data",
                "description": "The JSON content of the table element",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._JSON"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity"
                    }
                  ]
                },
                "name": "nomad_data_schema",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/21/section_definitions/3"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "data_elements",
                "sub_section": "/packages/9/section_definitions/1",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "nomad_data",
                "sub_section": "/packages/9/section_definitions/2"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderWellPlateElement",
            "base_sections": [
              "/packages/9/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "title",
                "description": "The title of the well plate template",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "browser": [
                    {}
                  ]
                },
                "name": "content",
                "description": "The title of the well plate template",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._JSON"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "browser": [
                    {}
                  ]
                },
                "name": "meta_data",
                "description": "JSON meta data for visualization processing, used to store information about layer colors and well identifiers",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._JSON"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "name": "LabfolderProject",
            "label": "Labfolder Project Import",
            "categories": [
              "/packages/14/category_definitions/1"
            ],
            "base_sections": [
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "project_url",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "labfolder_email",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "props": {
                        "type": "password"
                      }
                    }
                  ]
                },
                "name": "password",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "resync_labfolder_repository",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "entries",
                "sub_section": "/packages/9/section_definitions/3",
                "repeats": true
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 10,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.measurements",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Sample",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "sample_id",
                "description": "Identification number or signatures of the sample used.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "A human readable free text name for the sample.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "description": "A description of the sample.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "sample_state",
                "description": "The physical state of the sample.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "sample_temperature",
                "description": "The temperature of the sample during the measurement.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "sample_microstructure",
                "description": "The sample microstructure.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "sample_constituents",
                "description": "The constituents.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "elements",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "chemical_formula",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Experiment",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "A human readable free text name for the experiment.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "description": "A description of the experiment.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "steps",
                "description": "Human readable experiment steps.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "sample_ref",
                "description": "Reference to the used sample.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/10/section_definitions/0"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "sample",
                "description": "The used sample.",
                "sub_section": "/packages/10/section_definitions/0"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "measurement",
                "description": "Measurements performed in this experiment.",
                "sub_section": "/packages/10/section_definitions/3",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "Instrument",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "instrument_id",
                "description": "Identification number or signatures of the instrument used.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "A human readable free text name for the instrument.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "description": "A description of the instrument.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Measurement",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "measurement_id",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "method_name",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "method_abbreviation",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "start_time",
                "description": "The datetime of the beginning of the measurement.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "end_time",
                "description": "The datetime of the measurement end.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "facility",
                "description": "Description of the facility (e.g. in full or an acronym) where\nthe measurement was conducted.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "sample",
                "sub_section": "/packages/10/section_definitions/0",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "instrument",
                "sub_section": "/packages/10/section_definitions/2",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "inner_section_definitions",
            "name": "SpectrumChannel",
            "description": "Provides the metadata for a generic additional spectrum channel. Do not use it for energy or count; they have their predefined channels.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "channel_id",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "unit",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "Spectrum",
            "description": "Generic spectrum data with energies and counts. May include additional channels.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_values",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "count",
                "description": "The count at each energy value, dimensionless",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "energy",
                "description": "The energy range of the spectrum",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "additional_channel_data",
                "description": "Data from additional channels. The channels are described in `additional channels`.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_channels",
                  "n_values"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_additional_channels",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "additional_channels",
                "description": "Metadata for additional channels. The order is the same as the channel data\nappears in `additional_channel_data`.",
                "sub_section": "/packages/10/section_definitions/5/inner_section_definitions/0",
                "repeats": true
              }
            ],
            "inner_section_definitions": [
              {
                "m_def": "nomad.metainfo.metainfo.Section",
                "m_parent_index": 0,
                "m_parent_sub_section": "inner_section_definitions",
                "name": "SpectrumChannel",
                "description": "Provides the metadata for a generic additional spectrum channel. Do not use it for energy or count; they have their predefined channels.",
                "quantities": [
                  {
                    "m_def": "nomad.metainfo.metainfo.Quantity",
                    "m_parent_index": 0,
                    "m_parent_sub_section": "quantities",
                    "name": "channel_id",
                    "type": {
                      "type_kind": "python",
                      "type_data": "str"
                    }
                  },
                  {
                    "m_def": "nomad.metainfo.metainfo.Quantity",
                    "m_parent_index": 1,
                    "m_parent_sub_section": "quantities",
                    "name": "label",
                    "type": {
                      "type_kind": "python",
                      "type_data": "str"
                    }
                  },
                  {
                    "m_def": "nomad.metainfo.metainfo.Quantity",
                    "m_parent_index": 2,
                    "m_parent_sub_section": "quantities",
                    "name": "unit",
                    "type": {
                      "type_kind": "python",
                      "type_data": "str"
                    }
                  }
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "EELSMeasurement",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "edges",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "publish_time",
                "description": "The datetime that this was published on EELS DB.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "spectrum",
                "sub_section": "/packages/10/section_definitions/5"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "authors",
                "more": {
                  "repreats": true
                },
                "sub_section": "/packages/14/section_definitions/2"
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 11,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.tabulartree",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "TabularTreeNodeInfo",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "type": {
                  "type_kind": "Any"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "unit",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "TabularTreeLevel3",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "<node name?>"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "info",
                "sub_section": "/packages/11/section_definitions/0"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "TabularTreeLevel2",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "<node name?>"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "info",
                "sub_section": "/packages/11/section_definitions/0"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "nodes",
                "sub_section": "/packages/11/section_definitions/1",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "TabularTreeLevel1",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "<node name?>"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "info",
                "sub_section": "/packages/11/section_definitions/0"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "nodes",
                "sub_section": "/packages/11/section_definitions/2",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "TabularTree",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "<node name?>"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "info",
                "sub_section": "/packages/11/section_definitions/0"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "nodes",
                "sub_section": "/packages/11/section_definitions/3",
                "repeats": true
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 12,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.datamodel",
        "description": "All generic entry metadata and related classes.",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "mongo": [
                "MongoDocument"
              ],
              "pydantic": [
                "PydanticModel"
              ]
            },
            "name": "Dataset",
            "description": "A Dataset is attached to one or many entries to form a set of data.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ],
                  "elasticsearch": [
                    "datasets.dataset_id"
                  ]
                },
                "name": "dataset_id",
                "description": "The unique identifier for this dataset as a string. It should be\na randomly generated UUID, similar to other nomad ids.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ],
                  "elasticsearch": [
                    "datasets.dataset_name",
                    "datasets.dataset_name__suggestion"
                  ]
                },
                "name": "dataset_name",
                "description": "The human-readable name of the dataset as string. The dataset name must be\nunique for the user.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ]
                },
                "name": "user_id",
                "description": "The unique user_id of the owner and creator of this dataset. The owner\nmust not change after creation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ],
                  "elasticsearch": [
                    "datasets.doi"
                  ]
                },
                "name": "doi",
                "description": "The optional Document Object Identifier (DOI) associated with this dataset.\nNomad can register DOIs that link back to the respective representation of\nthe dataset in the nomad UI. This quantity holds the string representation of\nthis DOI. There is only one per dataset. The DOI is just the DOI name, not its\nfull URL, e.g. \"10.17172/nomad/2019.10.29-1\".",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ]
                },
                "name": "pid",
                "description": "The original NOMAD CoE Repository dataset PID. Old DOIs still reference\ndatasets based on this id. Is not used for new datasets.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ],
                  "elasticsearch": [
                    "datasets.dataset_create_time"
                  ]
                },
                "name": "dataset_create_time",
                "description": "The date when the dataset was first created.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ],
                  "elasticsearch": [
                    "datasets.dataset_modified_time"
                  ]
                },
                "name": "dataset_modified_time",
                "description": "The date when the dataset was last modified. An owned dataset\ncan only be extended after a DOI was assigned. A foreign dataset cannot be changed\nonce a DOI was assigned.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ],
                  "elasticsearch": [
                    "datasets.dataset_type"
                  ]
                },
                "name": "dataset_type",
                "description": "The type determined if a dataset is owned, i.e. was created by\nthe authors of the contained entries; or if a dataset is foreign,\ni.e. it was created by someone not necessarily related to the entries.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "owned",
                    "foreign"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ]
                },
                "name": "query",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._JSON"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "mongo": [
                    "Mongo"
                  ]
                },
                "name": "entries",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "CompatibleSectionDef",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "section_defs.definition_qualified_name"
                  ]
                },
                "name": "definition_qualified_name",
                "description": "The qualified name of the compatible section.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "section_defs.definition_id"
                  ]
                },
                "name": "definition_id",
                "description": "The definition id of the compatible section.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "section_defs.used_directly"
                  ]
                },
                "name": "used_directly",
                "description": "If the compatible section is directly used as base section.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "EntryArchiveReference",
            "label": "ArchiveReference",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.target_reference"
                  ]
                },
                "name": "target_reference",
                "description": "The full url like reference of the the target.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.target_entry_id"
                  ]
                },
                "name": "target_entry_id",
                "description": "The id of the entry containing the target.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.target_mainfile"
                  ]
                },
                "name": "target_mainfile",
                "description": "The mainfile of the entry containing the target.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.target_upload_id"
                  ]
                },
                "name": "target_upload_id",
                "description": "The id of the upload containing the target.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.target_name"
                  ]
                },
                "name": "target_name",
                "description": "The name of the target quantity/section.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.target_path"
                  ]
                },
                "name": "target_path",
                "description": "The path of the target quantity/section in its archive.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.source_name"
                  ]
                },
                "name": "source_name",
                "description": "The name of the source (self) quantity/section in its archive.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.source_path"
                  ]
                },
                "name": "source_path",
                "description": "The path of the source (self) quantity/section in its archive.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references.source_quantity"
                  ]
                },
                "name": "source_quantity",
                "description": "A reference to the quantity definition that defines the reference",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "SearchableQuantity",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities.quantity_name"
                  ]
                },
                "name": "quantity_name",
                "description": "The name of the quantity holding the value.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities.section_definition"
                  ]
                },
                "name": "section_definition",
                "description": "A reference to the section definition for the section that holds the quantity that holds the value.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities.path"
                  ]
                },
                "name": "path",
                "description": "The path to the quantity holding the value.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities.keyword_value"
                  ]
                },
                "name": "keyword_value",
                "description": "The value mapped as an ES keyword field.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities.text_value"
                  ]
                },
                "name": "text_value",
                "description": "The value mapped as an ES text field.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities.long_value"
                  ]
                },
                "name": "long_value",
                "description": "The value mapped as an ES long number field.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities.double_value"
                  ]
                },
                "name": "double_value",
                "description": "The value mapped as an ES double number field.",
                "type": {
                  "type_kind": "python",
                  "type_data": "float"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities.date_value"
                  ]
                },
                "name": "date_value",
                "description": "The value mapped as an ES date field.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "RFC3161Timestamp",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "token_seed",
                "description": "The entry hash used to get timestamp token.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "token",
                "description": "The token returned by RFC3161 server.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Bytes"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "tsa_server",
                "description": "The address of RFC3161 server.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "timestamp",
                "description": "The RFC3161 timestamp.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "EntryMetadata",
            "label": "Metadata",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "upload_id"
                  ]
                },
                "name": "upload_id",
                "description": "The persistent and globally unique identifier for the upload of the entry",
                "categories": [
                  "/packages/12/category_definitions/1"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "upload_name",
                    "upload_name__suggestion"
                  ]
                },
                "name": "upload_name",
                "description": "The user provided upload name",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "auth_level": [
                    "AuthLevel.admin"
                  ],
                  "elasticsearch": [
                    "upload_create_time"
                  ]
                },
                "name": "upload_create_time",
                "description": "The date and time when the upload was created in nomad",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_id"
                  ]
                },
                "name": "entry_id",
                "description": "A persistent and globally unique identifier for the entry",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/3"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_name",
                    "entry_name__suggestion",
                    "entry_name.prefix"
                  ]
                },
                "name": "entry_name",
                "description": "A brief human readable name for the entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_type"
                  ]
                },
                "name": "entry_type",
                "description": "The main schema definition. This is the name of the section used for data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "calc_id"
                  ]
                },
                "name": "calc_id",
                "description": "Legacy field name, use `entry_id` instead.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "entry_hash",
                "description": "A raw file content based checksum/hash",
                "categories": [
                  "/packages/12/category_definitions/2"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "auth_level": [
                    "AuthLevel.admin"
                  ],
                  "elasticsearch": [
                    "entry_create_time"
                  ]
                },
                "name": "entry_create_time",
                "description": "The date and time when the entry was created in nomad",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/3",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "last_edit_time",
                "description": "The date and time the user metadata was last edited.",
                "categories": [
                  "/packages/12/category_definitions/2"
                ],
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "parser_name"
                  ]
                },
                "name": "parser_name",
                "description": "The NOMAD parser used for the last processing",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/3"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "mainfile",
                    "mainfile.path",
                    "mainfile__suggestion"
                  ]
                },
                "name": "mainfile",
                "description": "The path to the mainfile from the root directory of the uploaded files",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/3"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "mainfile_key",
                    "mainfile_key.path"
                  ]
                },
                "name": "mainfile_key",
                "description": "Key used to differentiate between different *child entries* of an entry.\nFor parent entries and entries that do not have any children, the value should\nbe empty.",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/3"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "files",
                    "files.path"
                  ]
                },
                "name": "files",
                "description": "The paths to the files within the upload that belong to this entry.\nAll files within the same directory as the entry's mainfile are considered the\nauxiliary files that belong to the entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "pid"
                  ]
                },
                "name": "pid",
                "description": "The unique, sequentially enumerated, integer PID that was used in the legacy\nNOMAD CoE. It allows to resolve URLs of the old NOMAD CoE Repository.",
                "categories": [
                  "/packages/12/category_definitions/2"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "raw_id"
                  ]
                },
                "name": "raw_id",
                "description": "The code specific identifier extracted from the entry's raw files by the parser,\nif supported.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "external_id"
                  ]
                },
                "name": "external_id",
                "description": "A user provided external id. Usually the id for an entry in an external database\nwhere the data was imported from.",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "published"
                  ]
                },
                "name": "published",
                "description": "Indicates if the entry is published",
                "categories": [
                  "/packages/12/category_definitions/1"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "auth_level": [
                    "AuthLevel.admin"
                  ],
                  "elasticsearch": [
                    "publish_time"
                  ]
                },
                "name": "publish_time",
                "description": "The date and time when the upload was published in nomad",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "with_embargo"
                  ]
                },
                "name": "with_embargo",
                "description": "Indicated if this entry is under an embargo",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/3"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "name": "embargo_length",
                "description": "The length of the requested embargo period, in months",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "auth_level": [
                    "AuthLevel.admin"
                  ]
                },
                "name": "license",
                "description": "A short license description (e.g. CC BY 4.0), that refers to the\nlicense of this entry.",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": "CC BY 4.0"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "processed"
                  ]
                },
                "name": "processed",
                "description": "Indicates that the entry is successfully processed.",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/3"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "last_processing_time"
                  ]
                },
                "name": "last_processing_time",
                "description": "The date and time of the last processing.",
                "categories": [
                  "/packages/12/category_definitions/2"
                ],
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "processing_errors"
                  ]
                },
                "name": "processing_errors",
                "description": "Errors that occurred during processing",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "nomad_version"
                  ]
                },
                "name": "nomad_version",
                "description": "The NOMAD version used for the last processing",
                "categories": [
                  "/packages/12/category_definitions/2"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "nomad_commit"
                  ]
                },
                "name": "nomad_commit",
                "description": "The NOMAD commit used for the last processing",
                "categories": [
                  "/packages/12/category_definitions/2"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "comment"
                  ]
                },
                "name": "comment",
                "description": "A user provided comment for this entry",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "references"
                  ]
                },
                "name": "references",
                "description": "User provided references (URLs) for this entry",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "external_db"
                  ]
                },
                "name": "external_db",
                "description": "The repository or external database where the original data resides",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "The Perovskite Database Project",
                    "EELS Data Base",
                    "Materials Project",
                    "AFLOW",
                    "OQMD",
                    "Kyoto Phonopy Database"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "origin"
                  ]
                },
                "name": "origin",
                "description": "A short human readable description of the entries origin. Usually it is the\nhandle of an external database/repository or the name of the main author.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "auth_level": [
                    "AuthLevel.admin"
                  ],
                  "elasticsearch": [
                    "main_author"
                  ]
                },
                "name": "main_author",
                "description": "The main author of the entry",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "User",
                  "type_data": "User"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 32,
                "m_parent_sub_section": "quantities",
                "name": "coauthors",
                "description": "A user provided list of co-authors for the whole upload. These can view and edit the\nupload when in staging, and view it also if it is embargoed.",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "Author",
                  "type_data": "Author"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 33,
                "m_parent_sub_section": "quantities",
                "name": "entry_coauthors",
                "description": "A user provided list of co-authors specific for this entry. This is a legacy field,\nfor new uploads, coauthors should be specified on the upload level only.",
                "categories": [
                  "/packages/12/category_definitions/2"
                ],
                "type": {
                  "type_kind": "Author",
                  "type_data": "Author"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 34,
                "m_parent_sub_section": "quantities",
                "name": "reviewers",
                "description": "A user provided list of reviewers. Reviewers can see the whole upload, also if\nit is unpublished or embargoed",
                "categories": [
                  "/packages/12/category_definitions/1",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "User",
                  "type_data": "User"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 35,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "authors"
                  ]
                },
                "name": "authors",
                "description": "All authors (main author and co-authors)",
                "type": {
                  "type_kind": "Author",
                  "type_data": "Author"
                },
                "shape": [
                  "0..*"
                ],
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 36,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "writers"
                  ]
                },
                "name": "writers",
                "description": "All writers (main author, upload coauthors)",
                "type": {
                  "type_kind": "User",
                  "type_data": "User"
                },
                "shape": [
                  "0..*"
                ],
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 37,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "viewers"
                  ]
                },
                "name": "viewers",
                "description": "All viewers (main author, upload coauthors, and reviewers)",
                "type": {
                  "type_kind": "User",
                  "type_data": "User"
                },
                "shape": [
                  "0..*"
                ],
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 38,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "datasets"
                  ]
                },
                "name": "datasets",
                "description": "A list of user curated datasets this entry belongs to.",
                "categories": [
                  "/packages/12/category_definitions/2",
                  "/packages/12/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/12/section_definitions/0"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 39,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "domain"
                  ]
                },
                "name": "domain",
                "description": "The material science domain",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "dft",
                    "ems"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 40,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "n_quantities"
                  ]
                },
                "name": "n_quantities",
                "description": "Number of metainfo quantities parsed from the entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "default": 0
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 41,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "quantities",
                    "quantities.path"
                  ]
                },
                "name": "quantities",
                "description": "All quantities that are used by this entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 42,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "sections"
                  ]
                },
                "name": "sections",
                "description": "All sections that are present in this entry. This field is deprecated and will be removed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "entry_timestamp",
                "description": "A timestamp based on RFC3161.",
                "sub_section": "/packages/12/section_definitions/4"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade"
                  ]
                },
                "name": "optimade",
                "description": "Metadata used for the optimade API.",
                "sub_section": "/packages/20/section_definitions/1"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "section_defs"
                  ]
                },
                "name": "section_defs",
                "description": "All sections that are compatible with the present sections in this entry.",
                "sub_section": "/packages/12/section_definitions/1",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "entry_references"
                  ]
                },
                "name": "entry_references",
                "sub_section": "/packages/12/section_definitions/2",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "searchable_quantities"
                  ]
                },
                "name": "searchable_quantities",
                "sub_section": "/packages/12/section_definitions/3",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "EntryArchive",
            "label": "Entry",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "entry_id",
                "description": "The unique primary id for this entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "processing_logs",
                "description": "The processing logs for this entry as a list of structlog entries.",
                "type": {
                  "type_kind": "Any"
                },
                "shape": [
                  "0..*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "run",
                "sub_section": "/packages/3/section_definitions/3",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "measurement",
                "sub_section": "/packages/10/section_definitions/3",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "data",
                "sub_section": "/packages/14/section_definitions/1"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "workflow",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/17/section_definitions/34",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "workflow2",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/19/section_definitions/3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "metadata"
                  ]
                },
                "name": "metadata",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/12/section_definitions/5"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "m_annotations": {
                  "elasticsearch": [
                    "results"
                  ]
                },
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/4/section_definitions/69"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 7,
                "m_parent_sub_section": "sub_sections",
                "name": "tabular_tree",
                "sub_section": "/packages/11/section_definitions/4",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 8,
                "m_parent_sub_section": "sub_sections",
                "name": "definitions",
                "sub_section": "/packages/21/section_definitions/4"
              }
            ]
          }
        ],
        "category_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 0,
            "m_parent_sub_section": "category_definitions",
            "name": "EditableUserMetadata",
            "description": "NOMAD entry metadata quantities that can be edited by the user before or after publish."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 1,
            "m_parent_sub_section": "category_definitions",
            "name": "MongoUploadMetadata",
            "description": "The field is defined on the Upload mongo document."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 2,
            "m_parent_sub_section": "category_definitions",
            "name": "MongoEntryMetadata",
            "description": "The field is defined on the Entry mongo document."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 3,
            "m_parent_sub_section": "category_definitions",
            "name": "MongoSystemMetadata",
            "description": "The field is managed directly by the system/process (or derived from data managed by the\nsystem/process), and should never be updated from an :class:`EntryMetadata` object."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 4,
            "m_parent_sub_section": "category_definitions",
            "name": "DomainMetadata",
            "description": "NOMAD entry quantities that are determined by the uploaded data."
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 13,
        "m_parent_sub_section": "packages",
        "name": "nomad.parsing.tabular",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "TableRow",
            "description": "Represents the data in one row of a table.",
            "base_sections": [
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "table_ref",
                "description": "A reference to the table that this row is contained in.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/13/section_definitions/1"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Table",
            "description": "Represents a table with many rows.",
            "base_sections": [
              "/packages/14/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "row_refs",
                "description": "References that connect to each row. Each row is stored in it individual entry.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/13/section_definitions/0"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "TableData",
            "description": "",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "BoolEditQuantity"
                    }
                  ]
                },
                "name": "fill_archive_from_datafile",
                "description": "While checked, it allows the parser to fill all the Quantities from the data file.\nBe cautious though! as checking this box will cause overwriting your fields with data parsed from the data file",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": true
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 14,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.data",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "ArchiveSection",
            "description": "Base class for sections in a NOMAD archive. Provides a framework for custom section normalization via the `normalize` function."
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "EntryData",
            "description": "An empty base section definition. This can be used to add new top-level sections to an entry.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "Author",
            "description": "A person that is author of data in NOMAD or references by NOMAD.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "viewers.name",
                    "viewers.name.text",
                    "viewers.name__suggestion"
                  ]
                },
                "name": "name",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "first_name",
                "description": "The users first name (including all other given names)",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Capitalized"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "last_name",
                "description": "The users last name",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Capitalized"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "email",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "affiliation",
                "description": "The name of the company and institutes the user identifies with",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "affiliation_address",
                "description": "The address of the given affiliation",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "m_annotations": {
              "pydantic": [
                "PydanticModel"
              ]
            },
            "name": "User",
            "description": "A NOMAD user. Typically a NOMAD user has a NOMAD account. The user related data is managed by\nNOMAD keycloak user-management system. Users are used to denote authors,\nreviewers, and owners of datasets.",
            "base_sections": [
              "/packages/14/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "viewers.user_id"
                  ]
                },
                "name": "user_id",
                "description": "The unique, persistent keycloak UUID",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "username",
                "description": "The unique, persistent, user chosen username",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "created",
                "description": "The time the account was created",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "repo_user_id",
                "description": "Optional, legacy user id from the old NOMAD CoE repository.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "is_admin",
                "description": "Bool that indicated, iff the user the use admin user",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "is_oasis_admin",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              }
            ]
          }
        ],
        "category_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 0,
            "m_parent_sub_section": "category_definitions",
            "name": "EntryDataCategory"
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 1,
            "m_parent_sub_section": "category_definitions",
            "name": "ElnIntegrationCategory",
            "label": "Third-party ELN Integration",
            "categories": [
              "/packages/14/category_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 2,
            "m_parent_sub_section": "category_definitions",
            "name": "BasicElnCategory",
            "label": "Basic ELN",
            "categories": [
              "/packages/14/category_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 3,
            "m_parent_sub_section": "category_definitions",
            "name": "ElnExampleCategory",
            "label": "Example ELNs",
            "categories": [
              "/packages/14/category_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 4,
            "m_parent_sub_section": "category_definitions",
            "name": "UseCaseElnCategory",
            "label": "Use-cases",
            "categories": [
              "/packages/14/category_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 5,
            "m_parent_sub_section": "category_definitions",
            "name": "WorkflowsElnCategory",
            "label": "Workflows",
            "categories": [
              "/packages/14/category_definitions/0"
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 15,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.basesections",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "BaseSection",
            "description": "A generic abstract base section that provides a few commonly used properties. If you inherit from this section, but do not need some quantities, list those\nquantities in the `eln.hide` annotation of your inheriting section definition.\n\nBesides predefining some quantities, these base sections will add some metadata\nto NOMAD's search. A particular example are `tags`, if you define a string\nor enum quantity in your sections named `tags`, its values will be searchable.",
            "links": [
              "http://purl.obolibrary.org/obo/BFO_0000001"
            ],
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Short name"
                    }
                  ]
                },
                "name": "name",
                "description": "A short human readable and descriptive name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "DateTimeEditQuantity"
                    }
                  ]
                },
                "name": "datetime",
                "description": "The date and time associated with this section.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "ID"
                    }
                  ]
                },
                "name": "lab_id",
                "description": "An ID string that is unique at least for the lab that produced this\ndata.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "RichTextEditQuantity"
                    }
                  ]
                },
                "name": "description",
                "description": "Any information that cannot be captured in the other fields.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Entity",
            "description": "An object that persists, endures, or continues to exist through time while maintaining its identity.",
            "links": [
              "http://purl.obolibrary.org/obo/BFO_0000002"
            ],
            "base_sections": [
              "/packages/15/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "ActivityStep",
            "description": "Any dependant step of an `Activity`.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Step name"
                    }
                  ]
                },
                "name": "name",
                "description": "A short and descriptive name for this step.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "DateTimeEditQuantity",
                      "label": "Starting time"
                    }
                  ]
                },
                "name": "start_time",
                "description": "Optionally, the starting time of the activity step. If omitted, it is assumed to\nfollow directly after the previous step.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "RichTextEditQuantity"
                    }
                  ]
                },
                "name": "comment",
                "description": "Any additional information about the step not captured by the other fields.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Activity",
            "description": "An action that has a temporal extension and for some time depends on some entity.",
            "links": [
              "http://purl.obolibrary.org/obo/BFO_0000015"
            ],
            "base_sections": [
              "/packages/15/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "DateTimeEditQuantity",
                      "label": "Starting Time"
                    }
                  ]
                },
                "name": "datetime",
                "description": "The date and time when this activity was started.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "method",
                "description": "A short consistent handle for the applied method.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "location",
                "description": "location of the experiment.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "steps",
                "description": "An ordered list of all the dependant steps that make up this activity.",
                "sub_section": "/packages/15/section_definitions/2",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "SectionReference",
            "description": "A section used for referencing another section.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "name",
                "description": "A short descriptive name for the role of this reference.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity",
                      "label": "Section Reference"
                    }
                  ]
                },
                "name": "reference",
                "description": "A reference to a NOMAD archive section.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/14/section_definitions/0"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "EntityReference",
            "description": "A section used for referencing an Entity.",
            "base_sections": [
              "/packages/15/section_definitions/4"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity",
                      "label": "Entity Reference"
                    }
                  ]
                },
                "name": "reference",
                "description": "A reference to a NOMAD `Entity` entry.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/15/section_definitions/1"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "lab_id",
                "description": "The readable identifier for the entity.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "ExperimentStep",
            "description": "Any dependant step of an `Experiment`.",
            "base_sections": [
              "/packages/15/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity"
                    }
                  ]
                },
                "name": "activity",
                "description": "The activity that makes up this step of the experiment.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/15/section_definitions/3"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Activity ID"
                    }
                  ]
                },
                "name": "lab_id",
                "description": "The readable identifier for the activity.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "Experiment",
            "description": "A section for grouping activities together into an experiment.",
            "base_sections": [
              "/packages/15/section_definitions/3"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "steps",
                "description": "An ordered list of all the dependant steps that make up this activity.",
                "sub_section": "/packages/15/section_definitions/6",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "Collection",
            "description": "A section for grouping entities together into a collection.",
            "base_sections": [
              "/packages/15/section_definitions/1"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "entities",
                "description": "References to the entities that make up the collection.",
                "sub_section": "/packages/15/section_definitions/5",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "name": "ElementalComposition",
            "description": "A section for describing the elemental composition of a system, i.e. the element and its atomic fraction.",
            "more": {
              "label_quantity": "element"
            },
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "AutocompleteEditQuantity"
                    }
                  ]
                },
                "name": "element",
                "description": "The symbol of the element, e.g. 'Pb'.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "H",
                    "He",
                    "Li",
                    "Be",
                    "B",
                    "C",
                    "N",
                    "O",
                    "F",
                    "Ne",
                    "Na",
                    "Mg",
                    "Al",
                    "Si",
                    "P",
                    "S",
                    "Cl",
                    "Ar",
                    "K",
                    "Ca",
                    "Sc",
                    "Ti",
                    "V",
                    "Cr",
                    "Mn",
                    "Fe",
                    "Co",
                    "Ni",
                    "Cu",
                    "Zn",
                    "Ga",
                    "Ge",
                    "As",
                    "Se",
                    "Br",
                    "Kr",
                    "Rb",
                    "Sr",
                    "Y",
                    "Zr",
                    "Nb",
                    "Mo",
                    "Tc",
                    "Ru",
                    "Rh",
                    "Pd",
                    "Ag",
                    "Cd",
                    "In",
                    "Sn",
                    "Sb",
                    "Te",
                    "I",
                    "Xe",
                    "Cs",
                    "Ba",
                    "La",
                    "Ce",
                    "Pr",
                    "Nd",
                    "Pm",
                    "Sm",
                    "Eu",
                    "Gd",
                    "Tb",
                    "Dy",
                    "Ho",
                    "Er",
                    "Tm",
                    "Yb",
                    "Lu",
                    "Hf",
                    "Ta",
                    "W",
                    "Re",
                    "Os",
                    "Ir",
                    "Pt",
                    "Au",
                    "Hg",
                    "Tl",
                    "Pb",
                    "Bi",
                    "Po",
                    "At",
                    "Rn",
                    "Fr",
                    "Ra",
                    "Ac",
                    "Th",
                    "Pa",
                    "U",
                    "Np",
                    "Pu",
                    "Am",
                    "Cm",
                    "Bk",
                    "Cf",
                    "Es",
                    "Fm",
                    "Md",
                    "No",
                    "Lr",
                    "Rf",
                    "Db",
                    "Sg",
                    "Bh",
                    "Hs",
                    "Mt",
                    "Ds",
                    "Rg",
                    "Cn",
                    "Nh",
                    "Fl",
                    "Mc",
                    "Lv",
                    "Ts",
                    "Og"
                  ]
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "atomic_fraction",
                "description": "The atomic fraction of the element in the system it is contained within.\nPer definition a positive value less than or equal to 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "mass_fraction",
                "description": "The mass fraction of the element in the system it is contained within.\nPer definition a positive value less than or equal to 1.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "name": "System",
            "description": "A base section for any system of materials which is investigated or used to construct other systems.",
            "base_sections": [
              "/packages/15/section_definitions/1"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "elemental_composition",
                "description": "A list of all the elements found in the system together and their respective\natomic fraction within the system.",
                "sub_section": "/packages/15/section_definitions/9",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 11,
            "m_parent_sub_section": "section_definitions",
            "name": "Instrument",
            "description": "A base section that can be used for instruments.",
            "base_sections": [
              "/packages/15/section_definitions/1"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 12,
            "m_parent_sub_section": "section_definitions",
            "name": "InstrumentReference",
            "description": "A section used for referencing an Instrument.",
            "base_sections": [
              "/packages/15/section_definitions/5"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity",
                      "label": "Instrument Reference"
                    }
                  ]
                },
                "name": "reference",
                "description": "A reference to a NOMAD `Instrument` entry.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/15/section_definitions/11"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 13,
            "m_parent_sub_section": "section_definitions",
            "name": "Component",
            "description": "A section for describing a component and its role in a composite system.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Component label"
                    }
                  ]
                },
                "name": "name",
                "description": "A short name for the component.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity",
                      "defaultDisplayUnit": "mg"
                    }
                  ]
                },
                "name": "mass",
                "description": "The mass of the component.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "kilogram"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "mass_fraction",
                "description": "The mass fraction of the component in the composite system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 14,
            "m_parent_sub_section": "section_definitions",
            "name": "SystemComponent",
            "description": "A section for describing a system component and its role in a composite system.",
            "base_sections": [
              "/packages/15/section_definitions/13"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity"
                    }
                  ]
                },
                "name": "system",
                "description": "A reference to the component system.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/15/section_definitions/10"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 15,
            "m_parent_sub_section": "section_definitions",
            "name": "PureSubstanceSection",
            "description": "A sub section for describing any elemental, molecular or single phase pure substance.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Substance name"
                    }
                  ]
                },
                "name": "name",
                "description": "A short name for the substance.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "iupac_name",
                "description": "IUPAC name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "molecular_formula",
                "description": "Molecular formula.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity",
                      "defaultDisplayUnit": "Da"
                    }
                  ]
                },
                "name": "molecular_mass",
                "description": "Molecular mass.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "unit": "dalton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "inchi",
                "description": "Inchi.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "inchi_key",
                "description": "Inchi key.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "smile",
                "description": "Smile.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "canonical_smile",
                "description": "Canonical smile.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "cas_number",
                "description": "CAS number.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 16,
            "m_parent_sub_section": "section_definitions",
            "name": "PureSubstanceComponent",
            "description": "A section for describing a substance component and its role in a composite system.",
            "base_sections": [
              "/packages/15/section_definitions/13"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "substance_name",
                "description": "The name of the substance within the section where this component is contained.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "pure_substance",
                "description": "Section describing the pure substance that is the component.",
                "sub_section": "/packages/15/section_definitions/15"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 17,
            "m_parent_sub_section": "section_definitions",
            "name": "CompositeSystem",
            "description": "A base section for a material systems composed of components. Each component of the composite system is of a (sub)type of `System`.",
            "base_sections": [
              "/packages/15/section_definitions/10"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "components",
                "description": "A list of all the components of the composite system containing a name, reference\nto the system section and mass of that component.",
                "sub_section": "/packages/15/section_definitions/13",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 18,
            "m_parent_sub_section": "section_definitions",
            "name": "CompositeSystemReference",
            "description": "A section used for referencing a CompositeSystem.",
            "base_sections": [
              "/packages/15/section_definitions/5"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity",
                      "label": "Composite System Reference"
                    }
                  ]
                },
                "name": "reference",
                "description": "A reference to a NOMAD `CompositeSystem` entry.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/15/section_definitions/17"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 19,
            "m_parent_sub_section": "section_definitions",
            "name": "ProcessStep",
            "description": "Any dependant step of a `Process`.",
            "base_sections": [
              "/packages/15/section_definitions/2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity",
                      "defaultDisplayUnit": "second"
                    }
                  ]
                },
                "name": "duration",
                "description": "The duration time of the process step.",
                "type": {
                  "type_kind": "python",
                  "type_data": "float"
                },
                "unit": "second"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 20,
            "m_parent_sub_section": "section_definitions",
            "name": "Process",
            "description": "A planned process which results in physical changes in a specified input material. [ obi : prs obi : mc obi : fg obi : jf obi : bp ]\n\nSynonyms:\n - preparative method\n - sample preparation\n - sample preparative method\n - material transformations",
            "links": [
              "http://purl.obolibrary.org/obo/OBI_0000094"
            ],
            "base_sections": [
              "/packages/15/section_definitions/3"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "DateTimeEditQuantity",
                      "label": "Ending Time"
                    }
                  ]
                },
                "name": "end_time",
                "description": "The date and time when this process was finished.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "steps",
                "description": "An ordered list of all the dependant steps that make up this activity.",
                "sub_section": "/packages/15/section_definitions/19",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "instruments",
                "description": "A list of all the instruments and their role in this process.",
                "sub_section": "/packages/15/section_definitions/12",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "samples",
                "description": "The samples as that have undergone the process.",
                "sub_section": "/packages/15/section_definitions/18",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 21,
            "m_parent_sub_section": "section_definitions",
            "name": "AnalysisResult",
            "description": "A section for the results of an `Analysis` process.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 22,
            "m_parent_sub_section": "section_definitions",
            "name": "Analysis",
            "description": "A planned process that produces output data from input data. Synonyms:\n - data processing\n - data analysis",
            "links": [
              "http://purl.obolibrary.org/obo/OBI_0200000"
            ],
            "base_sections": [
              "/packages/15/section_definitions/3"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "inputs",
                "description": "The input data of the analysis.",
                "sub_section": "/packages/15/section_definitions/4",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "outputs",
                "description": "The output data of the analysis.",
                "sub_section": "/packages/15/section_definitions/21",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 23,
            "m_parent_sub_section": "section_definitions",
            "name": "SynthesisMethod",
            "description": "A method used to synthesise a sample.",
            "links": [
              "http://purl.obolibrary.org/obo/CHMO_0001301"
            ],
            "base_sections": [
              "/packages/15/section_definitions/20"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 24,
            "m_parent_sub_section": "section_definitions",
            "name": "MeasurementResult",
            "description": "A section for the results of an `Measurement` process.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 25,
            "m_parent_sub_section": "section_definitions",
            "name": "Measurement",
            "description": "A planned process with the objective to produce information about the material entity that is the evaluant, by physically examining it or its proxies. [ obi : pppb ]",
            "links": [
              "http://purl.obolibrary.org/obo/OBI_0000070"
            ],
            "base_sections": [
              "/packages/15/section_definitions/3"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "samples",
                "description": "A list of all the samples measured during the measurement.",
                "sub_section": "/packages/15/section_definitions/18",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "instruments",
                "description": "A list of all the instruments and their role in this process.",
                "sub_section": "/packages/15/section_definitions/12",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "description": "The result of the measurement.",
                "sub_section": "/packages/15/section_definitions/24",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 26,
            "m_parent_sub_section": "section_definitions",
            "name": "PureSubstance",
            "description": "A base section for any elemental, molecular, or single phase pure substance.",
            "links": [
              "http://purl.obolibrary.org/obo/CHEBI_23367"
            ],
            "base_sections": [
              "/packages/15/section_definitions/10"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Substance name"
                    }
                  ]
                },
                "name": "name",
                "description": "The name of the substance entry.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "Substance ID"
                    }
                  ]
                },
                "name": "lab_id",
                "description": "A human human readable substance ID that is at least unique for the lab.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "RichTextEditQuantity",
                      "label": "Detailed substance description"
                    }
                  ]
                },
                "name": "description",
                "description": "A field for adding additional information about the substance that is not captured\nby the other quantities and subsections.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "pure_substance",
                "description": "Section with properties describing the substance.",
                "sub_section": "/packages/15/section_definitions/15"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 27,
            "m_parent_sub_section": "section_definitions",
            "name": "PubChemPureSubstanceSection",
            "label": "PubChem Pure Substance Section",
            "description": "A section for pure substances existing as \"compounds\" in the PubChem database.",
            "base_sections": [
              "/packages/15/section_definitions/15"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "NumberEditQuantity"
                    }
                  ]
                },
                "name": "pub_chem_cid",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "pub_chem_link",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 28,
            "m_parent_sub_section": "section_definitions",
            "name": "CASExperimentalProperty",
            "description": "A section for experimental properties retrieved from the CAS API.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "CAS experimental property name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "property",
                "description": "CAS experimental property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "sourceNumber",
                "description": "CAS experimental property source.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 29,
            "m_parent_sub_section": "section_definitions",
            "name": "CASPropertyCitation",
            "description": "A section for citations of the experimental properties retrieved from the CAS API.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "docUri",
                "description": "CAS property citation document uri.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "sourceNumber",
                "more": {
                  "decription": "CAS property citation source number."
                },
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "source",
                "description": "CAS property citation source.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 30,
            "m_parent_sub_section": "section_definitions",
            "name": "CASPureSubstanceSection",
            "label": "CAS Pure Substance Section",
            "description": "A base section for any `PureSubstance` with a CAS number.",
            "base_sections": [
              "/packages/15/section_definitions/15"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "CAS uri"
                    }
                  ]
                },
                "name": "cas_uri",
                "description": "CAS uri",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "CAS number"
                    }
                  ]
                },
                "name": "cas_number",
                "description": "CAS number.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity",
                      "label": "CAS name"
                    }
                  ]
                },
                "name": "cas_name",
                "description": "CAS name.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "FileEditQuantity"
                    }
                  ],
                  "browser": [
                    {
                      "adaptor": "RawFileAdaptor"
                    }
                  ]
                },
                "name": "image",
                "description": "CAS image.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "cas_synonyms",
                "description": "CAS synonyms.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "cas_experimental_properties",
                "sub_section": "/packages/15/section_definitions/28",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "cas_property_citations",
                "sub_section": "/packages/15/section_definitions/29",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 31,
            "m_parent_sub_section": "section_definitions",
            "name": "ReadableIdentifiers",
            "description": "A base section that can be used to generate readable IDs. If the `owner`, `short_name`, `institute`, and `datetime`\nquantities are provided, the lab_id will be automatically created as a combination\nof these four quantities.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "institute",
                "description": "Alias/short name of the home institute of the owner, i.e. *HZB*.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "owner",
                "description": "Alias for the owner of the identified thing. This should be unique within the\ninstitute.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "DateTimeEditQuantity"
                    }
                  ]
                },
                "name": "datetime",
                "description": "A datetime associated with the identified thing. In case of an `Activity`, this\nshould be the starting time and, in case of an `Entity`, the creation time.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "short_name",
                "description": "A short name of the the identified thing (e.g. the identifier scribed on the\nsample, the process number, or machine name), e.g. 4001-8, YAG-2-34.\nThis is to be managed and decided internally by the labs, although we recommend\nto avoid the following characters in it: \"_\", \"/\", \"\\\" and \".\".",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "lab_id",
                "description": "Full readable id. Ideally a human readable id convention, which is simple,\nunderstandable and still have chances of becoming unique.\nIf the `owner`, `short_name`, `\u00ecnstitute`, and `datetime` are provided, this will\nbe formed automatically by joining these components by an underscore (_).\nSpaces in any of the individual components will be replaced with hyphens (-).\nAn example would be hzb_oah_20200602_4001-08.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 32,
            "m_parent_sub_section": "section_definitions",
            "name": "PublicationReference",
            "description": "A base section that can be used for references.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "EnumEditQuantity",
                      "props": {
                        "suggestions": []
                      }
                    }
                  ]
                },
                "name": "DOI_number",
                "description": "The DOI number referring to the published paper or dataset where the data can be found.\nExamples:\n10.1021/jp5126624\n10.1016/j.electacta.2017.06.032",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "publication_authors",
                "description": "The authors of the publication.\nIf several authors, end with et al. If the DOI number is given correctly,\nthis will be extracted automatically from www.crossref.org",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "publication_date",
                "description": "Publication date.\nIf the DOI number is given correctly,\nthis will be extracted automatically from www.crossref.org",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Datetime"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "journal",
                "description": "Name of the journal where the data is published.\nIf the DOI number is given correctly,\nthis will be extracted automatically from www.crossref.org",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "publication_title",
                "description": "Title of the publication.\nIf the DOI number is given correctly,\nthis will be extracted automatically from www.crossref.org",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 16,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.common",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "ProvenanceTracker",
            "description": "\n        Contains semantically labelled provenance information.\n        To be stored under PropertySection.provenance or children.\n        ",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.spectroscopic.spectra.provenance.electronic_structure.label"
                  ]
                },
                "name": "label",
                "description": "Class or type of the provenance.\nCan be used to add further description to the provenance.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "PropertySection",
            "description": "\n        Base class for that can be used to attach a specific methodology to a\n        physical property.\n        ",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "provenance",
                "sub_section": "/packages/16/section_definitions/0",
                "repeats": false
              }
            ]
          }
        ],
        "category_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Category",
            "m_parent_index": 0,
            "m_parent_sub_section": "category_definitions",
            "name": "FastAccess",
            "description": "Used to mark archive objects that need to be stored in a fast 2nd-tier storage medium,\nbecause they are frequently accessed via archive API.\n\nIf applied to a sub_section, the section will be added to the fast storage. Currently\nthis only works for *root* sections that are sub_sections of `EntryArchive`.\n\nIf applied to a reference types quantity, the referenced section will also be added to\nthe fast storage, regardless if the referenced section has the category or not."
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 17,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.simulation.legacy_workflows",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Interface",
            "description": "Section containing results of an interface (stacking fault, gamma surface, etc.) workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "energy_extrinsic_stacking_fault",
                "description": "Value of the relaxed extrinsic stacking fault energy per unit area.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "energy_intrinsic_stacking_fault",
                "description": "Value of the relaxed intrinsic stacking fault energy per unit area.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "dimensionality",
                "description": "Dimensionality of the property, i.e. 1 for stacking fault energy and 2 for gamma\nsurface.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "shift_direction",
                "description": "shift direction of the two crystal parts to calculate the fault energy.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "dimensionality"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_displacements",
                "description": "Number of displacements in the shift to calculate the fault energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "displacement_fraction",
                "description": "Relative displacements of the two crystal parts along the direction indicated by\nshift_direction.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "dimensionality",
                  "n_displacements"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "energy_fault_plane",
                "description": "Value of the relaxed excess energy per unit area for each displacement.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_displacements"
                ],
                "unit": "joule / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "gamma_surface",
                "description": "Value of the gamma surface, i.e. the excess energy per unit area calculated for\neach displacement.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_displacements",
                  "n_displacements"
                ],
                "unit": "joule / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "slip_fraction",
                "description": "Relative displacement between two crystal parts where the energy is maximum.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "energy_unstable_stacking_fault",
                "description": "Value of the relaxed unstable stacking fault energy per unit area.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule / meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "energy_unstable_twinning_fault",
                "description": "Value of the relaxed unstable twinning energy per unit area.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule / meter ** 2"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Raman",
            "description": "Section containing results of a Raman workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_modes",
                "description": "Number of evaluated vibrational modes.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "Number of atoms in the simulation cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "frequencies",
                "description": "Calculated value of the Raman frequencies.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_modes"
                ],
                "unit": "1 / meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "MagneticOrdering",
            "description": "Section containing results of a magnetic ordering workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_structures",
                "description": "Number of magnetic structures evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "Number of atoms in the simulation cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "labels",
                "description": "Labels corresponding to each magnetic structure.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_structures"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "Calculated value of the energies corresponding to each magnetic structure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_structures"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "magnetic_moments",
                "description": "Resulting atomic magnetic moments corresponding to each magnetic structure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_structures",
                  "n_atoms"
                ],
                "unit": "bohr_magneton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "magnetic_deformations",
                "description": "Average atomic displacements after relaxation with respect to the non-magnetic\ncase for each magnetic structure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_structures"
                ],
                "unit": "meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Adsorption",
            "description": "Section containing results of a surface adsorption workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_sites",
                "description": "Number of sites for which the adsorption energy is evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "slab_miller_index",
                "description": "Miller index of the slab.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "slab",
                "description": "Chemical formula of the slab.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "adsorbate",
                "description": "Chemical formula of the adsorbate molecule.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "adsorption_sites",
                "description": "Coordinates of the adsorption sites corresponding to a minimum energy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_sites"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "adsorption_energies",
                "description": "Calculated value of the adsorption energy corresponding to each site.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_sites"
                ],
                "unit": "joule"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "ConvexHull",
            "description": "Section containing results of a convex hull workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_elements",
                "description": "Number of elements for which the thermal stability is evaluated. This represents\nthe dimensionality of the convex hull.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_points",
                "description": "Number of points for which the energies are evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "compositions",
                "description": "Normalized composition of the elements corresponding to each point for which the\nenergies are evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points",
                  "n_elements"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "references",
                "description": "Specifies the reference structure for each element.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_elements"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "energy_of_formation",
                "description": "Values of the heat of formation corresponding to each point.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "energy_hulll",
                "description": "Values of the energy above the convex hull corresponding to each point.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points"
                ],
                "unit": "joule"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "NudgedElasticBand",
            "description": "Section containing results of a nudged-elastic band workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "method",
                "description": "Specifies the method used in calculating the minumum energy path. Can be one of\nstandard, improved_tangeant, full_spring_force, spline_interpolation, string.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "climbing_image",
                "description": "Indicates if climbing image is used.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "solid_state",
                "description": "Indicates if solid state nudged-elastic band calculation is performed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "optimizer",
                "description": "Specifies the method used in energy minimization.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_images",
                "description": "Number of images used in the calculation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "spring_constants",
                "description": "Spring constants for each spring.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_images"
                ],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "energy_barrier",
                "description": "Maximum value of the calculated energy barrier.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "force_maximum",
                "description": "Maximum force along the minimum energy path.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "newton"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "EOSFit",
            "description": "Section containing results of an equation of state fit.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "function_name",
                "description": "Specifies the function used to perform the fitting of the volume-energy data. Value\ncan be one of birch_euler, birch_lagrange, birch_murnaghan, mie_gruneisen,\nmurnaghan, pack_evans_james, poirier_tarantola, tait, vinet.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "fitted_energies",
                "description": "Array of the fitted energies corresponding to each volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus",
                "description": "Calculated value of the bulk modulus by fitting the volume-energy data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_derivative",
                "description": "Calculated value of the pressure derivative of the bulk modulus.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "equilibrium_volume",
                "description": "Calculated value of the equilibrium volume by fitting the volume-energy data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "equilibrium_energy",
                "description": "Calculated value of the equilibrium energy by fitting the volume-energy data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "rms_error",
                "description": "Root-mean squared value of the error in the fitting.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "EquationOfState",
            "description": "Section containing results of an equation of state workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_points",
                "description": "Number of volume-energy pairs in data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "volumes",
                "description": "Array of volumes per atom for which the energies are evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points"
                ],
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "Array of energies corresponding to each volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points"
                ],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "eos_fit",
                "sub_section": "/packages/17/section_definitions/6",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "DebyeModel",
            "description": "Section containing results of an debye-model workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_temperatures",
                "description": "Number of temperature evaluations.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "thermal_conductivity",
                "description": "Calculated value of the thermal conductity.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_temperatures"
                ],
                "unit": "kelvin * watt / meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "debye_temperature",
                "description": "Calculated value of the Debye temperature.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_temperatures"
                ],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "gruneisen_parameter",
                "description": "Calculated value of the Gruneisen parameter.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_temperatures"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "thermal_expansion",
                "description": "Calculated value of the thermal expansion coefficient.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_temperatures"
                ],
                "unit": "1 / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_static",
                "description": "Calculated value of the static bulk modulus.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_temperatures"
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_isothermal",
                "description": "Calculated value of the static bulk modulus.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_temperatures"
                ],
                "unit": "pascal"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "name": "GeometryOptimization",
            "description": "Section containing the results of a geometry_optimization workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "The type of geometry optimization, which denotes what is being optimized.\n\nAllowed values are:\n\n| Type                   | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"static\"`             | no optimization |\n\n| `\"atomic\"`             | the atomic coordinates alone are updated |\n\n| `\"cell_volume\"`         | `\"atomic\"` + cell lattice paramters are updated isotropically |\n\n| `\"cell_shape\"`        | `\"cell_volume\"` but without the isotropic constraint: all cell parameters are updated |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "static",
                    "atomic",
                    "cell_shape",
                    "cell_volume"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "method",
                "description": "The method used for geometry optimization. Some known possible values are:\n`\"steepest_descent\"`, `\"conjugant_gradient\"`, `\"low_memory_broyden_fletcher_goldfarb_shanno\"`.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "convergence_tolerance_energy_difference",
                "description": "The input energy difference tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "convergence_tolerance_force_maximum",
                "description": "The input maximum net force tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "convergence_tolerance_displacement_maximum",
                "description": "The input maximum displacement tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "final_energy_difference",
                "description": "The difference in the energy_total between the last two steps during\noptimization.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "final_force_maximum",
                "description": "The maximum net force in the last optimization step.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "final_displacement_maximum",
                "description": "The maximum displacement in the last optimization step with respect to previous.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "optimization_steps_maximum",
                "description": "Maximum number of optimization steps.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "optimization_steps",
                "description": "Number of saved optimization steps.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "List of energy_total values gathered from the single configuration\ncalculations that are a part of the optimization trajectory.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "optimization_steps"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "steps",
                "description": "The step index corresponding to each saved configuration.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "is_converged_geometry",
                "description": "Indicates if the geometry convergence criteria were fulfilled.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "name": "Phonon",
            "description": "Section containing the results of a phonon workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "force_calculator",
                "description": "Name of the program used to calculate the forces.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "mesh_density",
                "description": "Density of the k-mesh for sampling.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "1 / meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_imaginary_frequencies",
                "description": "Number of modes with imaginary frequencies.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "random_displacements",
                "description": "Identifies if displacements are made randomly.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "with_non_analytic_correction",
                "description": "Identifies if non-analytical term corrections are applied to dynamical matrix.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "with_grueneisen_parameters",
                "description": "Identifies if Grueneisen parameters are calculated.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "n_bands",
                "description": "Number of phonon bands.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "n_qpoints",
                "description": "Number of q points for which phonon properties are evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "qpoints",
                "description": "Value of the qpoints.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_qpoints",
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "group_velocity",
                "description": "Calculated value of the group velocity at each qpoint.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_qpoints",
                  "n_bands",
                  3
                ],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "n_displacements",
                "description": "Number of independent displacements.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "Number of atoms in the simulation cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "displacements",
                "description": "Value of the displacements applied to each atom in the simulation cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_displacements",
                  "n_atoms",
                  3
                ],
                "unit": "meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 11,
            "m_parent_sub_section": "section_definitions",
            "name": "StrainDiagrams",
            "description": "Section containing the information regarding the elastic strains.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Kind of strain diagram. Possible values are: energy; cross-validation (cross-\nvalidation error); d2E (second derivative of the energy wrt the strain)",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_eta",
                "description": "Number of strain values used in the strain diagram",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_deformations",
                "description": "Number of deformations.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the energy(units:J)/d2E(units:Pa)/cross-validation (depending on the\nvalue of strain_diagram_type)",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_deformations",
                  "n_eta"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "eta",
                "description": "eta values used the strain diagrams",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_deformations",
                  "n_eta"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "stress_voigt_component",
                "description": "Voigt component corresponding to the strain diagram",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "polynomial_fit_order",
                "description": "Order of the polynomial fit",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 12,
            "m_parent_sub_section": "section_definitions",
            "name": "Elastic",
            "description": "Section containing the results of an elastic workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "energy_stress_calculator",
                "description": "Name of program used to calculate energy or stress.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "calculation_method",
                "description": "Method used to calculate elastic constants, can either be energy or stress.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_order",
                "description": "Order of the calculated elastic constants.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_deformations",
                "description": "Number of deformed structures used to calculate the elastic constants. This is\ndetermined by the symmetry of the crystal.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "deformation_types",
                "description": "deformation types",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "str_"
                },
                "shape": [
                  "n_deformations",
                  6
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "n_strains",
                "description": "number of equally spaced strains applied to each deformed structure, which are\ngenerated between the maximum negative strain and the maximum positive one.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "is_mechanically_stable",
                "description": "Indicates if structure is mechanically stable from the calculated values of the\nelastic constants.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "fitting_error_maximum",
                "description": "Maximum error in polynomial fit.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "strain_maximum",
                "description": "Maximum strain applied to crystal.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_notation_matrix_second_order",
                "description": "Symmetry of the second-order elastic constant matrix in Voigt notation",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "str_"
                },
                "shape": [
                  6,
                  6
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_matrix_second_order",
                "description": "2nd order elastic constant (stiffness) matrix in pascals",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  6,
                  6
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_matrix_third_order",
                "description": "3rd order elastic constant (stiffness) matrix in pascals",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  6,
                  6,
                  6
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "compliance_matrix_second_order",
                "description": "Elastic compliance matrix in 1/GPa",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  6,
                  6
                ],
                "unit": "1 / pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_gradient_matrix_second_order",
                "description": "gradient of the 2nd order elastic constant (stiffness) matrix in newton",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  18,
                  18
                ],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_voigt",
                "description": "Voigt bulk modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "name": "shear_modulus_voigt",
                "description": "Voigt shear modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_reuss",
                "description": "Reuss bulk modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "name": "shear_modulus_reuss",
                "description": "Reuss shear modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_hill",
                "description": "Hill bulk modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "name": "shear_modulus_hill",
                "description": "Hill shear modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "name": "young_modulus_voigt",
                "description": "Voigt Young modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "name": "poisson_ratio_voigt",
                "description": "Voigt Poisson ratio",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "name": "young_modulus_reuss",
                "description": "Reuss Young modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "name": "poisson_ratio_reuss",
                "description": "Reuss Poisson ratio",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "name": "young_modulus_hill",
                "description": "Hill Young modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "name": "poisson_ratio_hill",
                "description": "Hill Poisson ratio",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "name": "elastic_anisotropy",
                "description": "Elastic anisotropy",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "name": "pugh_ratio_hill",
                "description": "Pugh ratio defined as the ratio between the shear modulus and bulk modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 28,
                "m_parent_sub_section": "quantities",
                "name": "debye_temperature",
                "description": "Debye temperature",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 29,
                "m_parent_sub_section": "quantities",
                "name": "speed_sound_transverse",
                "description": "Speed of sound along the transverse direction",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 30,
                "m_parent_sub_section": "quantities",
                "name": "speed_sound_longitudinal",
                "description": "Speed of sound along the longitudinal direction",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 31,
                "m_parent_sub_section": "quantities",
                "name": "speed_sound_average",
                "description": "Average speed of sound",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 32,
                "m_parent_sub_section": "quantities",
                "name": "eigenvalues_elastic",
                "description": "Eigenvalues of the stiffness matrix",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  6
                ],
                "unit": "pascal"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "strain_diagrams",
                "sub_section": "/packages/17/section_definitions/11",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 13,
            "m_parent_sub_section": "section_definitions",
            "name": "Decomposition",
            "description": "Section containing information about the system to which an unstable compound will decompose to.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "fraction",
                "description": "Amount of the resulting system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "system_ref",
                "description": "Reference to the resulting system.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "formula",
                "description": "Chemical formula of the resulting system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 14,
            "m_parent_sub_section": "section_definitions",
            "name": "Stability",
            "description": "Section containing information regarding the stability of the system.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_references",
                "description": "Number of reference systems.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "systems_ref",
                "description": "References to the reference systems.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                },
                "shape": [
                  "n_references"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "formation_energy",
                "description": "Calculated value of the formation energy of the compound.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "delta_formation_energy",
                "description": "Energy with respect to the convex hull.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "is_stable",
                "description": "Indicates if a compound is stable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "decomposition",
                "sub_section": "/packages/17/section_definitions/13",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 15,
            "m_parent_sub_section": "section_definitions",
            "name": "Thermodynamics",
            "description": "Section containing the results of a thermodynamics workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_values",
                "description": "Number of thermodynamics property evaluations.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "temperature",
                "description": "Specifies the temperatures at which properties such as the Helmholtz free energy\nare calculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "pressure",
                "description": "Array containing the values of the pressure (one third of the trace of the stress\ntensor) corresponding to each property evaluation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "helmholtz_free_energy",
                "description": "Helmholtz free energy per unit cell at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacity_c_p",
                "description": "Heat capacity per cell unit at constant pressure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacity_c_v",
                "description": "Heat capacity per cell unit at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacity_c_v_specific",
                "description": "Specific heat capacity at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin / kilogram",
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_free_energy_at_constant_volume",
                "description": "Holds the vibrational free energy per cell unit at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_free_energy_at_constant_volume_specific",
                "description": "Stores the specific vibrational free energy at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kilogram",
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_free_energy",
                "description": "Calculated value of the vibrational free energy, F_vib.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_internal_energy",
                "description": "Calculated value of the vibrational internal energy, U_vib.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_entropy",
                "description": "Calculated value of the vibrational entropy, S.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "gibbs_free_energy",
                "description": "Calculated value of the Gibbs free energy, G.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "entropy",
                "description": "Calculated value of the entropy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "name": "internal_energy",
                "description": "Calculated value of the internal energy, U.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "stability",
                "sub_section": "/packages/17/section_definitions/14",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 16,
            "m_parent_sub_section": "section_definitions",
            "name": "ThermostatParameters",
            "description": "Section containing the parameters pertaining to the thermostat for a molecular dynamics run.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "thermostat_type",
                "description": "The name of the thermostat used for temperature control. If skipped or an empty string is used, it\nmeans no thermostat was applied.\n\nAllowed values are:\n\n| Thermostat Name        | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"\"`                   | No thermostat               |\n\n| `\"andersen\"`           | H.C. Andersen, [J. Chem. Phys.\n**72**, 2384 (1980)](https://doi.org/10.1063/1.439486) |\n\n| `\"berendsen\"`          | H. J. C. Berendsen, J. P. M. Postma,\nW. F. van Gunsteren, A. DiNola, and J. R. Haak, [J. Chem. Phys.\n**81**, 3684 (1984)](https://doi.org/10.1063/1.448118) |\n\n| `\"brownian\"`           | Brownian Dynamics |\n\n| `\"langevin_goga\"`           | N. Goga, A. J. Rzepiela, A. H. de Vries,\nS. J. Marrink, and H. J. C. Berendsen, [J. Chem. Theory Comput. **8**, 3637 (2012)]\n(https://doi.org/10.1021/ct3000876) |\n\n| `\"langevin_schneider\"`           | T. Schneider and E. Stoll,\n[Phys. Rev. B **17**, 1302](https://doi.org/10.1103/PhysRevB.17.1302) |\n\n| `\"nose_hoover\"`        | S. Nos\u00e9, [Mol. Phys. **52**, 255 (1984)]\n(https://doi.org/10.1080/00268978400101201); W.G. Hoover, [Phys. Rev. A\n**31**, 1695 (1985) |\n\n| `\"velocity_rescaling\"` | G. Bussi, D. Donadio, and M. Parrinello,\n[J. Chem. Phys. **126**, 014101 (2007)](https://doi.org/10.1063/1.2408420) |\n\n| `\"velocity_rescaling_langevin\"` | G. Bussi and M. Parrinello,\n[Phys. Rev. E **75**, 056707 (2007)](https://doi.org/10.1103/PhysRevE.75.056707) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "andersen",
                    "berendsen",
                    "brownian",
                    "langevin_goga",
                    "langevin_schneider",
                    "nose_hoover",
                    "velocity_rescaling",
                    "velocity_rescaling_langevin"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "reference_temperature",
                "description": "The target temperature for the simulation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "coupling_constant",
                "description": "The time constant for temperature coupling. Need to describe what this means for the various\nthermostat options...",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 17,
            "m_parent_sub_section": "section_definitions",
            "name": "BarostatParameters",
            "description": "Section containing the parameters pertaining to the barostat for a molecular dynamics run.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "barostat_type",
                "description": "The name of the barostat used for temperature control. If skipped or an empty string is used, it\nmeans no barostat was applied.\n\nAllowed values are:\n\n| Barostat Name          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"\"`                   | No thermostat               |\n\n| `\"berendsen\"`          | H. J. C. Berendsen, J. P. M. Postma,\nW. F. van Gunsteren, A. DiNola, and J. R. Haak, [J. Chem. Phys.\n**81**, 3684 (1984)](https://doi.org/10.1063/1.448118) |\n\n| `\"martyna_tuckerman_tobias_klein\"` | G.J. Martyna, M.E. Tuckerman, D.J. Tobias, and M.L. Klein,\n[Mol. Phys. **87**, 1117 (1996)](https://doi.org/10.1080/00268979600100761);\nM.E. Tuckerman, J. Alejandre, R. L\u00f3pez-Rend\u00f3n, A.L. Jochim, and G.J. Martyna,\n[J. Phys. A. **59**, 5629 (2006)](https://doi.org/10.1088/0305-4470/39/19/S18)|\n\n| `\"nose_hoover\"`        | S. Nos\u00e9, [Mol. Phys. **52**, 255 (1984)]\n(https://doi.org/10.1080/00268978400101201); W.G. Hoover, [Phys. Rev. A\n**31**, 1695 (1985) |\n\n| `\"parrinello_rahman\"`        | M. Parrinello and A. Rahman,\n[J. Appl. Phys. **52**, 7182 (1981)](https://doi.org/10.1063/1.328693);\nS. Nos\u00e9 and M.L. Klein, [Mol. Phys. **50**, 1055 (1983) |\n\n| `\"stochastic_cell_rescaling\"` | M. Bernetti and G. Bussi,\n[J. Chem. Phys. **153**, 114107 (2020)](https://doi.org/10.1063/1.2408420) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "berendsen",
                    "martyna_tuckerman_tobias_klein",
                    "nose_hoover",
                    "parrinello_rahman",
                    "stochastic_cell_rescaling"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "coupling_type",
                "description": "Describes the symmetry of pressure coupling. Specifics can be inferred from the `coupling constant`\n\n| Type          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `isotropic`          | Identical coupling in all directions. |\n\n| `semi_isotropic` | Identical coupling in 2 directions. |\n\n| `anisotropic`        | General case. |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "isotropic",
                    "semi_isotropic",
                    "anisotropic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "reference_pressure",
                "description": "The target pressure for the simulation, stored in a 3x3 matrix, indicating the values for individual directions\nalong the diagonal, and coupling between directions on the off-diagonal.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "coupling_constant",
                "description": "The time constants for pressure coupling, stored in a 3x3 matrix, indicating the values for individual directions\nalong the diagonal, and coupling between directions on the off-diagonal. 0 values along the off-diagonal\nindicate no-coupling between these directions.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "compressibility",
                "description": "An estimate of the system's compressibility, used for box rescaling, stored in a 3x3 matrix indicating the values for individual directions\nalong the diagonal, and coupling between directions on the off-diagonal. If None, it may indicate that these values\nare incorporated into the coupling_constant, or simply that the software used uses a fixed value that is not available in\nthe input/output files.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "1 / pascal"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 18,
            "m_parent_sub_section": "section_definitions",
            "name": "IntegrationParameters",
            "description": "Section containing the parameters for the molecular dynamics integrator.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "integrator_type",
                "description": "Name of the integrator.\n\nAllowed values are:\n\n| Integrator Name          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"langevin_goga\"`           | N. Goga, A. J. Rzepiela, A. H. de Vries,\nS. J. Marrink, and H. J. C. Berendsen, [J. Chem. Theory Comput. **8**, 3637 (2012)]\n(https://doi.org/10.1021/ct3000876) |\n\n| `\"langevin_schneider\"`           | T. Schneider and E. Stoll,\n[Phys. Rev. B **17**, 1302](https://doi.org/10.1103/PhysRevB.17.1302) |\n\n| `\"leap_frog\"`          | R.W. Hockney, S.P. Goel, and J. Eastwood,\n[J. Comp. Phys. **14**, 148 (1974)](https://doi.org/10.1016/0021-9991(74)90010-2) |\n\n| `\"velocity_verlet\"` | W.C. Swope, H.C. Andersen, P.H. Berens, and K.R. Wilson,\n[J. Chem. Phys. **76**, 637 (1982)](https://doi.org/10.1063/1.442716) |\n\n| `\"rRESPA_multitimescale\"` | M. Tuckerman, B. J. Berne, and G. J. Martyna\n[J. Chem. Phys. **97**, 1990 (1992)](https://doi.org/10.1063/1.463137) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "brownian",
                    "conjugant_gradient",
                    "langevin_goga",
                    "langevin_schneider",
                    "leap_frog",
                    "rRESPA_multitimescale",
                    "velocity_verlet"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "integration_timestep",
                "description": "The timestep at which the numerical integration is performed.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_steps",
                "description": "Number of timesteps performed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "coordinate_save_frequency",
                "description": "The number of timesteps between saving the coordinates.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "velocity_save_frequency",
                "description": "The number of timesteps between saving the velocities.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "force_save_frequency",
                "description": "The number of timesteps between saving the forces.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "thermodynamics_save_frequency",
                "description": "The number of timesteps between saving the thermodynamic quantities.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "thermostat_parameters",
                "sub_section": "/packages/17/section_definitions/16",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "barostat_parameters",
                "sub_section": "/packages/17/section_definitions/17",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 19,
            "m_parent_sub_section": "section_definitions",
            "name": "MolecularDynamicsResults",
            "description": "Section containing the parameters for sampling via molecular dynamics using a force field model.",
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "radial_distribution_functions",
                "sub_section": "/packages/17/section_definitions/25",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "mean_squared_displacements",
                "sub_section": "/packages/17/section_definitions/30",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 20,
            "m_parent_sub_section": "section_definitions",
            "name": "MolecularDynamics",
            "description": "Section containing results of molecular dynamics workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "thermodynamic_ensemble",
                "description": "The type of thermodynamic ensemble that was simulated.\n\nAllowed values are:\n\n| Thermodynamic Ensemble          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"NVE\"`           | Constant number of particles, volume, and energy |\n\n| `\"NVT\"`           | Constant number of particles, volume, and temperature |\n\n| `\"NPT\"`           | Constant number of particles, pressure, and temperature |\n\n| `\"NPH\"`           | Constant number of particles, pressure, and enthalpy |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "NVE",
                    "NVT",
                    "NPT",
                    "NPH"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "finished_normally",
                "description": "Indicates if calculation terminated normally.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "with_trajectory",
                "description": "Indicates if calculation includes trajectory data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "with_thermodynamics",
                "description": "Indicates if calculation contains thermodynamic data.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "integration_parameters",
                "sub_section": "/packages/17/section_definitions/18",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "sub_section": "/packages/17/section_definitions/19",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 21,
            "m_parent_sub_section": "section_definitions",
            "name": "TrajectoryProperty",
            "description": "Generic section containing information about a calculation of any observable defined and stored at each individual frame of a trajectory.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Describes if the observable is calculated at the molecular or atomic level.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "molecular",
                    "atomic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this observable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 22,
            "m_parent_sub_section": "section_definitions",
            "name": "EnsemblePropertyValues",
            "description": "Generic section containing information regarding the values of an ensemble property.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Describes the group of atoms/molecule/groups of molecules involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "atomsgroup_ref",
                "description": "References to the atoms_group section containing the group of atoms/molecule/groups of molecules for which the property was calculated.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/0"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_bins",
                "description": "Number of bins.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "frame_start",
                "description": "Trajectory frame number where the ensemble averaging starts.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "frame_end",
                "description": "Trajectory frame number where the ensemble averaging ends.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 23,
            "m_parent_sub_section": "section_definitions",
            "name": "EnsembleProperty",
            "description": "Generic section containing information about a calculation of any static observable from a trajectory (i.e., from an ensemble average).",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Describes if the observable is calculated at the molecular or atomic level.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "molecular",
                    "atomic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_smooth",
                "description": "Number of bins over which the running average was computed for\nthe observable `values'.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this observable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_variables",
                "description": "Number of variables along which the property is determined.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "variables_name",
                "description": "Name/description of the independent variables along which the observable is defined.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_variables"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 24,
            "m_parent_sub_section": "section_definitions",
            "name": "RadialDistributionFunctionValues",
            "description": "Section containing information regarding the values of radial distribution functions (rdfs).",
            "base_sections": [
              "/packages/17/section_definitions/22"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "bins",
                "description": "Distances along which the rdf was calculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_bins"
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the property.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_bins"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 25,
            "m_parent_sub_section": "section_definitions",
            "name": "RadialDistributionFunction",
            "description": "Section containing information about the calculation of radial distribution functions (rdfs).",
            "base_sections": [
              "/packages/17/section_definitions/23"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "radial_distribution_function_values",
                "sub_section": "/packages/17/section_definitions/24",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 26,
            "m_parent_sub_section": "section_definitions",
            "name": "CorrelationFunctionValues",
            "description": "Generic section containing information regarding the values of a correlation function.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Describes the group of atoms/molecule/groups of molecules involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "atomsgroup_ref",
                "description": "References to the atoms_group section containing the group of atoms/molecule/groups of molecules for which the property was calculated.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/0"
                },
                "shape": [
                  1
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_times",
                "description": "Number of times windows for the calculation of the correlation function.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 27,
            "m_parent_sub_section": "section_definitions",
            "name": "CorrelationFunction",
            "description": "Generic section containing information about a calculation of any time correlation function from a trajectory.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Describes if the correlation function is calculated at the molecular or atomic level.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "molecular",
                    "atomic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "direction",
                "description": "Describes the direction in which the correlation function was calculated.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "x",
                    "y",
                    "z",
                    "xy",
                    "yz",
                    "xz",
                    "xyz"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this correlation function.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 28,
            "m_parent_sub_section": "section_definitions",
            "name": "DiffusionConstantValues",
            "description": "Section containing information regarding the diffusion constants.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the diffusion constants.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 2 / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this observable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "errors",
                "description": "Error associated with the determination of the diffusion constant.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 29,
            "m_parent_sub_section": "section_definitions",
            "name": "MeanSquaredDisplacementValues",
            "description": "Section containing information regarding the values of a mean squared displacements (msds).",
            "base_sections": [
              "/packages/17/section_definitions/26"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "times",
                "description": "Time windows used for the calculation of the msds.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_times"
                ],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Msd values.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_times"
                ],
                "unit": "meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "errors",
                "description": "Error associated with the determination of the msds.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "diffusion_constant",
                "sub_section": "/packages/17/section_definitions/28",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 30,
            "m_parent_sub_section": "section_definitions",
            "name": "MeanSquaredDisplacement",
            "description": "Section containing information about a calculation of any mean squared displacements (msds).",
            "base_sections": [
              "/packages/17/section_definitions/27"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "mean_squared_displacement_values",
                "sub_section": "/packages/17/section_definitions/29",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 31,
            "m_parent_sub_section": "section_definitions",
            "name": "GW",
            "description": "Section containing results of a GW workflow",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "dos_dft",
                "description": "DFT density of states",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "dos_gw",
                "description": "GW density of states",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "band_structure_dft",
                "description": "DFT density of states",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "band_structure_gw",
                "description": "DFT density of states",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 32,
            "m_parent_sub_section": "section_definitions",
            "name": "SinglePoint",
            "description": "Section containing results of a single point workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "method",
                "description": "Calculation method used.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_scf_steps",
                "description": "Number of self-consistent steps in the calculation",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "final_scf_energy_difference",
                "description": "The difference in the energy between the last two scf steps.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "is_converged",
                "description": "Indicates if the convergence criteria were fullfilled",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "with_density_of_states",
                "description": "Indicates if the calculation contains density of states data",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "with_bandstructure",
                "description": "Indicates if the calculation contains bandstructure data",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "with_eigenvalues",
                "description": "Indicates if the calculation contains eigenvalue data",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "with_volumetric_data",
                "description": "Indicates if the calculation contains volumetric data",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "with_excited_states",
                "description": "Indicates if the calculation contains excited states data",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 33,
            "m_parent_sub_section": "section_definitions",
            "name": "Task",
            "description": "Section defining a specific task in the workflow chain. It has an input and an output, both can either be a workflow or a calculation and their relation is noted in the\ndescription.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "input_workflow",
                "description": "Reference to the input workflow.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/17/section_definitions/34"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "output_workflow",
                "description": "Reference to the output workflow.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/17/section_definitions/34"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "input_calculation",
                "description": "Reference to the input calculation.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "output_calculation",
                "description": "Reference to the output calculation.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "description": "Descibes the relationship between the input and output workflows. For example, if\na single_point workflow uses the relaxed structure from a geometry_optimization as\nan input, the description may be \"relaxed structure from geometry_optimization\nused to calucalate single_point properties\"",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 34,
            "m_parent_sub_section": "section_definitions",
            "name": "Workflow",
            "description": "Section containing the  results of a workflow.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "The workflow type.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "GW",
                    "single_point",
                    "geometry_optimization",
                    "phonon",
                    "elastic",
                    "molecular_dynamics",
                    "debye_model",
                    "equation_of_state",
                    "nudged_elastic_band",
                    "convex_hull",
                    "adsorption",
                    "magnetic_ordering",
                    "raman",
                    "interface",
                    "thermodynamics"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "initial_structure",
                "description": "Starting structure for geometry optimization.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/1"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "calculator",
                "description": "Energy and force calculator.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "calculation_result_ref",
                "description": "Reference to calculation result. In the case of geometry_optimization and\nmolecular dynamics, this corresponds to the final step in the simulation. For the\nrest of the workflow types, it refers to the original system.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "n_calculations",
                "description": "Number of calculations in workflow",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "calculations_ref",
                "description": "List of references to each section single_configuration_calculation in the\nsimulation.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": [
                  "n_calculations"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "run_ref",
                "description": "Links the section workflow to the section run that contains the calculations.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/3/section_definitions/3"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "n_references",
                "description": "Number of references to the current section workflow.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "workflows_ref",
                "description": "Links the the current section to other workflow sections. Such a link is necessary\nfor example between an Debye model that uses a the poisson ratio calculated\nfrom an elastic workflow.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/17/section_definitions/34"
                },
                "shape": [
                  "n_references"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "task",
                "sub_section": "/packages/17/section_definitions/33",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "single_point",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/17/section_definitions/32",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "gw",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/17/section_definitions/31",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 3,
                "m_parent_sub_section": "sub_sections",
                "name": "geometry_optimization",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/17/section_definitions/9",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 4,
                "m_parent_sub_section": "sub_sections",
                "name": "phonon",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/17/section_definitions/10",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 5,
                "m_parent_sub_section": "sub_sections",
                "name": "elastic",
                "sub_section": "/packages/17/section_definitions/12",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 6,
                "m_parent_sub_section": "sub_sections",
                "name": "molecular_dynamics",
                "sub_section": "/packages/17/section_definitions/20",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 7,
                "m_parent_sub_section": "sub_sections",
                "name": "debye_model",
                "sub_section": "/packages/17/section_definitions/8",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 8,
                "m_parent_sub_section": "sub_sections",
                "name": "equation_of_state",
                "sub_section": "/packages/17/section_definitions/7",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 9,
                "m_parent_sub_section": "sub_sections",
                "name": "nudged_elastic_band",
                "sub_section": "/packages/17/section_definitions/5",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 10,
                "m_parent_sub_section": "sub_sections",
                "name": "convex_hull",
                "sub_section": "/packages/17/section_definitions/4",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 11,
                "m_parent_sub_section": "sub_sections",
                "name": "adsorption",
                "sub_section": "/packages/17/section_definitions/3",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 12,
                "m_parent_sub_section": "sub_sections",
                "name": "magnetic_ordering",
                "sub_section": "/packages/17/section_definitions/2",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 13,
                "m_parent_sub_section": "sub_sections",
                "name": "raman",
                "sub_section": "/packages/17/section_definitions/1",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 14,
                "m_parent_sub_section": "sub_sections",
                "name": "interface",
                "sub_section": "/packages/17/section_definitions/0",
                "repeats": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 15,
                "m_parent_sub_section": "sub_sections",
                "name": "thermodynamics",
                "sub_section": "/packages/17/section_definitions/15",
                "repeats": false
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 18,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.simulation.workflow",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "SimulationWorkflowMethod",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "SimulationWorkflowResults",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "calculation_result_ref",
                "description": "Reference to calculation result. In the case of serial workflows, this corresponds\nto the final step in the simulation. For the parallel case, it refers to the reference calculation.",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_calculations",
                "description": "Number of calculations in workflow.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "calculations_ref",
                "description": "List of references to each calculation section in the simulation.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/36"
                },
                "shape": [
                  "n_calculations"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "SimulationWorkflow",
            "base_sections": [
              "/packages/19/section_definitions/3"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/0"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/1"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Decomposition",
            "description": "Section containing information about the system to which an unstable compound will decompose to.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "fraction",
                "description": "Amount of the resulting system.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "system_ref",
                "description": "Reference to the resulting system.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "formula",
                "description": "Chemical formula of the resulting system.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "Stability",
            "description": "Section containing information regarding the stability of the system.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_references",
                "description": "Number of reference systems.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "systems_ref",
                "description": "References to the reference systems.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                },
                "shape": [
                  "n_references"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "formation_energy",
                "description": "Calculated value of the formation energy of the compound.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "delta_formation_energy",
                "description": "Energy with respect to the convex hull.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "is_stable",
                "description": "Indicates if a compound is stable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "decomposition",
                "sub_section": "/packages/18/section_definitions/3",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "ThermodynamicsResults",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_values",
                "description": "Number of thermodynamics property evaluations.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "temperature",
                "description": "Specifies the temperatures at which properties such as the Helmholtz free energy\nare calculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "pressure",
                "description": "Array containing the values of the pressure (one third of the trace of the stress\ntensor) corresponding to each property evaluation.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "helmholtz_free_energy",
                "description": "Helmholtz free energy per unit cell at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacity_c_p",
                "description": "Heat capacity per cell unit at constant pressure.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacity_c_v",
                "description": "Heat capacity per cell unit at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "heat_capacity_c_v_specific",
                "description": "Specific heat capacity at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin / kilogram",
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_free_energy_at_constant_volume",
                "description": "Holds the vibrational free energy per cell unit at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_free_energy_at_constant_volume_specific",
                "description": "Stores the specific vibrational free energy at constant volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kilogram",
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_free_energy",
                "description": "Calculated value of the vibrational free energy, F_vib.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_internal_energy",
                "description": "Calculated value of the vibrational internal energy, U_vib.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "vibrational_entropy",
                "description": "Calculated value of the vibrational entropy, S.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "gibbs_free_energy",
                "description": "Calculated value of the Gibbs free energy, G.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "entropy",
                "description": "Calculated value of the entropy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule / kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "name": "enthalpy",
                "description": "Calculated value of enthalpy.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "name": "internal_energy",
                "description": "Calculated value of the internal energy, U.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_values"
                ],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "stability",
                "sub_section": "/packages/18/section_definitions/4",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "SinglePointResults",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_scf_steps",
                "description": "Number of self-consistent steps in the calculation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "final_scf_energy_difference",
                "description": "The difference in the energy between the last two scf steps.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "is_converged",
                "description": "Indicates if the convergence criteria were fullfilled.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_data",
                "description": "",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "dos",
                "description": "Reference to the electronic density of states data.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "n_data"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "band_structure",
                "description": "Reference to the electronic band structure data.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                },
                "shape": [
                  "n_data"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "eigenvalues",
                "description": "Reference to the eigenvalues.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/13"
                },
                "shape": [
                  "n_data"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "potential",
                "description": "Reference to the potential data.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/26"
                },
                "shape": [
                  "n_data"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "density_charge",
                "description": "Reference to the charge density data.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/27"
                },
                "shape": [
                  "n_data"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "spectra",
                "description": "Reference to the spectral data.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/28"
                },
                "shape": [
                  "n_data"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "SinglePointMethod",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "method",
                "description": "Calculation method used.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "SinglePoint",
            "base_sections": [
              "/packages/18/section_definitions/2"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/7"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/6"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 9,
            "m_parent_sub_section": "section_definitions",
            "name": "ParallelSimulation",
            "base_sections": [
              "/packages/18/section_definitions/2"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 10,
            "m_parent_sub_section": "section_definitions",
            "name": "SerialSimulation",
            "base_sections": [
              "/packages/18/section_definitions/2"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 11,
            "m_parent_sub_section": "section_definitions",
            "name": "GeometryOptimizationMethod",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "The type of geometry optimization, which denotes what is being optimized.\n\nAllowed values are:\n\n| Type                   | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"static\"`             | no optimization |\n\n| `\"atomic\"`             | the atomic coordinates alone are updated |\n\n| `\"cell_volume\"`         | `\"atomic\"` + cell lattice paramters are updated isotropically |\n\n| `\"cell_shape\"`        | `\"cell_volume\"` but without the isotropic constraint: all cell parameters are updated |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "static",
                    "atomic",
                    "cell_shape",
                    "cell_volume"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "method",
                "description": "The method used for geometry optimization. Some known possible values are:\n`\"steepest_descent\"`, `\"conjugant_gradient\"`, `\"low_memory_broyden_fletcher_goldfarb_shanno\"`.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.convergence_tolerance_energy_difference"
                  ]
                },
                "name": "convergence_tolerance_energy_difference",
                "description": "The input energy difference tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.convergence_tolerance_force_maximum"
                  ]
                },
                "name": "convergence_tolerance_force_maximum",
                "description": "The input maximum net force tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "convergence_tolerance_stress_maximum",
                "description": "The input maximum stress tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "convergence_tolerance_displacement_maximum",
                "description": "The input maximum displacement tolerance criterion.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "optimization_steps_maximum",
                "description": "Maximum number of optimization steps.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "save_frequency",
                "description": "The number of optimization steps between saving the calculation.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 12,
            "m_parent_sub_section": "section_definitions",
            "name": "GeometryOptimizationResults",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "optimization_steps",
                "description": "Number of saved optimization steps.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "List of energy_total values gathered from the single configuration\ncalculations that are a part of the optimization trajectory.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "optimization_steps"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "steps",
                "description": "The step index corresponding to each saved configuration.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "optimization_steps"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.final_energy_difference"
                  ]
                },
                "name": "final_energy_difference",
                "description": "The difference in the energy_total between the last two steps during\noptimization.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.final_force_maximum"
                  ]
                },
                "name": "final_force_maximum",
                "description": "The maximum net force in the last optimization step.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.geometry_optimization.final_displacement_maximum"
                  ]
                },
                "name": "final_displacement_maximum",
                "description": "The maximum displacement in the last optimization step with respect to previous.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "is_converged_geometry",
                "description": "Indicates if the geometry convergence criteria were fulfilled.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 13,
            "m_parent_sub_section": "section_definitions",
            "name": "GeometryOptimization",
            "base_sections": [
              "/packages/18/section_definitions/10"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/11"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/12"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 14,
            "m_parent_sub_section": "section_definitions",
            "name": "ThermostatParameters",
            "description": "Section containing the parameters pertaining to the thermostat for a molecular dynamics run.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "thermostat_type",
                "description": "The name of the thermostat used for temperature control. If skipped or an empty string is used, it\nmeans no thermostat was applied.\n\nAllowed values are:\n\n| Thermostat Name        | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"\"`                   | No thermostat               |\n\n| `\"andersen\"`           | H.C. Andersen, [J. Chem. Phys.\n**72**, 2384 (1980)](https://doi.org/10.1063/1.439486) |\n\n| `\"berendsen\"`          | H. J. C. Berendsen, J. P. M. Postma,\nW. F. van Gunsteren, A. DiNola, and J. R. Haak, [J. Chem. Phys.\n**81**, 3684 (1984)](https://doi.org/10.1063/1.448118) |\n\n| `\"brownian\"`           | Brownian Dynamics |\n\n| `\"langevin_goga\"`           | N. Goga, A. J. Rzepiela, A. H. de Vries,\nS. J. Marrink, and H. J. C. Berendsen, [J. Chem. Theory Comput. **8**, 3637 (2012)]\n(https://doi.org/10.1021/ct3000876) |\n\n| `\"langevin_schneider\"`           | T. Schneider and E. Stoll,\n[Phys. Rev. B **17**, 1302](https://doi.org/10.1103/PhysRevB.17.1302) |\n\n| `\"nose_hoover\"`        | S. Nos\u00e9, [Mol. Phys. **52**, 255 (1984)]\n(https://doi.org/10.1080/00268978400101201); W.G. Hoover, [Phys. Rev. A\n**31**, 1695 (1985) |\n\n| `\"velocity_rescaling\"` | G. Bussi, D. Donadio, and M. Parrinello,\n[J. Chem. Phys. **126**, 014101 (2007)](https://doi.org/10.1063/1.2408420) |\n\n| `\"velocity_rescaling_langevin\"` | G. Bussi and M. Parrinello,\n[Phys. Rev. E **75**, 056707 (2007)](https://doi.org/10.1103/PhysRevE.75.056707) |\n\n| `\"velocity_rescaling_woodcock\"` | L. V. Woodcock,\n[Chem. Phys. Lett. **10**, 257 (1971)](https://doi.org/10.1016/0009-2614(71)80281-6) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "andersen",
                    "berendsen",
                    "brownian",
                    "langevin_goga",
                    "langevin_schneider",
                    "nose_hoover",
                    "velocity_rescaling",
                    "velocity_rescaling_langevin",
                    "velocity_rescaling_woodcock"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "reference_temperature",
                "description": "The target temperature for the simulation. Typically used when temperature_profile is \"constant\".",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "coupling_constant",
                "description": "The time constant for temperature coupling. Need to describe what this means for the various\nthermostat options...",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "effective_mass",
                "description": "The effective or fictitious mass of the temperature resevoir.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kilogram"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "temperature_profile",
                "description": "Type of temperature control (i.e., annealing) procedure. Can be \"constant\" (no annealing), \"linear\", or \"exponential\".\nIf linear, \"temperature_update_delta\" specifies the corresponding update parameter.\nIf exponential, \"temperature_update_factor\" specifies the corresponding update parameter.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "constant",
                    "linear",
                    "exponential"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "reference_temperature_start",
                "description": "The initial target temperature for the simulation. Typically used when temperature_profile is \"linear\" or \"exponential\".",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "reference_temperature_end",
                "description": "The final target temperature for the simulation.  Typically used when temperature_profile is \"linear\" or \"exponential\".",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "temperature_update_frequency",
                "description": "Number of simulation steps between changing the target temperature.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "temperature_update_delta",
                "description": "Amount to be added (subtracted if negative) to the current reference_temperature\nat a frequency of temperature_update_frequency when temperature_profile is \"linear\".\nThe reference temperature is then replaced by this new value until the next update.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "temperature_update_factor",
                "description": "Factor to be multiplied to the current reference_temperature at a frequency of temperature_update_frequency when temperature_profile is exponential.\nThe reference temperature is then replaced by this new value until the next update.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "step_start",
                "description": "Trajectory step where this thermostating starts.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "step_end",
                "description": "Trajectory step number where this thermostating ends.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 15,
            "m_parent_sub_section": "section_definitions",
            "name": "BarostatParameters",
            "description": "Section containing the parameters pertaining to the barostat for a molecular dynamics run.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "barostat_type",
                "description": "The name of the barostat used for temperature control. If skipped or an empty string is used, it\nmeans no barostat was applied.\n\nAllowed values are:\n\n| Barostat Name          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"\"`                   | No thermostat               |\n\n| `\"berendsen\"`          | H. J. C. Berendsen, J. P. M. Postma,\nW. F. van Gunsteren, A. DiNola, and J. R. Haak, [J. Chem. Phys.\n**81**, 3684 (1984)](https://doi.org/10.1063/1.448118) |\n\n| `\"martyna_tuckerman_tobias_klein\"` | G.J. Martyna, M.E. Tuckerman, D.J. Tobias, and M.L. Klein,\n[Mol. Phys. **87**, 1117 (1996)](https://doi.org/10.1080/00268979600100761);\nM.E. Tuckerman, J. Alejandre, R. L\u00f3pez-Rend\u00f3n, A.L. Jochim, and G.J. Martyna,\n[J. Phys. A. **59**, 5629 (2006)](https://doi.org/10.1088/0305-4470/39/19/S18)|\n\n| `\"nose_hoover\"`        | S. Nos\u00e9, [Mol. Phys. **52**, 255 (1984)]\n(https://doi.org/10.1080/00268978400101201); W.G. Hoover, [Phys. Rev. A\n**31**, 1695 (1985) |\n\n| `\"parrinello_rahman\"`        | M. Parrinello and A. Rahman,\n[J. Appl. Phys. **52**, 7182 (1981)](https://doi.org/10.1063/1.328693);\nS. Nos\u00e9 and M.L. Klein, [Mol. Phys. **50**, 1055 (1983) |\n\n| `\"stochastic_cell_rescaling\"` | M. Bernetti and G. Bussi,\n[J. Chem. Phys. **153**, 114107 (2020)](https://doi.org/10.1063/1.2408420) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "berendsen",
                    "martyna_tuckerman_tobias_klein",
                    "nose_hoover",
                    "parrinello_rahman",
                    "stochastic_cell_rescaling"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "coupling_type",
                "description": "Describes the symmetry of pressure coupling. Specifics can be inferred from the `coupling constant`\n\n| Type          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `isotropic`          | Identical coupling in all directions. |\n\n| `semi_isotropic` | Identical coupling in 2 directions. |\n\n| `anisotropic`        | General case. |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "isotropic",
                    "semi_isotropic",
                    "anisotropic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "reference_pressure",
                "description": "The target pressure for the simulation, stored in a 3x3 matrix, indicating the values for individual directions\nalong the diagonal, and coupling between directions on the off-diagonal. Typically used when pressure_profile is \"constant\".",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "coupling_constant",
                "description": "The time constants for pressure coupling, stored in a 3x3 matrix, indicating the values for individual directions\nalong the diagonal, and coupling between directions on the off-diagonal. 0 values along the off-diagonal\nindicate no-coupling between these directions.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "compressibility",
                "description": "An estimate of the system's compressibility, used for box rescaling, stored in a 3x3 matrix indicating the values for individual directions\nalong the diagonal, and coupling between directions on the off-diagonal. If None, it may indicate that these values\nare incorporated into the coupling_constant, or simply that the software used uses a fixed value that is not available in\nthe input/output files.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "1 / pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "pressure_profile",
                "description": "Type of pressure control procedure. Can be \"constant\" (no annealing), \"linear\", or \"exponential\".\nIf linear, \"pressure_update_delta\" specifies the corresponding update parameter.\nIf exponential, \"pressure_update_factor\" specifies the corresponding update parameter.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "constant",
                    "linear",
                    "exponential"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "reference_pressure_start",
                "description": "The initial target pressure for the simulation, stored in a 3x3 matrix, indicating the values for individual directions\nalong the diagonal, and coupling between directions on the off-diagonal. Typically used when pressure_profile is \"linear\" or \"exponential\".",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "reference_pressure_end",
                "description": "The final target pressure for the simulation, stored in a 3x3 matrix, indicating the values for individual directions\nalong the diagonal, and coupling between directions on the off-diagonal.  Typically used when pressure_profile is \"linear\" or \"exponential\".",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "pressure_update_frequency",
                "description": "Number of simulation steps between changing the target pressure.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "pressure_update_delta",
                "description": "Amount to be added (subtracted if negative) to the current reference_pressure\nat a frequency of pressure_update_frequency when pressure_profile is \"linear\".\nThe pressure temperature is then replaced by this new value until the next update.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "pressure_update_factor",
                "description": "Factor to be multiplied to the current reference_pressure at a frequency of pressure_update_frequency when pressure_profile is exponential.\nThe reference pressure is then replaced by this new value until the next update.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "step_start",
                "description": "Trajectory step where this barostating starts.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "step_end",
                "description": "Trajectory step number where this barostating ends.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 16,
            "m_parent_sub_section": "section_definitions",
            "name": "MolecularDynamicsMethod",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.thermodynamic.trajectory.provenance.molecular_dynamics.ensemble_type"
                  ]
                },
                "name": "thermodynamic_ensemble",
                "description": "The type of thermodynamic ensemble that was simulated.\n\nAllowed values are:\n\n| Thermodynamic Ensemble          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"NVE\"`           | Constant number of particles, volume, and energy |\n\n| `\"NVT\"`           | Constant number of particles, volume, and temperature |\n\n| `\"NPT\"`           | Constant number of particles, pressure, and temperature |\n\n| `\"NPH\"`           | Constant number of particles, pressure, and enthalpy |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "NVE",
                    "NVT",
                    "NPT",
                    "NPH"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "integrator_type",
                "description": "Name of the integrator.\n\nAllowed values are:\n\n| Integrator Name          | Description                               |\n\n| ---------------------- | ----------------------------------------- |\n\n| `\"langevin_goga\"`           | N. Goga, A. J. Rzepiela, A. H. de Vries,\nS. J. Marrink, and H. J. C. Berendsen, [J. Chem. Theory Comput. **8**, 3637 (2012)]\n(https://doi.org/10.1021/ct3000876) |\n\n| `\"langevin_schneider\"`           | T. Schneider and E. Stoll,\n[Phys. Rev. B **17**, 1302](https://doi.org/10.1103/PhysRevB.17.1302) |\n\n| `\"leap_frog\"`          | R.W. Hockney, S.P. Goel, and J. Eastwood,\n[J. Comp. Phys. **14**, 148 (1974)](https://doi.org/10.1016/0021-9991(74)90010-2) |\n\n| `\"velocity_verlet\"` | W.C. Swope, H.C. Andersen, P.H. Berens, and K.R. Wilson,\n[J. Chem. Phys. **76**, 637 (1982)](https://doi.org/10.1063/1.442716) |\n\n| `\"rRESPA_multitimescale\"` | M. Tuckerman, B. J. Berne, and G. J. Martyna\n[J. Chem. Phys. **97**, 1990 (1992)](https://doi.org/10.1063/1.463137) |",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "brownian",
                    "conjugant_gradient",
                    "langevin_goga",
                    "langevin_schneider",
                    "leap_frog",
                    "rRESPA_multitimescale",
                    "velocity_verlet"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.thermodynamic.trajectory.provenance.molecular_dynamics.time_step"
                  ]
                },
                "name": "integration_timestep",
                "description": "The timestep at which the numerical integration is performed.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_steps",
                "description": "Number of timesteps performed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "coordinate_save_frequency",
                "description": "The number of timesteps between saving the coordinates.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "velocity_save_frequency",
                "description": "The number of timesteps between saving the velocities.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "force_save_frequency",
                "description": "The number of timesteps between saving the forces.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "thermodynamics_save_frequency",
                "description": "The number of timesteps between saving the thermodynamic quantities.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "thermostat_parameters",
                "sub_section": "/packages/18/section_definitions/14",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "barostat_parameters",
                "sub_section": "/packages/18/section_definitions/15",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 17,
            "m_parent_sub_section": "section_definitions",
            "name": "EnsemblePropertyValues",
            "description": "Generic section containing information regarding the values of an ensemble property.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.radial_distribution_function.label",
                    "results.properties.structural.radial_distribution_function.label__suggestion"
                  ]
                },
                "name": "label",
                "description": "Describes the atoms or molecule types involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_bins",
                "description": "Number of bins.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "frame_start",
                "description": "Trajectory frame number where the ensemble averaging starts.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "frame_end",
                "description": "Trajectory frame number where the ensemble averaging ends.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 18,
            "m_parent_sub_section": "section_definitions",
            "name": "RadialDistributionFunctionValues",
            "description": "Section containing information regarding the values of radial distribution functions (rdfs).",
            "base_sections": [
              "/packages/18/section_definitions/17"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "bins",
                "description": "Distances along which the rdf was calculated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_bins"
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the property.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_bins"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 19,
            "m_parent_sub_section": "section_definitions",
            "name": "EnsembleProperty",
            "description": "Generic section containing information about a calculation of any static observable from a trajectory (i.e., from an ensemble average).",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.structural.radial_distribution_function.type",
                    "results.properties.structural.radial_distribution_function.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Describes if the observable is calculated at the molecular or atomic level.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "molecular",
                    "atomic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_smooth",
                "description": "Number of bins over which the running average was computed for\nthe observable `values'.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this observable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_variables",
                "description": "Number of variables along which the property is determined.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "variables_name",
                "description": "Name/description of the independent variables along which the observable is defined.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "n_variables"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 20,
            "m_parent_sub_section": "section_definitions",
            "name": "RadialDistributionFunction",
            "description": "Section containing information about the calculation of radial distribution functions (rdfs).",
            "base_sections": [
              "/packages/18/section_definitions/19"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "radial_distribution_function_values",
                "sub_section": "/packages/18/section_definitions/18",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 21,
            "m_parent_sub_section": "section_definitions",
            "name": "TrajectoryProperty",
            "description": "Generic section containing information about a calculation of any observable defined and stored at each individual frame of a trajectory.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Describes if the observable is calculated at the molecular or atomic level.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "molecular",
                    "atomic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this observable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Describes the atoms or molecule types involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "n_frames",
                "description": "Number of frames for which the observable is stored.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "frames",
                "description": "Frames for which the observable is stored.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": [
                  "n_frames"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "times",
                "description": "Times for which the observable is stored.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_frames"
                ],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the property.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_frames"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "errors",
                "description": "Error associated with the determination of the property.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 22,
            "m_parent_sub_section": "section_definitions",
            "name": "RadiusOfGyration",
            "description": "Section containing information about the calculation of radius of gyration (Rg).",
            "base_sections": [
              "/packages/18/section_definitions/21"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "atomsgroup_ref",
                "description": "References to the atoms_group section containing the molecule for which Rg was calculated.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/0"
                },
                "shape": [
                  1
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the property.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_frames"
                ],
                "unit": "meter"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 23,
            "m_parent_sub_section": "section_definitions",
            "name": "DiffusionConstantValues",
            "description": "Section containing information regarding the diffusion constants.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the diffusion constants.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 2 / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this observable.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "errors",
                "description": "Error associated with the determination of the diffusion constant.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 24,
            "m_parent_sub_section": "section_definitions",
            "name": "CorrelationFunctionValues",
            "description": "Generic section containing information regarding the values of a correlation function.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.dynamical.mean_squared_displacement.label",
                    "results.properties.dynamical.mean_squared_displacement.label__suggestion"
                  ]
                },
                "name": "label",
                "description": "Describes the atoms or molecule types involved in determining the property.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_times",
                "description": "Number of times windows for the calculation of the correlation function.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 25,
            "m_parent_sub_section": "section_definitions",
            "name": "MeanSquaredDisplacementValues",
            "description": "Section containing information regarding the values of a mean squared displacements (msds).",
            "base_sections": [
              "/packages/18/section_definitions/24"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "times",
                "description": "Time windows used for the calculation of the msds.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_times"
                ],
                "unit": "second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Msd values.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_times"
                ],
                "unit": "meter ** 2"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "errors",
                "description": "Error associated with the determination of the msds.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "diffusion_constant",
                "sub_section": "/packages/18/section_definitions/23",
                "repeats": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 26,
            "m_parent_sub_section": "section_definitions",
            "name": "CorrelationFunction",
            "description": "Generic section containing information about a calculation of any time correlation function from a trajectory.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "results.properties.dynamical.mean_squared_displacement.type",
                    "results.properties.dynamical.mean_squared_displacement.type__suggestion"
                  ]
                },
                "name": "type",
                "description": "Describes if the correlation function is calculated at the molecular or atomic level.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "molecular",
                    "atomic"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "direction",
                "description": "Describes the direction in which the correlation function was calculated.",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "x",
                    "y",
                    "z",
                    "xy",
                    "yz",
                    "xz",
                    "xyz"
                  ]
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "error_type",
                "description": "Describes the type of error reported for this correlation function.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 27,
            "m_parent_sub_section": "section_definitions",
            "name": "MeanSquaredDisplacement",
            "description": "Section containing information about a calculation of any mean squared displacements (msds).",
            "base_sections": [
              "/packages/18/section_definitions/26"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "mean_squared_displacement_values",
                "sub_section": "/packages/18/section_definitions/25",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 28,
            "m_parent_sub_section": "section_definitions",
            "name": "MolecularDynamicsResults",
            "base_sections": [
              "/packages/18/section_definitions/5"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "finished_normally",
                "description": "Indicates if calculation terminated normally.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_steps",
                "description": "Number of trajectory steps",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "trajectory",
                "description": "Reference to the system of each step in the trajectory.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/1/section_definitions/8"
                },
                "shape": [
                  "n_steps"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "radial_distribution_functions",
                "sub_section": "/packages/18/section_definitions/20",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "radius_of_gyration",
                "sub_section": "/packages/18/section_definitions/22",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "mean_squared_displacements",
                "sub_section": "/packages/18/section_definitions/27",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 29,
            "m_parent_sub_section": "section_definitions",
            "name": "MolecularDynamics",
            "base_sections": [
              "/packages/18/section_definitions/10"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/16"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/28"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 30,
            "m_parent_sub_section": "section_definitions",
            "name": "PhononMethod",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "force_calculator",
                "description": "Name of the program used to calculate the forces.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "mesh_density",
                "description": "Density of the k-mesh for sampling.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "1 / meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "random_displacements",
                "description": "Identifies if displacements are made randomly.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "with_non_analytic_correction",
                "description": "Identifies if non-analytical term corrections are applied to dynamical matrix.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "with_grueneisen_parameters",
                "description": "Identifies if Grueneisen parameters are calculated.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 31,
            "m_parent_sub_section": "section_definitions",
            "name": "PhononResults",
            "base_sections": [
              "/packages/18/section_definitions/5"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_imaginary_frequencies",
                "description": "Number of modes with imaginary frequencies.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_bands",
                "description": "Number of phonon bands.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_qpoints",
                "description": "Number of q points for which phonon properties are evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "qpoints",
                "description": "Value of the qpoints.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_qpoints",
                  3
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "group_velocity",
                "description": "Calculated value of the group velocity at each qpoint.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_qpoints",
                  "n_bands",
                  3
                ],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "n_displacements",
                "description": "Number of independent displacements.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "n_atoms",
                "description": "Number of atoms in the simulation cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "displacements",
                "description": "Value of the displacements applied to each atom in the simulation cell.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_displacements",
                  "n_atoms",
                  3
                ],
                "unit": "meter"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "dos",
                "description": "Reference to the electronic density of states data.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "n_data"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "band_structure",
                "description": "Reference to the electronic band structure data.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                },
                "shape": [
                  "n_data"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 32,
            "m_parent_sub_section": "section_definitions",
            "name": "Phonon",
            "base_sections": [
              "/packages/18/section_definitions/9"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/30"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/31"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 33,
            "m_parent_sub_section": "section_definitions",
            "name": "StrainDiagrams",
            "description": "Section containing the information regarding the elastic strains.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "Kind of strain diagram. Possible values are: energy; cross-validation (cross-\nvalidation error); d2E (second derivative of the energy wrt the strain)",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "n_eta",
                "description": "Number of strain values used in the strain diagram",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_deformations",
                "description": "Number of deformations.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "value",
                "description": "Values of the energy(units:J)/d2E(units:Pa)/cross-validation (depending on the\nvalue of strain_diagram_type)",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_deformations",
                  "n_eta"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "eta",
                "description": "eta values used the strain diagrams",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_deformations",
                  "n_eta"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "stress_voigt_component",
                "description": "Voigt component corresponding to the strain diagram",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "polynomial_fit_order",
                "description": "Order of the polynomial fit",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 34,
            "m_parent_sub_section": "section_definitions",
            "name": "ElasticMethod",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "energy_stress_calculator",
                "description": "Name of program used to calculate energy or stress.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "calculation_method",
                "description": "Method used to calculate elastic constants, can either be energy or stress.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_order",
                "description": "Order of the calculated elastic constants.",
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "fitting_error_maximum",
                "description": "Maximum error in polynomial fit.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "strain_maximum",
                "description": "Maximum strain applied to crystal.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 35,
            "m_parent_sub_section": "section_definitions",
            "name": "ElasticResults",
            "base_sections": [
              "/packages/18/section_definitions/5"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_deformations",
                "description": "Number of deformed structures used to calculate the elastic constants. This is\ndetermined by the symmetry of the crystal.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "deformation_types",
                "description": "deformation types",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "str_"
                },
                "shape": [
                  "n_deformations",
                  6
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "n_strains",
                "description": "number of equally spaced strains applied to each deformed structure, which are\ngenerated between the maximum negative strain and the maximum positive one.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "is_mechanically_stable",
                "description": "Indicates if structure is mechanically stable from the calculated values of the\nelastic constants.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_notation_matrix_second_order",
                "description": "Symmetry of the second-order elastic constant matrix in Voigt notation",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "str_"
                },
                "shape": [
                  6,
                  6
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_matrix_second_order",
                "description": "2nd order elastic constant (stiffness) matrix in pascals",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  6,
                  6
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_matrix_third_order",
                "description": "3rd order elastic constant (stiffness) matrix in pascals",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  6,
                  6,
                  6
                ],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "compliance_matrix_second_order",
                "description": "Elastic compliance matrix in 1/GPa",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  6,
                  6
                ],
                "unit": "1 / pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "elastic_constants_gradient_matrix_second_order",
                "description": "gradient of the 2nd order elastic constant (stiffness) matrix in newton",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  18,
                  18
                ],
                "unit": "newton"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_voigt",
                "description": "Voigt bulk modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "shear_modulus_voigt",
                "description": "Voigt shear modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_reuss",
                "description": "Reuss bulk modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "shear_modulus_reuss",
                "description": "Reuss shear modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_hill",
                "description": "Hill bulk modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "name": "shear_modulus_hill",
                "description": "Hill shear modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "name": "young_modulus_voigt",
                "description": "Voigt Young modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "name": "poisson_ratio_voigt",
                "description": "Voigt Poisson ratio",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 17,
                "m_parent_sub_section": "quantities",
                "name": "young_modulus_reuss",
                "description": "Reuss Young modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 18,
                "m_parent_sub_section": "quantities",
                "name": "poisson_ratio_reuss",
                "description": "Reuss Poisson ratio",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 19,
                "m_parent_sub_section": "quantities",
                "name": "young_modulus_hill",
                "description": "Hill Young modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 20,
                "m_parent_sub_section": "quantities",
                "name": "poisson_ratio_hill",
                "description": "Hill Poisson ratio",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 21,
                "m_parent_sub_section": "quantities",
                "name": "elastic_anisotropy",
                "description": "Elastic anisotropy",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 22,
                "m_parent_sub_section": "quantities",
                "name": "pugh_ratio_hill",
                "description": "Pugh ratio defined as the ratio between the shear modulus and bulk modulus",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 23,
                "m_parent_sub_section": "quantities",
                "name": "debye_temperature",
                "description": "Debye temperature",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "kelvin"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 24,
                "m_parent_sub_section": "quantities",
                "name": "speed_sound_transverse",
                "description": "Speed of sound along the transverse direction",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 25,
                "m_parent_sub_section": "quantities",
                "name": "speed_sound_longitudinal",
                "description": "Speed of sound along the longitudinal direction",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 26,
                "m_parent_sub_section": "quantities",
                "name": "speed_sound_average",
                "description": "Average speed of sound",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter / second"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 27,
                "m_parent_sub_section": "quantities",
                "name": "eigenvalues_elastic",
                "description": "Eigenvalues of the stiffness matrix",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  6
                ],
                "unit": "pascal"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "strain_diagrams",
                "sub_section": "/packages/18/section_definitions/33",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 36,
            "m_parent_sub_section": "section_definitions",
            "name": "Elastic",
            "base_sections": [
              "/packages/18/section_definitions/9"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/34"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/35"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 37,
            "m_parent_sub_section": "section_definitions",
            "name": "ThermodynamicsMethod",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 38,
            "m_parent_sub_section": "section_definitions",
            "name": "Thermodynamics",
            "base_sections": [
              "/packages/18/section_definitions/10"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/37"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/5"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 39,
            "m_parent_sub_section": "section_definitions",
            "name": "GWResults",
            "description": "Groups DFT and GW outputs: band gaps, DOS, band structures. The ResultsNormalizer takes care of adding a label 'DFT' or 'GW' in the method `get_gw_workflow_properties`.",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "band_gap_dft",
                "description": "Reference to the DFT band gap.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/19"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "band_gap_gw",
                "description": "Reference to the GW band gap.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/19"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "dos_dft",
                "description": "Reference to the DFT density of states.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "dos_gw",
                "description": "Reference to the GW density of states.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "band_structure_dft",
                "description": "Reference to the DFT band structure.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "band_structure_gw",
                "description": "Reference to the GW band structure.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 40,
            "m_parent_sub_section": "section_definitions",
            "name": "GWMethod",
            "description": "Groups DFT and GW input methodologies: starting XC functional, electrons representation (basis set), GW method reference.",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "starting_point",
                "description": "Reference to the starting point (XC functional or HF) used.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/20"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "electrons_representation",
                "description": "Reference to the basis set used.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/16"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "gw_method_ref",
                "description": "Reference to the GW methodology.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/29"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 41,
            "m_parent_sub_section": "section_definitions",
            "name": "GW",
            "description": "The GW workflow is generated in an extra EntryArchive IF both the DFT SinglePoint and the GW SinglePoint EntryArchives are present in the upload.",
            "base_sections": [
              "/packages/18/section_definitions/10"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/40"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/39"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 42,
            "m_parent_sub_section": "section_definitions",
            "name": "PhotonPolarizationResults",
            "description": "Groups all polarization outputs: spectrum.",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_polarizations",
                "description": "Number of polarizations for the phonons used for the calculations.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "spectrum_polarization",
                "description": "Spectrum for a given polarization of the photon.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/28"
                },
                "shape": [
                  "n_polarizations"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 43,
            "m_parent_sub_section": "section_definitions",
            "name": "PhotonPolarizationMethod",
            "description": "Defines the full macroscopic dielectric tensor methodology: BSE method reference.",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "bse_method_ref",
                "description": "BSE methodology reference.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/30"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 44,
            "m_parent_sub_section": "section_definitions",
            "name": "PhotonPolarization",
            "description": "The PhotonPolarization workflow is generated in an extra EntryArchive FOR all polarization EntryArchives present in the upload. It groups them for a set of given method parameters.\n\nThis entry is also recognized as the full macroscopic dielectric tensor entry (e.g. calculated\nvia BSE).",
            "base_sections": [
              "/packages/18/section_definitions/9"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/43"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/42"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 45,
            "m_parent_sub_section": "section_definitions",
            "name": "XSResults",
            "description": "Groups DFT, GW and PhotonPolarization outputs: band gaps (DFT, GW), DOS (DFT, GW), band structures (DFT, GW), spectra (PhotonPolarization). The ResultsNormalizer takes\ncare of adding a label 'DFT' or 'GW' in the method `get_xs_workflow_properties`.",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "band_gap_dft",
                "description": "Reference to the DFT band gap.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/19"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "band_gap_gw",
                "description": "Reference to the GW band gap.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/19"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "band_structure_dft",
                "description": "Reference to the DFT density of states.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "band_structure_gw",
                "description": "Reference to the GW density of states.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "dos_dft",
                "description": "Reference to the DFT band structure.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "dos_gw",
                "description": "Reference to the GW band structure.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "*"
                ]
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "spectra",
                "sub_section": "/packages/18/section_definitions/42",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 46,
            "m_parent_sub_section": "section_definitions",
            "name": "XSMethod",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 47,
            "m_parent_sub_section": "section_definitions",
            "name": "XS",
            "description": "The XS workflow is generated in an extra EntryArchive IF both the DFT SinglePoint and the PhotonPolarization EntryArchives are present in the upload.",
            "base_sections": [
              "/packages/18/section_definitions/10"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/46"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/45"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 48,
            "m_parent_sub_section": "section_definitions",
            "name": "MaxEntResults",
            "description": "Groups DMFT and MaxEnt outputs: greens functions (DMFT, MaxEnt), band gaps (MaxEnt), DOS (MaxEnt), band structures (MaxEnt). The ResultsNormalizer takes care of adding a\nlabel 'DMFT' or 'MaxEnt' in the method `get_maxent_workflow_properties`.",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "greens_functions_dmft",
                "description": "Ref to the DMFT Greens functions.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/29"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "band_gap_maxent",
                "description": "MaxEnt band gap.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/19"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "dos_maxent",
                "description": "Ref to the MaxEnt density of states (also called spectral function).",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "greens_functions_maxent",
                "description": "Ref to the MaxEnt Greens functions.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/29"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 49,
            "m_parent_sub_section": "section_definitions",
            "name": "MaxEntMethod",
            "description": "Groups DMFT and MaxEnt input methodologies: DMFT method references, MaxEnt method reference.",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "dmft_method_ref",
                "description": "DMFT methodology reference.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/31"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "maxent_method_ref",
                "description": "MaxEnt methodology reference.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/39"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 50,
            "m_parent_sub_section": "section_definitions",
            "name": "MaxEnt",
            "description": "The MaxEnt (Maximum Entropy) workflow is generated in an extra EntryArchive IF both the DMFT SinglePoint and the MaxEnt SinglePoint EntryArchives are present in the upload.",
            "base_sections": [
              "/packages/18/section_definitions/10"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/49"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/48"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 51,
            "m_parent_sub_section": "section_definitions",
            "name": "DMFTResults",
            "description": "Groups DFT, Projection and DMFT outputs: band gaps (all), DOS (DFT, Projection), band structures (DFT, Projection), Greens functions (DMFT). The ResultsNormalizer takes care\nof adding a label 'DFT', 'PROJECTION, or 'DMFT' in the method `get_dmft_workflow_properties`.",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "band_gap_dft",
                "description": "DFT band gap.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/19"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "band_gap_projection",
                "description": "Projection band gap.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/19"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "band_gap_dmft",
                "description": "DMFT band gap.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/19"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "band_structure_dft",
                "description": "Ref to the DFT band structure.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "dos_dft",
                "description": "Ref to the DFT density of states.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "band_structure_projection",
                "description": "Ref to the projected band structure.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/14"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "dos_projection",
                "description": "Ref to the projected density of states.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/17"
                },
                "shape": [
                  "*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "greens_functions_dmft",
                "description": "Ref to the DMFT Greens functions.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/2/section_definitions/29"
                },
                "shape": [
                  "*"
                ]
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 52,
            "m_parent_sub_section": "section_definitions",
            "name": "DMFTMethod",
            "description": "Groups DFT, Projection and DMFT input methodologies: starting XC functional, electrons representation (basis set), Projection method reference, DMFT method reference.",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "starting_point",
                "description": "Starting point (XC functional or HF) used.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/20"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "electrons_representation",
                "description": "Basis set used.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/16"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "projection_method_ref",
                "description": "Projection methodology reference.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/23"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "dmft_method_ref",
                "description": "DMFT methodology reference.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/0/section_definitions/31"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 53,
            "m_parent_sub_section": "section_definitions",
            "name": "DMFT",
            "description": "The DMFT workflow is generated in an extra EntryArchive IF both the Projection SinglePoint and the DMFT SinglePoint EntryArchives are present in the upload.",
            "base_sections": [
              "/packages/18/section_definitions/10"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/52"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/51"
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 54,
            "m_parent_sub_section": "section_definitions",
            "name": "EquationOfStateMethod",
            "base_sections": [
              "/packages/18/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "energy_calculator",
                "description": "Name of program used to calculate energy.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 55,
            "m_parent_sub_section": "section_definitions",
            "name": "EOSFit",
            "description": "Section containing results of an equation of state fit.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "function_name",
                "description": "Specifies the function used to perform the fitting of the volume-energy data. Value\ncan be one of birch_euler, birch_lagrange, birch_murnaghan, mie_gruneisen,\nmurnaghan, pack_evans_james, poirier_tarantola, tait, vinet.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "fitted_energies",
                "description": "Array of the fitted energies corresponding to each volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points"
                ],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus",
                "description": "Calculated value of the bulk modulus by fitting the volume-energy data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "pascal"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "bulk_modulus_derivative",
                "description": "Calculated value of the pressure derivative of the bulk modulus.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "equilibrium_volume",
                "description": "Calculated value of the equilibrium volume by fitting the volume-energy data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "equilibrium_energy",
                "description": "Calculated value of the equilibrium energy by fitting the volume-energy data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [],
                "unit": "joule"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "rms_error",
                "description": "Root-mean squared value of the error in the fitting.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 56,
            "m_parent_sub_section": "section_definitions",
            "name": "EquationOfStateResults",
            "base_sections": [
              "/packages/18/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "n_points",
                "description": "Number of volume-energy pairs in data.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "int32"
                },
                "shape": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "volumes",
                "description": "Array of volumes per atom for which the energies are evaluated.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points"
                ],
                "unit": "meter ** 3"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "energies",
                "description": "Array of energies corresponding to each volume.",
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "n_points"
                ],
                "unit": "joule"
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "eos_fit",
                "sub_section": "/packages/18/section_definitions/55",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 57,
            "m_parent_sub_section": "section_definitions",
            "name": "EquationOfState",
            "base_sections": [
              "/packages/18/section_definitions/9"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "method",
                "sub_section": "/packages/18/section_definitions/54"
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "results",
                "categories": [
                  "/packages/16/category_definitions/0"
                ],
                "sub_section": "/packages/18/section_definitions/56"
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 19,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.metainfo.workflow",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Link",
            "description": "Instances of Link are used to represent either a single input or single output of a Task. Using a separate section for links allows to put\nadditional information (e.g. a name) on an input or output.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "name",
                "description": "Name of the link. Will be used as a label for the input or output in workflow representations.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity"
                    }
                  ]
                },
                "name": "section",
                "description": "A reference to the section that contains the actual input or output data.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/14/section_definitions/0"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Task",
            "description": "Instances of Task are used to represent an activity that happened during workflow execution and that was acting on inputs to produce outputs.",
            "base_sections": [
              "/packages/14/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "StringEditQuantity"
                    }
                  ]
                },
                "name": "name",
                "description": "A name of the task. Will be used as a label for the input or output in workflow representations.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "inputs",
                "description": "All the links to sections that represent the inputs for this task.",
                "sub_section": "/packages/19/section_definitions/0",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "outputs",
                "description": "All the links to sections that represent the outputs for this task.",
                "sub_section": "/packages/19/section_definitions/0",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "TaskReference",
            "description": "A proxy section that can be used to compose a workflow of tasks that are contained in a different entry or workflow.",
            "base_sections": [
              "/packages/19/section_definitions/1"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "eln": [
                    {
                      "component": "ReferenceEditQuantity"
                    }
                  ]
                },
                "name": "task",
                "description": "A reference to the task that this section is a proxy for.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/19/section_definitions/1"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Workflow",
            "description": "Instances of Workflow are used to represent a set of Tasks that connect input and output data objects to produce a provenance graph for those data.\n\nWorkflows themselves can be tasks. This allows to build nested workflows where some\nof the workflow tasks are workflows themselves.",
            "categories": [
              "/packages/14/category_definitions/5"
            ],
            "base_sections": [
              "/packages/19/section_definitions/1",
              "/packages/14/section_definitions/1"
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "tasks",
                "description": "The tasks of this workflow as a repeating sub section. Use TaskReference if tasks cannot be contained.",
                "sub_section": "/packages/19/section_definitions/1",
                "repeats": true
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 20,
        "m_parent_sub_section": "packages",
        "name": "nomad.datamodel.optimade",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Species",
            "description": "Used to describe the species of the sites of this structure. Species can be pure chemical elements, or virtual-crystal atoms representing a statistical occupation of a\ngiven site by multiple chemical elements.",
            "links": [
              "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.13"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "name",
                "description": "The name of the species; the name value MUST be unique in the species list.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "chemical_symbols",
                "description": "A list of strings of all chemical elements composing this species.\n\nIt MUST be one of the following:\n\n- a valid chemical-element name, or\n- the special value \"X\" to represent a non-chemical element, or\n- the special value \"vacancy\" to represent that this site has a non-zero probability\n\nof having a vacancy (the respective probability is indicated in the concentration\nlist, see below).\n\nIf any one entry in the species list has a chemical_symbols list that is longer than 1\nelement, the correct flag MUST be set in the list structure_features (see\nstructure_features)",
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "X",
                    "H",
                    "He",
                    "Li",
                    "Be",
                    "B",
                    "C",
                    "N",
                    "O",
                    "F",
                    "Ne",
                    "Na",
                    "Mg",
                    "Al",
                    "Si",
                    "P",
                    "S",
                    "Cl",
                    "Ar",
                    "K",
                    "Ca",
                    "Sc",
                    "Ti",
                    "V",
                    "Cr",
                    "Mn",
                    "Fe",
                    "Co",
                    "Ni",
                    "Cu",
                    "Zn",
                    "Ga",
                    "Ge",
                    "As",
                    "Se",
                    "Br",
                    "Kr",
                    "Rb",
                    "Sr",
                    "Y",
                    "Zr",
                    "Nb",
                    "Mo",
                    "Tc",
                    "Ru",
                    "Rh",
                    "Pd",
                    "Ag",
                    "Cd",
                    "In",
                    "Sn",
                    "Sb",
                    "Te",
                    "I",
                    "Xe",
                    "Cs",
                    "Ba",
                    "La",
                    "Ce",
                    "Pr",
                    "Nd",
                    "Pm",
                    "Sm",
                    "Eu",
                    "Gd",
                    "Tb",
                    "Dy",
                    "Ho",
                    "Er",
                    "Tm",
                    "Yb",
                    "Lu",
                    "Hf",
                    "Ta",
                    "W",
                    "Re",
                    "Os",
                    "Ir",
                    "Pt",
                    "Au",
                    "Hg",
                    "Tl",
                    "Pb",
                    "Bi",
                    "Po",
                    "At",
                    "Rn",
                    "Fr",
                    "Ra",
                    "Ac",
                    "Th",
                    "Pa",
                    "U",
                    "Np",
                    "Pu",
                    "Am",
                    "Cm",
                    "Bk",
                    "Cf",
                    "Es",
                    "Fm",
                    "Md",
                    "No",
                    "Lr",
                    "Rf",
                    "Db",
                    "Sg",
                    "Bh",
                    "Hs",
                    "Mt",
                    "Ds",
                    "Rg",
                    "Cn",
                    "Nh",
                    "Fl",
                    "Mc",
                    "Lv",
                    "Ts",
                    "Og",
                    "x",
                    "vacancy"
                  ]
                },
                "shape": [
                  "1..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "concentration",
                "description": "A list of floats, with same length as chemical_symbols. The numbers represent the\nrelative concentration of the corresponding chemical symbol in this species. The\nnumbers SHOULD sum to one. Cases in which the numbers do not sum to one typically fall\nonly in the following two categories:\n\n- Numerical errors when representing float numbers in fixed precision, e.g. for two\nchemical symbols with concentrations 1/3 and 2/3, the concentration might look\nsomething like [0.33333333333, 0.66666666666]. If the client is aware that the sum\nis not one because of numerical precision, it can renormalize the values so that the\nsum is exactly one.\n- Experimental errors in the data present in the database. In this case, it is the\nresponsibility of the client to decide how to process the data.\n\nNote that concentrations are uncorrelated between different sites (even of the same\nspecies).",
                "type": {
                  "type_kind": "python",
                  "type_data": "float"
                },
                "shape": [
                  "1..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "optimade": [
                    {
                      "entry": "optional",
                      "sortable": false,
                      "type": "float"
                    }
                  ]
                },
                "name": "mass",
                "type": {
                  "type_kind": "python",
                  "type_data": "float"
                },
                "unit": "unified_atomic_mass_unit"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "optimade": [
                    {
                      "entry": "optional",
                      "sortable": false,
                      "type": "string"
                    }
                  ]
                },
                "name": "original_name",
                "description": "Can be any valid Unicode string, and SHOULD contain (if specified) the name of the\nspecies that is used internally in the source database.\n\nNote: With regards to \"source database\", we refer to the immediate source being\nqueried via the OPTiMaDe API implementation. The main use of this field is for source\ndatabases that use species names, containing characters that are not allowed (see\ndescription of the species_at_sites list).",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "OptimadeEntry",
            "label": "Optimade",
            "links": [
              "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.elements"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "elements",
                "description": "Names of the different elements present in the structure.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.1"
                ],
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "X",
                    "H",
                    "He",
                    "Li",
                    "Be",
                    "B",
                    "C",
                    "N",
                    "O",
                    "F",
                    "Ne",
                    "Na",
                    "Mg",
                    "Al",
                    "Si",
                    "P",
                    "S",
                    "Cl",
                    "Ar",
                    "K",
                    "Ca",
                    "Sc",
                    "Ti",
                    "V",
                    "Cr",
                    "Mn",
                    "Fe",
                    "Co",
                    "Ni",
                    "Cu",
                    "Zn",
                    "Ga",
                    "Ge",
                    "As",
                    "Se",
                    "Br",
                    "Kr",
                    "Rb",
                    "Sr",
                    "Y",
                    "Zr",
                    "Nb",
                    "Mo",
                    "Tc",
                    "Ru",
                    "Rh",
                    "Pd",
                    "Ag",
                    "Cd",
                    "In",
                    "Sn",
                    "Sb",
                    "Te",
                    "I",
                    "Xe",
                    "Cs",
                    "Ba",
                    "La",
                    "Ce",
                    "Pr",
                    "Nd",
                    "Pm",
                    "Sm",
                    "Eu",
                    "Gd",
                    "Tb",
                    "Dy",
                    "Ho",
                    "Er",
                    "Tm",
                    "Yb",
                    "Lu",
                    "Hf",
                    "Ta",
                    "W",
                    "Re",
                    "Os",
                    "Ir",
                    "Pt",
                    "Au",
                    "Hg",
                    "Tl",
                    "Pb",
                    "Bi",
                    "Po",
                    "At",
                    "Rn",
                    "Fr",
                    "Ra",
                    "Ac",
                    "Th",
                    "Pa",
                    "U",
                    "Np",
                    "Pu",
                    "Am",
                    "Cm",
                    "Bk",
                    "Cf",
                    "Es",
                    "Fm",
                    "Md",
                    "No",
                    "Lr",
                    "Rf",
                    "Db",
                    "Sg",
                    "Bh",
                    "Hs",
                    "Mt",
                    "Ds",
                    "Rg",
                    "Cn",
                    "Nh",
                    "Fl",
                    "Mc",
                    "Lv",
                    "Ts",
                    "Og"
                  ]
                },
                "shape": [
                  "1..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.nelements"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "nelements",
                "description": "Number of different elements in the structure as an integer.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.2"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "default": 0
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.elements_ratios"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "elements_ratios",
                "description": "Relative proportions of different elements in the structure.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.3"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "float"
                },
                "shape": [
                  "nelements"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.chemical_formula_descriptive"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "chemical_formula_descriptive",
                "description": "The chemical formula for a structure as a string in a form chosen by the API\nimplementation.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.4"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.chemical_formula_reduced"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "chemical_formula_reduced",
                "description": "The reduced chemical formula for a structure as a string with element symbols and\ninteger chemical proportion numbers. The proportion number MUST be omitted if it is 1.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.5"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.chemical_formula_hill"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "chemical_formula_hill",
                "description": "The chemical formula for a structure in Hill form with element symbols followed by\ninteger chemical proportion numbers. The proportion number MUST be omitted if it is 1.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.6"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.chemical_formula_anonymous"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "chemical_formula_anonymous",
                "description": "The anonymous formula is the chemical_formula_reduced, but where the elements are\ninstead first ordered by their chemical proportion number, and then, in order left to\nright, replaced by anonymous symbols A, B, C, ..., Z, Aa, Ba, ..., Za, Ab, Bb, ... and\nso on.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.7"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "dimension_types",
                "description": "List of three integers. For each of the three directions indicated by the three lattice\nvectors (see property lattice_vectors). This list indicates if the direction is\nperiodic (value 1) or non-periodic (value 0). Note: the elements in this list each\nrefer to the direction of the corresponding entry in lattice_vectors and not\nthe Cartesian x, y, z directions.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.8"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "shape": [
                  3
                ],
                "default": [
                  0,
                  0,
                  0
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.nperiodic_dimensions"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "nperiodic_dimensions",
                "description": "An integer specifying the number of periodic dimensions in the structure, equivalent\nto the number of non-zero entries in dimension_types.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.8"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "lattice_vectors",
                "description": "The three lattice vectors in Cartesian coordinates, in \u00e5ngstr\u00f6m (\u00c5).",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.9"
                ],
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  3,
                  3
                ],
                "unit": "angstrom"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "cartesian_site_positions",
                "description": "Cartesian positions of each site. A site is an atom, a site potentially occupied by\nan atom, or a placeholder for a virtual mixture of atoms (e.g., in a virtual crystal\napproximation).",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.10"
                ],
                "type": {
                  "type_kind": "numpy",
                  "type_data": "float64"
                },
                "shape": [
                  "nsites",
                  3
                ],
                "unit": "angstrom"
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.nsites"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "nsites",
                "description": "An integer specifying the length of the cartesian_site_positions property.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.11"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "int"
                },
                "default": 0
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.species_at_sites"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "species_at_sites",
                "description": "Name of the species at each site (where values for sites are specified with the same\norder of the cartesian_site_positions property). The properties of the species are\nfound in the species property.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.12"
                ],
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "nsites"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "m_annotations": {
                  "elasticsearch": [
                    "optimade.structure_features"
                  ],
                  "optimade": [
                    "Optimade"
                  ]
                },
                "name": "structure_features",
                "description": "A list of strings that flag which special features are used by the structure.\n\n- disorder: This flag MUST be present if any one entry in the species list has a\nchemical_symbols list that is longer than 1 element.\n- unknown_positions: This flag MUST be present if at least one component of the\ncartesian_site_positions list of lists has value null.\n- assemblies: This flag MUST be present if the assemblies list is present.",
                "links": [
                  "https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.md#h.6.2.15"
                ],
                "type": {
                  "type_kind": "Enum",
                  "type_data": [
                    "disorder",
                    "unknown_positions",
                    "assemblies"
                  ]
                },
                "shape": [
                  "1..*"
                ],
                "default": []
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "species",
                "sub_section": "/packages/20/section_definitions/0",
                "repeats": true
              }
            ]
          }
        ]
      },
      {
        "m_def": "nomad.metainfo.metainfo.Package",
        "m_parent_index": 21,
        "m_parent_sub_section": "packages",
        "name": "nomad.metainfo.metainfo",
        "section_definitions": [
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 0,
            "m_parent_sub_section": "section_definitions",
            "name": "Definition",
            "description": ":class:`Definition` is the common base class for all metainfo definitions. All metainfo `definitions` (sections, quantities, subsections, packages, ...) share\nsome common properties.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "name",
                "description": "Each `definition` has a name. Names have to be valid Python identifier.\nThey can contain letters, numbers and _, but must not start with a number.\nThis also qualifies them as identifier in most storage formats, databases,\nmakes them URL safe, etc.\n\nNames must be unique within the :class:`Package` or :class:`Section` that\nthis definition is part of.\n\nBy convention, we use capitalized `CamelCase` identifier to refer to *sections\ndefinitions* (i.e. section definitions are represented by Python classes),\nlower case `snake_case` identifier for variables that hold *sections*, and for\n*properties* (i.e. fields in a Python class) we typically use lower\ncase `snake_case` identifier. Subsections are often prefixed with ``section_``\nto clearly separate subsections from quantities.\n\nGenerally, you do not have to set this attribute manually, it will be derived\nfrom Python identifiers automatically.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "label",
                "description": "Each `definition` can have an optional label. Label are like names, but\ndo not have to adhere to the Python identfier syntax.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "description",
                "description": "The description can be an arbitrary human-readable text that explains\nwhat a definition is about. For section definitions you do not have to set\nthis manually as it will be derived from the classes doc string. Quantity and\nsubsection descriptions can also be taken from the containing section class'\ndoc-string ``Attributes:`` section.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "links",
                "description": "Each definition can be accompanied by a list of URLs. These should point\nto resources that further explain the definition.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ]
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "categories",
                "description": "All metainfo definitions can be put into one or more `categories`.\nCategories allow to organize the definitions themselves. It is different from\nsections, which organize the data (e.g. quantity values) and not the definitions\nof data (e.g. quantities definitions). See :ref:`metainfo-categories` for more\ndetails.",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/21/section_definitions/5"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "deprecated",
                "description": "If set this definition is marked deprecated. The value should be a\nstring that describes how to replace the deprecated definition.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "aliases",
                "description": "A list of alternative names. For quantities and subsections these\ncan be used to access the respective property with a different name from\nits containing section.",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "variable",
                "description": "A boolean that indicates this property as variable parts in its name.\nIf this is set to true, all capital letters in the name can be\nreplaced with arbitrary strings. However, variable names work similar to\naliases and can be considered on-demand aliases. Other aliases and the\ndefined name will work as well. Thus, variable names are only resolved\nat runtime by the Python interface and are not directly serialized.\nHowever, the variable name is set in a meta attribute `m_source_name`\nautomatically for properties (but not attributes).\nVariable names are only implemented for Quantity, SubSection,\nAttribute.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "more",
                "description": "A dictionary that contains additional definition properties that are not\npart of the metainfo. Those can be passed as additional kwargs to definition\nconstructors. The values must be JSON serializable.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._JSON"
                },
                "default": {}
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "all_attributes",
                "description": "A virtual convenient property that provides all attributes as a dictionary\nfrom attribute name to attribute. This includes meta attributes (starting with m_)\nthat are defined for all properties of the same kind (sub_section or quantity).",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "attributes",
                "description": "The attributes that can further qualify property values.",
                "sub_section": "/packages/21/section_definitions/1",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 1,
            "m_parent_sub_section": "section_definitions",
            "name": "Attribute",
            "description": "Attributes can be used to qualify all properties (subsections and quantities) with simple scalar values.",
            "base_sections": [
              "/packages/21/section_definitions/0"
            ],
            "constraints": [
              "is_primitive"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "description": "The type of the attribute. Can be any primitive type, including\nnumpy types, Datetime and enums.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._QuantityType"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "shape",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Dimension"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 2,
            "m_parent_sub_section": "section_definitions",
            "name": "Property",
            "description": "A common base-class for section properties: subsections and quantities.",
            "base_sections": [
              "/packages/21/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 3,
            "m_parent_sub_section": "section_definitions",
            "name": "Section",
            "description": "Instances of the class :class:`Section` are created by writing Python classes that extend :class:`MSection` like this:\n\n.. code-block:: python\n\n    class SectionName(BaseSection):\n        ''' Section description '''\n        m_def = Section(**section_attributes)\n\n        quantity_name = Quantity(**quantity_attributes)\n        sub_section_name = SubSection(**sub_section_attributes)\n\nWe call such classes *section classes*. They are not the *section definition*, but just\nrepresentation of it in Python syntax. The *section definition* (in instance of :class:`Section`)\nwill be created for each of these classes and stored in the ``m_def`` property. See\n:ref:`metainfo-reflection` for more details.\n\nMost of the attributes for a :class:`Section` instance will be set automatically from\nthe section class:",
            "base_sections": [
              "/packages/21/section_definitions/0"
            ],
            "constraints": [
              "resolved_base_sections",
              "unique_names"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "base_sections",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/21/section_definitions/3"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "extending_sections",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/21/section_definitions/3"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "extends_base_section",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "inheriting_sections",
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/21/section_definitions/3"
                },
                "shape": [
                  "0..*"
                ],
                "default": [],
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "constraints",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "event_handlers",
                "description": "Event handler are functions that get called when the section data is changed.\nThere are two types of events: ``set`` and ``add_sub_section``. The handler type\nis determined by the handler (i.e. function) name: ``on_set`` and ``on_add_sub_section``.\nThe handler arguments correspond to :py:meth:`MSection.m_set` (section, quantity_def, value) and\n:py:meth:`MSection.m_add_sub_section` (section, sub_section_def, sub_section).\nHandler are called after the respective action was performed. This quantity is\nautomatically populated with handler from the section classes methods. If there\nis a method ``on_set`` or ``on_add_sub_section``, it will be added as handler.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Callable"
                },
                "shape": [
                  "0..*"
                ],
                "default": [],
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "inherited_sections",
                "description": "A helper attribute that gives direct and indirect base sections and extending\nsections including this section. These are all sections that this sections\ngets its properties from.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "all_base_sections",
                "description": "A helper attribute that gives direct and indirect base sections.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": false,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "all_inheriting_sections",
                "description": null,
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "all_properties",
                "description": "A helper attribute that gives all properties (subsection and quantity) definitions\nincluding inherited properties and properties from extending sections as a\ndictionary with names and definitions.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "all_quantities",
                "description": "A helper attribute that gives all quantity definition including inherited ones\nand ones from extending sections as a dictionary that maps names (strings)\nto :class:`Quantity`.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "all_sub_sections",
                "description": "A helper attribute that gives all subsection definition including inherited ones\nand ones from extending sections as a dictionary that maps names (strings)\nto :class:`SubSection`.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 12,
                "m_parent_sub_section": "quantities",
                "name": "all_sub_sections_by_section",
                "description": "A helper attribute that gives all subsection definition including inherited ones\nand ones from extending sections as a dictionary that maps section classes\n(i.e. Python class objects) to lists of :class:`SubSection`.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 13,
                "m_parent_sub_section": "quantities",
                "name": "all_aliases",
                "description": "A helper attribute that gives all aliases for all properties including\ninherited properties and properties form extending sections as a\ndictionary with aliases and the definitions.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 14,
                "m_parent_sub_section": "quantities",
                "name": "all_inner_section_definitions",
                "description": "A helper attribute that gives all inner_section_definitions including\ntheir aliases by name.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 15,
                "m_parent_sub_section": "quantities",
                "name": "has_variable_names",
                "description": null,
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 16,
                "m_parent_sub_section": "quantities",
                "name": "path",
                "description": "Shortest path from a root section to this section. This is not the path\nin the metainfo schema (`m_path`) but an archive path in potential data.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "quantities",
                "sub_section": "/packages/21/section_definitions/6",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "sub_sections",
                "sub_section": "/packages/21/section_definitions/7",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 2,
                "m_parent_sub_section": "sub_sections",
                "name": "inner_section_definitions",
                "aliases": [
                  "inner_section_defs",
                  "section_defs",
                  "inner_sections",
                  "sections"
                ],
                "sub_section": "/packages/21/section_definitions/3",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 4,
            "m_parent_sub_section": "section_definitions",
            "name": "Package",
            "description": "Packages organize metainfo definitions alongside Python modules Each Python module with metainfo Definition (explicitly or implicitly) has a member\n``m_package`` with an instance of this class. Definitions (categories, sections) in\nPython modules are automatically added to the module's :class:`Package`.\nPackages are not nested and rather have the fully qualified Python module name as\nname.\n\nThis allows to inspect all definitions in a Python module and automatically puts\nmodule name and docstring as :class:`Package` name and description.\n\nBesides the regular :class:`Definition` attributes, packages can have the following\nattributes:",
            "base_sections": [
              "/packages/21/section_definitions/0"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "all_definitions",
                "description": "A helper attribute that provides all section and category definitions\nby name and aliases.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "dependencies",
                "description": "All packages which have definitions that definitions from this package need. Being\n'needed' includes categories, base sections, and referenced definitions.",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "section_definitions",
                "description": "All `section definitions` in this package as :class:`Section`\nobjects.",
                "aliases": [
                  "section_defs",
                  "sections"
                ],
                "sub_section": "/packages/21/section_definitions/3",
                "repeats": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 1,
                "m_parent_sub_section": "sub_sections",
                "name": "category_definitions",
                "description": "All `category definitions` in this package as :class:`Category`\nobjects.",
                "aliases": [
                  "category_defs"
                ],
                "sub_section": "/packages/21/section_definitions/5",
                "repeats": true
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 5,
            "m_parent_sub_section": "section_definitions",
            "name": "Category",
            "description": "Categories allow to organize metainfo definitions (not metainfo data like sections do) Each definition, including categories themselves, can belong to a set of categories.\nCategories therefore form a hierarchy of concepts that definitions can belong to, i.e.\nthey form a `is a` relationship.",
            "base_sections": [
              "/packages/21/section_definitions/0"
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 6,
            "m_parent_sub_section": "section_definitions",
            "name": "Quantity",
            "description": "To define quantities, instantiate :class:`Quantity` as a class attribute values in a `section classes`. The name of a quantity is automatically taken from its `section class`\nattribute. You can provide all other attributes to the constructor with keyword arguments\n\nSee :ref:`metainfo-sections` to learn about `section classes`.\nIn Python terms, ``Quantity`` is a descriptor. Descriptors define how to get and\nset attributes in a Python object. This allows us to use sections like regular\nPython objects and quantity like regular Python attributes.\n\nEach quantity must define a basic data type and a shape. The values of a quantity must\nfulfil the given type. The default shape is a single value. Quantities can also have\nphysical units. Units are applied to all values.",
            "base_sections": [
              "/packages/21/section_definitions/2"
            ],
            "constraints": [
              "dimensions",
              "has_type",
              "higher_shapes_require_dtype"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "type",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._QuantityType"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "shape",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Dimension"
                },
                "shape": [
                  "0..*"
                ],
                "default": []
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "unit",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Unit"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 3,
                "m_parent_sub_section": "quantities",
                "name": "dimensionality",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 4,
                "m_parent_sub_section": "quantities",
                "name": "default",
                "type": {
                  "type_kind": "Any"
                },
                "default": null
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 5,
                "m_parent_sub_section": "quantities",
                "name": "derived",
                "description": "A Python callable that takes the containing section as input and outputs the\nvalue for this quantity. This quantity cannot be set directly, its value\nis only derived by the given callable. The callable is executed when this\nquantity is get. Derived quantities are always virtual.",
                "type": {
                  "type_kind": "custom",
                  "type_data": "nomad.metainfo.metainfo._Callable"
                },
                "default": null,
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 6,
                "m_parent_sub_section": "quantities",
                "name": "cached",
                "description": "A bool indicating that derived values should be cached unless the underlying\nsection has changed.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 7,
                "m_parent_sub_section": "quantities",
                "name": "virtual",
                "description": "A boolean that determines if this quantity is virtual. Virtual quantities can\nbe got/set like regular quantities, but their values are not (de-)serialized,\nhence never permanently stored.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 8,
                "m_parent_sub_section": "quantities",
                "name": "is_scalar",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 9,
                "m_parent_sub_section": "quantities",
                "name": "repeats",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 10,
                "m_parent_sub_section": "quantities",
                "name": "use_full_storage",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "virtual": true
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 11,
                "m_parent_sub_section": "quantities",
                "name": "flexible_unit",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 7,
            "m_parent_sub_section": "section_definitions",
            "name": "SubSection",
            "description": "Like quantities, subsections are defined in a `section class` as attributes of this class. Unlike quantities, each subsection definition becomes a property of\nthe corresponding `section definition` (parent). A subsection definition references\nanother `section definition` as the subsection (child). As a consequence, parent\n`section instances` can contain child `section instances` as subsections.\n\nContrary to the old NOMAD metainfo, we distinguish between subsection the section\nand subsection the property. This allows to use on child `section definition` as\nsubsection of many parent `section definitions`.",
            "base_sections": [
              "/packages/21/section_definitions/2"
            ],
            "constraints": [
              "has_sub_section"
            ],
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "sub_section",
                "description": "A :class:`Section` or Python class object for a `section class`. This\nwill be the child `section definition`. The defining section the child\n`section definition`.",
                "aliases": [
                  "section_definition",
                  "section_def",
                  "section"
                ],
                "type": {
                  "type_kind": "reference",
                  "type_data": "/packages/21/section_definitions/3"
                }
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 1,
                "m_parent_sub_section": "quantities",
                "name": "repeats",
                "description": "A boolean that determines whether this subsection can appear multiple\ntimes in the parent section.",
                "type": {
                  "type_kind": "python",
                  "type_data": "bool"
                },
                "default": false
              },
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 2,
                "m_parent_sub_section": "quantities",
                "name": "key_quantity",
                "type": {
                  "type_kind": "python",
                  "type_data": "str"
                },
                "default": null
              }
            ]
          },
          {
            "m_def": "nomad.metainfo.metainfo.Section",
            "m_parent_index": 8,
            "m_parent_sub_section": "section_definitions",
            "name": "Environment",
            "description": "Environments allow to manage many metainfo packages and quickly access all definitions. Environments provide a name-table for large-sets of metainfo definitions that span\nmultiple packages. It provides various functions to resolve metainfo definitions by\ntheir names, legacy names, and qualified names.",
            "quantities": [
              {
                "m_def": "nomad.metainfo.metainfo.Quantity",
                "m_parent_index": 0,
                "m_parent_sub_section": "quantities",
                "name": "all_definitions_by_name",
                "type": {
                  "type_kind": "Any"
                },
                "cached": true,
                "virtual": true
              }
            ],
            "sub_sections": [
              {
                "m_def": "nomad.metainfo.metainfo.SubSection",
                "m_parent_index": 0,
                "m_parent_sub_section": "sub_sections",
                "name": "packages",
                "description": "Packages in this environment.",
                "sub_section": "/packages/21/section_definitions/4",
                "repeats": true
              }
            ]
          }
        ]
      }
    ]
  },
  "parserMetadata": {
    "VASP": {
      "codeCategory": "Atomistic code",
      "codeLabel": "VASP",
      "codeLabelStyle": "All in capitals",
      "codeName": "vasp",
      "codeUrl": "https://www.vasp.at/",
      "parserDirName": "dependencies/electronic/electronicparsers/vasp/",
      "parserGitUrl": "https://github.com/nomad-coe/electronic-parsers.git",
      "parserSpecific": "",
      "preamble": "",
      "status": "production",
      "tableOfFiles": "|Input Filename| Description|\n|--- | --- |\n|`vasprun.xml` | **Mainfile** in plain-text (structured) XML format |\n|`OUTCAR` | plain-text (semi-structured) file, VAPS's detailed output. Read by NOMAD only as fallback to parse `outcar` data |\n"
    }
  },
  "toolkitMetadata": {
    "tutorials": [
      {
        "authors": [
          "Ahmetcik, Emre",
          "Ziletti, Angelo",
          "Ouyang, Runhai",
          "Sbail\u00f2, Luigi",
          "Scheffler, Matthias",
          "Ghiringhelli, Luca M."
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Symbolic regression via compressed sensing: a tutorial",
        "description": "In this tutorial we will show how to find descriptive parameters to predict materials properties using symbolic regrression combined with compressed sensing tools. The relative stability of the zincblende (ZB) versus rocksalt (RS) structure of binary materials is predicted and compared against a model trained with kernel ridge regression.",
        "notebook_name": "compressed_sensing.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-compressed-sensing",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/compressed_sensing.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/compressed_sensing.ipynb",
        "link_video": "https://www.youtube.com/watch?v=73mLp6C2opY",
        "link_paper": "https://th.fhi-berlin.mpg.de/site/uploads/Publications/NJP-19-023017-2017.pdf",
        "link_doi_paper": "https://doi.org/10.1088/1367-2630/aa57bf",
        "updated": "2020-09-20",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_keyword": [],
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Octet binaries"
          ],
          "category": [
            "beginner_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Compressed sensing",
            "Symbolic regression",
            "LASSO",
            "SISSO",
            "Kernel ridge regression",
            "Features selection",
            "Atomic features"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Liu, Xiangyue",
          "Sutton, Christopher",
          "Yamamoto, Takenori",
          "Blumenthal, Lars",
          "Golebiowski, Jacek",
          "Ziletti, Angelo",
          "Scheffler, Matthias",
          "Ghiringhelli, Luca M."
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "2018 NOMAD-Kaggle research competition",
        "description": "In this tutorial, we will explore the best results of the NOMAD 2018 Kaggle research competition. The goal of this competition was to develop machine-learning models for the prediction of two target properties: the formation energy and the bandgap energy of transparent semiconducting oxides. The purpose of the modelling is to facilitate the discovery of new such materials and allow for advancements in (opto)electronic technologies",
        "notebook_name": "kaggle_competition.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-kaggle-competition",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/kaggle_competition.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/kaggle_competition.ipynb",
        "link_paper": "https://th.fhi.mpg.de/site/uploads/Publications/s41524-019-0239-3.pdf",
        "link_doi_paper": "https://www.nature.com/articles/s41524-019-0239-3",
        "updated": "2021-01-19",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "Transparent conducting oxides"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Kernel ridge regression",
            "Neural networks",
            "SOAP",
            "n-gram"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Ziletti, Angelo",
          "Leitherer, Andreas",
          "Ghiringhelli, Luca M."
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Introduction to convolutional neural networks",
        "description": "In this tutorial, we briefly introduce the main ideas behind convolutional neural networks, build a neural network model with Keras, and explain the classification decision process using attentive response maps.",
        "notebook_name": "convolutional_nn.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-convolutional-nn",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/convolutional_nn.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/convolutional_nn.ipynb",
        "link_video": "https://youtu.be/MST8X1yCWK8",
        "updated": "2021-01-29",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Images"
          ],
          "category": [
            "intermediate_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Classification",
            "Neural networks",
            "Convolutional neural networks",
            "Attentive response map"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Fekete, \u00c1d\u00e1m",
          "Stella, Martina",
          "Lambert, Henry",
          "De Vita, Alessandro",
          "Cs\u00e1nyi, G\u00e1bor"
        ],
        "email": "adam.fekete@kcl.ac.uk",
        "title": "The SOAP descriptor, Gaussian Approximation Potentials (GAP) and machine learning of force fields",
        "description": "In this tutorial, we will be using a Gaussian Approximation Potentials to analyse results of TB DFT calculations on the Si surface. Along the way we will learn about different descriptors (2b, 3b, SOAP) to describe local atomic environment in order to predict energies and forces of the Si surface.",
        "notebook_name": "gap_si_surface.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-gap-si-surface",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/gap_si_surface.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/gap_si_surface.ipynb",
        "updated": "2020-06-18",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Silicon",
            "Surface"
          ],
          "category": [
            "intermediate_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Gaussian-process regression",
            "Kernel ridge regression",
            "SOAP",
            "Gaussian approximation potentials (GAP)"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Cs\u00e1nyi, G\u00e1bor",
          "Kermode, James R."
        ],
        "email": "gc121@cam.ac.uk",
        "title": "Machine learning atomic charges",
        "description": "In this tutorial, we will use Gaussian process regression, GPR (or equivalently, Kernel Ridge Regression, KRR) to train and predict charges on atoms in small organic molecules.",
        "notebook_name": "soap_atomic_charges.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-soap-atomic-charges",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/soap_atomic_charges.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/soap_atomic_charges.ipynb",
        "updated": "2019-09-26",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "GDB molecular database",
            "GDB7"
          ],
          "category": [
            "intermediate_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Gaussian-process regression",
            "Kernel ridge regression",
            "SOAP"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Fekete, \u00c1d\u00e1m",
          "Stella, Martina",
          "Lambert, Henry",
          "De Vita, Alessandro",
          "Cs\u00e1nyi, G\u00e1bor"
        ],
        "email": "adam.fekete@kcl.ac.uk",
        "title": "Structure similarity and structure-property relationship: grain boundaries of alpha-Fe",
        "description": "In this tutorial, we will be using a machine-learning method (clustering) to analyse results of grain-boundary (GB) calculations of alpha-iron. Along the way, we will learn about different methods to describe local atomic environment in order to calculate properties of GBs. We will use these properties to separate the different regions of the GB using clustering methods. Finally we will determine how the energy of the GB is changing according to the angle difference of the regions.",
        "notebook_name": "grain_boundaries.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-grain-boundaries",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/grain_boundaries.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/grain_boundaries.ipynb",
        "link_paper": "https://www.sciencedirect.com/science/article/pii/S0010465518301450?via%3Dihub",
        "link_doi_paper": "https://www.sciencedirect.com/science/article/pii/S0010465518301450/pdfft?md5=f21651f69edad3505ed3dd3ba38aee18&pid=1-s2.0-S0010465518301450-main.pdf",
        "updated": "2020-01-18",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "Iron",
            "Grain boundaries"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Unsupervised learning",
            "Supervised learning",
            "Clustering",
            "Regression",
            "k-means",
            "Gaussian mixture"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Regler, Benjamin",
          "Scheffler, Matthias",
          "Ghiringhelli, Luca M."
        ],
        "email": "regler@fhi-berlin.mpg.de",
        "title": "Introduction to total cumulative mutual information",
        "description": "This interactive notebook introduces the concepts and original implementation of total cumulative mutual information (TCMI), as presented in the related publication. The main results of the publication are also reproduced in a hands-on style",
        "notebook_name": "tcmi.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-tcmi",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/tcmi.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/tcmi.ipynb",
        "link_paper": "https://arxiv.org/pdf/2001.11212",
        "link_doi_paper": "https://arxiv.org/abs/2001.11212",
        "updated": "2020-02-06",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Synthetic data",
            "UCI regression dataset",
            "Octet binaries"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Unsupervised learning",
            "Features selection",
            "Information theory",
            "Mutual information",
            "Cumulative entropy",
            "Clustering",
            "TCMI"
          ],
          "language": [
            "python",
            "javascript"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Arif, Mohammad-Yasin",
          "Sbail\u00f2, Luigi",
          "Purcell, Thomas A. R.",
          "Ghiringhelli, Luca M.",
          "Scheffler, Matthias"
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Predicting energy differences between crystal structures: (Meta-)stability of octet-binary compounds",
        "description": "A tool for predicting the difference in the total energy between different polymorphs for 82 octet binary compounds, which gives an indication of the stability of the material. This is accomplished by identifying a set of descriptive parameters (a descriptor) from the free-atom data for the binary atomic species comprising the material using the Sure Independent Screening (SIS) + l0-norm minimization approach.",
        "notebook_name": "descriptor_role.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-descriptor-role",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/descriptor_role.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/descriptor_role.ipynb",
        "link_paper": "https://th.fhi.mpg.de/site/uploads/Publications/PRL-114-105503-2015.pdf",
        "link_doi_paper": "http://dx.doi.org/10.1103/PhysRevLett.114.105503",
        "updated": "2021-10-18",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "Octet binaries",
            "Rock salt",
            "Zinc blende"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Features selection",
            "SISSO",
            "Atomic features"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Bieniek, Bj\u00f6rn",
          "Strange, Mikkel",
          "Carbogno, Christian",
          "Arif, Mohammad-Yasin",
          "Sbail\u00f2, Luigi",
          "Scheffler, Matthias"
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Error estimates from high-accuracy electronic-structure reference calculations",
        "description": "A set of tools to analyze the error in electronic structure calculations due to the choice of numerical settings. We use the NOMAD infrastructure to systematically investigate the deviances in total and relative energies as function of typical settings for basis sets, k-grids, etc. for 71 elemental and 81 binary solids in three different electronic-structure codes.",
        "notebook_name": "error_estimates.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-error-estimates",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/error_estimates.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/error_estimates.ipynb",
        "link_paper": "https://th.fhi-berlin.mpg.de/site/uploads/Publications/2008.10402.pdf",
        "link_doi_paper": "https://arxiv.org/abs/2008.10402",
        "updated": "2021-01-21",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "application_system": [
            "Binaries",
            "Elemental solids"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Linear least-squares regression"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Sbail\u00f2, Luigi",
          "Scheffler, Matthias",
          "Ghiringhelli, Luca M."
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Querying the NOMAD Archive and performing artificial-intelligence modeling",
        "description": "In this tutorial, we demonstrate how to query the NOMAD Archive from the NOMAD Analytics toolkit. We then show examples of machine learning analysis performed on the retrieved data set.",
        "notebook_name": "query_nomad_archive.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-query-nomad-archive",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/query_nomad_archive.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/query_nomad_archive.ipynb",
        "updated": "2022-04-06",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Analysing the content of the Archive"
          ],
          "application_system": [
            "Ternaries"
          ],
          "category": [
            "query_tutorial"
          ],
          "ai_methods": [
            "Unsupervised learning",
            "Supervised learning",
            "Regression",
            "Clustering",
            "Dimension reduction",
            "Random forest"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Langer, Marcel F."
        ],
        "email": "langer@fhi-berlin.mpg.de",
        "title": "cmlkit: Toolkit for Machine Learning in Materials Science and Quantum Chemistry",
        "description": "In this tutorial, we will get to know cmlkit, a python package for specifying, evaluating, and optimising machine learning models, and use it to compete in the Nomad 2018 Kaggle challenge.",
        "notebook_name": "cmlkit.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-cmlkit",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/cmlkit.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/cmlkit.ipynb",
        "link_paper": "https://arxiv.org/pdf/2003.12081.pdf",
        "link_doi_paper": "https://arxiv.org/abs/2003.12081",
        "updated": "2021-01-14",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Transparent conducting oxides"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Kernel ridge regression",
            "SOAP",
            "MBTR",
            "Symmetry functions"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Speckhard, Daniel",
          "Leitherer, Andreas",
          "Ghiringhelli, Luca M."
        ],
        "email": "speckhard@fhi-berlin.mpg.de",
        "title": "Introduction to decision-trees methods",
        "description": "In this tutorial we will introduce decision trees. We go through a toy model introducing the SKLearn API. We then discuss step by step the different theoretical aspects of trees. We then move to training a regression tree and classification tree on different datasets related to materials science. We end the tutorial by covering random forests and bagging classfiers.",
        "notebook_name": "decision_tree.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-decision-tree",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/decision_tree.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/decision_tree.ipynb",
        "link_video": "https://www.youtube.com/watch?v=YBy9STVaqvU",
        "updated": "2020-12-08",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Images",
            "Metals",
            "Insulators",
            "matbench_expt_is_metal"
          ],
          "category": [
            "beginner_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Classification",
            "Decision tree",
            "Random forest",
            "Bagging classifier",
            "Atomic features"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Sbail\u00f2, Luigi",
          "Ghiringhelli, Luca M."
        ],
        "email": "sbailo@fhi-berlin.mpg.de",
        "title": "Introduction to clustering",
        "description": "In this tutorial, we introduce to the most popular clustering algorithms. We focus on partitioning, hierarchical and density-based clustering algorithms. The methods are tested on synthetic datasets of increasing complexity",
        "notebook_name": "clustering_tutorial.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-clustering-tutorial",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/clustering_tutorial.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/clustering_tutorial.ipynb",
        "updated": "2021-01-21",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Synthetic data"
          ],
          "category": [
            "beginner_tutorial"
          ],
          "ai_methods": [
            "Unsupervised learning",
            "Clustering",
            "k-means",
            "Hierarchical clustering",
            "DBSCAN",
            "HDBSCAN"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Sbail\u00f2, Luigi",
          "Ghiringhelli, Luca M."
        ],
        "email": "sbailo@fhi-berlin.mpg.de",
        "title": "Introduction to exploratory analysis (unsupervised learning) of materials spaces",
        "description": "Exploratory analyses make use of unsupervised learning techniques to extract information from unknown datasets. In this tutorial, we make use of some of the most popular clustering and dimension reduction algorithms to analyze a dataset composed of 82 octet-binary compounds.",
        "notebook_name": "exploratory_analysis.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-exploratory-analysis",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/exploratory_analysis.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/exploratory_analysis.ipynb",
        "link_video": "https://www.youtube.com/watch?v=EJTjF9ehp7k",
        "updated": "2021-02-04",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Octet binaries"
          ],
          "category": [
            "beginner_tutorial"
          ],
          "ai_methods": [
            "Clustering",
            "Dimension reduction",
            "k-means",
            "Hierarchical clustering",
            "DBSCAN",
            "HDBSCAN",
            "DenPeak",
            "PCA",
            "t-SNE",
            "MDS"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Arif, Mohammad-Yasin",
          "Sbail\u00f2, Luigi",
          "Ghiringhelli, Luca M."
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Identifying domains of applicability of machine-Learning models for materials science",
        "description": "In this tutorial, we present a method, based on subgroup discovery, for detecting domains of applicability (DA) of ML models within a materials class. The domain of applicability of an ML model is the region of input space where the model predicts the target property with the smallest uncertainty. The utility of this approach is demonstrated by analyzing three state-of-the-art ML models for predicting the formation energy of transparent conducting oxides.",
        "notebook_name": "domain_of_applicability.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-domain-of-applicability",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/domain_of_applicability.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/domain_of_applicability.ipynb",
        "link_paper": " https://th.fhi-berlin.mpg.de/site/uploads/Publications/s41467-020-17112-9.pdf",
        "link_doi_paper": "https://www.nature.com/articles/s41467-020-17112-9",
        "updated": "2021-01-27",
        "flags": {
          "featured": true,
          "top_of_list": false,
          "paper": true
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "Transparent conducting oxides"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Subgroup discovery",
            "Kernel ridge regression",
            "SOAP",
            "MBTR",
            "n-gram"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Leitherer, Andreas",
          "Sbail\u00f2, Luigi",
          "Ghiringhelli, Luca M."
        ],
        "email": "leitherer@fhi-berlin.mpg.de",
        "title": "Introduction to multilayer perceptrons (deep neural networks)",
        "description": "In this tutorial, we discuss how multilayer perceptrons, a standard neural-network architecture, can be employed for regression tasks. Specifically, we will use the ElemNet neural-network architecture to predict the volume per atom of inorganic compounds, where the Open Quantum Materials Database (OQMD) is used as a resource.",
        "notebook_name": "nn_regression.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-tutorial-template",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/nn_regression.ipynb",
        "link_public": "https://nomad-lab.eu/prod/analytics/public/user-redirect/notebooks/tutorials/nn_regression.ipynb",
        "link_video": "https://www.youtube.com/watch?v=U0lI5n8Hleo",
        "updated": "2021-01-29",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Materials property prediction"
          ],
          "application_system": [
            "Inorganic compounds",
            "OQMD database"
          ],
          "category": [
            "beginner_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Neural networks",
            "Deep neural networks",
            "Atomic features"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Sbail\u00f2, Luigi",
          "Purcell, Thomas A. R.",
          "Ghiringhelli, Luca M.",
          "Scheffler, Matthias"
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Discovery of new topological insulators in alloyed tetradymites",
        "description": "Learn how to find descriptive parameters (short formulas) that predict whether alloyed materials are topological or trivial insulators, using the example of tetradymites. This notebook is based on the algorithm 'sure independence screening and sparsifying operator' (SISSO) that enables to search for optimal descriptor by scanning huge feature spaces.",
        "notebook_name": "tetradymite_PRM2020.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-tetradymite-PRM2020",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/tetradymite_PRM2020.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/tetradymite_PRM2020.ipynb",
        "link_paper": "https://th.fhi.mpg.de/site/uploads/Publications/PhysRevMaterials.4.034204.pdf",
        "link_doi_paper": "https://journals.aps.org/prmaterials/abstract/10.1103/PhysRevMaterials.4.034204",
        "updated": "2020-15-09",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "Tetradymites",
            "Topological insulators"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Classification",
            "Symbolic regression",
            "Features selection",
            "Atomic features",
            "SISSO"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Leitherer, Andreas",
          "Ziletti, Angelo",
          "Ghiringhelli, Luca M."
        ],
        "email": "leitherer@fhi-berlin.mpg.de",
        "title": "ARISE - Robust recognition and exploratory analysis of crystal structures via Bayesian deep learning",
        "description": "In this tutorial, we give an introduction to ARISE (ARtificial-Intelligence-based Structure Evaluation), a powerful Bayesian-deep-neural-network tool for the recognition of atomistic structures (A. Leitherer, A. Ziletti, and L.M. Ghiringhelli, Nat. Commun. 12, 6234, 2021). ARISE is robust to structural noise and can treat more than 100 crystal structures, a number that can be extended on demand. While being trained on ideal structures only, ARISE correctly characterizes strongly perturbed single- and polycrystalline systems, from both synthetic and experimental resources. The probabilistic nature of the Bayesian-deep-learning model allows to obtain principled uncertainty estimates. By applying unsupervised learning to the internal neural-network representations, one can reveal grain boundaries and (unapparent) structural regions sharing easily interpretable geometrical properties.",
        "notebook_name": "ARISE.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-tutorial-template",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/ARISE.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/ARISE.ipynb",
        "link_paper": "https://www.nature.com/articles/s41467-021-26511-5.pdf",
        "link_doi_paper": "https://www.nature.com/articles/s41467-021-26511-5",
        "updated": "2021-03-22",
        "flags": {
          "featured": true,
          "top_of_list": false,
          "paper": true
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials science"
          ],
          "application_system": [
            "Grain boundaries",
            "Binaries",
            "Ternaries",
            "Low-dimensional materials"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Neural networks",
            "Bayesian deep learning",
            "Unsupervised learning",
            "Clustering",
            "Dimension reduction",
            "HDBSCAN",
            "UMAP",
            "SOAP"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Langer, Marcel F."
        ],
        "email": "langer@fhi-berlin.mpg.de",
        "title": "Introduction to kernel ridge regression for materials-property prediction",
        "description": "In this tutorial, we will explore the application of kernel ridge regression to the prediction of materials properties. We will begin with a largely informal, pragmatic introduction to kernel ridge regression, including a rudimentary implementation, in order to become familiar with the basic terminology and considerations. We will then discuss representations, and re-trace the NOMAD 2018 Kaggle challenge.",
        "notebook_name": "krr4mat.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-krr4mat",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/krr4mat.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/krr4mat.ipynb",
        "link_video": "https://www.youtube.com/watch?v=H_MVlljpYHw",
        "updated": "2020-12-15",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Transparent conducting oxides"
          ],
          "category": [
            "beginner_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Kernel ridge regression",
            "SOAP"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Mazheika, Aliaksei",
          "Sbail\u00f2, Luigi",
          "Ghiringhelli, Luca M.",
          "Levchenko, Sergey",
          "Scheffler, Matthias"
        ],
        "email": "mazheika@fhi-berlin.mpg.de",
        "title": "Subgroup discovery of catalysts\u2019 genes for carbon-dioxide activation on semiconductor oxides",
        "description": "In this interactive tutorial we show the application of subgroup discovery for the search for indicators of carbond-dioxide activation with the aim of its further conversion.",
        "notebook_name": "CO2_SGD.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-co2-sgd-tutorial",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/CO2_SGD.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/CO2_SGD.ipynb",
        "link_paper": "https://arxiv.org/pdf/1912.06515",
        "link_doi_paper": "https://arxiv.org/abs/1912.06515",
        "updated": "2021-08-26",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "CO2 activation",
            "Heterogeneous catalysis",
            "Semicondictor oxides"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Subgroup discovery",
            "Decision trees"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Foppa, Lucas",
          "Ghiringhelli, Luca M."
        ],
        "email": "foppa@fhi-berlin.mpg.de",
        "title": "Introduction to subgroup discovery: Identifying outstanding transition-metal-alloy catalysts",
        "description": "This tutorial introduces, by means of two applications in materials science, the artificial-intelligence technique subgroup discovery.",
        "notebook_name": "sgd_alloys_oxygen_reduction_evolution.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-sgd-alloys-oxygen-reduction-evolution",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/sgd_alloys_oxygen_reduction_evolution.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/sgd_alloys_oxygen_reduction_evolution.ipynb",
        "link_paper": "https://link.springer.com/content/pdf/10.1007/s11244-021-01502-4.pdf",
        "link_doi_paper": "https://doi.org/10.1007/s11244-021-01502-4",
        "updated": "2021-10-28",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "Heterogeneous catalysis",
            "Oxygen evolution reaction",
            "Oxygen reduction reaction",
            "Scaling relations"
          ],
          "category": [
            "intermediate_tutorial"
          ],
          "ai_methods": [
            "Subgroup discovery",
            "Decision tree"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Naik ,Aakash A.",
          "Ghiringhelli, Luca M."
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Atomic-features-package usage demonstration",
        "description": "In this tutorial, we show how the atomic-features-package can be accessed and used to explore the atomic features form various sources and to prepare the input features for machine-learning studies.",
        "notebook_name": "atomic_features.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-atomic-features",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/atomic_features.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/atomic_features.ipynb",
        "updated": "2021-12-07",
        "labels": {
          "application_system": [
            "Atoms"
          ],
          "category": [
            "query_tutorial"
          ],
          "platform": [
            "jupyter"
          ],
          "ai_methods": [
            ""
          ]
        }
      },
      {
        "authors": [
          "Foppa, Lucas",
          "Hassanzada, Qaem",
          "Bartel, Christopher",
          "Purcell, Thomas",
          "Sbail\u00f2, Luigi",
          "Ghiringhelli, Luca M."
        ],
        "email": "ghiringhelli@fhi-berlin.mpg.de",
        "title": "Finding a tolerance factor to predict perovskite stability with SISSO",
        "description": "This tutorial shows how a tolerance factor for predicting perovskite stability can be learned from data with the sure-independece-screening-and-sparsifying-operator (SISSO) descriptor-identification approach.",
        "notebook_name": "perovskites_tolerance_factor.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-perovskite-tolerance-factor",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/perovskites_tolerance_factor.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/perovskites_tolerance_factor.ipynb",
        "link_paper": "https://advances.sciencemag.org/content/advances/5/2/eaav0693.full.pdf",
        "link_doi_paper": "https://doi.org/10.1126/sciadv.aav0693",
        "updated": "2022-05-18",
        "flags": {
          "featured": true,
          "top_of_list": false,
          "paper": true
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to materials science"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "application_system": [
            "Perovskite"
          ],
          "ai_methods": [
            "Supervised learning",
            "Classification",
            "Symbolic regression",
            "Compressed sensing",
            "SISSO",
            "Decision tree",
            "Features selection",
            "Atomic features"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Foppa, Lucas",
          "Ghiringhelli, Luca M.",
          "Scheffler, Matthias"
        ],
        "email": "foppa@fhi-berlin.mpg.de",
        "title": "Learning Design Rules for Catalysts from High-Throughput Experimentation and Theory via Subgroup Discovery",
        "description": "This tutorial explores the application of subgroup discovery (SGD) to an experimental-theoretical data set in order to identify rules on key physicochemical parameters that describe the materials and environmental conditions associated with outstanding performance in heterogeneous catalysis.",
        "notebook_name": "sgd_propylene_oxidation_hte.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-sgd-propylene-oxidation-hte",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/sgd_propylene_oxidation_hte.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/sgd_propylene_oxidation_hte.ipynb",
        "link_paper": "https://pubs.acs.org/doi/10.1021/acscatal.1c04793",
        "link_doi_paper": "https://pubs.acs.org/doi/10.1021/acscatal.1c04793",
        "updated": "2022-2-09",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "Heterogeneous catalysis"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Subgroup discovery"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Gabaj, \u0160imon",
          "Kuban, Martin",
          "Rigamonti, Santiago",
          "Draxl, Claudia"
        ],
        "email": "gabajsim@physik.hu-berlin.de",
        "title": "Electronic density-of-states similarity search",
        "description": "This notebook shows how to compute the similarity of materials in terms of their electronic density-of-states (DOS), from data retrieved from the NOMAD Archive.",
        "notebook_name": "dos_similarity_search.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-dos-similarity-search",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/dos_similarity_search.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/dos_similarity_search.ipynb",
        "updated": "2022-30-03",
        "flags": {
          "featured": true,
          "top_of_list": false,
          "paper": false
        },
        "labels": {
          "application_section": [
            "Tutorials for artificial-intelligence methods"
          ],
          "application_system": [
            "Binaries",
            "Ternaries"
          ],
          "category": [
            "intermediate_tutorial"
          ],
          "ai_methods": [
            "Similarity search",
            "Fingerprint"
          ],
          "platform": [
            "jupyter"
          ]
        }
      },
      {
        "authors": [
          "Foppa, Lucas",
          "Purcell, Thomas A. R.",
          "Levchenko, Sergey V.",
          "Scheffler, Matthias",
          "Ghiringhelli, Luca M."
        ],
        "email": "foppa@fhi-berlin.mpg.de",
        "title": "Hierarchical symbolic regression for identifying key physical parameters correlated with materials properties",
        "description": "In this notebook, we describe a hierarchical symbolic-regression approach for finding, based on data, analytical expressions relating materials properties to simpler physicochemical parameters associated with the underlying processes governing the properties.",
        "notebook_name": "hierarchical_sisso.ipynb",
        "url": "https://gitlab.mpcdf.mpg.de/nomad-lab/analytics-hierarchical-sisso",
        "link": "https://analytics-toolkit.nomad-coe.eu/hub/user-redirect/notebooks/tutorials/hierarchical_sisso.ipynb",
        "link_public": "https://analytics-toolkit.nomad-coe.eu/public/user-redirect/notebooks/tutorials/hierarchical_sisso.ipynb",
        "link_paper": "https://journals.aps.org/prl/pdf/10.1103/PhysRevLett.129.055301",
        "link_doi_paper": "https://journals.aps.org/prl/pdf/10.1103/PhysRevLett.129.055301",
        "updated": "2022-8-3",
        "flags": {
          "featured": true,
          "top_of_list": false
        },
        "labels": {
          "application_section": [
            "Timely artificial-intelligence applications to Materials Science"
          ],
          "application_system": [
            "Bulk properties",
            "Perovskites"
          ],
          "category": [
            "advanced_tutorial"
          ],
          "ai_methods": [
            "Supervised learning",
            "Regression",
            "Compressed sensing",
            "Symbolic regression",
            "SISSO",
            "Features selection",
            "Atomic features"
          ],
          "platform": [
            "jupyter"
          ]
        }
      }
    ]
  },
  "exampleUploads": {
    "Basic examples": {
      "theory": {
        "path": "examples/data/uploads/theory.zip",
        "title": "Electronic structure code input and output files",
        "description": "This upload demonstrate the basic use of NOMAD's *parsers*. For many *electronic\nstructure codes* (VASP, etc.), NOMAD provides parsers. You simply upload\nthe *input and output files* of your simulations and NOMAD parsers are extracting\nall necessary metadata to produce a **FAIR** dataset.\n"
      },
      "eln": {
        "path": "examples/data/uploads/eln.zip",
        "title": "Electronic Lab Notebook",
        "description": "This example contains a custom NOMAD *schema* to create an **Electronic\nLab Notebook (ELN)** and a few example *data* entries that use this schema.\nThe schema demonstrates the basic concepts behind a NOMAD ELN and can be a good\n**starting point** to create you own schemas that model **FAIR data** acquired in your lab.\n"
      },
      "tables": {
        "path": "examples/data/uploads/tabular.zip",
        "title": "Tabular Data",
        "description": "This upload demonstrates the used of tabular data. In this example we use an *xlsx*\nfile in combination with a custom schema. The schema describes what the columns\nin the excel file mean and NOMAD can parse everything accordingly to\nproduce a **FAIR** dataset.\n"
      }
    },
    "FAIRmat examples": {
      "ellips": {
        "path": "examples/data/uploads/ellips.zip",
        "title": "Ellipsometry",
        "description": "This example presents the capabilities of the NOMAD platform to store and standardize ellipsometry data.\nIt shows the generation of a NeXus file according to the [NXellipsometry](https://manual.nexusformat.org/classes/contributed_definitions/NXellipsometry.html#nxellipsometry)\napplication definition and a successive analysis of a SiO2 on Si Psi/Delta measurement.\n"
      },
      "mpes": {
        "path": "examples/data/uploads/mpes.zip",
        "title": "Mpes",
        "description": "This example presents the capabilities of the NOMAD platform to store and standardize multi photoemission spectroscopy (MPES) experimental data. It contains three major examples:\n\n  - Taking a pre-binned file, here stored in a h5 file, and converting it into the standardized MPES NeXus format.\n    There exists a [NeXus application definition for MPES](https://manual.nexusformat.org/classes/contributed_definitions/NXmpes.html#nxmpes) which details the internal structure of such a file.\n  - Binning of raw data (see [here](https://www.nature.com/articles/s41597-020-00769-8) for additional resources) into a h5 file and consecutively generating a NeXus file from it.\n  - An analysis example using data in the NeXus format and employing the [pyARPES](https://github.com/chstan/arpes) analysis tool to reproduce the main findings of [this paper](https://arxiv.org/pdf/2107.07158.pdf).\n"
      },
      "xps": {
        "path": "examples/data/uploads/xps.zip",
        "title": "XPS",
        "description": "This example presents the capabilities of the NOMAD platform to store and standardize XPS data.\nIt shows the generation of a NeXus file according to the\n[NXmpes](https://manual.nexusformat.org/classes/contributed_definitions/NXmpes.html#nxmpes)\napplication definition and a successive analysis of an example data set.\n"
      },
      "sts": {
        "path": "examples/data/uploads/sts.zip",
        "title": "STS",
        "description": "AT this moment, the reader works for two types of experiments Scanning Tunneling Microscopy (STM) and Scanning Tunneling Spectroscopy (STS) from Scanning Probe Microscopy.\nIt can only transform the data from Nanonis machine generate files into standarized nexus application definition NXsts. In this zip file, the data file are collected from\ntwo specific software versions generic 5e and genric 4.5.\n"
      },
      "apm": {
        "path": "examples/data/uploads/apm.zip",
        "title": "Atom Probe Microscopy",
        "description": "This is an example for atom probe microscopy offering\nan atom-probe-specific custom schema for an ELN and aligned NeXus data schema\n(NXapm) supporting standardization, parsing capabilities for the most frequently\nused file formats (POS, ePOS, APT) for storing reconstruction and ranging\ndefinitions (RNG, RRNG), real world example data, and a docker container apmtools\nwhich contains configured open-source tools for analyzing atom probe dataset\nfor exploring composition and microstructural features described using methods\nfrom the research fields of computational geometry and materials engineering.\n"
      },
      "em_spctrscpy": {
        "path": "examples/data/uploads/em_spctrscpy.zip",
        "title": "Spectroscopy Experiments with Electron Microscopy",
        "description": "This is an example for scanning and/or transmission electron microscopy offering\nexamples how NOMAD can be customized to support spectroscopy methods like\nenergy-dispersive X-ray (EDXS/EDS) and electron energy loss spectroscopy (EELS).\nThe example offers a domain-specific custom schema for an ELN and aligned NeXus\ndata schema (NXem) supporting standardization, parsing capabilities for some\nexamples of file formats supported via hyperspy and third-party tools.\nExamples implement how to parse data from DM3, Velox EMD and Bruker BCF files.\n"
      },
      "em_om": {
        "path": "examples/data/uploads/em_om.zip",
        "title": "Orientation Microscopy with Electron Microscopy",
        "description": "This is an example for scanning and/or transmission electron microscopy offering\na proof-of-concept how NOMAD can be customized to support orientation microscopy\nmethods and thus one large group of diffraction-based methods in an electron\nmicroscope.\nSpecifically, the example shows how electron backscatter diffraction as a\ntechnique can be conceptually represented in a research data management system.\nThe example offers a domain-specific custom schema for storing EBSD data and\nrelated practical steps and mathematical conventions assumed including an aligned\nNeXus data schema (NXem_ebsd) as a draft proposal for convincing why more\nstandardization in the research field of orientation microscopy is useful.\nFurthermore, the example comes with real world data from multiple sources\ndifferent tools/analysis strategies used. The example includes a set of parsers\nusing the pynxtools library which implements proof-of-concepts how EBSD data\nin different representation can be loaded (HDF5-based files from technology\npartners exemplified for H5OINA, analysis results from third-party community\nsoftware like MTex, how to interface with an use the pyxem/orix/kikuchipy library,\nand an example of correlative studies where a set of serial-sectioning\norientation maps is processed into a three-dimensionally reconstructed\nmicrostructure using the popular community tool DREAM.3D.\nFeedback from the EBSD community is welcome to substantially enhance\nthe capabilities of the underlying tools, specifically pynxtools to\noffer a library that can be used in research data management systems\nsuch as but not exclusively NOMAD OASIS.\n"
      },
      "em_nion": {
        "path": "examples/data/uploads/em_nion.zip",
        "title": "Reading electron microscopy data from compressed nionswift project files",
        "description": "This is an initial implementation and draft example using the pynxtools\nlibrary capabilities and em_nion reader to show how data can be read\ndirectly from nionswift project files and then mapped using mapping\ntables on an instance of the NeXus NXem application definition.\n"
      },
      "iv_temp": {
        "path": "examples/data/uploads/iv_temp.zip",
        "title": "Sensor Scan - IV Temperature Curve",
        "description": "This example shows users how to take data from a Python framework and map it out to a Nexus application definition for IV Temperature measurements, [NXiv_temp](https://fairmat-experimental.github.io/nexus-fairmat-proposal/1c3806dba40111f36a16d0205cc39a5b7d52ca2e/classes/contributed_definitions/NXiv_temp.html#nxiv-temp).\nWe use the Nexus ELN features of Nomad to generate a Nexus file.\n"
      }
    }
  },
  "northTools": {
    "jupyter": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/jupyterlab:v0.0.1",
      "description": "### **Jupyter Notebook**: The Classic Notebook Interface\n\nThe Jupyter Notebook is the original web application for creating and sharing computational documents. It offers a simple, streamlined, document-centric experience.",
      "short_description": "Basic jupyter run with an empty notebook or on given notebook file.",
      "cmd": null,
      "path_prefix": "tree",
      "mount_path": "/home/jovyan",
      "icon": "jupyter_logo.svg",
      "file_extensions": [
        "ipynb"
      ],
      "maintainer": [
        {
          "name": "Markus Scheidgen",
          "email": "markus.scheidgen@physik.hu-berlin.de"
        },
        {
          "name": "Some-one Else",
          "email": "markus.scheidgen@physik.hu-berlin.de"
        }
      ],
      "privileged": false,
      "external_mounts": []
    },
    "nionswift": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/nionswift-webtop",
      "description": "Run Nion Swift to analyze data.",
      "short_description": "Run NionSwift to analyze data as well as prepare focus series reconstructions",
      "cmd": null,
      "path_prefix": null,
      "mount_path": "/config",
      "icon": null,
      "file_extensions": [],
      "maintainer": [
        {
          "name": "Sherjeel Shabih",
          "email": "sherjeel.shabih@hu-berlin.de"
        }
      ],
      "privileged": true,
      "external_mounts": []
    },
    "nexustools": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/nexus-webtop",
      "description": "Includes multiple NeXus tools for visualization and analysis.",
      "short_description": null,
      "cmd": null,
      "path_prefix": null,
      "mount_path": "/config",
      "icon": null,
      "file_extensions": [
        "nxs",
        "nx",
        "nexus",
        "hdf5",
        "hd5",
        "h5",
        "hdf",
        "ipynb"
      ],
      "maintainer": [
        {
          "name": "Sandor Brockhauser",
          "email": "sandor.brockhauser@physik.hu-berlin.de"
        }
      ],
      "privileged": true,
      "external_mounts": []
    },
    "ellips": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/ellips-jupyter",
      "description": "This example presents the capabilities of the NOMAD platform to store and standardize ellipsometry data. It shows the generation of a NeXus file according to the [NXellipsometry](https://manual.nexusformat.org/classes/contributed_definitions/NXellipsometry.html#nxellipsometry) application definition and a successive analysis of a SiO2 on Si Psi/Delta measurement.",
      "short_description": "An example for analyzing ellipsometric data.",
      "cmd": null,
      "path_prefix": "lab/tree",
      "mount_path": "/home/jovyan",
      "icon": "jupyter_logo.svg",
      "file_extensions": [
        "ipynb",
        "nxs"
      ],
      "maintainer": [
        {
          "name": "Florian Dobener",
          "email": "florian.dobener@physik.hu-berlin.de"
        },
        {
          "name": "Carola Emminger",
          "email": "emminger.carola@physik.hu-berlin.de"
        }
      ],
      "privileged": false,
      "external_mounts": []
    },
    "mpes": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/mpes-webtop",
      "description": "This example presents the capabilities of the NOMAD platform to store and standardize multi photoemission spectroscopy (MPES) experimental data. It contains three major examples:\n\n- Taking a pre-binned file, here stored in a h5 file, and converting it into the standardized MPES NeXus format. There exists a [NeXus application definition for MPES](https://manual.nexusformat.org/classes/contributed_definitions/NXmpes.html#nxmpes) which details the internal structure of such a file.\n- Binning of raw data (see [here](https://www.nature.com/articles/s41597-020-00769-8) for additional resources) into a h5 file and consecutively generating a NeXus file from it.\n- An analysis example using data in the NeXus format and employing the [pyARPES](https://github.com/chstan/arpes) analysis tool to reproduce the main findings of [this paper](https://arxiv.org/pdf/2107.07158.pdf).",
      "short_description": "An example for analyzing mpes data.",
      "cmd": null,
      "path_prefix": null,
      "mount_path": "/config",
      "icon": null,
      "file_extensions": [
        "ipynb",
        "nxs",
        "h5",
        "hdf5"
      ],
      "maintainer": [
        {
          "name": "Florian Dobener",
          "email": "florian.dobener@physik.hu-berlin.de"
        }
      ],
      "privileged": true,
      "external_mounts": []
    },
    "xps": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/xps-jupyter",
      "description": "Includes tools for analyzing X-ray Photoelectron Spectroscopy (XPS) spectra and converting SPECS xml files into NeXus.",
      "short_description": "An example for analyzing XPS data.",
      "cmd": null,
      "path_prefix": "lab/tree",
      "mount_path": "/home/jovyan",
      "icon": "jupyter_logo.svg",
      "file_extensions": [
        "ipynb",
        "nxs",
        "h5",
        "hdf5"
      ],
      "maintainer": [
        {
          "name": "Florian Dobener",
          "email": "florian.dobener@physik.hu-berlin.de"
        },
        {
          "name": "Rubel Mozumder",
          "email": "rubel.mozumder@physik.hu-berlin.de"
        }
      ],
      "privileged": false,
      "external_mounts": []
    },
    "sts": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/sts-jupyter",
      "description": "AT this moment, the reader works for two types of experiments, Scanning Tunneling Microscopy (STM) and Scanning Tunneling Spectroscopy (STS) from Scanning Probe Microscopy. It can only transform the data from Nanonis machine generated files into standarised nexus application definition NXsts. The present version of STS reader can handle files from two specific software versions generic 5e and genric 4.5.",
      "short_description": "An example for analyzing SPM (STM /STS) experiment.",
      "cmd": null,
      "path_prefix": "lab/tree",
      "mount_path": "/home/jovyan",
      "icon": "jupyter_logo.svg",
      "file_extensions": [
        "ipynb",
        "nxs",
        "h5",
        "hdf5"
      ],
      "maintainer": [
        {
          "name": "Rubel Mozumder",
          "email": "rubel.mozumder@physik.hu-berlin.de"
        }
      ],
      "privileged": false,
      "external_mounts": []
    },
    "webtop": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/webtop",
      "description": "Baseline webtop image for test",
      "short_description": null,
      "cmd": null,
      "path_prefix": null,
      "mount_path": "/config",
      "icon": null,
      "file_extensions": [],
      "maintainer": [
        {
          "name": "Sherjeel Shabih",
          "email": "sherjeel.shabih@hu-berlin.de"
        }
      ],
      "privileged": true,
      "external_mounts": []
    },
    "apmtools": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/apmtools-webtop",
      "description": "Miscellaneous tools from the atom probe community:\nCurrently APTyzer, paraprobe-toolbox, and APAV",
      "short_description": "An example for analyzing atom probe data.",
      "cmd": null,
      "path_prefix": null,
      "mount_path": "/config",
      "icon": "jupyter_logo.svg",
      "file_extensions": [],
      "maintainer": [
        {
          "name": "Markus K\u00fchbach",
          "email": "markus.kuehbach@physik.hu-berlin.de"
        }
      ],
      "privileged": true,
      "external_mounts": []
    },
    "fiji": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/fiji-webtop",
      "description": "ImageJ and Fiji with amongst others several electron-microscopy specific plug-ins",
      "short_description": "ImageJ and Fiji for image processing",
      "cmd": null,
      "path_prefix": null,
      "mount_path": "/config",
      "icon": "jupyter_logo.svg",
      "file_extensions": [],
      "maintainer": [
        {
          "name": "Markus K\u00fchbach",
          "email": "markus.kuehbach@physik.hu-berlin.de"
        }
      ],
      "privileged": true,
      "external_mounts": []
    },
    "frwr": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/frwr-webtop",
      "description": "FRWR3 in-line holography/focus series reconstruction code",
      "short_description": "Inline electron holography by C. Koch",
      "cmd": null,
      "path_prefix": null,
      "mount_path": "/config",
      "icon": "jupyter_logo.svg",
      "file_extensions": [],
      "maintainer": [
        {
          "name": "Markus K\u00fchbach",
          "email": "markus.kuehbach@physik.hu-berlin.de"
        }
      ],
      "privileged": true,
      "external_mounts": []
    },
    "abtem": {
      "image": "gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-remote-tools-hub/abtem-webtop",
      "description": "VESTA, GPAW, and abTEM configured in one container for simulating images and diffraction patterns in transmission electron microscopy",
      "short_description": "Electronic structure supported image simulation for transmission electron microscopy.",
      "cmd": null,
      "path_prefix": null,
      "mount_path": "/config",
      "icon": "jupyter_logo.svg",
      "file_extensions": [],
      "maintainer": [
        {
          "name": "Markus K\u00fchbach",
          "email": "markus.kuehbach@physik.hu-berlin.de"
        }
      ],
      "privileged": true,
      "external_mounts": []
    }
  },
  "unitList": [
    {
      "name": "ampere",
      "dimension": "current",
      "label": "Ampere",
      "abbreviation": "A",
      "aliases": [
        "A",
        "amp"
      ]
    },
    {
      "name": "bit",
      "dimension": "information",
      "label": "Bit",
      "abbreviation": "bit",
      "aliases": []
    },
    {
      "name": "candela",
      "dimension": "luminosity",
      "label": "Candela",
      "abbreviation": "cd",
      "aliases": [
        "cd",
        "candle"
      ]
    },
    {
      "name": "dimensionless",
      "dimension": "dimensionless",
      "label": "Dimensionless",
      "abbreviation": ""
    },
    {
      "name": "kelvin",
      "dimension": "temperature",
      "label": "Kelvin",
      "abbreviation": "K",
      "aliases": [
        "K",
        "degK",
        "\u00b0K",
        "degree_Kelvin",
        "degreeK"
      ]
    },
    {
      "name": "kilogram",
      "dimension": "mass",
      "label": "Kilogram",
      "abbreviation": "kg"
    },
    {
      "name": "meter",
      "dimension": "length",
      "label": "Meter",
      "abbreviation": "m",
      "aliases": [
        "m",
        "metre"
      ]
    },
    {
      "name": "mole",
      "dimension": "substance",
      "label": "Mole",
      "abbreviation": "mol",
      "aliases": [
        "mol"
      ]
    },
    {
      "name": "pixel",
      "dimension": "digital_image_resolution",
      "label": "Pixel",
      "abbreviation": "px",
      "aliases": [
        "px",
        "pel"
      ]
    },
    {
      "name": "radian",
      "dimension": "angle",
      "label": "Radian",
      "abbreviation": "rad",
      "aliases": [
        "rad"
      ]
    },
    {
      "name": "second",
      "dimension": "time",
      "label": "Second",
      "abbreviation": "s",
      "aliases": [
        "s",
        "sec"
      ]
    },
    {
      "name": "US_international_ampere",
      "dimension": "current",
      "label": "US international ampere",
      "abbreviation": "A_US",
      "aliases": [
        "A_US"
      ],
      "definition": "0.9998350816345909 ampere",
      "offset": 0.0
    },
    {
      "name": "US_international_ohm",
      "dimension": "resistance",
      "label": "US international ohm",
      "abbreviation": "\u03a9_US",
      "aliases": [
        "\u03a9_US",
        "ohm_US"
      ],
      "definition": "1.000495 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "US_international_volt",
      "dimension": "electric_potential",
      "label": "US international volt",
      "abbreviation": "V_US",
      "aliases": [
        "V_US"
      ],
      "definition": "1.00033 kilogram * meter ^ 2 / ampere / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "abampere",
      "dimension": "current",
      "label": "Abampere",
      "abbreviation": "abA",
      "aliases": [
        "abA"
      ],
      "definition": "10 ampere",
      "offset": 0.0
    },
    {
      "name": "abcoulomb",
      "dimension": "charge",
      "label": "Abcoulomb",
      "abbreviation": "abC",
      "aliases": [
        "abC"
      ],
      "definition": "10 ampere * second",
      "offset": 0.0
    },
    {
      "name": "abfarad",
      "dimension": "capacitance",
      "label": "Abfarad",
      "abbreviation": "abF",
      "aliases": [
        "abF"
      ],
      "definition": "1000000000.0 ampere ^ 2 * second ^ 4 / kilogram / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "abhenry",
      "dimension": "inductance",
      "label": "Abhenry",
      "abbreviation": "abH",
      "aliases": [
        "abH"
      ],
      "definition": "1.0000000000000003e-09 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "abohm",
      "dimension": "resistance",
      "label": "Abohm",
      "abbreviation": "ab\u03a9",
      "aliases": [
        "ab\u03a9"
      ],
      "definition": "1.0000000000000003e-09 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "absiemens",
      "dimension": "conductance",
      "label": "Absiemens",
      "abbreviation": "abS",
      "aliases": [
        "abS",
        "abmho"
      ],
      "definition": "1000000000.0 ampere ^ 2 * second ^ 3 / kilogram / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "abvolt",
      "dimension": "electric_potential",
      "label": "Abvolt",
      "abbreviation": "abV",
      "aliases": [
        "abV"
      ],
      "definition": "1e-08 kilogram * meter ^ 2 / ampere / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "angstrom",
      "dimension": "length",
      "label": "Angstrom",
      "abbreviation": "\u00c5",
      "aliases": [
        "\u00c5",
        "\u00e5ngstr\u00f6m",
        "\u212b"
      ],
      "definition": "1e-10 meter",
      "offset": 0.0
    },
    {
      "name": "arcminute",
      "dimension": "angle",
      "label": "Arcminute",
      "abbreviation": "arcmin",
      "aliases": [
        "arcmin",
        "arc_minute",
        "angular_minute"
      ],
      "definition": "0.00029088820866572163 radian",
      "offset": 0.0
    },
    {
      "name": "arcsecond",
      "dimension": "angle",
      "label": "Arcsecond",
      "abbreviation": "arcsec",
      "aliases": [
        "arcsec",
        "arc_second",
        "angular_second"
      ],
      "definition": "4.84813681109536e-06 radian",
      "offset": 0.0
    },
    {
      "name": "atomic_mass_constant",
      "dimension": "mass",
      "label": "Atomic mass constant",
      "abbreviation": "m_u",
      "aliases": [
        "m_u"
      ],
      "definition": "1.6605390666e-27 kilogram",
      "offset": 0.0
    },
    {
      "name": "atomic_unit_of_current",
      "dimension": "current",
      "label": "Atomic unit of current",
      "abbreviation": "a_u_current",
      "aliases": [
        "a_u_current"
      ],
      "definition": "0.006623618237509995 ampere",
      "offset": 0.0
    },
    {
      "name": "atomic_unit_of_electric_field",
      "dimension": "electric_field",
      "label": "Atomic unit of electric field",
      "abbreviation": "a_u_electric_field",
      "aliases": [
        "a_u_electric_field"
      ],
      "definition": "514220674762.31793 kilogram * meter / ampere / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "atomic_unit_of_force",
      "dimension": "force",
      "label": "Atomic unit of force",
      "abbreviation": "a_u_force",
      "aliases": [
        "a_u_force"
      ],
      "definition": "8.238723498238991e-08 kilogram * meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "atomic_unit_of_intensity",
      "dimension": "intensity",
      "label": "Atomic unit of intensity",
      "abbreviation": "a_u_intensity",
      "aliases": [
        "a_u_intensity"
      ],
      "definition": "3.509445520566477e+20 kilogram / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "atomic_unit_of_length",
      "dimension": "length",
      "label": "Atomic unit of length",
      "abbreviation": "bohr",
      "aliases": [
        "bohr",
        "a_0",
        "a0",
        "bohr_radius",
        "a_u_length"
      ],
      "definition": "5.2917721090397754e-11 meter",
      "offset": 0.0
    },
    {
      "name": "atomic_unit_of_pressure",
      "dimension": "pressure",
      "label": "Atomic unit of pressure",
      "abbreviation": "a_u_pressure",
      "aliases": [
        "a_u_pressure"
      ],
      "definition": "29421015696359.54 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "atomic_unit_of_temperature",
      "dimension": "temperature",
      "label": "Atomic unit of temperature",
      "abbreviation": "a_u_temp",
      "aliases": [
        "a_u_temp"
      ],
      "definition": "315775.0248040719 kelvin",
      "offset": 0.0
    },
    {
      "name": "atomic_unit_of_time",
      "dimension": "time",
      "label": "Atomic unit of time",
      "abbreviation": "a_u_time",
      "aliases": [
        "a_u_time"
      ],
      "definition": "2.4188843265856806e-17 second",
      "offset": 0.0
    },
    {
      "name": "bar",
      "dimension": "pressure",
      "label": "Bar",
      "abbreviation": "bar",
      "aliases": [],
      "definition": "100000.0 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "barn",
      "dimension": "area",
      "label": "Barn",
      "abbreviation": "b",
      "aliases": [
        "b"
      ],
      "definition": "1e-28 meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "barye",
      "dimension": "pressure",
      "label": "Barye",
      "abbreviation": "Ba",
      "aliases": [
        "Ba",
        "barie",
        "barad",
        "barrie",
        "baryd"
      ],
      "definition": "0.1 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "becquerel",
      "dimension": "frequency",
      "label": "Becquerel",
      "abbreviation": "Bq",
      "aliases": [
        "Bq"
      ],
      "definition": "1.0 / second",
      "offset": 0.0
    },
    {
      "name": "biot",
      "dimension": "current",
      "label": "Biot",
      "abbreviation": "Bi",
      "aliases": [
        "Bi"
      ],
      "definition": "10 ampere",
      "offset": 0.0
    },
    {
      "name": "bohr_magneton",
      "dimension": "magnetic_dipole",
      "label": "Bohr magneton",
      "abbreviation": "\u00b5_B",
      "aliases": [
        "\u00b5_B",
        "mu_B"
      ],
      "definition": "9.274010078362164e-24 ampere * meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "boltzmann_constant",
      "dimension": "entropy",
      "label": "Boltzmann constant",
      "abbreviation": "k",
      "aliases": [
        "k",
        "k_B"
      ],
      "definition": "1.380649e-23 kilogram * meter ^ 2 / kelvin / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "buckingham",
      "dimension": "electric_quadrupole",
      "label": "Buckingham",
      "abbreviation": "buckingham",
      "aliases": [],
      "definition": "3.335640951981521e-40 ampere * meter ^ 2 * second",
      "offset": 0.0
    },
    {
      "name": "byte",
      "dimension": "information",
      "label": "Byte",
      "abbreviation": "B",
      "aliases": [
        "B",
        "octet"
      ],
      "definition": "8 bit",
      "offset": 0.0
    },
    {
      "name": "calorie",
      "dimension": "energy",
      "label": "Calorie",
      "abbreviation": "cal",
      "aliases": [
        "cal",
        "thermochemical_calorie",
        "cal_th"
      ],
      "definition": "4.184 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "carat",
      "dimension": "mass",
      "label": "Carat",
      "abbreviation": "ct",
      "aliases": [
        "ct",
        "karat"
      ],
      "definition": "0.0002 kilogram",
      "offset": 0.0
    },
    {
      "name": "centimeter_H2O",
      "dimension": "pressure",
      "label": "Centimeter H2O",
      "abbreviation": "cmH2O",
      "aliases": [
        "cmH2O",
        "cm_H2O"
      ],
      "definition": "98.06649999999998 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "centimeter_Hg",
      "dimension": "pressure",
      "label": "Centimeter Hg",
      "abbreviation": "cmHg",
      "aliases": [
        "cmHg",
        "cm_Hg",
        "centimeter_Hg_0C"
      ],
      "definition": "1333.2238741499998 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "classical_electron_radius",
      "dimension": "length",
      "label": "Classical electron radius",
      "abbreviation": "r_e",
      "aliases": [
        "r_e"
      ],
      "definition": "2.817940326216153e-15 meter",
      "offset": 0.0
    },
    {
      "name": "clausius",
      "dimension": "entropy",
      "label": "Clausius",
      "abbreviation": "Cl",
      "aliases": [
        "Cl"
      ],
      "definition": "4.184 kilogram * meter ^ 2 / kelvin / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "conductance_quantum",
      "dimension": "conductance",
      "label": "Conductance quantum",
      "abbreviation": "G_0",
      "aliases": [
        "G_0"
      ],
      "definition": "7.74809172986365e-05 ampere ^ 2 * second ^ 3 / kilogram / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "conventional_ampere_90",
      "dimension": "current",
      "label": "Conventional ampere 90",
      "abbreviation": "A_90",
      "aliases": [
        "A_90"
      ],
      "definition": "1.000000088871438 ampere",
      "offset": 0.0
    },
    {
      "name": "conventional_coulomb_90",
      "dimension": "charge",
      "label": "Conventional coulomb 90",
      "abbreviation": "C_90",
      "aliases": [
        "C_90"
      ],
      "definition": "1.000000088871438 ampere * second",
      "offset": 0.0
    },
    {
      "name": "conventional_farad_90",
      "dimension": "capacitance",
      "label": "Conventional farad 90",
      "abbreviation": "F_90",
      "aliases": [
        "F_90"
      ],
      "definition": "0.9999999822063327 ampere ^ 2 * second ^ 4 / kilogram / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "conventional_henry_90",
      "dimension": "inductance",
      "label": "Conventional henry 90",
      "abbreviation": "H_90",
      "aliases": [
        "H_90"
      ],
      "definition": "1.0000000177936679 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "conventional_ohm_90",
      "dimension": "resistance",
      "label": "Conventional ohm 90",
      "abbreviation": "\u03a9_90",
      "aliases": [
        "\u03a9_90",
        "ohm_90"
      ],
      "definition": "1.0000000177936679 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "conventional_volt_90",
      "dimension": "electric_potential",
      "label": "Conventional volt 90",
      "abbreviation": "V_90",
      "aliases": [
        "V_90"
      ],
      "definition": "1.0000001066651074 kilogram * meter ^ 2 / ampere / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "conventional_von_klitzing_constant",
      "dimension": "resistance",
      "label": "Conventional von klitzing constant",
      "abbreviation": "R_K90",
      "aliases": [
        "R_K90"
      ],
      "definition": "25812.807 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "conventional_watt_90",
      "dimension": "power",
      "label": "Conventional watt 90",
      "abbreviation": "W_90",
      "aliases": [
        "W_90"
      ],
      "definition": "1.0000001955365547 kilogram * meter ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "coulomb",
      "dimension": "charge",
      "label": "Coulomb",
      "abbreviation": "C",
      "aliases": [
        "C"
      ],
      "definition": "1 ampere * second",
      "offset": 0.0
    },
    {
      "name": "counts_per_second",
      "dimension": "frequency",
      "label": "Counts per second",
      "abbreviation": "cps",
      "aliases": [
        "cps"
      ],
      "definition": "1.0 / second",
      "offset": 0.0
    },
    {
      "name": "curie",
      "dimension": "frequency",
      "label": "Curie",
      "abbreviation": "Ci",
      "aliases": [
        "Ci"
      ],
      "definition": "37000000000.0 / second",
      "offset": 0.0
    },
    {
      "name": "dalton",
      "dimension": "mass",
      "label": "Dalton",
      "abbreviation": "Da",
      "aliases": [
        "Da"
      ],
      "definition": "1.6605390666e-27 kilogram",
      "offset": 0.0
    },
    {
      "name": "darcy",
      "dimension": "area",
      "label": "Darcy",
      "abbreviation": "darcy",
      "aliases": [],
      "definition": "9.86923266716013e-13 meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "debye",
      "dimension": "electric_dipole",
      "label": "Debye",
      "abbreviation": "D",
      "aliases": [
        "D"
      ],
      "definition": "3.335640951981521e-30 ampere * meter * second",
      "offset": 0.0
    },
    {
      "name": "degree",
      "dimension": "angle",
      "label": "Degree",
      "abbreviation": "\u00b0",
      "aliases": [
        "\u00b0",
        "deg",
        "arcdeg",
        "arcdegree",
        "angular_degree"
      ],
      "definition": "0.017453292519943295 radian",
      "offset": 0.0
    },
    {
      "name": "degree_Celsius",
      "dimension": "temperature",
      "label": "Degree Celsius",
      "abbreviation": "\u00b0C",
      "aliases": [
        "\u00b0C",
        "celsius",
        "degC",
        "degreeC"
      ],
      "definition": "1 kelvin",
      "offset": 273.15
    },
    {
      "name": "degree_Fahrenheit",
      "dimension": "temperature",
      "label": "Degree Fahrenheit",
      "abbreviation": "\u00b0F",
      "aliases": [
        "\u00b0F",
        "fahrenheit",
        "degF",
        "degreeF"
      ],
      "definition": "0.5555555555555556 kelvin",
      "offset": 459.67
    },
    {
      "name": "degree_Rankine",
      "dimension": "temperature",
      "label": "Degree Rankine",
      "abbreviation": "\u00b0R",
      "aliases": [
        "\u00b0R",
        "rankine",
        "degR",
        "degreeR"
      ],
      "definition": "0.5555555555555556 kelvin",
      "offset": 0.0
    },
    {
      "name": "degree_Reaumur",
      "dimension": "temperature",
      "label": "Degree Reaumur",
      "abbreviation": "\u00b0Re",
      "aliases": [
        "\u00b0Re",
        "reaumur",
        "degRe",
        "degreeRe",
        "degree_R\u00e9aumur",
        "r\u00e9aumur"
      ],
      "definition": "0.8 kelvin",
      "offset": 341.43749999999994
    },
    {
      "name": "dyne",
      "dimension": "force",
      "label": "Dyne",
      "abbreviation": "dyn",
      "aliases": [
        "dyn"
      ],
      "definition": "1e-05 kilogram * meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "electrical_horsepower",
      "dimension": "power",
      "label": "Electrical horsepower",
      "abbreviation": "electrical_horsepower",
      "aliases": [],
      "definition": "746.0 kilogram * meter ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "electron_mass",
      "dimension": "mass",
      "label": "Electron mass",
      "abbreviation": "m_e",
      "aliases": [
        "m_e",
        "atomic_unit_of_mass",
        "a_u_mass"
      ],
      "definition": "9.1093837015e-31 kilogram",
      "offset": 0.0
    },
    {
      "name": "electron_volt",
      "dimension": "energy",
      "label": "Electron volt",
      "abbreviation": "eV",
      "aliases": [
        "eV"
      ],
      "definition": "1.602176634e-19 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "elementary_charge",
      "dimension": "charge",
      "label": "Elementary charge",
      "abbreviation": "e",
      "aliases": [
        "e"
      ],
      "definition": "1.602176634e-19 ampere * second",
      "offset": 0.0
    },
    {
      "name": "entropy_unit",
      "dimension": "molar_entropy",
      "label": "Entropy unit",
      "abbreviation": "eu",
      "aliases": [
        "eu"
      ],
      "definition": "4.184 kilogram * meter ^ 2 / kelvin / mole / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "enzyme_unit",
      "dimension": "activity",
      "label": "Enzyme unit",
      "abbreviation": "U",
      "aliases": [
        "U",
        "enzymeunit"
      ],
      "definition": "1.6666666666666667e-08 mole / second",
      "offset": 0.0
    },
    {
      "name": "erg",
      "dimension": "energy",
      "label": "Erg",
      "abbreviation": "erg",
      "aliases": [],
      "definition": "1.0000000000000001e-07 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "farad",
      "dimension": "capacitance",
      "label": "Farad",
      "abbreviation": "F",
      "aliases": [
        "F"
      ],
      "definition": "1.0 ampere ^ 2 * second ^ 4 / kilogram / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "faraday",
      "dimension": "charge",
      "label": "Faraday",
      "abbreviation": "faraday",
      "aliases": [],
      "definition": "96485.33212331001 ampere * second",
      "offset": 0.0
    },
    {
      "name": "femtosecond",
      "dimension": "time",
      "label": "Femtosecond",
      "abbreviation": "fs",
      "definition": "1e-15 second",
      "offset": 0.0
    },
    {
      "name": "fermi",
      "dimension": "length",
      "label": "Fermi",
      "abbreviation": "fermi",
      "aliases": [],
      "definition": "1e-15 meter",
      "offset": 0.0
    },
    {
      "name": "fifteen_degree_calorie",
      "dimension": "energy",
      "label": "Fifteen degree calorie",
      "abbreviation": "cal_15",
      "aliases": [
        "cal_15"
      ],
      "definition": "4.1855 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "foot_H2O",
      "dimension": "pressure",
      "label": "Foot H2O",
      "abbreviation": "ftH2O",
      "aliases": [
        "ftH2O",
        "feet_H2O"
      ],
      "definition": "2989.0669199999993 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "foot_per_second",
      "dimension": "speed",
      "label": "Foot per second",
      "abbreviation": "fps",
      "aliases": [
        "fps"
      ],
      "definition": "0.30479999999999996 meter / second",
      "offset": 0.0
    },
    {
      "name": "force_gram",
      "dimension": "force",
      "label": "Force gram",
      "abbreviation": "gf",
      "aliases": [
        "gf",
        "gram_force"
      ],
      "definition": "0.00980665 kilogram * meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "force_kilogram",
      "dimension": "force",
      "label": "Force kilogram",
      "abbreviation": "pond",
      "aliases": [
        "pond"
      ],
      "definition": "9.80665 kilogram * meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "force_metric_ton",
      "dimension": "force",
      "label": "Force metric ton",
      "abbreviation": "tf",
      "aliases": [
        "tf",
        "metric_ton_force",
        "force_t",
        "t_force"
      ],
      "definition": "9806.65 kilogram * meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "galileo",
      "dimension": "acceleration",
      "label": "Galileo",
      "abbreviation": "Gal",
      "aliases": [
        "Gal"
      ],
      "definition": "0.01 meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "gamma",
      "dimension": "magnetic_field",
      "label": "Gamma",
      "abbreviation": "\u03b3",
      "aliases": [
        "\u03b3"
      ],
      "definition": "1.0000000000000003e-09 kilogram / ampere / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "gamma_mass",
      "dimension": "mass",
      "label": "Gamma mass",
      "abbreviation": "gamma_mass",
      "aliases": [],
      "definition": "1e-09 kilogram",
      "offset": 0.0
    },
    {
      "name": "gauss",
      "dimension": "magnetic_field",
      "label": "Gauss",
      "abbreviation": "G",
      "aliases": [
        "G"
      ],
      "definition": "0.0001 kilogram / ampere / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "gigapascal",
      "dimension": "pressure",
      "label": "Gigapascal",
      "abbreviation": "GPa",
      "definition": "1000000000.0 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "grade",
      "dimension": "angle",
      "label": "Grade",
      "abbreviation": "grad",
      "aliases": [
        "grad",
        "gon"
      ],
      "definition": "0.015707963267948967 radian",
      "offset": 0.0
    },
    {
      "name": "grain",
      "dimension": "mass",
      "label": "Grain",
      "abbreviation": "gr",
      "aliases": [
        "gr"
      ],
      "definition": "6.479891000000001e-05 kilogram",
      "offset": 0.0
    },
    {
      "name": "gram",
      "dimension": "mass",
      "label": "Gram",
      "abbreviation": "g",
      "aliases": [
        "g"
      ],
      "definition": "0.001 kilogram",
      "offset": 0.0
    },
    {
      "name": "hartree",
      "dimension": "energy",
      "label": "Hartree",
      "abbreviation": "Ha",
      "aliases": [
        "Ha",
        "E_h",
        "hartree_energy",
        "atomic_unit_of_energy",
        "a_u_energy"
      ],
      "definition": "4.35974472220717e-18 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "henry",
      "dimension": "inductance",
      "label": "Henry",
      "abbreviation": "H",
      "aliases": [
        "H"
      ],
      "definition": "1.0 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "hertz",
      "dimension": "frequency",
      "label": "Hertz",
      "abbreviation": "Hz",
      "aliases": [
        "Hz"
      ],
      "definition": "1.0 / second",
      "offset": 0.0
    },
    {
      "name": "horsepower",
      "dimension": "power",
      "label": "Horsepower",
      "abbreviation": "hp",
      "aliases": [
        "hp",
        "UK_horsepower",
        "hydraulic_horsepower"
      ],
      "definition": "745.6998715822701 kilogram * meter ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "hour",
      "dimension": "time",
      "label": "Hour",
      "abbreviation": "hr",
      "aliases": [
        "hr"
      ],
      "definition": "3600 second",
      "offset": 0.0
    },
    {
      "name": "impedance_of_free_space",
      "dimension": "resistance",
      "label": "Impedance of free space",
      "abbreviation": "Z_0",
      "aliases": [
        "Z_0",
        "characteristic_impedance_of_vacuum"
      ],
      "definition": "376.73031366837046 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "inch_H2O_39F",
      "dimension": "pressure",
      "label": "Inch H2O 39F",
      "abbreviation": "inch_H2O_39F",
      "aliases": [],
      "definition": "249.08193551052 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "inch_H2O_60F",
      "dimension": "pressure",
      "label": "Inch H2O 60F",
      "abbreviation": "inch_H2O_60F",
      "aliases": [],
      "definition": "248.84007017890997 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "inch_Hg",
      "dimension": "pressure",
      "label": "Inch Hg",
      "abbreviation": "inHg",
      "aliases": [
        "inHg",
        "in_Hg",
        "inch_Hg_32F"
      ],
      "definition": "3386.3886403409997 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "inch_Hg_60F",
      "dimension": "pressure",
      "label": "Inch Hg 60F",
      "abbreviation": "inch_Hg_60F",
      "aliases": [],
      "definition": "3376.8485350879996 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "international_calorie",
      "dimension": "energy",
      "label": "International calorie",
      "abbreviation": "cal_it",
      "aliases": [
        "cal_it",
        "international_steam_table_calorie"
      ],
      "definition": "4.1868 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "joule",
      "dimension": "energy",
      "label": "Joule",
      "abbreviation": "J",
      "aliases": [
        "J"
      ],
      "definition": "1.0 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "katal",
      "dimension": "activity",
      "label": "Katal",
      "abbreviation": "kat",
      "aliases": [
        "kat"
      ],
      "definition": "1.0 mole / second",
      "offset": 0.0
    },
    {
      "name": "kilometer_per_hour",
      "dimension": "speed",
      "label": "Kilometer per hour",
      "abbreviation": "kph",
      "aliases": [
        "kph",
        "KPH"
      ],
      "definition": "0.2777777777777778 meter / second",
      "offset": 0.0
    },
    {
      "name": "kilometer_per_second",
      "dimension": "speed",
      "label": "Kilometer per second",
      "abbreviation": "kmps",
      "aliases": [
        "kps"
      ],
      "definition": "1000.0 meter / second",
      "offset": 0.0
    },
    {
      "name": "kip_per_square_inch",
      "dimension": "pressure",
      "label": "Kip per square inch",
      "abbreviation": "ksi",
      "aliases": [
        "ksi"
      ],
      "definition": "6894757.293168365 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "lambda",
      "dimension": "volume",
      "label": "Lambda",
      "abbreviation": "\u03bb",
      "aliases": [
        "\u03bb"
      ],
      "definition": "1.0000000000000003e-09 meter ^ 3",
      "offset": 0.0
    },
    {
      "name": "lambert",
      "dimension": "luminance",
      "label": "Lambert",
      "abbreviation": "lambert",
      "aliases": [],
      "definition": "3183.098861837907 candela / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "liter",
      "dimension": "volume",
      "label": "Liter",
      "abbreviation": "l",
      "aliases": [
        "l",
        "L",
        "litre"
      ],
      "definition": "0.0010000000000000002 meter ^ 3",
      "offset": 0.0
    },
    {
      "name": "lumen",
      "dimension": "luminous_flux",
      "label": "Lumen",
      "abbreviation": "lm",
      "aliases": [
        "lm"
      ],
      "definition": "1 candela * radian ^ 2",
      "offset": 0.0
    },
    {
      "name": "lux",
      "dimension": "illuminance",
      "label": "Lux",
      "abbreviation": "lx",
      "aliases": [
        "lx"
      ],
      "definition": "1.0 candela * radian ^ 2 / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "magnetic_flux_quantum",
      "dimension": "magnetic_flux",
      "label": "Magnetic flux quantum",
      "abbreviation": "\u03a6_0",
      "aliases": [
        "\u03a6_0",
        "Phi_0"
      ],
      "definition": "2.0678338484619295e-15 kilogram * meter ^ 2 / ampere / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "mean_international_ampere",
      "dimension": "current",
      "label": "Mean international ampere",
      "abbreviation": "A_it",
      "aliases": [
        "A_it"
      ],
      "definition": "0.9998500734640026 ampere",
      "offset": 0.0
    },
    {
      "name": "mean_international_ohm",
      "dimension": "resistance",
      "label": "Mean international ohm",
      "abbreviation": "\u03a9_it",
      "aliases": [
        "\u03a9_it",
        "ohm_it"
      ],
      "definition": "1.00049 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "mean_international_volt",
      "dimension": "electric_potential",
      "label": "Mean international volt",
      "abbreviation": "V_it",
      "aliases": [
        "V_it"
      ],
      "definition": "1.00034 kilogram * meter ^ 2 / ampere / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "mercury",
      "dimension": "density",
      "label": "Mercury",
      "abbreviation": "Hg",
      "aliases": [
        "Hg",
        "Hg_0C",
        "Hg_32F",
        "conventional_mercury"
      ],
      "definition": "13595.099999999999 kilogram / meter ^ 3",
      "offset": 0.0
    },
    {
      "name": "mercury_60F",
      "dimension": "density",
      "label": "Mercury 60F",
      "abbreviation": "Hg_60F",
      "aliases": [
        "Hg_60F"
      ],
      "definition": "13556.800000000001 kilogram / meter ^ 3",
      "offset": 0.0
    },
    {
      "name": "meter_per_second",
      "dimension": "speed",
      "label": "Meter per second",
      "abbreviation": "mps",
      "aliases": [
        "mps"
      ],
      "definition": "1.0 meter / second",
      "offset": 0.0
    },
    {
      "name": "metric_horsepower",
      "dimension": "power",
      "label": "Metric horsepower",
      "abbreviation": "metric_horsepower",
      "aliases": [],
      "definition": "735.49875 kilogram * meter ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "metric_ton",
      "dimension": "mass",
      "label": "Metric ton",
      "abbreviation": "tonne",
      "aliases": [
        "tonne"
      ],
      "definition": "1000.0 kilogram",
      "offset": 0.0
    },
    {
      "name": "micron",
      "dimension": "length",
      "label": "Micron",
      "abbreviation": "\u00b5",
      "aliases": [
        "\u00b5"
      ],
      "definition": "1e-06 meter",
      "offset": 0.0
    },
    {
      "name": "mil",
      "dimension": "angle",
      "label": "Mil",
      "abbreviation": "mil",
      "aliases": [],
      "definition": "9.817477042468104e-05 radian",
      "offset": 0.0
    },
    {
      "name": "mile_per_hour",
      "dimension": "speed",
      "label": "Mile per hour",
      "abbreviation": "mph",
      "aliases": [
        "mph",
        "MPH"
      ],
      "definition": "0.44704000000000005 meter / second",
      "offset": 0.0
    },
    {
      "name": "milliarcsecond",
      "dimension": "angle",
      "label": "Milliarcsecond",
      "abbreviation": "marcsec",
      "aliases": [
        "mas"
      ],
      "definition": "4.84813681109536e-09 radian",
      "offset": 0.0
    },
    {
      "name": "millibar",
      "dimension": "pressure",
      "label": "Millibar",
      "abbreviation": "mbar",
      "definition": "100.0 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "millimeter_Hg",
      "dimension": "pressure",
      "label": "Millimeter Hg",
      "abbreviation": "mmHg",
      "aliases": [
        "mmHg",
        "mm_Hg",
        "millimeter_Hg_0C"
      ],
      "definition": "133.32238741499998 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "minute",
      "dimension": "time",
      "label": "Minute",
      "abbreviation": "minute",
      "aliases": [],
      "definition": "60 second",
      "offset": 0.0
    },
    {
      "name": "molar",
      "dimension": "concentration",
      "label": "Molar",
      "abbreviation": "M",
      "aliases": [
        "M"
      ],
      "definition": "999.9999999999999 mole / meter ^ 3",
      "offset": 0.0
    },
    {
      "name": "molar_gas_constant",
      "dimension": "molar_entropy",
      "label": "Molar gas constant",
      "abbreviation": "R",
      "aliases": [
        "R"
      ],
      "definition": "8.314462618153241 kilogram * meter ^ 2 / kelvin / mole / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "neutron_mass",
      "dimension": "mass",
      "label": "Neutron mass",
      "abbreviation": "m_n",
      "aliases": [
        "m_n"
      ],
      "definition": "1.67492749804e-27 kilogram",
      "offset": 0.0
    },
    {
      "name": "newton",
      "dimension": "force",
      "label": "Newton",
      "abbreviation": "N",
      "aliases": [
        "N"
      ],
      "definition": "1.0 kilogram * meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "nit",
      "dimension": "luminance",
      "label": "Nit",
      "abbreviation": "nit",
      "aliases": [],
      "definition": "1.0 candela / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "nuclear_magneton",
      "dimension": "magnetic_dipole",
      "label": "Nuclear magneton",
      "abbreviation": "\u00b5_N",
      "aliases": [
        "\u00b5_N",
        "mu_N"
      ],
      "definition": "5.050783746096374e-27 ampere * meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "ohm",
      "dimension": "resistance",
      "label": "Ohm",
      "abbreviation": "\u03a9",
      "aliases": [
        "\u03a9"
      ],
      "definition": "1.0 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "particle",
      "dimension": "substance",
      "label": "Particle",
      "abbreviation": "particle",
      "aliases": [
        "molec",
        "molecule"
      ],
      "definition": "1.6605390671738466e-24 mole",
      "offset": 0.0
    },
    {
      "name": "pascal",
      "dimension": "pressure",
      "label": "Pascal",
      "abbreviation": "Pa",
      "aliases": [
        "Pa"
      ],
      "definition": "1.0 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "pixels_per_centimeter",
      "dimension": "pixel_density",
      "label": "Pixels per centimeter",
      "abbreviation": "PPCM",
      "aliases": [
        "PPCM",
        "ppcm"
      ],
      "definition": "100.0 pixel / meter",
      "offset": 0.0
    },
    {
      "name": "pixels_per_inch",
      "dimension": "pixel_density",
      "label": "Pixels per inch",
      "abbreviation": "PPI",
      "aliases": [
        "PPI",
        "ppi"
      ],
      "definition": "39.37007874015748 pixel / meter",
      "offset": 0.0
    },
    {
      "name": "planck_current",
      "dimension": "current",
      "label": "Planck current",
      "abbreviation": "planck_current",
      "aliases": [],
      "definition": "3.478872753744379e+25 ampere",
      "offset": 0.0
    },
    {
      "name": "planck_length",
      "dimension": "length",
      "label": "Planck length",
      "abbreviation": "planck_length",
      "aliases": [],
      "definition": "1.616255024423705e-35 meter",
      "offset": 0.0
    },
    {
      "name": "planck_mass",
      "dimension": "mass",
      "label": "Planck mass",
      "abbreviation": "planck_mass",
      "aliases": [],
      "definition": "2.1764343427178987e-08 kilogram",
      "offset": 0.0
    },
    {
      "name": "planck_temperature",
      "dimension": "temperature",
      "label": "Planck temperature",
      "abbreviation": "planck_temperature",
      "aliases": [],
      "definition": "1.4167841621573425e+32 kelvin",
      "offset": 0.0
    },
    {
      "name": "planck_time",
      "dimension": "time",
      "label": "Planck time",
      "abbreviation": "planck_time",
      "aliases": [],
      "definition": "5.391246448313604e-44 second",
      "offset": 0.0
    },
    {
      "name": "poise",
      "dimension": "viscosity",
      "label": "Poise",
      "abbreviation": "P",
      "aliases": [
        "P"
      ],
      "definition": "0.1 kilogram / meter / second",
      "offset": 0.0
    },
    {
      "name": "pound_force_per_square_inch",
      "dimension": "pressure",
      "label": "Pound force per square inch",
      "abbreviation": "psi",
      "aliases": [
        "psi"
      ],
      "definition": "6894.7572931683635 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "proton_mass",
      "dimension": "mass",
      "label": "Proton mass",
      "abbreviation": "m_p",
      "aliases": [
        "m_p"
      ],
      "definition": "1.67262192369e-27 kilogram",
      "offset": 0.0
    },
    {
      "name": "reciprocal_centimeter",
      "dimension": "wavenumber",
      "label": "Reciprocal centimeter",
      "abbreviation": "cm_1",
      "aliases": [
        "cm_1",
        "kayser"
      ],
      "definition": "100.0 / meter",
      "offset": 0.0
    },
    {
      "name": "revolutions_per_minute",
      "dimension": "frequency",
      "label": "Revolutions per minute",
      "abbreviation": "rpm",
      "aliases": [
        "rpm"
      ],
      "definition": "0.016666666666666666 / second",
      "offset": 0.0
    },
    {
      "name": "revolutions_per_second",
      "dimension": "frequency",
      "label": "Revolutions per second",
      "abbreviation": "rps",
      "aliases": [
        "rps"
      ],
      "definition": "1.0 / second",
      "offset": 0.0
    },
    {
      "name": "reyn",
      "dimension": "viscosity",
      "label": "Reyn",
      "abbreviation": "reyn",
      "aliases": [],
      "definition": "6894.7572931683635 kilogram / meter / second",
      "offset": 0.0
    },
    {
      "name": "rhe",
      "dimension": "fluidity",
      "label": "Rhe",
      "abbreviation": "rhe",
      "aliases": [],
      "definition": "10.0 meter * second / kilogram",
      "offset": 0.0
    },
    {
      "name": "rutherford",
      "dimension": "frequency",
      "label": "Rutherford",
      "abbreviation": "Rd",
      "aliases": [
        "Rd"
      ],
      "definition": "1000000.0 / second",
      "offset": 0.0
    },
    {
      "name": "rydberg",
      "dimension": "energy",
      "label": "Rydberg",
      "abbreviation": "Ry",
      "aliases": [
        "Ry"
      ],
      "definition": "2.179872361103585e-18 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "rydberg_constant",
      "dimension": "wavenumber",
      "label": "Rydberg constant",
      "abbreviation": "R_\u221e",
      "aliases": [
        "R_\u221e",
        "R_inf"
      ],
      "definition": "10973731.56816 / meter",
      "offset": 0.0
    },
    {
      "name": "siemens",
      "dimension": "conductance",
      "label": "Siemens",
      "abbreviation": "S",
      "aliases": [
        "S",
        "mho"
      ],
      "definition": "1.0 ampere ^ 2 * second ^ 3 / kilogram / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "speed_of_light",
      "dimension": "speed",
      "label": "Speed of light",
      "abbreviation": "c",
      "aliases": [
        "c",
        "c_0"
      ],
      "definition": "299792458.0 meter / second",
      "offset": 0.0
    },
    {
      "name": "standard_atmosphere",
      "dimension": "pressure",
      "label": "Standard atmosphere",
      "abbreviation": "atm",
      "aliases": [
        "atm",
        "atmosphere"
      ],
      "definition": "101325.0 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "standard_gravity",
      "dimension": "acceleration",
      "label": "Standard gravity",
      "abbreviation": "g_0",
      "aliases": [
        "g_0",
        "g0",
        "g_n",
        "gravity"
      ],
      "definition": "9.80665 meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "standard_liter_per_minute",
      "dimension": "power",
      "label": "Standard liter per minute",
      "abbreviation": "slpm",
      "aliases": [
        "slpm",
        "slm"
      ],
      "definition": "1.6887500000000004 kilogram * meter ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "stilb",
      "dimension": "luminance",
      "label": "Stilb",
      "abbreviation": "stilb",
      "aliases": [],
      "definition": "10000.0 candela / meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "stokes",
      "dimension": "kinematic_viscosity",
      "label": "Stokes",
      "abbreviation": "St",
      "aliases": [
        "St"
      ],
      "definition": "0.0001 meter ^ 2 / second",
      "offset": 0.0
    },
    {
      "name": "tesla",
      "dimension": "magnetic_field",
      "label": "Tesla",
      "abbreviation": "T",
      "aliases": [
        "T"
      ],
      "definition": "1.0 kilogram / ampere / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "thomson_cross_section",
      "dimension": "area",
      "label": "Thomson cross section",
      "abbreviation": "\u03c3_e",
      "aliases": [
        "\u03c3_e",
        "sigma_e"
      ],
      "definition": "6.652458732226516e-29 meter ^ 2",
      "offset": 0.0
    },
    {
      "name": "torr",
      "dimension": "pressure",
      "label": "Torr",
      "abbreviation": "torr",
      "aliases": [],
      "definition": "133.32236842105263 kilogram / meter / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "unified_atomic_mass_unit",
      "dimension": "mass",
      "label": "Unified atomic mass unit",
      "abbreviation": "u",
      "aliases": [
        "u",
        "amu"
      ],
      "definition": "1.6605390666e-27 kilogram",
      "offset": 0.0
    },
    {
      "name": "unit_pole",
      "dimension": "magnetic_flux",
      "label": "Unit pole",
      "abbreviation": "unit_pole",
      "aliases": [],
      "definition": "1.2566370621250598e-07 kilogram * meter ^ 2 / ampere / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "volt",
      "dimension": "electric_potential",
      "label": "Volt",
      "abbreviation": "V",
      "aliases": [
        "V"
      ],
      "definition": "1.0 kilogram * meter ^ 2 / ampere / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "volt_ampere",
      "dimension": "power",
      "label": "Volt ampere",
      "abbreviation": "VA",
      "aliases": [
        "VA"
      ],
      "definition": "1.0 kilogram * meter ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "von_klitzing_constant",
      "dimension": "resistance",
      "label": "Von klitzing constant",
      "abbreviation": "R_K",
      "aliases": [
        "R_K"
      ],
      "definition": "25812.807459304513 kilogram * meter ^ 2 / ampere ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "water",
      "dimension": "density",
      "label": "Water",
      "abbreviation": "H2O",
      "aliases": [
        "H2O",
        "conventional_water"
      ],
      "definition": "999.9999999999999 kilogram / meter ^ 3",
      "offset": 0.0
    },
    {
      "name": "water_39F",
      "dimension": "density",
      "label": "Water 39F",
      "abbreviation": "water_4C",
      "aliases": [
        "water_4C"
      ],
      "definition": "999.9719999999999 kilogram / meter ^ 3",
      "offset": 0.0
    },
    {
      "name": "water_60F",
      "dimension": "density",
      "label": "Water 60F",
      "abbreviation": "water_60F",
      "aliases": [],
      "definition": "999.0009999999999 kilogram / meter ^ 3",
      "offset": 0.0
    },
    {
      "name": "watt",
      "dimension": "power",
      "label": "Watt",
      "abbreviation": "W",
      "aliases": [
        "W"
      ],
      "definition": "1.0 kilogram * meter ^ 2 / second ^ 3",
      "offset": 0.0
    },
    {
      "name": "watt_hour",
      "dimension": "energy",
      "label": "Watt hour",
      "abbreviation": "Wh",
      "aliases": [
        "Wh",
        "watthour"
      ],
      "definition": "3600.0 kilogram * meter ^ 2 / second ^ 2",
      "offset": 0.0
    },
    {
      "name": "weber",
      "dimension": "magnetic_flux",
      "label": "Weber",
      "abbreviation": "Wb",
      "aliases": [
        "Wb"
      ],
      "definition": "1.0 kilogram * meter ^ 2 / ampere / second ^ 2",
      "offset": 0.0
    }
  ],
  "unitPrefixes": {
    "": {
      "name": "",
      "value": 1,
      "scientific": true
    },
    "yocto": {
      "name": "yocto",
      "value": 1e-24,
      "scientific": true
    },
    "y": {
      "name": "y",
      "value": 1e-24,
      "scientific": true
    },
    "zepto": {
      "name": "zepto",
      "value": 1e-21,
      "scientific": true
    },
    "z": {
      "name": "z",
      "value": 1e-21,
      "scientific": true
    },
    "atto": {
      "name": "atto",
      "value": 1e-18,
      "scientific": true
    },
    "a": {
      "name": "a",
      "value": 1e-18,
      "scientific": true
    },
    "femto": {
      "name": "femto",
      "value": 1e-15,
      "scientific": true
    },
    "f": {
      "name": "f",
      "value": 1e-15,
      "scientific": true
    },
    "pico": {
      "name": "pico",
      "value": 1e-12,
      "scientific": true
    },
    "p": {
      "name": "p",
      "value": 1e-12,
      "scientific": true
    },
    "nano": {
      "name": "nano",
      "value": 1e-09,
      "scientific": true
    },
    "n": {
      "name": "n",
      "value": 1e-09,
      "scientific": true
    },
    "micro": {
      "name": "micro",
      "value": 1e-06,
      "scientific": true
    },
    "\u00b5": {
      "name": "\u00b5",
      "value": 1e-06,
      "scientific": true
    },
    "u": {
      "name": "u",
      "value": 1e-06,
      "scientific": true
    },
    "milli": {
      "name": "milli",
      "value": 0.001,
      "scientific": true
    },
    "m": {
      "name": "m",
      "value": 0.001,
      "scientific": true
    },
    "centi": {
      "name": "centi",
      "value": 0.01,
      "scientific": true
    },
    "c": {
      "name": "c",
      "value": 0.01,
      "scientific": true
    },
    "deci": {
      "name": "deci",
      "value": 0.1,
      "scientific": true
    },
    "d": {
      "name": "d",
      "value": 0.1,
      "scientific": true
    },
    "deca": {
      "name": "deca",
      "value": 10.0,
      "scientific": true
    },
    "da": {
      "name": "da",
      "value": 10.0,
      "scientific": true
    },
    "deka": {
      "name": "deka",
      "value": 10.0,
      "scientific": true
    },
    "hecto": {
      "name": "hecto",
      "value": 100.0,
      "scientific": true
    },
    "h": {
      "name": "h",
      "value": 100.0,
      "scientific": true
    },
    "kilo": {
      "name": "kilo",
      "value": 1000.0,
      "scientific": true
    },
    "k": {
      "name": "k",
      "value": 1000.0,
      "scientific": true
    },
    "mega": {
      "name": "mega",
      "value": 1000000.0,
      "scientific": true
    },
    "M": {
      "name": "M",
      "value": 1000000.0,
      "scientific": true
    },
    "giga": {
      "name": "giga",
      "value": 1000000000.0,
      "scientific": true
    },
    "G": {
      "name": "G",
      "value": 1000000000.0,
      "scientific": true
    },
    "tera": {
      "name": "tera",
      "value": 1000000000000.0,
      "scientific": true
    },
    "T": {
      "name": "T",
      "value": 1000000000000.0,
      "scientific": true
    },
    "peta": {
      "name": "peta",
      "value": 1000000000000000.0,
      "scientific": true
    },
    "P": {
      "name": "P",
      "value": 1000000000000000.0,
      "scientific": true
    },
    "exa": {
      "name": "exa",
      "value": 1e+18,
      "scientific": true
    },
    "E": {
      "name": "E",
      "value": 1e+18,
      "scientific": true
    },
    "zetta": {
      "name": "zetta",
      "value": 1e+21,
      "scientific": true
    },
    "Z": {
      "name": "Z",
      "value": 1e+21,
      "scientific": true
    },
    "yotta": {
      "name": "yotta",
      "value": 1e+24,
      "scientific": true
    },
    "Y": {
      "name": "Y",
      "value": 1e+24,
      "scientific": true
    },
    "kibi": {
      "name": "kibi",
      "value": 1024,
      "scientific": true
    },
    "Ki": {
      "name": "Ki",
      "value": 1024,
      "scientific": true
    },
    "mebi": {
      "name": "mebi",
      "value": 1048576,
      "scientific": true
    },
    "Mi": {
      "name": "Mi",
      "value": 1048576,
      "scientific": true
    },
    "gibi": {
      "name": "gibi",
      "value": 1073741824,
      "scientific": true
    },
    "Gi": {
      "name": "Gi",
      "value": 1073741824,
      "scientific": true
    },
    "tebi": {
      "name": "tebi",
      "value": 1099511627776,
      "scientific": true
    },
    "Ti": {
      "name": "Ti",
      "value": 1099511627776,
      "scientific": true
    },
    "pebi": {
      "name": "pebi",
      "value": 1125899906842624,
      "scientific": true
    },
    "Pi": {
      "name": "Pi",
      "value": 1125899906842624,
      "scientific": true
    },
    "exbi": {
      "name": "exbi",
      "value": 1152921504606846976,
      "scientific": true
    },
    "Ei": {
      "name": "Ei",
      "value": 1152921504606846976,
      "scientific": true
    },
    "zebi": {
      "name": "zebi",
      "value": 1180591620717411303424,
      "scientific": true
    },
    "Zi": {
      "name": "Zi",
      "value": 1180591620717411303424,
      "scientific": true
    },
    "yobi": {
      "name": "yobi",
      "value": 1208925819614629174706176,
      "scientific": true
    },
    "Yi": {
      "name": "Yi",
      "value": 1208925819614629174706176,
      "scientific": true
    }
  }
};

