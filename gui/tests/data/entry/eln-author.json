{
  "ec4e278877c819d5c74b6e128d73a6c4": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiI4ZmFlNWMxNi1kODNjLTQ5OWItOTBhMC05MzZmNTAwNWNmMzAiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDAwLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.Bri__gOLQF62OWt15qcjCDsjT05LEzVSffcfx2VutTLt8LvcksjZIb7eiRJFz8q5ozmRn9sFB1GH2MvcDT2LA-FtIVuql225QQ0cgTtdIISS8fGAZ96CTcWNf5Jq0iOKDgMXEYDjdWCXWa7jZeT7-p67FqXwU3mY-QUYYnstam2XJDQoCU9Ucm-1rutLWrJwA2cGV7FoODEXpe64fHazpCuwyF2CUfrGoihOLFxyPFdXtZdmt1lqUyD-UGyrIOdJEvGfCqyqR5Tt89OBOX0RWd9TusNkCf3tzpwnDWwflz1scFx60c6fOJTrEZoPByVCrI_kDAEZOQE8Is4MFQLlyw",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "required": {},
          "data": {
            "upload_id": "eln_upload_id",
            "references": [],
            "origin": "Markus Scheidgen",
            "quantities": [
              "",
              "data",
              "data.datetime",
              "data.description",
              "data.lab_id",
              "data.name",
              "data.processes",
              "data.processes.hotplate_annealing",
              "data.processes.hotplate_annealing.datetime",
              "data.processes.hotplate_annealing.duration",
              "data.processes.hotplate_annealing.set_temperature",
              "data.processes.pvd_evaporation",
              "data.processes.pvd_evaporation.chamber_pressure",
              "data.processes.pvd_evaporation.data_file",
              "data.processes.pvd_evaporation.datetime",
              "data.processes.pvd_evaporation.fill_archive_from_datafile",
              "data.processes.pvd_evaporation.substrate_temperature",
              "data.processes.pvd_evaporation.time",
              "data.substrate_type",
              "data.tags",
              "metadata",
              "metadata.coauthors",
              "metadata.datasets",
              "metadata.embargo_length",
              "metadata.entry_coauthors",
              "metadata.entry_create_time",
              "metadata.entry_hash",
              "metadata.entry_id",
              "metadata.entry_name",
              "metadata.entry_timestamp",
              "metadata.entry_timestamp.timestamp",
              "metadata.entry_timestamp.token",
              "metadata.entry_timestamp.token_seed",
              "metadata.entry_timestamp.tsa_server",
              "metadata.entry_type",
              "metadata.files",
              "metadata.last_processing_time",
              "metadata.license",
              "metadata.main_author",
              "metadata.mainfile",
              "metadata.nomad_commit",
              "metadata.nomad_version",
              "metadata.parser_name",
              "metadata.processed",
              "metadata.processing_errors",
              "metadata.published",
              "metadata.quantities",
              "metadata.references",
              "metadata.reviewers",
              "metadata.section_defs",
              "metadata.section_defs.definition_id",
              "metadata.section_defs.definition_qualified_name",
              "metadata.section_defs.used_directly",
              "metadata.sections",
              "metadata.upload_create_time",
              "metadata.upload_id",
              "metadata.with_embargo",
              "results",
              "results.eln",
              "results.eln.descriptions",
              "results.eln.lab_ids",
              "results.eln.methods",
              "results.eln.names",
              "results.eln.sections",
              "results.eln.tags",
              "results.properties"
            ],
            "datasets": [],
            "n_quantities": 59,
            "nomad_version": "1.2.0rc1.dev161+gf7da75ce5.d20230605",
            "upload_create_time": "2023-06-05T10:46:35.330000+00:00",
            "nomad_commit": "",
            "section_defs": [
              {
                "used_directly": true,
                "definition_id": "88f0ccdc3585c154e0d1b67cf28b734e69a0791b",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process"
              },
              {
                "used_directly": true,
                "definition_id": "61cee898fcd24be5040ffc76163cd645f26c9ff8",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "b82ee685f3b0fd55329dbafada317987feac3051",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes"
              },
              {
                "used_directly": true,
                "definition_id": "1341c9d51198599e0cf17a12d00694469e6fce8f",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing"
              },
              {
                "used_directly": true,
                "definition_id": "fdd23ea5c11d32f9b780e5e5b0f6349712bafe6e",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation"
              },
              {
                "used_directly": true,
                "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                "definition_qualified_name": "nomad.datamodel.data.ArchiveSection"
              },
              {
                "used_directly": true,
                "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                "definition_qualified_name": "nomad.datamodel.data.EntryData"
              },
              {
                "used_directly": true,
                "definition_id": "9e36824ae135f1e5ee5485911cb5fc03bc47af1d",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive"
              },
              {
                "used_directly": true,
                "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata"
              },
              {
                "used_directly": true,
                "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp"
              },
              {
                "used_directly": false,
                "definition_id": "870f59b3b42ceab01a604bddc86c39b90a897366",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "used_directly": false,
                "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "af4b2af6fde599256cf9d75c51958a41b3245b25",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process"
              },
              {
                "used_directly": false,
                "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection"
              },
              {
                "used_directly": true,
                "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                "definition_qualified_name": "nomad.datamodel.results.ELN"
              },
              {
                "used_directly": true,
                "definition_id": "9fcaeef3034c9b3861ab45bcea5014c65ffb3da2",
                "definition_qualified_name": "nomad.datamodel.results.Properties"
              },
              {
                "used_directly": true,
                "definition_id": "1ee9d4d17197a78dcfa5f1814b1ff3e2b275c195",
                "definition_qualified_name": "nomad.datamodel.results.Results"
              },
              {
                "used_directly": true,
                "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                "definition_qualified_name": "nomad.parsing.tabular.TableData"
              }
            ],
            "processing_errors": [],
            "results": {
              "eln": {
                "names": [
                  "ELN example sample"
                ],
                "methods": [
                  "PvdEvaporation",
                  "HotplateAnnealing"
                ],
                "descriptions": [
                  "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                ],
                "sections": [
                  "PvdEvaporation",
                  "HotplateAnnealing",
                  "Sample"
                ],
                "lab_ids": [
                  "001"
                ],
                "tags": [
                  "project"
                ]
              },
              "properties": {
                "available_properties": []
              }
            },
            "entry_name": "ELN example sample",
            "last_processing_time": "2023-06-05T10:46:35.702000+00:00",
            "parser_name": "parsers/archive",
            "searchable_quantities": [
              {
                "text_value": "ELN example sample",
                "path": "data.name",
                "quantity_name": "name",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3"
              },
              {
                "text_value": "001",
                "path": "data.lab_id",
                "quantity_name": "lab_id",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "path": "data.description",
                "quantity_name": "description",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "path": "data.substrate_type",
                "quantity_name": "substrate_type",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                "keyword_value": "SLG"
              },
              {
                "path": "data.processes.pvd_evaporation.datetime",
                "date_value": "2022-05-10T07:20:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "text_value": "PVDProcess.csv",
                "path": "data.processes.pvd_evaporation.data_file",
                "quantity_name": "data_file",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0"
              },
              {
                "path": "data.processes.hotplate_annealing.datetime",
                "date_value": "2022-05-10T07:22:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "path": "data.processes.hotplate_annealing.set_temperature",
                "quantity_name": "set_temperature",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 373.15
              },
              {
                "path": "data.processes.hotplate_annealing.duration",
                "quantity_name": "duration",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 60
              },
              {
                "path": "data.datetime",
                "date_value": "2023-06-05T12:46:35.766102+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              }
            ],
            "calc_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "published": false,
            "writers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "sections": [
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
              "nomad.datamodel.datamodel.EntryArchive",
              "nomad.datamodel.datamodel.EntryMetadata",
              "nomad.datamodel.datamodel.RFC3161Timestamp",
              "nomad.datamodel.results.ELN",
              "nomad.datamodel.results.Properties",
              "nomad.datamodel.results.Results"
            ],
            "processed": true,
            "mainfile": "sample.archive.json",
            "main_author": {
              "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
              "name": "Markus Scheidgen"
            },
            "viewers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              },
              {
                "user_id": "54cb1f64-f84e-4815-9ade-440ce0b5430f",
                "name": "Test Tester"
              }
            ],
            "entry_create_time": "2023-06-05T10:46:35.398000+00:00",
            "with_embargo": false,
            "files": [
              "sample.archive.json",
              "PVDProcess.csv",
              "schema.archive.yaml"
            ],
            "entry_type": "Sample",
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "authors": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "license": "CC BY 4.0"
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "12998",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    },
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiI4ZmFlNWMxNi1kODNjLTQ5OWItOTBhMC05MzZmNTAwNWNmMzAiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDAwLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.Bri__gOLQF62OWt15qcjCDsjT05LEzVSffcfx2VutTLt8LvcksjZIb7eiRJFz8q5ozmRn9sFB1GH2MvcDT2LA-FtIVuql225QQ0cgTtdIISS8fGAZ96CTcWNf5Jq0iOKDgMXEYDjdWCXWa7jZeT7-p67FqXwU3mY-QUYYnstam2XJDQoCU9Ucm-1rutLWrJwA2cGV7FoODEXpe64fHazpCuwyF2CUfrGoihOLFxyPFdXtZdmt1lqUyD-UGyrIOdJEvGfCqyqR5Tt89OBOX0RWd9TusNkCf3tzpwnDWwflz1scFx60c6fOJTrEZoPByVCrI_kDAEZOQE8Is4MFQLlyw",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "required": {},
          "data": {
            "upload_id": "eln_upload_id",
            "references": [],
            "origin": "Markus Scheidgen",
            "quantities": [
              "",
              "data",
              "data.datetime",
              "data.description",
              "data.lab_id",
              "data.name",
              "data.processes",
              "data.processes.hotplate_annealing",
              "data.processes.hotplate_annealing.datetime",
              "data.processes.hotplate_annealing.duration",
              "data.processes.hotplate_annealing.set_temperature",
              "data.processes.pvd_evaporation",
              "data.processes.pvd_evaporation.chamber_pressure",
              "data.processes.pvd_evaporation.data_file",
              "data.processes.pvd_evaporation.datetime",
              "data.processes.pvd_evaporation.fill_archive_from_datafile",
              "data.processes.pvd_evaporation.substrate_temperature",
              "data.processes.pvd_evaporation.time",
              "data.substrate_type",
              "data.tags",
              "metadata",
              "metadata.coauthors",
              "metadata.datasets",
              "metadata.embargo_length",
              "metadata.entry_coauthors",
              "metadata.entry_create_time",
              "metadata.entry_hash",
              "metadata.entry_id",
              "metadata.entry_name",
              "metadata.entry_timestamp",
              "metadata.entry_timestamp.timestamp",
              "metadata.entry_timestamp.token",
              "metadata.entry_timestamp.token_seed",
              "metadata.entry_timestamp.tsa_server",
              "metadata.entry_type",
              "metadata.files",
              "metadata.last_processing_time",
              "metadata.license",
              "metadata.main_author",
              "metadata.mainfile",
              "metadata.nomad_commit",
              "metadata.nomad_version",
              "metadata.parser_name",
              "metadata.processed",
              "metadata.processing_errors",
              "metadata.published",
              "metadata.quantities",
              "metadata.references",
              "metadata.reviewers",
              "metadata.section_defs",
              "metadata.section_defs.definition_id",
              "metadata.section_defs.definition_qualified_name",
              "metadata.section_defs.used_directly",
              "metadata.sections",
              "metadata.upload_create_time",
              "metadata.upload_id",
              "metadata.with_embargo",
              "results",
              "results.eln",
              "results.eln.descriptions",
              "results.eln.lab_ids",
              "results.eln.methods",
              "results.eln.names",
              "results.eln.sections",
              "results.eln.tags",
              "results.properties"
            ],
            "datasets": [],
            "n_quantities": 59,
            "nomad_version": "1.2.0rc1.dev161+gf7da75ce5.d20230605",
            "upload_create_time": "2023-06-05T10:46:35.330000+00:00",
            "nomad_commit": "",
            "section_defs": [
              {
                "used_directly": true,
                "definition_id": "88f0ccdc3585c154e0d1b67cf28b734e69a0791b",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process"
              },
              {
                "used_directly": true,
                "definition_id": "61cee898fcd24be5040ffc76163cd645f26c9ff8",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "b82ee685f3b0fd55329dbafada317987feac3051",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes"
              },
              {
                "used_directly": true,
                "definition_id": "1341c9d51198599e0cf17a12d00694469e6fce8f",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing"
              },
              {
                "used_directly": true,
                "definition_id": "fdd23ea5c11d32f9b780e5e5b0f6349712bafe6e",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation"
              },
              {
                "used_directly": true,
                "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                "definition_qualified_name": "nomad.datamodel.data.ArchiveSection"
              },
              {
                "used_directly": true,
                "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                "definition_qualified_name": "nomad.datamodel.data.EntryData"
              },
              {
                "used_directly": true,
                "definition_id": "9e36824ae135f1e5ee5485911cb5fc03bc47af1d",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive"
              },
              {
                "used_directly": true,
                "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata"
              },
              {
                "used_directly": true,
                "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp"
              },
              {
                "used_directly": false,
                "definition_id": "870f59b3b42ceab01a604bddc86c39b90a897366",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "used_directly": false,
                "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "af4b2af6fde599256cf9d75c51958a41b3245b25",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process"
              },
              {
                "used_directly": false,
                "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection"
              },
              {
                "used_directly": true,
                "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                "definition_qualified_name": "nomad.datamodel.results.ELN"
              },
              {
                "used_directly": true,
                "definition_id": "9fcaeef3034c9b3861ab45bcea5014c65ffb3da2",
                "definition_qualified_name": "nomad.datamodel.results.Properties"
              },
              {
                "used_directly": true,
                "definition_id": "1ee9d4d17197a78dcfa5f1814b1ff3e2b275c195",
                "definition_qualified_name": "nomad.datamodel.results.Results"
              },
              {
                "used_directly": true,
                "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                "definition_qualified_name": "nomad.parsing.tabular.TableData"
              }
            ],
            "processing_errors": [],
            "results": {
              "eln": {
                "names": [
                  "ELN example sample"
                ],
                "methods": [
                  "PvdEvaporation",
                  "HotplateAnnealing"
                ],
                "descriptions": [
                  "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                ],
                "sections": [
                  "PvdEvaporation",
                  "HotplateAnnealing",
                  "Sample"
                ],
                "lab_ids": [
                  "001"
                ],
                "tags": [
                  "project"
                ]
              },
              "properties": {
                "available_properties": []
              }
            },
            "entry_name": "ELN example sample",
            "last_processing_time": "2023-06-05T10:46:35.702000+00:00",
            "parser_name": "parsers/archive",
            "searchable_quantities": [
              {
                "text_value": "ELN example sample",
                "path": "data.name",
                "quantity_name": "name",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3"
              },
              {
                "text_value": "001",
                "path": "data.lab_id",
                "quantity_name": "lab_id",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "path": "data.description",
                "quantity_name": "description",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "path": "data.substrate_type",
                "quantity_name": "substrate_type",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                "keyword_value": "SLG"
              },
              {
                "path": "data.processes.pvd_evaporation.datetime",
                "date_value": "2022-05-10T07:20:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "text_value": "PVDProcess.csv",
                "path": "data.processes.pvd_evaporation.data_file",
                "quantity_name": "data_file",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0"
              },
              {
                "path": "data.processes.hotplate_annealing.datetime",
                "date_value": "2022-05-10T07:22:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "path": "data.processes.hotplate_annealing.set_temperature",
                "quantity_name": "set_temperature",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 373.15
              },
              {
                "path": "data.processes.hotplate_annealing.duration",
                "quantity_name": "duration",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 60
              },
              {
                "path": "data.datetime",
                "date_value": "2023-06-05T12:46:35.766102+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              }
            ],
            "calc_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "published": false,
            "writers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "sections": [
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
              "nomad.datamodel.datamodel.EntryArchive",
              "nomad.datamodel.datamodel.EntryMetadata",
              "nomad.datamodel.datamodel.RFC3161Timestamp",
              "nomad.datamodel.results.ELN",
              "nomad.datamodel.results.Properties",
              "nomad.datamodel.results.Results"
            ],
            "processed": true,
            "mainfile": "sample.archive.json",
            "main_author": {
              "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
              "name": "Markus Scheidgen"
            },
            "viewers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              },
              {
                "user_id": "54cb1f64-f84e-4815-9ade-440ce0b5430f",
                "name": "Test Tester"
              }
            ],
            "entry_create_time": "2023-06-05T10:46:35.398000+00:00",
            "with_embargo": false,
            "files": [
              "sample.archive.json",
              "PVDProcess.csv",
              "schema.archive.yaml"
            ],
            "entry_type": "Sample",
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "authors": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "license": "CC BY 4.0"
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "12998",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    },
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiI1YTA0N2E3ZS1jZDFlLTQ5Y2UtOWQ3My1hM2FmYzhiMWQ1NzgiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDAyLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.CwGBacYpm3Uqdfy5uYems0mgnq6ZhYvjF84v0MKvjEb9vwPTVgjk3jq2-CrbDh76sE3rPWBwSi3gknay6t0lgf11S4tS6NgP-m1hFUuT8fLKSBsjdgt6l_uSWCkzCd_n0KoufLzdq5sshPuL2ww465uDjejJfrBbogwYRc3K7wHNMDNQAQfd6M1DzxWdAAVZMwMy3OptS6WUpUp9pSVeDmmm9XKy9F9xUU9HzUMxTQGKEJJm21AoIwPqKnDPsq5HzSCuDdIdH4qnGQpmspDAcCNR7yvoUnbtQeox9snbpus7vfUHm5iCpfg0zPvXb2jBDgyqFxJCQDDk3hLIvdy3UQ",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "required": {},
          "data": {
            "upload_id": "eln_upload_id",
            "references": [],
            "origin": "Markus Scheidgen",
            "quantities": [
              "",
              "data",
              "data.datetime",
              "data.description",
              "data.lab_id",
              "data.name",
              "data.processes",
              "data.processes.hotplate_annealing",
              "data.processes.hotplate_annealing.datetime",
              "data.processes.hotplate_annealing.duration",
              "data.processes.hotplate_annealing.set_temperature",
              "data.processes.pvd_evaporation",
              "data.processes.pvd_evaporation.chamber_pressure",
              "data.processes.pvd_evaporation.data_file",
              "data.processes.pvd_evaporation.datetime",
              "data.processes.pvd_evaporation.fill_archive_from_datafile",
              "data.processes.pvd_evaporation.substrate_temperature",
              "data.processes.pvd_evaporation.time",
              "data.substrate_type",
              "data.tags",
              "metadata",
              "metadata.coauthors",
              "metadata.datasets",
              "metadata.embargo_length",
              "metadata.entry_coauthors",
              "metadata.entry_create_time",
              "metadata.entry_hash",
              "metadata.entry_id",
              "metadata.entry_name",
              "metadata.entry_timestamp",
              "metadata.entry_timestamp.timestamp",
              "metadata.entry_timestamp.token",
              "metadata.entry_timestamp.token_seed",
              "metadata.entry_timestamp.tsa_server",
              "metadata.entry_type",
              "metadata.files",
              "metadata.last_processing_time",
              "metadata.license",
              "metadata.main_author",
              "metadata.mainfile",
              "metadata.nomad_commit",
              "metadata.nomad_version",
              "metadata.parser_name",
              "metadata.processed",
              "metadata.processing_errors",
              "metadata.published",
              "metadata.quantities",
              "metadata.references",
              "metadata.reviewers",
              "metadata.section_defs",
              "metadata.section_defs.definition_id",
              "metadata.section_defs.definition_qualified_name",
              "metadata.section_defs.used_directly",
              "metadata.sections",
              "metadata.upload_create_time",
              "metadata.upload_id",
              "metadata.with_embargo",
              "results",
              "results.eln",
              "results.eln.descriptions",
              "results.eln.lab_ids",
              "results.eln.methods",
              "results.eln.names",
              "results.eln.sections",
              "results.eln.tags",
              "results.properties"
            ],
            "datasets": [],
            "n_quantities": 59,
            "nomad_version": "1.2.0rc1.dev161+gf7da75ce5.d20230605",
            "upload_create_time": "2023-06-05T10:46:35.330000+00:00",
            "nomad_commit": "",
            "section_defs": [
              {
                "used_directly": true,
                "definition_id": "88f0ccdc3585c154e0d1b67cf28b734e69a0791b",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process"
              },
              {
                "used_directly": true,
                "definition_id": "61cee898fcd24be5040ffc76163cd645f26c9ff8",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "b82ee685f3b0fd55329dbafada317987feac3051",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes"
              },
              {
                "used_directly": true,
                "definition_id": "1341c9d51198599e0cf17a12d00694469e6fce8f",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing"
              },
              {
                "used_directly": true,
                "definition_id": "fdd23ea5c11d32f9b780e5e5b0f6349712bafe6e",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation"
              },
              {
                "used_directly": true,
                "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                "definition_qualified_name": "nomad.datamodel.data.ArchiveSection"
              },
              {
                "used_directly": true,
                "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                "definition_qualified_name": "nomad.datamodel.data.EntryData"
              },
              {
                "used_directly": true,
                "definition_id": "9e36824ae135f1e5ee5485911cb5fc03bc47af1d",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive"
              },
              {
                "used_directly": true,
                "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata"
              },
              {
                "used_directly": true,
                "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp"
              },
              {
                "used_directly": false,
                "definition_id": "870f59b3b42ceab01a604bddc86c39b90a897366",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "used_directly": false,
                "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "af4b2af6fde599256cf9d75c51958a41b3245b25",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process"
              },
              {
                "used_directly": false,
                "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection"
              },
              {
                "used_directly": true,
                "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                "definition_qualified_name": "nomad.datamodel.results.ELN"
              },
              {
                "used_directly": true,
                "definition_id": "9fcaeef3034c9b3861ab45bcea5014c65ffb3da2",
                "definition_qualified_name": "nomad.datamodel.results.Properties"
              },
              {
                "used_directly": true,
                "definition_id": "1ee9d4d17197a78dcfa5f1814b1ff3e2b275c195",
                "definition_qualified_name": "nomad.datamodel.results.Results"
              },
              {
                "used_directly": true,
                "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                "definition_qualified_name": "nomad.parsing.tabular.TableData"
              }
            ],
            "processing_errors": [],
            "results": {
              "eln": {
                "names": [
                  "ELN example sample"
                ],
                "methods": [
                  "PvdEvaporation",
                  "HotplateAnnealing"
                ],
                "descriptions": [
                  "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                ],
                "sections": [
                  "PvdEvaporation",
                  "HotplateAnnealing",
                  "Sample"
                ],
                "lab_ids": [
                  "001"
                ],
                "tags": [
                  "project"
                ]
              },
              "properties": {
                "available_properties": []
              }
            },
            "entry_name": "ELN example sample",
            "last_processing_time": "2023-06-05T10:46:35.702000+00:00",
            "parser_name": "parsers/archive",
            "searchable_quantities": [
              {
                "text_value": "ELN example sample",
                "path": "data.name",
                "quantity_name": "name",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3"
              },
              {
                "text_value": "001",
                "path": "data.lab_id",
                "quantity_name": "lab_id",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "path": "data.description",
                "quantity_name": "description",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "path": "data.substrate_type",
                "quantity_name": "substrate_type",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                "keyword_value": "SLG"
              },
              {
                "path": "data.processes.pvd_evaporation.datetime",
                "date_value": "2022-05-10T07:20:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "text_value": "PVDProcess.csv",
                "path": "data.processes.pvd_evaporation.data_file",
                "quantity_name": "data_file",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0"
              },
              {
                "path": "data.processes.hotplate_annealing.datetime",
                "date_value": "2022-05-10T07:22:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "path": "data.processes.hotplate_annealing.set_temperature",
                "quantity_name": "set_temperature",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 373.15
              },
              {
                "path": "data.processes.hotplate_annealing.duration",
                "quantity_name": "duration",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 60
              },
              {
                "path": "data.datetime",
                "date_value": "2023-06-05T12:46:35.766102+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              }
            ],
            "calc_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "published": false,
            "writers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "sections": [
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
              "nomad.datamodel.datamodel.EntryArchive",
              "nomad.datamodel.datamodel.EntryMetadata",
              "nomad.datamodel.datamodel.RFC3161Timestamp",
              "nomad.datamodel.results.ELN",
              "nomad.datamodel.results.Properties",
              "nomad.datamodel.results.Results"
            ],
            "processed": true,
            "mainfile": "sample.archive.json",
            "main_author": {
              "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
              "name": "Markus Scheidgen"
            },
            "viewers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              },
              {
                "user_id": "54cb1f64-f84e-4815-9ade-440ce0b5430f",
                "name": "Test Tester"
              }
            ],
            "entry_create_time": "2023-06-05T10:46:35.398000+00:00",
            "with_embargo": false,
            "files": [
              "sample.archive.json",
              "PVDProcess.csv",
              "schema.archive.yaml"
            ],
            "entry_type": "Sample",
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "authors": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "license": "CC BY 4.0"
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "12998",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    }
  ],
  "3956e4695d0efe4d6ca6a8a049794ab5": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-/archive/query",
        "method": "POST",
        "body": {
          "required": {
            "metadata": "*",
            "data": "*",
            "definitions": "*",
            "workflow2": "*",
            "results": {
              "material": "*",
              "method": "*",
              "properties": {
                "structural": "*",
                "structures": "*",
                "dynamical": "*",
                "electronic": {
                  "greens_functions_electronic": "include-resolved",
                  "dos_electronic": "include-resolved",
                  "band_structure_electronic": "include-resolved",
                  "band_gap": "*"
                },
                "mechanical": "include-resolved",
                "spectroscopy": "include-resolved",
                "vibrational": "include-resolved",
                "thermodynamic": "include-resolved",
                "geometry_optimization": {
                  "energies": "include-resolved"
                }
              }
            },
            "resolve-inplace": false
          }
        },
        "headers": {
          "accept": "application/json",
          "content-type": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJmZmFlZGIyNS02MzgwLTQzNTQtOTY5NS0wNDY0YmQ0YWI2NzQiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDAwLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.Q359HKYuhhyCidEHepugqq0u4CeoPwVrEHyFM3BkFGxavPwxEK01KNj032FrIxUrpExvs300V2ndNbBY7sxyN8dYeNvQdikAzo3PbhiGMX4rDv9yJDeYRfhm5BDyqXCApCehXTj9Dq_Tavr83B6ySGYXnFKVBeKoQYgRujYAVOES54T3NHJEzagcPg23mVkaRyBRpG0CxOYD8GokbHLIcaPHkFcDt9PDGtJFOtKO-gS74qyojh7fKVaJaqgSeiUixCBxeqqiCTt97ybtt1mShh7sQHyWDHFEx6l0AKGj4HAU1qK-XH3RUol6x73SAyl2_Xw8zaCFJ7US3aillVWkAw",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "required": {
            "metadata": "*",
            "data": "*",
            "definitions": "*",
            "workflow2": "*",
            "results": {
              "material": "*",
              "method": "*",
              "properties": {
                "structural": "*",
                "structures": "*",
                "dynamical": "*",
                "electronic": {
                  "greens_functions_electronic": "include-resolved",
                  "dos_electronic": "include-resolved",
                  "band_structure_electronic": "include-resolved",
                  "band_gap": "*"
                },
                "mechanical": "include-resolved",
                "spectroscopy": "include-resolved",
                "vibrational": "include-resolved",
                "thermodynamic": "include-resolved",
                "geometry_optimization": {
                  "energies": "include-resolved"
                }
              }
            },
            "resolve-inplace": false
          },
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "data": {
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "upload_id": "eln_upload_id",
            "parser_name": "parsers/archive",
            "archive": {
              "metadata": {
                "upload_id": "eln_upload_id",
                "upload_create_time": "2023-06-05T10:46:35.330000+00:00",
                "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
                "entry_name": "ELN example sample",
                "entry_type": "Sample",
                "entry_hash": "xM16QFk7ZT7PzMaOI2B0iCqa6yI1",
                "entry_create_time": "2023-06-05T10:46:35.398000+00:00",
                "parser_name": "parsers/archive",
                "mainfile": "sample.archive.json",
                "files": [
                  "sample.archive.json",
                  "PVDProcess.csv",
                  "schema.archive.yaml"
                ],
                "published": false,
                "with_embargo": false,
                "embargo_length": 0,
                "license": "CC BY 4.0",
                "processed": true,
                "last_processing_time": "2023-06-05T10:46:35.702257+00:00",
                "processing_errors": [],
                "nomad_version": "1.2.0rc1.dev161+gf7da75ce5.d20230605",
                "nomad_commit": "",
                "references": [],
                "main_author": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "coauthors": [
                  "a03af8b6-3aa7-428a-b3b1-4a6317e576b6"
                ],
                "entry_coauthors": [],
                "reviewers": [
                  "54cb1f64-f84e-4815-9ade-440ce0b5430f"
                ],
                "datasets": [],
                "n_quantities": 59,
                "quantities": [
                  "",
                  "data",
                  "data.datetime",
                  "data.description",
                  "data.lab_id",
                  "data.name",
                  "data.processes",
                  "data.processes.hotplate_annealing",
                  "data.processes.hotplate_annealing.datetime",
                  "data.processes.hotplate_annealing.duration",
                  "data.processes.hotplate_annealing.set_temperature",
                  "data.processes.pvd_evaporation",
                  "data.processes.pvd_evaporation.chamber_pressure",
                  "data.processes.pvd_evaporation.data_file",
                  "data.processes.pvd_evaporation.datetime",
                  "data.processes.pvd_evaporation.fill_archive_from_datafile",
                  "data.processes.pvd_evaporation.substrate_temperature",
                  "data.processes.pvd_evaporation.time",
                  "data.substrate_type",
                  "data.tags",
                  "metadata",
                  "metadata.coauthors",
                  "metadata.datasets",
                  "metadata.embargo_length",
                  "metadata.entry_coauthors",
                  "metadata.entry_create_time",
                  "metadata.entry_hash",
                  "metadata.entry_id",
                  "metadata.entry_name",
                  "metadata.entry_timestamp",
                  "metadata.entry_timestamp.timestamp",
                  "metadata.entry_timestamp.token",
                  "metadata.entry_timestamp.token_seed",
                  "metadata.entry_timestamp.tsa_server",
                  "metadata.entry_type",
                  "metadata.files",
                  "metadata.last_processing_time",
                  "metadata.license",
                  "metadata.main_author",
                  "metadata.mainfile",
                  "metadata.nomad_commit",
                  "metadata.nomad_version",
                  "metadata.parser_name",
                  "metadata.processed",
                  "metadata.processing_errors",
                  "metadata.published",
                  "metadata.quantities",
                  "metadata.references",
                  "metadata.reviewers",
                  "metadata.section_defs",
                  "metadata.section_defs.definition_id",
                  "metadata.section_defs.definition_qualified_name",
                  "metadata.section_defs.used_directly",
                  "metadata.sections",
                  "metadata.upload_create_time",
                  "metadata.upload_id",
                  "metadata.with_embargo",
                  "results",
                  "results.eln",
                  "results.eln.descriptions",
                  "results.eln.lab_ids",
                  "results.eln.methods",
                  "results.eln.names",
                  "results.eln.sections",
                  "results.eln.tags",
                  "results.properties"
                ],
                "sections": [
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
                  "nomad.datamodel.datamodel.EntryArchive",
                  "nomad.datamodel.datamodel.EntryMetadata",
                  "nomad.datamodel.datamodel.RFC3161Timestamp",
                  "nomad.datamodel.results.ELN",
                  "nomad.datamodel.results.Properties",
                  "nomad.datamodel.results.Results"
                ],
                "entry_timestamp": {
                  "token_seed": "xM16QFk7ZT7PzMaOI2B0iCqa6yI1",
                  "token": "",
                  "tsa_server": "http://time.certum.pl/",
                  "timestamp": "2023-06-05T10:46:35+00:00"
                },
                "section_defs": [
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process",
                    "definition_id": "88f0ccdc3585c154e0d1b67cf28b734e69a0791b",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
                    "definition_id": "61cee898fcd24be5040ffc76163cd645f26c9ff8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
                    "definition_id": "b82ee685f3b0fd55329dbafada317987feac3051",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
                    "definition_id": "1341c9d51198599e0cf17a12d00694469e6fce8f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
                    "definition_id": "fdd23ea5c11d32f9b780e5e5b0f6349712bafe6e",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.data.ArchiveSection",
                    "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.data.EntryData",
                    "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive",
                    "definition_id": "9e36824ae135f1e5ee5485911cb5fc03bc47af1d",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata",
                    "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp",
                    "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity",
                    "definition_id": "870f59b3b42ceab01a604bddc86c39b90a897366",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection",
                    "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process",
                    "definition_id": "af4b2af6fde599256cf9d75c51958a41b3245b25",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection",
                    "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample",
                    "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.ELN",
                    "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Properties",
                    "definition_id": "9fcaeef3034c9b3861ab45bcea5014c65ffb3da2",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Results",
                    "definition_id": "1ee9d4d17197a78dcfa5f1814b1ff3e2b275c195",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.parsing.tabular.TableData",
                    "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                    "used_directly": true
                  }
                ],
                "searchable_quantities": [
                  {
                    "quantity_name": "name",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                    "path": "data.name",
                    "text_value": "ELN example sample"
                  },
                  {
                    "quantity_name": "lab_id",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.lab_id",
                    "text_value": "001"
                  },
                  {
                    "quantity_name": "description",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.description",
                    "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                  },
                  {
                    "quantity_name": "substrate_type",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                    "path": "data.substrate_type",
                    "keyword_value": "SLG"
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.basesections.Activity",
                    "path": "data.processes.pvd_evaporation.datetime",
                    "date_value": "2022-05-10T07:20:00+00:00"
                  },
                  {
                    "quantity_name": "data_file",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0",
                    "path": "data.processes.pvd_evaporation.data_file",
                    "text_value": "PVDProcess.csv"
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.basesections.Activity",
                    "path": "data.processes.hotplate_annealing.datetime",
                    "date_value": "2022-05-10T07:22:00+00:00"
                  },
                  {
                    "quantity_name": "set_temperature",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                    "path": "data.processes.hotplate_annealing.set_temperature",
                    "double_value": 373.15
                  },
                  {
                    "quantity_name": "duration",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                    "path": "data.processes.hotplate_annealing.duration",
                    "double_value": 60
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.datetime",
                    "date_value": "2023-06-05T12:46:35.766102+00:00"
                  }
                ]
              },
              "data": {
                "m_def": "../upload/raw/schema.archive.yaml#/definitions/section_definitions/3",
                "name": "ELN example sample",
                "datetime": "2023-06-05T12:46:35.766102+00:00",
                "lab_id": "001",
                "description": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "tags": [
                  "project"
                ],
                "substrate_type": "SLG",
                "processes": {
                  "pvd_evaporation": {
                    "datetime": "2022-05-10T07:20:00+00:00",
                    "fill_archive_from_datafile": false,
                    "data_file": "PVDProcess.csv",
                    "time": [
                      0,
                      130,
                      260,
                      390,
                      520,
                      650,
                      780,
                      910,
                      1040,
                      1170,
                      1300,
                      1430,
                      1560,
                      1691,
                      1821,
                      1951,
                      2081,
                      2211,
                      2341,
                      2471,
                      2601,
                      2731,
                      2861,
                      2991,
                      3121,
                      3251,
                      3317,
                      3383,
                      3513,
                      3643,
                      3838,
                      4033,
                      7500,
                      7823,
                      7889,
                      8148,
                      8408,
                      8731,
                      8990,
                      9249,
                      9444,
                      9510,
                      9576,
                      9642,
                      9648
                    ],
                    "chamber_pressure": [
                      0.00313,
                      0.00318,
                      0.00309,
                      0.00304,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00304,
                      0.00303,
                      0.00303,
                      0.00304,
                      0.00304,
                      0.00304,
                      0.00304,
                      0.00305,
                      0.00305,
                      0.00307,
                      0.00307,
                      0.00307,
                      0.0031,
                      0.00309,
                      0.00309,
                      0.00314,
                      0.00309,
                      0.00312,
                      0.0032,
                      0.0032,
                      0.00321,
                      0.00322,
                      0.00322,
                      0.0409,
                      0.00279,
                      1020,
                      1020,
                      1020,
                      1020,
                      25.2,
                      17.6
                    ],
                    "substrate_temperature": [
                      32.4132,
                      32.3748,
                      32.3667,
                      32.3506,
                      32.3848,
                      32.4239,
                      32.4554,
                      32.4683,
                      32.5455,
                      32.6005,
                      32.665,
                      32.7414,
                      32.8328,
                      32.9323,
                      33.033,
                      33.1444,
                      33.2855,
                      33.5597,
                      33.9553,
                      34.3703,
                      34.7837,
                      35.2038,
                      35.6129,
                      35.9984,
                      36.386,
                      36.7221,
                      36.9044,
                      37.065,
                      37.3777,
                      37.6708,
                      38.072,
                      38.4669,
                      40.3041,
                      39.8286,
                      39.7314,
                      39.4123,
                      39.0901,
                      38.7298,
                      38.4244,
                      37.0465,
                      36.3994,
                      36.3002,
                      36.4472,
                      36.4526,
                      36.4504
                    ]
                  },
                  "hotplate_annealing": {
                    "datetime": "2022-05-10T07:22:00+00:00",
                    "set_temperature": 373.15,
                    "duration": 60
                  }
                }
              },
              "results": {
                "properties": {}
              },
              "m_ref_archives": {}
            }
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "26227",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    },
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-/archive/query",
        "method": "POST",
        "body": {
          "required": "*"
        },
        "headers": {
          "accept": "application/json",
          "content-type": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiIzZjgyOWI2My0yZTYwLTQ0ZTAtOGE4ZC04YTk2ZWU4ZmIwYTYiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDA0LCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.IlqJpA8vZFkmjAak3Yoe37SuJUOPLB9rPEVdPgPsO0O-5y7uF3O0UGch-alF4GUrEm41VVIUZjELM7MYu0i8jWsseZ48qS4XzdEJC3GjVXTQgo-QUYzlvEh3FWWlxN92pJgVFWDZxZ3c6avnkkGpkoqP4igF5BioKJme96Z6RyhGEXA4yYKKROZBCZtrOVJGdeGGtMYYQAOiFTkjqg2qlBGgyrHXY0tfBAHXm2j1WcDWf2aS-RHUIBPY64e_moDmxmw2EhywJZXsBI7-omLPlNtrmF3un-VFPAjlIP1MrnWfjR-XHop748O7Za8gezlQZJ3OIjP5JdNnNTbd2Qe7Zw",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "required": "*",
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "data": {
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "upload_id": "eln_upload_id",
            "parser_name": "parsers/archive",
            "archive": {
              "processing_logs": [
                {
                  "event": "Executing celery task",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "1cQ7g9TGQ4Sj4LnOr6reqg",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-06-05 12:46.35",
                  "level": "DEBUG"
                },
                {
                  "exec_time": "0.02238941192626953",
                  "input_size": "1176",
                  "event": "parser executed",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "1cQ7g9TGQ4Sj4LnOr6reqg",
                  "parser": "parsers/archive",
                  "step": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-06-05 12:46.35",
                  "level": "INFO"
                },
                {
                  "normalizer": "ResultsNormalizer",
                  "step": "ResultsNormalizer",
                  "event": "normalizer completed successfully",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "1cQ7g9TGQ4Sj4LnOr6reqg",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-06-05 12:46.35",
                  "level": "INFO"
                },
                {
                  "exec_time": "0.0002448558807373047",
                  "input_size": "1176",
                  "event": "normalizer executed",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "1cQ7g9TGQ4Sj4LnOr6reqg",
                  "parser": "parsers/archive",
                  "normalizer": "ResultsNormalizer",
                  "step": "ResultsNormalizer",
                  "logger": "nomad.processing",
                  "timestamp": "2023-06-05 12:46.35",
                  "level": "INFO"
                },
                {
                  "normalizer": "MetainfoNormalizer",
                  "step": "MetainfoNormalizer",
                  "event": "normalizer completed successfully",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "1cQ7g9TGQ4Sj4LnOr6reqg",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-06-05 12:46.35",
                  "level": "INFO"
                },
                {
                  "exec_time": "0.035686492919921875",
                  "input_size": "1176",
                  "event": "normalizer executed",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "1cQ7g9TGQ4Sj4LnOr6reqg",
                  "parser": "parsers/archive",
                  "normalizer": "MetainfoNormalizer",
                  "step": "MetainfoNormalizer",
                  "logger": "nomad.processing",
                  "timestamp": "2023-06-05 12:46.35",
                  "level": "INFO"
                },
                {
                  "exec_time": "0.002324342727661133",
                  "event": "entry metadata saved",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "1cQ7g9TGQ4Sj4LnOr6reqg",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-06-05 12:46.35",
                  "level": "INFO"
                },
                {
                  "exec_time": "0.009853601455688477",
                  "event": "entry metadata indexed",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "1cQ7g9TGQ4Sj4LnOr6reqg",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-06-05 12:46.35",
                  "level": "INFO"
                }
              ],
              "data": {
                "m_def": "../upload/raw/schema.archive.yaml#/definitions/section_definitions/3",
                "name": "ELN example sample",
                "datetime": "2023-06-05T12:46:35.766102+00:00",
                "lab_id": "001",
                "description": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "tags": [
                  "project"
                ],
                "substrate_type": "SLG",
                "processes": {
                  "pvd_evaporation": {
                    "datetime": "2022-05-10T07:20:00+00:00",
                    "fill_archive_from_datafile": false,
                    "data_file": "PVDProcess.csv",
                    "time": [
                      0,
                      130,
                      260,
                      390,
                      520,
                      650,
                      780,
                      910,
                      1040,
                      1170,
                      1300,
                      1430,
                      1560,
                      1691,
                      1821,
                      1951,
                      2081,
                      2211,
                      2341,
                      2471,
                      2601,
                      2731,
                      2861,
                      2991,
                      3121,
                      3251,
                      3317,
                      3383,
                      3513,
                      3643,
                      3838,
                      4033,
                      7500,
                      7823,
                      7889,
                      8148,
                      8408,
                      8731,
                      8990,
                      9249,
                      9444,
                      9510,
                      9576,
                      9642,
                      9648
                    ],
                    "chamber_pressure": [
                      0.00313,
                      0.00318,
                      0.00309,
                      0.00304,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00304,
                      0.00303,
                      0.00303,
                      0.00304,
                      0.00304,
                      0.00304,
                      0.00304,
                      0.00305,
                      0.00305,
                      0.00307,
                      0.00307,
                      0.00307,
                      0.0031,
                      0.00309,
                      0.00309,
                      0.00314,
                      0.00309,
                      0.00312,
                      0.0032,
                      0.0032,
                      0.00321,
                      0.00322,
                      0.00322,
                      0.0409,
                      0.00279,
                      1020,
                      1020,
                      1020,
                      1020,
                      25.2,
                      17.6
                    ],
                    "substrate_temperature": [
                      32.4132,
                      32.3748,
                      32.3667,
                      32.3506,
                      32.3848,
                      32.4239,
                      32.4554,
                      32.4683,
                      32.5455,
                      32.6005,
                      32.665,
                      32.7414,
                      32.8328,
                      32.9323,
                      33.033,
                      33.1444,
                      33.2855,
                      33.5597,
                      33.9553,
                      34.3703,
                      34.7837,
                      35.2038,
                      35.6129,
                      35.9984,
                      36.386,
                      36.7221,
                      36.9044,
                      37.065,
                      37.3777,
                      37.6708,
                      38.072,
                      38.4669,
                      40.3041,
                      39.8286,
                      39.7314,
                      39.4123,
                      39.0901,
                      38.7298,
                      38.4244,
                      37.0465,
                      36.3994,
                      36.3002,
                      36.4472,
                      36.4526,
                      36.4504
                    ]
                  },
                  "hotplate_annealing": {
                    "datetime": "2022-05-10T07:22:00+00:00",
                    "set_temperature": 373.15,
                    "duration": 60
                  }
                }
              },
              "metadata": {
                "upload_id": "eln_upload_id",
                "upload_create_time": "2023-06-05T10:46:35.330000+00:00",
                "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
                "entry_name": "ELN example sample",
                "entry_type": "Sample",
                "entry_hash": "xM16QFk7ZT7PzMaOI2B0iCqa6yI1",
                "entry_create_time": "2023-06-05T10:46:35.398000+00:00",
                "parser_name": "parsers/archive",
                "mainfile": "sample.archive.json",
                "files": [
                  "sample.archive.json",
                  "PVDProcess.csv",
                  "schema.archive.yaml"
                ],
                "published": false,
                "with_embargo": false,
                "embargo_length": 0,
                "license": "CC BY 4.0",
                "processed": true,
                "last_processing_time": "2023-06-05T10:46:35.702257+00:00",
                "processing_errors": [],
                "nomad_version": "1.2.0rc1.dev161+gf7da75ce5.d20230605",
                "nomad_commit": "",
                "references": [],
                "main_author": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "coauthors": [
                  "a03af8b6-3aa7-428a-b3b1-4a6317e576b6"
                ],
                "entry_coauthors": [],
                "reviewers": [
                  "54cb1f64-f84e-4815-9ade-440ce0b5430f"
                ],
                "datasets": [],
                "n_quantities": 59,
                "quantities": [
                  "",
                  "data",
                  "data.datetime",
                  "data.description",
                  "data.lab_id",
                  "data.name",
                  "data.processes",
                  "data.processes.hotplate_annealing",
                  "data.processes.hotplate_annealing.datetime",
                  "data.processes.hotplate_annealing.duration",
                  "data.processes.hotplate_annealing.set_temperature",
                  "data.processes.pvd_evaporation",
                  "data.processes.pvd_evaporation.chamber_pressure",
                  "data.processes.pvd_evaporation.data_file",
                  "data.processes.pvd_evaporation.datetime",
                  "data.processes.pvd_evaporation.fill_archive_from_datafile",
                  "data.processes.pvd_evaporation.substrate_temperature",
                  "data.processes.pvd_evaporation.time",
                  "data.substrate_type",
                  "data.tags",
                  "metadata",
                  "metadata.coauthors",
                  "metadata.datasets",
                  "metadata.embargo_length",
                  "metadata.entry_coauthors",
                  "metadata.entry_create_time",
                  "metadata.entry_hash",
                  "metadata.entry_id",
                  "metadata.entry_name",
                  "metadata.entry_timestamp",
                  "metadata.entry_timestamp.timestamp",
                  "metadata.entry_timestamp.token",
                  "metadata.entry_timestamp.token_seed",
                  "metadata.entry_timestamp.tsa_server",
                  "metadata.entry_type",
                  "metadata.files",
                  "metadata.last_processing_time",
                  "metadata.license",
                  "metadata.main_author",
                  "metadata.mainfile",
                  "metadata.nomad_commit",
                  "metadata.nomad_version",
                  "metadata.parser_name",
                  "metadata.processed",
                  "metadata.processing_errors",
                  "metadata.published",
                  "metadata.quantities",
                  "metadata.references",
                  "metadata.reviewers",
                  "metadata.section_defs",
                  "metadata.section_defs.definition_id",
                  "metadata.section_defs.definition_qualified_name",
                  "metadata.section_defs.used_directly",
                  "metadata.sections",
                  "metadata.upload_create_time",
                  "metadata.upload_id",
                  "metadata.with_embargo",
                  "results",
                  "results.eln",
                  "results.eln.descriptions",
                  "results.eln.lab_ids",
                  "results.eln.methods",
                  "results.eln.names",
                  "results.eln.sections",
                  "results.eln.tags",
                  "results.properties"
                ],
                "sections": [
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
                  "nomad.datamodel.datamodel.EntryArchive",
                  "nomad.datamodel.datamodel.EntryMetadata",
                  "nomad.datamodel.datamodel.RFC3161Timestamp",
                  "nomad.datamodel.results.ELN",
                  "nomad.datamodel.results.Properties",
                  "nomad.datamodel.results.Results"
                ],
                "entry_timestamp": {
                  "token_seed": "xM16QFk7ZT7PzMaOI2B0iCqa6yI1",
                  "token": "",
                  "tsa_server": "http://time.certum.pl/",
                  "timestamp": "2023-06-05T10:46:35+00:00"
                },
                "section_defs": [
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process",
                    "definition_id": "88f0ccdc3585c154e0d1b67cf28b734e69a0791b",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
                    "definition_id": "61cee898fcd24be5040ffc76163cd645f26c9ff8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
                    "definition_id": "b82ee685f3b0fd55329dbafada317987feac3051",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
                    "definition_id": "1341c9d51198599e0cf17a12d00694469e6fce8f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
                    "definition_id": "fdd23ea5c11d32f9b780e5e5b0f6349712bafe6e",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.data.ArchiveSection",
                    "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.data.EntryData",
                    "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive",
                    "definition_id": "9e36824ae135f1e5ee5485911cb5fc03bc47af1d",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata",
                    "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp",
                    "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity",
                    "definition_id": "870f59b3b42ceab01a604bddc86c39b90a897366",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection",
                    "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process",
                    "definition_id": "af4b2af6fde599256cf9d75c51958a41b3245b25",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection",
                    "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample",
                    "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.ELN",
                    "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Properties",
                    "definition_id": "9fcaeef3034c9b3861ab45bcea5014c65ffb3da2",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Results",
                    "definition_id": "1ee9d4d17197a78dcfa5f1814b1ff3e2b275c195",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.parsing.tabular.TableData",
                    "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                    "used_directly": true
                  }
                ],
                "searchable_quantities": [
                  {
                    "quantity_name": "name",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                    "path": "data.name",
                    "text_value": "ELN example sample"
                  },
                  {
                    "quantity_name": "lab_id",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.lab_id",
                    "text_value": "001"
                  },
                  {
                    "quantity_name": "description",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.description",
                    "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                  },
                  {
                    "quantity_name": "substrate_type",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                    "path": "data.substrate_type",
                    "keyword_value": "SLG"
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.basesections.Activity",
                    "path": "data.processes.pvd_evaporation.datetime",
                    "date_value": "2022-05-10T07:20:00+00:00"
                  },
                  {
                    "quantity_name": "data_file",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0",
                    "path": "data.processes.pvd_evaporation.data_file",
                    "text_value": "PVDProcess.csv"
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.basesections.Activity",
                    "path": "data.processes.hotplate_annealing.datetime",
                    "date_value": "2022-05-10T07:22:00+00:00"
                  },
                  {
                    "quantity_name": "set_temperature",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                    "path": "data.processes.hotplate_annealing.set_temperature",
                    "double_value": 373.15
                  },
                  {
                    "quantity_name": "duration",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                    "path": "data.processes.hotplate_annealing.duration",
                    "double_value": 60
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.datetime",
                    "date_value": "2023-06-05T12:46:35.766102+00:00"
                  }
                ]
              },
              "results": {
                "properties": {},
                "eln": {
                  "sections": [
                    "PvdEvaporation",
                    "HotplateAnnealing",
                    "Sample"
                  ],
                  "tags": [
                    "project"
                  ],
                  "names": [
                    "ELN example sample"
                  ],
                  "descriptions": [
                    "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                  ],
                  "methods": [
                    "PvdEvaporation",
                    "HotplateAnnealing"
                  ],
                  "lab_ids": [
                    "001"
                  ]
                }
              },
              "m_ref_archives": {}
            }
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "29909",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    }
  ],
  "afa783d98e040c74b68e5cfd3d82f3f0": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/query",
        "method": "POST",
        "body": {
          "required": {
            "metadata": "*"
          },
          "owner": "visible",
          "pagination": {
            "order_by": "upload_create_time",
            "order": "desc",
            "page_size": 20
          },
          "query": {
            "entry_references.target_entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-"
          }
        },
        "headers": {
          "accept": "application/json, text/plain, */*",
          "content-type": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJjODU2Mzc1YS0zYWQwLTQ3MDgtOTM3Mi1mZDBmNTM0ODY0OWEiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDAwLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.XveBdvwv3-YttVN69QUQJXgpXmCR6piOylNohUprwA5INbtkEJeshvY5m1JcOMsYHe_6wlIsLfAky_njTIl2DCfdjOYpFofA3qFIYvgOFaMfAiZ24mVh3Nz5G4y--wX2NFbTyfkvwSr7qkZLH5oMPiaDUzIKTGEMn56LYp1XaBCwudmVeCD4VarDanfRjfkMKjGT7bW8rJNkgdfel7HoPUGjRhNAcHKlpBtvVAhxX7VhKdfyuOfgbPFrts4ONUp8brJglIztHI_Ks7K86HCs0M3OpE7d4AmeNYcAeZURnUjMWUDbNDCLxDXoMlEI3b0TpeQZgoTgv4wygQd6OLk-BA",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "owner": "visible",
          "query": {
            "prefix": "entry_references",
            "query": {
              "name": "target_entry_id",
              "value": "bC7byHvWJp62Sn9uiuJUB38MT5j-"
            }
          },
          "pagination": {
            "page_size": 20,
            "order_by": "upload_create_time",
            "order": "desc",
            "total": 0
          },
          "required": {},
          "data": []
        },
        "headers": {
          "connection": "close",
          "content-length": "326",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    }
  ],
  "10cf17b8184337f8438ff5af96db21a0": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/uploads/eln_upload_id/raw/sample.archive.json?decompress=true&ignore_mime_type=true",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiIyYmUxNTAzMC1iNTJmLTRiODAtOTRjZC0zYzljYjQ2ZWI1MDMiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDAwLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.K5LuvHoNGFcRLEQrgzjjGWX6-g-_psKqDGofhQ93GImCAWBPMrfXrhrGmpK7MdGwPd2i_WtSo5I5h0nTCRDAkR5wZpqtVhQHR1QsYx-sjMuHSjyQhaCNSqtbYEnRxL0e3FMeJyDuoCCFNXIl2W_WVNhRbS4v8quElzMfEJ2M-W1g0K2UH9cYUZ-MeIWd_jRXio8ULnSQyVDtvzR4nwPtLu8035UtLeN9u9P2ixxNzRadhPHS5Gb5A4R79GCH62tKiw6lh0s9U0lyx9058dewDAAXPiV5WcR73x1M5_P5wPf6uipwMFD7hcb7VgtQpK8ZJlW_8-EDM37NjL2CQXgiGw",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": "{\n    \"data\": {\n        \"m_def\": \"../upload/raw/schema.archive.yaml#/definitions/section_definitions/3\",\n        \"name\": \"ELN example sample\",\n        \"lab_id\": \"001\",\n        \"tags\": [\n            \"project\"\n        ],\n        \"substrate_type\": \"SLG\",\n        \"processes\": {\n            \"pvd_evaporation\": {\n                \"datetime\": \"2022-05-10T07:20:00+00:00\",\n                \"data_file\": \"PVDProcess.csv\"\n            },\n            \"hotplate_annealing\": {\n                \"datetime\": \"2022-05-10T07:22:00+00:00\",\n                \"set_temperature\": 373.15,\n                \"duration\": 60\n            }\n        },\n        \"description\": \"<p>A simple example for an \\\"sample\\\" that demonstrates how to combine different data entities.</p>\\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\\n<p>The sample also show references to other entries (chemicals, instruments).</p>\\n<p>&nbsp;</p>\"\n    }\n}\n",
        "headers": {
          "connection": "close",
          "content-disposition": "attatchment; filename=\"sample.archive.json\"",
          "content-type": "application/octet-stream",
          "server": "uvicorn",
          "transfer-encoding": "chunked"
        }
      }
    },
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/uploads/eln_upload_id/raw/sample.archive.json?decompress=true&ignore_mime_type=true",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJiODJjMDM2MS01ZTk2LTRmNjEtYTBjOS0zYzMzYTQ3YzNhNjQiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDA0LCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.QiVnH372JQe5MTU2QExcOsiQvK8EdVSNMQCYxeiDb_gUo7hpNZ8UW-rXxXQXa_iLxrIb3FKP6d1Fc5YGEMc5ZPmt5Z82arB4_dq8nwlJk9OtPZ0-3WoBOHOR7nH2ITd6ItbPo3WUASv3bopt5S79FbL-YURwlGtGBdlvMFKd0enrvYyeRMqGgUWzXNG-t7dgPKtUieKmesJlhup0pSat1OiTpMK7uSnnHF--ss33A0bcH1oarCut7O5hieUQf0DBmYJiY4UcMXcqg1ZjT0IajbjZcwqUTS45v_tx7fWCgfI3KiqiOFa-hMi6gbPigL4dWgF6tPhGuNTDWJrYtFNupA",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": "{\n    \"data\": {\n        \"m_def\": \"../upload/raw/schema.archive.yaml#/definitions/section_definitions/3\",\n        \"name\": \"ELN example sample\",\n        \"lab_id\": \"001\",\n        \"tags\": [\n            \"project\"\n        ],\n        \"substrate_type\": \"SLG\",\n        \"processes\": {\n            \"pvd_evaporation\": {\n                \"datetime\": \"2022-05-10T07:20:00+00:00\",\n                \"data_file\": \"PVDProcess.csv\"\n            },\n            \"hotplate_annealing\": {\n                \"datetime\": \"2022-05-10T07:22:00+00:00\",\n                \"set_temperature\": 373.15,\n                \"duration\": 60\n            }\n        },\n        \"description\": \"<p>A simple example for an \\\"sample\\\" that demonstrates how to combine different data entities.</p>\\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\\n<p>The sample also show references to other entries (chemicals, instruments).</p>\\n<p>&nbsp;</p>\"\n    }\n}\n",
        "headers": {
          "connection": "close",
          "content-disposition": "attatchment; filename=\"sample.archive.json\"",
          "content-type": "application/octet-stream",
          "server": "uvicorn",
          "transfer-encoding": "chunked"
        }
      }
    }
  ],
  "e623af5f65daba3b3be485647832f50b": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/83DS7AzwqTKFVwlrdVeaL3kMSLU_/archive/query",
        "method": "POST",
        "body": {
          "required": {
            "definitions": "*",
            "metadata": "*",
            "resolve-inplace": false
          }
        },
        "headers": {
          "accept": "application/json",
          "content-type": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiI1MmI2MjBlZi03NGIxLTQ0YWItYTI0Zi1iMmUyNGRhYzhlNWUiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDAxLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.d01koEbrL77BNlEOgfiR8eefHtxrMcytgOu55pMbJ0JuV7GhGSg6EnjWrdoM0AQ3Rnf_RSwGxxLgv1LK8-pdSrfKb-LhpDR03iLohWRedGf5B-IDXvm5Rhj1_FQe-SrxxxaKvhOpeiEauQ3duGDBw-HehXNnbdri4XIXBWByncjqcxZ0oOfXdA1OsZSGI7Wm5WpRMqiaGIgRtfMgRaAS3AGVjHwcT408K4MNXXqZX3Qonzhi0xnqF6kaIHbfcITWrtpwv-2ToMBGHFRVqO3LbL1NghI7YcQdPD38qQPtNYkO0qb8elWwoZeBIjDvrcpmc4kfAtDWkfoPPL-e2Nydzw",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "required": {
            "definitions": "*",
            "metadata": "*",
            "resolve-inplace": false
          },
          "entry_id": "83DS7AzwqTKFVwlrdVeaL3kMSLU_",
          "data": {
            "entry_id": "83DS7AzwqTKFVwlrdVeaL3kMSLU_",
            "upload_id": "eln_upload_id",
            "parser_name": "parsers/archive",
            "archive": {
              "definitions": {
                "m_def": "nomad.metainfo.metainfo.Package",
                "m_parent_sub_section": "definitions",
                "name": "Electronic Lab Notebook example schema",
                "section_definitions": [
                  {
                    "m_def": "nomad.metainfo.metainfo.Section",
                    "m_parent_index": 0,
                    "m_parent_sub_section": "section_definitions",
                    "name": "Chemical",
                    "description": "This is an example description for Chemical.\nA description can contain **markdown** markup and TeX formulas, like $\\sum\\limits_{i=0}^{n}$.\n",
                    "base_sections": [
                      "nomad.datamodel.metainfo.eln.Chemical",
                      "nomad.datamodel.data.EntryData"
                    ],
                    "quantities": [
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "EnumEditQuantity"
                            }
                          ]
                        },
                        "name": "form",
                        "type": {
                          "type_kind": "Enum",
                          "type_data": [
                            "crystalline solid",
                            "powder"
                          ]
                        }
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 1,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "StringEditQuantity"
                            }
                          ]
                        },
                        "name": "cas_number",
                        "type": {
                          "type_kind": "python",
                          "type_data": "str"
                        }
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 2,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "StringEditQuantity"
                            }
                          ]
                        },
                        "name": "ec_number",
                        "type": {
                          "type_kind": "python",
                          "type_data": "str"
                        }
                      }
                    ]
                  },
                  {
                    "m_def": "nomad.metainfo.metainfo.Section",
                    "m_parent_index": 1,
                    "m_parent_sub_section": "section_definitions",
                    "name": "Instrument",
                    "base_sections": [
                      "nomad.datamodel.metainfo.basesections.Instrument",
                      "nomad.datamodel.data.EntryData"
                    ]
                  },
                  {
                    "m_def": "nomad.metainfo.metainfo.Section",
                    "m_parent_index": 2,
                    "m_parent_sub_section": "section_definitions",
                    "name": "Process",
                    "base_sections": [
                      "nomad.datamodel.metainfo.basesections.Process"
                    ],
                    "quantities": [
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "ReferenceEditQuantity"
                            }
                          ]
                        },
                        "name": "instrument",
                        "type": {
                          "type_kind": "reference",
                          "type_data": "#/definitions/section_definitions/1"
                        }
                      }
                    ]
                  },
                  {
                    "m_def": "nomad.metainfo.metainfo.Section",
                    "m_parent_index": 3,
                    "m_parent_sub_section": "section_definitions",
                    "m_annotations": {
                      "template": [
                        {
                          "processes": {
                            "pvd_evaporation": {}
                          }
                        }
                      ]
                    },
                    "name": "Sample",
                    "base_sections": [
                      "nomad.datamodel.metainfo.eln.Sample",
                      "nomad.datamodel.data.EntryData"
                    ],
                    "quantities": [
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "StringEditQuantity"
                            }
                          ]
                        },
                        "name": "name",
                        "type": {
                          "type_kind": "python",
                          "type_data": "str"
                        },
                        "default": "Default Sample Name"
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 1,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "AutocompleteEditQuantity"
                            }
                          ]
                        },
                        "name": "tags",
                        "type": {
                          "type_kind": "Enum",
                          "type_data": [
                            "internal",
                            "collaboration",
                            "project",
                            "other"
                          ]
                        },
                        "shape": [
                          "*"
                        ]
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 2,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "ReferenceEditQuantity"
                            }
                          ]
                        },
                        "name": "chemicals",
                        "type": {
                          "type_kind": "reference",
                          "type_data": "#/definitions/section_definitions/0"
                        },
                        "shape": [
                          "*"
                        ]
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 3,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "RadioEnumEditQuantity"
                            }
                          ]
                        },
                        "name": "substrate_type",
                        "type": {
                          "type_kind": "Enum",
                          "type_data": [
                            "Fused quartz glass",
                            "SLG",
                            "other"
                          ]
                        }
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 4,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "NumberEditQuantity"
                            }
                          ]
                        },
                        "name": "substrate_thickness",
                        "type": {
                          "type_kind": "numpy",
                          "type_data": "float64"
                        },
                        "unit": "meter"
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 5,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "BoolEditQuantity"
                            }
                          ]
                        },
                        "name": "sample_is_from_collaboration",
                        "type": {
                          "type_kind": "python",
                          "type_data": "bool"
                        }
                      }
                    ],
                    "sub_sections": [
                      {
                        "m_def": "nomad.metainfo.metainfo.SubSection",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "sub_sections",
                        "name": "processes",
                        "sub_section": "#/definitions/section_definitions/3/inner_section_definitions/0"
                      }
                    ],
                    "inner_section_definitions": [
                      {
                        "m_def": "nomad.metainfo.metainfo.Section",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "inner_section_definitions",
                        "m_annotations": {
                          "eln": [
                            "None"
                          ]
                        },
                        "name": "Processes",
                        "sub_sections": [
                          {
                            "m_def": "nomad.metainfo.metainfo.SubSection",
                            "m_parent_index": 0,
                            "m_parent_sub_section": "sub_sections",
                            "name": "pvd_evaporation",
                            "sub_section": "#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0"
                          },
                          {
                            "m_def": "nomad.metainfo.metainfo.SubSection",
                            "m_parent_index": 1,
                            "m_parent_sub_section": "sub_sections",
                            "name": "hotplate_annealing",
                            "sub_section": "#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1"
                          }
                        ],
                        "inner_section_definitions": [
                          {
                            "m_def": "nomad.metainfo.metainfo.Section",
                            "m_parent_index": 0,
                            "m_parent_sub_section": "inner_section_definitions",
                            "m_annotations": {
                              "eln": [
                                {
                                  "hide": [
                                    "name",
                                    "lab_id",
                                    "description",
                                    "method"
                                  ],
                                  "overview": true
                                }
                              ],
                              "plot": [
                                {
                                  "x": "time",
                                  "y": [
                                    "chamber_pressure",
                                    "substrate_temperature"
                                  ]
                                }
                              ]
                            },
                            "name": "PvdEvaporation",
                            "base_sections": [
                              "#/definitions/section_definitions/2",
                              "nomad.parsing.tabular.TableData"
                            ],
                            "quantities": [
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 0,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "tabular_parser": [
                                    {
                                      "comment": "#",
                                      "sep": "\\t"
                                    }
                                  ],
                                  "browser": [
                                    {
                                      "adaptor": "RawFileAdaptor"
                                    }
                                  ],
                                  "eln": [
                                    {
                                      "component": "FileEditQuantity"
                                    }
                                  ]
                                },
                                "name": "data_file",
                                "description": "A reference to an uploaded .csv produced by the PVD evaporation instruments\ncontrol software.\n",
                                "type": {
                                  "type_kind": "python",
                                  "type_data": "str"
                                }
                              },
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 1,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "tabular": [
                                    {
                                      "name": "Process Time in seconds"
                                    }
                                  ]
                                },
                                "name": "time",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "shape": [
                                  "*"
                                ],
                                "unit": "second"
                              },
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 2,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "tabular": [
                                    {
                                      "name": "Vacuum Pressure1"
                                    }
                                  ],
                                  "plot": [
                                    {
                                      "x": "time",
                                      "y": "chamber_pressure"
                                    }
                                  ]
                                },
                                "name": "chamber_pressure",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "shape": [
                                  "*"
                                ],
                                "unit": "millibar"
                              },
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 3,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "tabular": [
                                    {
                                      "name": "Substrate PV",
                                      "unit": "degC"
                                    }
                                  ],
                                  "plot": [
                                    {
                                      "x": "time",
                                      "y": "substrate_temperature"
                                    }
                                  ]
                                },
                                "name": "substrate_temperature",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "shape": [
                                  "*"
                                ],
                                "unit": "kelvin"
                              }
                            ]
                          },
                          {
                            "m_def": "nomad.metainfo.metainfo.Section",
                            "m_parent_index": 1,
                            "m_parent_sub_section": "inner_section_definitions",
                            "m_annotations": {
                              "eln": [
                                {
                                  "hide": [
                                    "name",
                                    "lab_id",
                                    "description"
                                  ],
                                  "overview": true
                                }
                              ]
                            },
                            "name": "HotplateAnnealing",
                            "base_sections": [
                              "#/definitions/section_definitions/2"
                            ],
                            "quantities": [
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 0,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "eln": [
                                    {
                                      "component": "NumberEditQuantity"
                                    }
                                  ]
                                },
                                "name": "set_temperature",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "unit": "kelvin"
                              },
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 1,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "eln": [
                                    {
                                      "component": "NumberEditQuantity"
                                    }
                                  ]
                                },
                                "name": "duration",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "unit": "second"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "metadata": {
                "upload_id": "eln_upload_id",
                "upload_create_time": "2023-06-05T10:46:35.330000+00:00",
                "entry_id": "83DS7AzwqTKFVwlrdVeaL3kMSLU_",
                "entry_name": "Electronic Lab Notebook example schema",
                "entry_type": "Schema",
                "entry_hash": "kIsAM4RiBVv4_s_fYyfGegzV_xAo",
                "entry_create_time": "2023-06-05T10:46:35.440000+00:00",
                "parser_name": "parsers/archive",
                "mainfile": "schema.archive.yaml",
                "files": [
                  "schema.archive.yaml",
                  "PVDProcess.csv",
                  "sample.archive.json"
                ],
                "published": false,
                "with_embargo": false,
                "embargo_length": 0,
                "license": "CC BY 4.0",
                "processed": true,
                "last_processing_time": "2023-06-05T10:46:35.701847+00:00",
                "processing_errors": [],
                "nomad_version": "1.2.0rc1.dev161+gf7da75ce5.d20230605",
                "nomad_commit": "",
                "references": [],
                "main_author": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "coauthors": [
                  "a03af8b6-3aa7-428a-b3b1-4a6317e576b6"
                ],
                "entry_coauthors": [],
                "reviewers": [
                  "54cb1f64-f84e-4815-9ade-440ce0b5430f"
                ],
                "datasets": [],
                "n_quantities": 153,
                "quantities": [
                  "",
                  "definitions",
                  "definitions.more",
                  "definitions.name",
                  "definitions.section_definitions",
                  "definitions.section_definitions.base_sections",
                  "definitions.section_definitions.description",
                  "definitions.section_definitions.inner_section_definitions",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.base_sections",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.more",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.name",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.description",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.more",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.name",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.shape",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.type",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.unit",
                  "definitions.section_definitions.inner_section_definitions.more",
                  "definitions.section_definitions.inner_section_definitions.name",
                  "definitions.section_definitions.inner_section_definitions.sub_sections",
                  "definitions.section_definitions.inner_section_definitions.sub_sections.more",
                  "definitions.section_definitions.inner_section_definitions.sub_sections.name",
                  "definitions.section_definitions.inner_section_definitions.sub_sections.sub_section",
                  "definitions.section_definitions.more",
                  "definitions.section_definitions.name",
                  "definitions.section_definitions.quantities",
                  "definitions.section_definitions.quantities.default",
                  "definitions.section_definitions.quantities.more",
                  "definitions.section_definitions.quantities.name",
                  "definitions.section_definitions.quantities.shape",
                  "definitions.section_definitions.quantities.type",
                  "definitions.section_definitions.quantities.unit",
                  "definitions.section_definitions.sub_sections",
                  "definitions.section_definitions.sub_sections.more",
                  "definitions.section_definitions.sub_sections.name",
                  "definitions.section_definitions.sub_sections.sub_section",
                  "metadata",
                  "metadata.coauthors",
                  "metadata.datasets",
                  "metadata.embargo_length",
                  "metadata.entry_coauthors",
                  "metadata.entry_create_time",
                  "metadata.entry_hash",
                  "metadata.entry_id",
                  "metadata.entry_name",
                  "metadata.entry_timestamp",
                  "metadata.entry_timestamp.timestamp",
                  "metadata.entry_timestamp.token",
                  "metadata.entry_timestamp.token_seed",
                  "metadata.entry_timestamp.tsa_server",
                  "metadata.entry_type",
                  "metadata.files",
                  "metadata.last_processing_time",
                  "metadata.license",
                  "metadata.main_author",
                  "metadata.mainfile",
                  "metadata.nomad_commit",
                  "metadata.nomad_version",
                  "metadata.parser_name",
                  "metadata.processed",
                  "metadata.processing_errors",
                  "metadata.published",
                  "metadata.quantities",
                  "metadata.references",
                  "metadata.reviewers",
                  "metadata.section_defs",
                  "metadata.section_defs.definition_id",
                  "metadata.section_defs.definition_qualified_name",
                  "metadata.section_defs.used_directly",
                  "metadata.sections",
                  "metadata.upload_create_time",
                  "metadata.upload_id",
                  "metadata.with_embargo",
                  "results",
                  "results.properties"
                ],
                "sections": [
                  "nomad.datamodel.datamodel.EntryArchive",
                  "nomad.datamodel.datamodel.EntryMetadata",
                  "nomad.datamodel.datamodel.RFC3161Timestamp",
                  "nomad.datamodel.results.Properties",
                  "nomad.datamodel.results.Results",
                  "nomad.metainfo.metainfo.Package",
                  "nomad.metainfo.metainfo.Quantity",
                  "nomad.metainfo.metainfo.Section",
                  "nomad.metainfo.metainfo.SubSection"
                ],
                "entry_timestamp": {
                  "token_seed": "kIsAM4RiBVv4_s_fYyfGegzV_xAo",
                  "token": "",
                  "tsa_server": "http://time.certum.pl/",
                  "timestamp": "2023-06-05T10:46:35+00:00"
                },
                "section_defs": [
                  {
                    "definition_qualified_name": "nomad.datamodel.data.ArchiveSection",
                    "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive",
                    "definition_id": "9e36824ae135f1e5ee5485911cb5fc03bc47af1d",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata",
                    "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp",
                    "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Properties",
                    "definition_id": "9fcaeef3034c9b3861ab45bcea5014c65ffb3da2",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Results",
                    "definition_id": "1ee9d4d17197a78dcfa5f1814b1ff3e2b275c195",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Definition",
                    "definition_id": "f6617f133366ffb8cd1bde4bf643ca5bae1db7f8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Package",
                    "definition_id": "0c6464110f52fa3f556ae8e95e2f0272e201525a",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Property",
                    "definition_id": "28f841a88474d266eded1141318ea4c42d3aff3f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Quantity",
                    "definition_id": "d12b9e6f4aed521dc6feeb67239a929542f78b8d",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Section",
                    "definition_id": "f293173ca54be29603fb12b9b138f8a76130a25c",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.SubSection",
                    "definition_id": "19bf6b5bf2ffa69e6585a1fb1c6b0961d4a89738",
                    "used_directly": true
                  }
                ]
              },
              "m_ref_archives": {}
            }
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "35016",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    }
  ],
  "3b5543f0893b09d8de514df16d0bac43": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/uploads/eln_upload_id/raw/schema.archive.yaml?decompress=true&ignore_mime_type=true",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJhNWRhNDIxMy1lOWVjLTQ1MTAtYmQ5Yy0yZTJkZTBmMDA5YzkiLCJleHAiOjE2ODU5OTc5ODksIm5iZiI6MCwiaWF0IjoxNjg1OTYyMDAxLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjliMDNhYzgzLTVkODMtNDA1YS05MTdiLTJlZWYxOTMzZTg1OCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoibWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.Lz8IiLEuyXQLHlwKqT7cVL775VlQOQCilkURzfRsiXct2rzswe9LbhMIDrFkjybXQlnl4CGMeXd3TULzIyizNeFPMygvkB7R8n7HKVwI6adQNFdb0sw3F_7hdbDVl6lkcGhOOV_x8rI9R5XmFe3VjzkqVzw08YQq75d1msHPn4wT0957syHTDxmIbJITGz65FoZ8KnHHwJQZJ63vxCxrtp2VKgyNkm7t4aRS2nDJzV1Fz-pTTVqBCb2LGj-YSm0omfe4h1SigZD0j3KaER0w854QBGOqFnqpnQv5A1HwiulS9g9RYDHYO1iz3LTxN6RM_aXJpGoOeh0X9AgjjMwisg",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": "# Schemas can be defined as yaml files like this. The archive.yaml format will be\n# interpreted by nomad as a nomad archive. Therefore, all definitions have to be\n# put in a top-level section called \"definitions\"\ndefinitions:\n  # The \"definitions\" section is interpreted as a nomad schema package\n  # Schema packages can have a name:\n  name: 'Electronic Lab Notebook example schema'\n  # Schema packages contain section definitions. This is where the interesting schema\n  # information begins.\n  sections:\n    # Here we define a section called \"Chemical\":\n    Chemical:\n      # Section definition can have base_sections. Base sections are other schema\n      # definition and all properties of these will be inherited.\n      base_sections:\n        - 'nomad.datamodel.metainfo.eln.Chemical'  # Provides typical quantities like name, descriptions, chemical_formula and makes those available for search\n        - 'nomad.datamodel.data.EntryData'  # Declares this as a top-level entry section. This determines the types of entries you can create. With this we will be able to create a \"Chemical\" entry.\n      # All definitions, sections, sub_sections, quantities, can provide a description.\n      description: |\n        This is an example description for Chemical.\n        A description can contain **markdown** markup and TeX formulas, like $\\sum\\limits_{i=0}^{n}$.\n      # Sections define quantities. Quantities allow to manage actual data. Quantities\n      # can have various types, shapes, and units.\n      quantities:\n        # Here we define a quantity called \"from\"\n        form:\n          # This defines a Enum type with pre-defined possible values.\n          type:\n            type_kind: Enum\n            type_data:\n              - crystalline solid\n              - powder\n          # Annotations allow to provide additional information that is beyond just defining\n          # the possible data.\n          m_annotations:\n            # The eln annotation allows add the quantity to a ELN\n            eln:\n              component: EnumEditQuantity  # A form field component for EnumQuantities that uses a pull down menu.\n        cas_number:\n          type: str\n          m_annotations:\n            eln:\n              component: StringEditQuantity\n        ec_number:\n          type: str\n          m_annotations:\n            eln:\n              component: StringEditQuantity\n    Instrument:\n      base_sections:\n        - nomad.datamodel.metainfo.eln.Instrument\n        - nomad.datamodel.data.EntryData\n    Process:\n      base_section: nomad.datamodel.metainfo.eln.Process\n      quantities:\n        instrument:\n          type: Instrument\n          m_annotations:\n            eln:\n              component: ReferenceEditQuantity\n    Sample:\n      m_annotations:\n        # The template annotation allows to define what freshly created entries (instances of this schema) will look like.\n        # In this example we create a sample with an empty pvd_evaporation process.\n        template:\n          processes:\n            pvd_evaporation: {}\n      base_sections:\n        - 'nomad.datamodel.metainfo.eln.Sample'\n        - 'nomad.datamodel.data.EntryData'\n      quantities:\n        name:\n          type: str  # The simple string type\n          default: Default Sample Name\n          m_annotations:\n            eln:\n              component: StringEditQuantity  # A simple text edit form field\n        tags:\n          type:\n            type_kind: Enum\n            type_data:\n              - internal\n              - collaboration\n              - project\n              - other\n          shape: ['*']  # Shapes define non scalar values, like lists ['*'], vectors ['*', 3], etc.\n          m_annotations:\n            eln:\n              component: AutocompleteEditQuantity  # Allows to edit enums with an auto complete text form field\n        chemicals:\n          type: Chemical  # Types can also be other sections. This allows to reference a different section.\n          shape: ['*']\n          m_annotations:\n            eln:\n              component: ReferenceEditQuantity  # A editor component that allows to select from available \"Chemical\"s\n        substrate_type:\n          type:\n            type_kind: Enum\n            type_data:\n              - Fused quartz glass\n              - SLG\n              - other\n          m_annotations:\n            eln:\n              component: RadioEnumEditQuantity\n        substrate_thickness:\n          type: np.float64\n          unit: m\n          m_annotations:\n            eln:\n              component: NumberEditQuantity\n        sample_is_from_collaboration:\n          type: bool\n          m_annotations:\n            eln:\n              component: BoolEditQuantity\n      # Besides quantities, a section can define sub_sections. This allows hierarchies\n      # of information.\n      sub_sections:\n        # Here we define a sub_section of \"Sample\" called \"processes\"\n        processes:\n          section:\n            # The sub-section's section, is itself a section definition\n            m_annotations:\n              eln:  # adds the sub-section to the eln and allows users to create new instances of this sub-section\n            # We can also nest sub_sections. It goes aribitrarely deep.\n            sub_sections:\n              pvd_evaporation:\n                section:\n                  base_sections: ['Process', 'nomad.parsing.tabular.TableData']\n                  m_annotations:\n                    # We can use the eln annotations to put the section to the overview\n                    # page, and hide unwanted inherited quantities.\n                    eln:\n                      overview: true\n                      hide: ['name', 'lab_id', 'description', 'method']\n                    # Plots are shown in the eln. Currently we only support simple x,y\n                    # line plots\n                    plot:\n                      title: Pressure and Temperature over Time\n                      x: time\n                      y:\n                        - chamber_pressure\n                        - substrate_temperature\n                  quantities:\n                    data_file:\n                      type: str\n                      description: |\n                        A reference to an uploaded .csv produced by the PVD evaporation instruments\n                        control software.\n                      m_annotations:\n                        # The tabular_parser annotation, will treat the values of this\n                        # quantity as files. It will try to interpret the files and fill\n                        # quantities in this section (and sub_section) with the column\n                        # data of .csv or .xlsx files. There is also a mode option that by default, is set to column.\n                        tabular_parser:\n                          sep: '\\t'\n                          comment: '#'\n                        browser:\n                          adaptor: RawFileAdaptor  # Allows to navigate to files in the data browser\n                        eln:\n                          component: FileEditQuantity  # A form field that allows to drop and select files.\n                    time:\n                      type: np.float64\n                      shape: ['*']\n                      unit: s\n                      m_annotations:\n                        # The tabular annotation defines a mapping to column headers used in\n                        # tabular data files\n                        tabular:\n                          name: Process Time in seconds\n                    chamber_pressure:\n                      type: np.float64\n                      shape: ['*']\n                      unit: mbar\n                      m_annotations:\n                        tabular:\n                          name: Vacuum Pressure1\n                        plot:\n                          x: time\n                          y: chamber_pressure\n                    substrate_temperature:\n                      type: np.float64\n                      shape: ['*']\n                      unit: kelvin\n                      m_annotations:\n                        tabular:\n                          name: Substrate PV\n                          unit: degC\n                        plot:\n                          x: time\n                          y: substrate_temperature\n              hotplate_annealing:\n                section:\n                  base_section: Process\n                  m_annotations:\n                    # We can use the eln annotations to put the section to the overview\n                    # page, and hide unwanted inherited quantities.\n                    eln:\n                      overview: true\n                      hide: ['name', 'lab_id', 'description']\n                  quantities:\n                    set_temperature:\n                      type: np.float64  # For actual numbers, we use numpy datatypes\n                      unit: K  # The unit system is based on Pint and allows all kinds of abreviations, prefixes, and complex units\n                      m_annotations:\n                        eln:\n                          component: NumberEditQuantity  # A component to enter numbers (with units)\n                    duration:\n                      type: np.float64\n                      unit: s\n                      m_annotations:\n                        eln:\n                          component: NumberEditQuantity\n\n",
        "headers": {
          "connection": "close",
          "content-disposition": "attatchment; filename=\"schema.archive.yaml\"",
          "content-type": "application/octet-stream",
          "server": "uvicorn",
          "transfer-encoding": "chunked"
        }
      }
    }
  ]
}