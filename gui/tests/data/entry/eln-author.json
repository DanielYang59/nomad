{
  "ec4e278877c819d5c74b6e128d73a6c4": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJiNzc2Mzg4MS05ZGQ0LTQyNjItYmFiNy0zYjRhODBhMjRiM2EiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDkxLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.PK-L4ZElS3YDxv8IAlTMa7Nm56Y8kcud0bXotczxsf6TXlyZredFNUZ8wdu2kxonWWFL2xkIMHCgG72poKruYXb4eyFMqqdUQy72kKBTPGTkFnKE-2tJw6j87sniTG6V-FQnVFEZpQ8zitlW99FR5Jh8xM0OIfJN3JrEg7Y0W2s3YE0m5rrIMQXA9NDoEyDNoGWVHX-3tWDWyRYdvdIhpvmUeuvRspjBGbEnQ-aYKcOPYdOEpwnjj8cwTQAOyQXiob3raS6QynS8tNmd7nL5FYm-NiWHJs9qt9z2YrkUlJuReTFaUZgcAWij1ARVF5NmrUea_Tv2iAk5_d1qcneeig",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "required": {},
          "data": {
            "upload_id": "eln_upload_id",
            "references": [],
            "origin": "Markus Scheidgen",
            "quantities": [
              "",
              "data",
              "data.datetime",
              "data.description",
              "data.lab_id",
              "data.name",
              "data.processes",
              "data.processes.hotplate_annealing",
              "data.processes.hotplate_annealing.datetime",
              "data.processes.hotplate_annealing.duration",
              "data.processes.hotplate_annealing.set_temperature",
              "data.processes.pvd_evaporation",
              "data.processes.pvd_evaporation.chamber_pressure",
              "data.processes.pvd_evaporation.data_file",
              "data.processes.pvd_evaporation.datetime",
              "data.processes.pvd_evaporation.fill_archive_from_datafile",
              "data.processes.pvd_evaporation.substrate_temperature",
              "data.processes.pvd_evaporation.time",
              "data.substrate_type",
              "data.tags",
              "metadata",
              "metadata.coauthors",
              "metadata.datasets",
              "metadata.embargo_length",
              "metadata.entry_coauthors",
              "metadata.entry_create_time",
              "metadata.entry_hash",
              "metadata.entry_id",
              "metadata.entry_name",
              "metadata.entry_timestamp",
              "metadata.entry_timestamp.timestamp",
              "metadata.entry_timestamp.token",
              "metadata.entry_timestamp.token_seed",
              "metadata.entry_timestamp.tsa_server",
              "metadata.entry_type",
              "metadata.files",
              "metadata.last_processing_time",
              "metadata.license",
              "metadata.main_author",
              "metadata.mainfile",
              "metadata.nomad_commit",
              "metadata.nomad_version",
              "metadata.parser_name",
              "metadata.processed",
              "metadata.processing_errors",
              "metadata.published",
              "metadata.quantities",
              "metadata.references",
              "metadata.reviewers",
              "metadata.section_defs",
              "metadata.section_defs.definition_id",
              "metadata.section_defs.definition_qualified_name",
              "metadata.section_defs.used_directly",
              "metadata.sections",
              "metadata.upload_create_time",
              "metadata.upload_id",
              "metadata.with_embargo",
              "results",
              "results.eln",
              "results.eln.descriptions",
              "results.eln.lab_ids",
              "results.eln.methods",
              "results.eln.names",
              "results.eln.sections",
              "results.eln.tags",
              "results.properties"
            ],
            "datasets": [],
            "n_quantities": 59,
            "nomad_version": "1.2.1.dev124+g099de4643.d20230919",
            "upload_create_time": "2023-09-21T11:34:46.217000+00:00",
            "nomad_commit": "",
            "section_defs": [
              {
                "used_directly": true,
                "definition_id": "7e0331d2df29682413535f00d4aad156783fee2e",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process"
              },
              {
                "used_directly": true,
                "definition_id": "ca0a6011326e4ca1e487e9b244bc5153e7cded19",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "d0d0cbf5ae07a246dbfa9634e51f995151abde55",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes"
              },
              {
                "used_directly": true,
                "definition_id": "d39f4397900226398e6c17eb00467e874e5955c4",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing"
              },
              {
                "used_directly": true,
                "definition_id": "c7646bbd6f18ae97af64a6fa967de483af3e9100",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation"
              },
              {
                "used_directly": true,
                "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                "definition_qualified_name": "nomad.datamodel.data.ArchiveSection"
              },
              {
                "used_directly": true,
                "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                "definition_qualified_name": "nomad.datamodel.data.EntryData"
              },
              {
                "used_directly": true,
                "definition_id": "a19151d9beb46b8690dc0937f050ef674f958ef4",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive"
              },
              {
                "used_directly": true,
                "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata"
              },
              {
                "used_directly": true,
                "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp"
              },
              {
                "used_directly": false,
                "definition_id": "fc2735d177bf36f9718ca66a764a56fc0c6200a0",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "used_directly": false,
                "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "8d81e1f95c60f39a6a8c9f954143a55e6f4c984c",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process"
              },
              {
                "used_directly": false,
                "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection"
              },
              {
                "used_directly": true,
                "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                "definition_qualified_name": "nomad.datamodel.results.ELN"
              },
              {
                "used_directly": true,
                "definition_id": "c1223381a11d512543e254a8da6a40e88a9bdb9a",
                "definition_qualified_name": "nomad.datamodel.results.Properties"
              },
              {
                "used_directly": true,
                "definition_id": "7cd04a0a1fc2db43414328de6410fa3bc1737b5f",
                "definition_qualified_name": "nomad.datamodel.results.Results"
              },
              {
                "used_directly": true,
                "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                "definition_qualified_name": "nomad.parsing.tabular.TableData"
              }
            ],
            "processing_errors": [],
            "results": {
              "eln": {
                "names": [
                  "ELN example sample"
                ],
                "methods": [
                  "PvdEvaporation",
                  "HotplateAnnealing"
                ],
                "descriptions": [
                  "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                ],
                "sections": [
                  "PvdEvaporation",
                  "HotplateAnnealing",
                  "Sample"
                ],
                "lab_ids": [
                  "001"
                ],
                "tags": [
                  "project"
                ]
              },
              "properties": {
                "available_properties": []
              }
            },
            "entry_name": "ELN example sample",
            "last_processing_time": "2023-09-21T11:34:46.586000+00:00",
            "parser_name": "parsers/archive",
            "searchable_quantities": [
              {
                "text_value": "ELN example sample",
                "path": "data.name",
                "quantity_name": "name",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3"
              },
              {
                "text_value": "001",
                "path": "data.lab_id",
                "quantity_name": "lab_id",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "path": "data.description",
                "quantity_name": "description",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "path": "data.substrate_type",
                "quantity_name": "substrate_type",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                "keyword_value": "SLG"
              },
              {
                "path": "data.processes.pvd_evaporation.datetime",
                "date_value": "2022-05-10T07:20:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "text_value": "PVDProcess.csv",
                "path": "data.processes.pvd_evaporation.data_file",
                "quantity_name": "data_file",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0"
              },
              {
                "path": "data.processes.hotplate_annealing.datetime",
                "date_value": "2022-05-10T07:22:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "path": "data.processes.hotplate_annealing.set_temperature",
                "quantity_name": "set_temperature",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 373.15
              },
              {
                "path": "data.processes.hotplate_annealing.duration",
                "quantity_name": "duration",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 60
              },
              {
                "path": "data.datetime",
                "date_value": "2023-09-21T13:34:46.706439+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              }
            ],
            "calc_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "published": false,
            "writers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "sections": [
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
              "nomad.datamodel.datamodel.EntryArchive",
              "nomad.datamodel.datamodel.EntryMetadata",
              "nomad.datamodel.datamodel.RFC3161Timestamp",
              "nomad.datamodel.results.ELN",
              "nomad.datamodel.results.Properties",
              "nomad.datamodel.results.Results"
            ],
            "processed": true,
            "mainfile": "sample.archive.json",
            "main_author": {
              "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
              "name": "Markus Scheidgen"
            },
            "viewers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              },
              {
                "user_id": "54cb1f64-f84e-4815-9ade-440ce0b5430f",
                "name": "Test Tester"
              }
            ],
            "entry_create_time": "2023-09-21T11:34:46.288000+00:00",
            "with_embargo": false,
            "files": [
              "sample.archive.json",
              "PVDProcess.csv",
              "schema.archive.yaml"
            ],
            "entry_type": "Sample",
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "authors": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "license": "CC BY 4.0"
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "12995",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    },
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJiNzc2Mzg4MS05ZGQ0LTQyNjItYmFiNy0zYjRhODBhMjRiM2EiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDkxLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.PK-L4ZElS3YDxv8IAlTMa7Nm56Y8kcud0bXotczxsf6TXlyZredFNUZ8wdu2kxonWWFL2xkIMHCgG72poKruYXb4eyFMqqdUQy72kKBTPGTkFnKE-2tJw6j87sniTG6V-FQnVFEZpQ8zitlW99FR5Jh8xM0OIfJN3JrEg7Y0W2s3YE0m5rrIMQXA9NDoEyDNoGWVHX-3tWDWyRYdvdIhpvmUeuvRspjBGbEnQ-aYKcOPYdOEpwnjj8cwTQAOyQXiob3raS6QynS8tNmd7nL5FYm-NiWHJs9qt9z2YrkUlJuReTFaUZgcAWij1ARVF5NmrUea_Tv2iAk5_d1qcneeig",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "required": {},
          "data": {
            "upload_id": "eln_upload_id",
            "references": [],
            "origin": "Markus Scheidgen",
            "quantities": [
              "",
              "data",
              "data.datetime",
              "data.description",
              "data.lab_id",
              "data.name",
              "data.processes",
              "data.processes.hotplate_annealing",
              "data.processes.hotplate_annealing.datetime",
              "data.processes.hotplate_annealing.duration",
              "data.processes.hotplate_annealing.set_temperature",
              "data.processes.pvd_evaporation",
              "data.processes.pvd_evaporation.chamber_pressure",
              "data.processes.pvd_evaporation.data_file",
              "data.processes.pvd_evaporation.datetime",
              "data.processes.pvd_evaporation.fill_archive_from_datafile",
              "data.processes.pvd_evaporation.substrate_temperature",
              "data.processes.pvd_evaporation.time",
              "data.substrate_type",
              "data.tags",
              "metadata",
              "metadata.coauthors",
              "metadata.datasets",
              "metadata.embargo_length",
              "metadata.entry_coauthors",
              "metadata.entry_create_time",
              "metadata.entry_hash",
              "metadata.entry_id",
              "metadata.entry_name",
              "metadata.entry_timestamp",
              "metadata.entry_timestamp.timestamp",
              "metadata.entry_timestamp.token",
              "metadata.entry_timestamp.token_seed",
              "metadata.entry_timestamp.tsa_server",
              "metadata.entry_type",
              "metadata.files",
              "metadata.last_processing_time",
              "metadata.license",
              "metadata.main_author",
              "metadata.mainfile",
              "metadata.nomad_commit",
              "metadata.nomad_version",
              "metadata.parser_name",
              "metadata.processed",
              "metadata.processing_errors",
              "metadata.published",
              "metadata.quantities",
              "metadata.references",
              "metadata.reviewers",
              "metadata.section_defs",
              "metadata.section_defs.definition_id",
              "metadata.section_defs.definition_qualified_name",
              "metadata.section_defs.used_directly",
              "metadata.sections",
              "metadata.upload_create_time",
              "metadata.upload_id",
              "metadata.with_embargo",
              "results",
              "results.eln",
              "results.eln.descriptions",
              "results.eln.lab_ids",
              "results.eln.methods",
              "results.eln.names",
              "results.eln.sections",
              "results.eln.tags",
              "results.properties"
            ],
            "datasets": [],
            "n_quantities": 59,
            "nomad_version": "1.2.1.dev124+g099de4643.d20230919",
            "upload_create_time": "2023-09-21T11:34:46.217000+00:00",
            "nomad_commit": "",
            "section_defs": [
              {
                "used_directly": true,
                "definition_id": "7e0331d2df29682413535f00d4aad156783fee2e",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process"
              },
              {
                "used_directly": true,
                "definition_id": "ca0a6011326e4ca1e487e9b244bc5153e7cded19",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "d0d0cbf5ae07a246dbfa9634e51f995151abde55",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes"
              },
              {
                "used_directly": true,
                "definition_id": "d39f4397900226398e6c17eb00467e874e5955c4",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing"
              },
              {
                "used_directly": true,
                "definition_id": "c7646bbd6f18ae97af64a6fa967de483af3e9100",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation"
              },
              {
                "used_directly": true,
                "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                "definition_qualified_name": "nomad.datamodel.data.ArchiveSection"
              },
              {
                "used_directly": true,
                "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                "definition_qualified_name": "nomad.datamodel.data.EntryData"
              },
              {
                "used_directly": true,
                "definition_id": "a19151d9beb46b8690dc0937f050ef674f958ef4",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive"
              },
              {
                "used_directly": true,
                "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata"
              },
              {
                "used_directly": true,
                "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp"
              },
              {
                "used_directly": false,
                "definition_id": "fc2735d177bf36f9718ca66a764a56fc0c6200a0",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "used_directly": false,
                "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "8d81e1f95c60f39a6a8c9f954143a55e6f4c984c",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process"
              },
              {
                "used_directly": false,
                "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection"
              },
              {
                "used_directly": true,
                "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                "definition_qualified_name": "nomad.datamodel.results.ELN"
              },
              {
                "used_directly": true,
                "definition_id": "c1223381a11d512543e254a8da6a40e88a9bdb9a",
                "definition_qualified_name": "nomad.datamodel.results.Properties"
              },
              {
                "used_directly": true,
                "definition_id": "7cd04a0a1fc2db43414328de6410fa3bc1737b5f",
                "definition_qualified_name": "nomad.datamodel.results.Results"
              },
              {
                "used_directly": true,
                "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                "definition_qualified_name": "nomad.parsing.tabular.TableData"
              }
            ],
            "processing_errors": [],
            "results": {
              "eln": {
                "names": [
                  "ELN example sample"
                ],
                "methods": [
                  "PvdEvaporation",
                  "HotplateAnnealing"
                ],
                "descriptions": [
                  "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                ],
                "sections": [
                  "PvdEvaporation",
                  "HotplateAnnealing",
                  "Sample"
                ],
                "lab_ids": [
                  "001"
                ],
                "tags": [
                  "project"
                ]
              },
              "properties": {
                "available_properties": []
              }
            },
            "entry_name": "ELN example sample",
            "last_processing_time": "2023-09-21T11:34:46.586000+00:00",
            "parser_name": "parsers/archive",
            "searchable_quantities": [
              {
                "text_value": "ELN example sample",
                "path": "data.name",
                "quantity_name": "name",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3"
              },
              {
                "text_value": "001",
                "path": "data.lab_id",
                "quantity_name": "lab_id",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "path": "data.description",
                "quantity_name": "description",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "path": "data.substrate_type",
                "quantity_name": "substrate_type",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                "keyword_value": "SLG"
              },
              {
                "path": "data.processes.pvd_evaporation.datetime",
                "date_value": "2022-05-10T07:20:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "text_value": "PVDProcess.csv",
                "path": "data.processes.pvd_evaporation.data_file",
                "quantity_name": "data_file",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0"
              },
              {
                "path": "data.processes.hotplate_annealing.datetime",
                "date_value": "2022-05-10T07:22:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "path": "data.processes.hotplate_annealing.set_temperature",
                "quantity_name": "set_temperature",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 373.15
              },
              {
                "path": "data.processes.hotplate_annealing.duration",
                "quantity_name": "duration",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 60
              },
              {
                "path": "data.datetime",
                "date_value": "2023-09-21T13:34:46.706439+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              }
            ],
            "calc_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "published": false,
            "writers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "sections": [
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
              "nomad.datamodel.datamodel.EntryArchive",
              "nomad.datamodel.datamodel.EntryMetadata",
              "nomad.datamodel.datamodel.RFC3161Timestamp",
              "nomad.datamodel.results.ELN",
              "nomad.datamodel.results.Properties",
              "nomad.datamodel.results.Results"
            ],
            "processed": true,
            "mainfile": "sample.archive.json",
            "main_author": {
              "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
              "name": "Markus Scheidgen"
            },
            "viewers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              },
              {
                "user_id": "54cb1f64-f84e-4815-9ade-440ce0b5430f",
                "name": "Test Tester"
              }
            ],
            "entry_create_time": "2023-09-21T11:34:46.288000+00:00",
            "with_embargo": false,
            "files": [
              "sample.archive.json",
              "PVDProcess.csv",
              "schema.archive.yaml"
            ],
            "entry_type": "Sample",
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "authors": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "license": "CC BY 4.0"
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "12995",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    },
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiI3NzVjMzMxZC1iMWRlLTRkNDItYTg1NS0yYzVkNmNkZjFiZDQiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDkzLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.BDhYavlkIyUwn08JgFvo850UoG4vGr3Za_EZOLdqlHXad8TAwvNZO8VXam0Y-f7Iunt3L4LJinB_fNLZt2B5khSOHK9eQ-NZdxomf1k2bxsTxohBjM0di5iBEvuopXgu7iMgACrmK2ZKH8tw98uuCD6XTO5cZ8DKpbB-rrYuKINLfTnoeJC_cPIPUI00WEcezgJxd-WsasrYeR6mwtwWTthrr-FT-SC6wlj--2TlLyoyVDpjLJHdl5c8zGw3sratjdDrDM5TZgvH4O83KLOc3Elo8KGLcXhzUbvBSHXMrqddimZ43v3uKFCyy2L5IPA3LnsYfrsrM8c6SGlN--4xUw",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "required": {},
          "data": {
            "upload_id": "eln_upload_id",
            "references": [],
            "origin": "Markus Scheidgen",
            "quantities": [
              "",
              "data",
              "data.datetime",
              "data.description",
              "data.lab_id",
              "data.name",
              "data.processes",
              "data.processes.hotplate_annealing",
              "data.processes.hotplate_annealing.datetime",
              "data.processes.hotplate_annealing.duration",
              "data.processes.hotplate_annealing.set_temperature",
              "data.processes.pvd_evaporation",
              "data.processes.pvd_evaporation.chamber_pressure",
              "data.processes.pvd_evaporation.data_file",
              "data.processes.pvd_evaporation.datetime",
              "data.processes.pvd_evaporation.fill_archive_from_datafile",
              "data.processes.pvd_evaporation.substrate_temperature",
              "data.processes.pvd_evaporation.time",
              "data.substrate_type",
              "data.tags",
              "metadata",
              "metadata.coauthors",
              "metadata.datasets",
              "metadata.embargo_length",
              "metadata.entry_coauthors",
              "metadata.entry_create_time",
              "metadata.entry_hash",
              "metadata.entry_id",
              "metadata.entry_name",
              "metadata.entry_timestamp",
              "metadata.entry_timestamp.timestamp",
              "metadata.entry_timestamp.token",
              "metadata.entry_timestamp.token_seed",
              "metadata.entry_timestamp.tsa_server",
              "metadata.entry_type",
              "metadata.files",
              "metadata.last_processing_time",
              "metadata.license",
              "metadata.main_author",
              "metadata.mainfile",
              "metadata.nomad_commit",
              "metadata.nomad_version",
              "metadata.parser_name",
              "metadata.processed",
              "metadata.processing_errors",
              "metadata.published",
              "metadata.quantities",
              "metadata.references",
              "metadata.reviewers",
              "metadata.section_defs",
              "metadata.section_defs.definition_id",
              "metadata.section_defs.definition_qualified_name",
              "metadata.section_defs.used_directly",
              "metadata.sections",
              "metadata.upload_create_time",
              "metadata.upload_id",
              "metadata.with_embargo",
              "results",
              "results.eln",
              "results.eln.descriptions",
              "results.eln.lab_ids",
              "results.eln.methods",
              "results.eln.names",
              "results.eln.sections",
              "results.eln.tags",
              "results.properties"
            ],
            "datasets": [],
            "n_quantities": 59,
            "nomad_version": "1.2.1.dev124+g099de4643.d20230919",
            "upload_create_time": "2023-09-21T11:34:46.217000+00:00",
            "nomad_commit": "",
            "section_defs": [
              {
                "used_directly": true,
                "definition_id": "7e0331d2df29682413535f00d4aad156783fee2e",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process"
              },
              {
                "used_directly": true,
                "definition_id": "ca0a6011326e4ca1e487e9b244bc5153e7cded19",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "d0d0cbf5ae07a246dbfa9634e51f995151abde55",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes"
              },
              {
                "used_directly": true,
                "definition_id": "d39f4397900226398e6c17eb00467e874e5955c4",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing"
              },
              {
                "used_directly": true,
                "definition_id": "c7646bbd6f18ae97af64a6fa967de483af3e9100",
                "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation"
              },
              {
                "used_directly": true,
                "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                "definition_qualified_name": "nomad.datamodel.data.ArchiveSection"
              },
              {
                "used_directly": true,
                "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                "definition_qualified_name": "nomad.datamodel.data.EntryData"
              },
              {
                "used_directly": true,
                "definition_id": "a19151d9beb46b8690dc0937f050ef674f958ef4",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive"
              },
              {
                "used_directly": true,
                "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata"
              },
              {
                "used_directly": true,
                "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp"
              },
              {
                "used_directly": false,
                "definition_id": "fc2735d177bf36f9718ca66a764a56fc0c6200a0",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "used_directly": false,
                "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "8d81e1f95c60f39a6a8c9f954143a55e6f4c984c",
                "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process"
              },
              {
                "used_directly": false,
                "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "used_directly": false,
                "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection"
              },
              {
                "used_directly": true,
                "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample"
              },
              {
                "used_directly": true,
                "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                "definition_qualified_name": "nomad.datamodel.results.ELN"
              },
              {
                "used_directly": true,
                "definition_id": "c1223381a11d512543e254a8da6a40e88a9bdb9a",
                "definition_qualified_name": "nomad.datamodel.results.Properties"
              },
              {
                "used_directly": true,
                "definition_id": "7cd04a0a1fc2db43414328de6410fa3bc1737b5f",
                "definition_qualified_name": "nomad.datamodel.results.Results"
              },
              {
                "used_directly": true,
                "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                "definition_qualified_name": "nomad.parsing.tabular.TableData"
              }
            ],
            "processing_errors": [],
            "results": {
              "eln": {
                "names": [
                  "ELN example sample"
                ],
                "methods": [
                  "PvdEvaporation",
                  "HotplateAnnealing"
                ],
                "descriptions": [
                  "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                ],
                "sections": [
                  "PvdEvaporation",
                  "HotplateAnnealing",
                  "Sample"
                ],
                "lab_ids": [
                  "001"
                ],
                "tags": [
                  "project"
                ]
              },
              "properties": {
                "available_properties": []
              }
            },
            "entry_name": "ELN example sample",
            "last_processing_time": "2023-09-21T11:34:46.586000+00:00",
            "parser_name": "parsers/archive",
            "searchable_quantities": [
              {
                "text_value": "ELN example sample",
                "path": "data.name",
                "quantity_name": "name",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3"
              },
              {
                "text_value": "001",
                "path": "data.lab_id",
                "quantity_name": "lab_id",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "path": "data.description",
                "quantity_name": "description",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              },
              {
                "path": "data.substrate_type",
                "quantity_name": "substrate_type",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                "keyword_value": "SLG"
              },
              {
                "path": "data.processes.pvd_evaporation.datetime",
                "date_value": "2022-05-10T07:20:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "text_value": "PVDProcess.csv",
                "path": "data.processes.pvd_evaporation.data_file",
                "quantity_name": "data_file",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0"
              },
              {
                "path": "data.processes.hotplate_annealing.datetime",
                "date_value": "2022-05-10T07:22:00+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.basesections.Activity"
              },
              {
                "path": "data.processes.hotplate_annealing.set_temperature",
                "quantity_name": "set_temperature",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 373.15
              },
              {
                "path": "data.processes.hotplate_annealing.duration",
                "quantity_name": "duration",
                "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                "double_value": 60
              },
              {
                "path": "data.datetime",
                "date_value": "2023-09-21T13:34:46.706439+00:00",
                "quantity_name": "datetime",
                "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection"
              }
            ],
            "calc_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "published": false,
            "writers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "sections": [
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
              "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
              "nomad.datamodel.datamodel.EntryArchive",
              "nomad.datamodel.datamodel.EntryMetadata",
              "nomad.datamodel.datamodel.RFC3161Timestamp",
              "nomad.datamodel.results.ELN",
              "nomad.datamodel.results.Properties",
              "nomad.datamodel.results.Results"
            ],
            "processed": true,
            "mainfile": "sample.archive.json",
            "main_author": {
              "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
              "name": "Markus Scheidgen"
            },
            "viewers": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              },
              {
                "user_id": "54cb1f64-f84e-4815-9ade-440ce0b5430f",
                "name": "Test Tester"
              }
            ],
            "entry_create_time": "2023-09-21T11:34:46.288000+00:00",
            "with_embargo": false,
            "files": [
              "sample.archive.json",
              "PVDProcess.csv",
              "schema.archive.yaml"
            ],
            "entry_type": "Sample",
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "authors": [
              {
                "user_id": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "name": "Markus Scheidgen"
              },
              {
                "user_id": "a03af8b6-3aa7-428a-b3b1-4a6317e576b6",
                "name": "Sheldon Cooper"
              }
            ],
            "license": "CC BY 4.0"
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "12995",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    }
  ],
  "3956e4695d0efe4d6ca6a8a049794ab5": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-/archive/query",
        "method": "POST",
        "body": {
          "required": {
            "metadata": "*",
            "data": "*",
            "definitions": "*",
            "workflow2": "*",
            "results": {
              "material": "*",
              "method": "*",
              "properties": {
                "structural": "*",
                "structures": "*",
                "dynamical": "*",
                "electronic": {
                  "greens_functions_electronic": "include-resolved",
                  "dos_electronic": "include-resolved",
                  "band_structure_electronic": "include-resolved",
                  "band_gap": "*"
                },
                "mechanical": "include-resolved",
                "spectroscopic": "include-resolved",
                "vibrational": "include-resolved",
                "thermodynamic": "include-resolved",
                "geometry_optimization": {
                  "energies": "include-resolved"
                }
              }
            },
            "resolve-inplace": false
          }
        },
        "headers": {
          "accept": "application/json",
          "content-type": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJmOWMxNTY5Mi0wYzU2LTQyYmUtOTAxNi0zNDJhMjU1ZGM1N2UiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDkyLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.HT80aqxJ4KPopTV_Z0TXv4EjwPFfVLeocWJScwls09hL_sbKXOvd4Fb8WS_j1lMw59zvqUj57m1UiD6Q2tW8zaJTdmVibsveXbBJD3749MJidHSIDguZcaBTFy_2v95ifpl4DClov5G2vLC8f5d5yMmthq7o_wfyN36fp0x8EpxBOwgDelTE_r3NGPYYasHbTkBoaBB7a0op-yAbfkWXn7Jz05ll11XHI_27pf0683I1aZQhgmlyxn07mjMuQEEbBN_DlCK9gZkbeuDyxJ14zgDbN8Pix6G6KviRZ_pa9UzI8Ih8gm7qZihRHJA-zmvkA_aH9sxYhITsDZRMOnsUkA",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "required": {
            "metadata": "*",
            "data": "*",
            "definitions": "*",
            "workflow2": "*",
            "results": {
              "material": "*",
              "method": "*",
              "properties": {
                "structural": "*",
                "structures": "*",
                "dynamical": "*",
                "electronic": {
                  "greens_functions_electronic": "include-resolved",
                  "dos_electronic": "include-resolved",
                  "band_structure_electronic": "include-resolved",
                  "band_gap": "*"
                },
                "mechanical": "include-resolved",
                "spectroscopic": "include-resolved",
                "vibrational": "include-resolved",
                "thermodynamic": "include-resolved",
                "geometry_optimization": {
                  "energies": "include-resolved"
                }
              }
            },
            "resolve-inplace": false
          },
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "data": {
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "upload_id": "eln_upload_id",
            "parser_name": "parsers/archive",
            "archive": {
              "metadata": {
                "upload_id": "eln_upload_id",
                "upload_create_time": "2023-09-21T11:34:46.217000+00:00",
                "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
                "entry_name": "ELN example sample",
                "entry_type": "Sample",
                "entry_hash": "Q5U7Kw9jdvvMZsfgH_-p7eXpU1Ci",
                "entry_create_time": "2023-09-21T11:34:46.288000+00:00",
                "parser_name": "parsers/archive",
                "mainfile": "sample.archive.json",
                "files": [
                  "sample.archive.json",
                  "PVDProcess.csv",
                  "schema.archive.yaml"
                ],
                "published": false,
                "with_embargo": false,
                "embargo_length": 0,
                "license": "CC BY 4.0",
                "processed": true,
                "last_processing_time": "2023-09-21T11:34:46.586109+00:00",
                "processing_errors": [],
                "nomad_version": "1.2.1.dev124+g099de4643.d20230919",
                "nomad_commit": "",
                "references": [],
                "main_author": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "coauthors": [
                  "a03af8b6-3aa7-428a-b3b1-4a6317e576b6"
                ],
                "entry_coauthors": [],
                "reviewers": [
                  "54cb1f64-f84e-4815-9ade-440ce0b5430f"
                ],
                "datasets": [],
                "n_quantities": 59,
                "quantities": [
                  "",
                  "data",
                  "data.datetime",
                  "data.description",
                  "data.lab_id",
                  "data.name",
                  "data.processes",
                  "data.processes.hotplate_annealing",
                  "data.processes.hotplate_annealing.datetime",
                  "data.processes.hotplate_annealing.duration",
                  "data.processes.hotplate_annealing.set_temperature",
                  "data.processes.pvd_evaporation",
                  "data.processes.pvd_evaporation.chamber_pressure",
                  "data.processes.pvd_evaporation.data_file",
                  "data.processes.pvd_evaporation.datetime",
                  "data.processes.pvd_evaporation.fill_archive_from_datafile",
                  "data.processes.pvd_evaporation.substrate_temperature",
                  "data.processes.pvd_evaporation.time",
                  "data.substrate_type",
                  "data.tags",
                  "metadata",
                  "metadata.coauthors",
                  "metadata.datasets",
                  "metadata.embargo_length",
                  "metadata.entry_coauthors",
                  "metadata.entry_create_time",
                  "metadata.entry_hash",
                  "metadata.entry_id",
                  "metadata.entry_name",
                  "metadata.entry_timestamp",
                  "metadata.entry_timestamp.timestamp",
                  "metadata.entry_timestamp.token",
                  "metadata.entry_timestamp.token_seed",
                  "metadata.entry_timestamp.tsa_server",
                  "metadata.entry_type",
                  "metadata.files",
                  "metadata.last_processing_time",
                  "metadata.license",
                  "metadata.main_author",
                  "metadata.mainfile",
                  "metadata.nomad_commit",
                  "metadata.nomad_version",
                  "metadata.parser_name",
                  "metadata.processed",
                  "metadata.processing_errors",
                  "metadata.published",
                  "metadata.quantities",
                  "metadata.references",
                  "metadata.reviewers",
                  "metadata.section_defs",
                  "metadata.section_defs.definition_id",
                  "metadata.section_defs.definition_qualified_name",
                  "metadata.section_defs.used_directly",
                  "metadata.sections",
                  "metadata.upload_create_time",
                  "metadata.upload_id",
                  "metadata.with_embargo",
                  "results",
                  "results.eln",
                  "results.eln.descriptions",
                  "results.eln.lab_ids",
                  "results.eln.methods",
                  "results.eln.names",
                  "results.eln.sections",
                  "results.eln.tags",
                  "results.properties"
                ],
                "sections": [
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
                  "nomad.datamodel.datamodel.EntryArchive",
                  "nomad.datamodel.datamodel.EntryMetadata",
                  "nomad.datamodel.datamodel.RFC3161Timestamp",
                  "nomad.datamodel.results.ELN",
                  "nomad.datamodel.results.Properties",
                  "nomad.datamodel.results.Results"
                ],
                "entry_timestamp": {
                  "token_seed": "Q5U7Kw9jdvvMZsfgH_-p7eXpU1Ci",
                  "token": "",
                  "tsa_server": "http://time.certum.pl/",
                  "timestamp": "2023-09-21T11:34:46+00:00"
                },
                "section_defs": [
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process",
                    "definition_id": "7e0331d2df29682413535f00d4aad156783fee2e",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
                    "definition_id": "ca0a6011326e4ca1e487e9b244bc5153e7cded19",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
                    "definition_id": "d0d0cbf5ae07a246dbfa9634e51f995151abde55",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
                    "definition_id": "d39f4397900226398e6c17eb00467e874e5955c4",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
                    "definition_id": "c7646bbd6f18ae97af64a6fa967de483af3e9100",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.data.ArchiveSection",
                    "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.data.EntryData",
                    "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive",
                    "definition_id": "a19151d9beb46b8690dc0937f050ef674f958ef4",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata",
                    "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp",
                    "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity",
                    "definition_id": "fc2735d177bf36f9718ca66a764a56fc0c6200a0",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection",
                    "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process",
                    "definition_id": "8d81e1f95c60f39a6a8c9f954143a55e6f4c984c",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection",
                    "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample",
                    "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.ELN",
                    "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Properties",
                    "definition_id": "c1223381a11d512543e254a8da6a40e88a9bdb9a",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Results",
                    "definition_id": "7cd04a0a1fc2db43414328de6410fa3bc1737b5f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.parsing.tabular.TableData",
                    "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                    "used_directly": true
                  }
                ],
                "searchable_quantities": [
                  {
                    "quantity_name": "name",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                    "path": "data.name",
                    "text_value": "ELN example sample"
                  },
                  {
                    "quantity_name": "lab_id",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.lab_id",
                    "text_value": "001"
                  },
                  {
                    "quantity_name": "description",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.description",
                    "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                  },
                  {
                    "quantity_name": "substrate_type",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                    "path": "data.substrate_type",
                    "keyword_value": "SLG"
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.basesections.Activity",
                    "path": "data.processes.pvd_evaporation.datetime",
                    "date_value": "2022-05-10T07:20:00+00:00"
                  },
                  {
                    "quantity_name": "data_file",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0",
                    "path": "data.processes.pvd_evaporation.data_file",
                    "text_value": "PVDProcess.csv"
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.basesections.Activity",
                    "path": "data.processes.hotplate_annealing.datetime",
                    "date_value": "2022-05-10T07:22:00+00:00"
                  },
                  {
                    "quantity_name": "set_temperature",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                    "path": "data.processes.hotplate_annealing.set_temperature",
                    "double_value": 373.15
                  },
                  {
                    "quantity_name": "duration",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                    "path": "data.processes.hotplate_annealing.duration",
                    "double_value": 60
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.datetime",
                    "date_value": "2023-09-21T13:34:46.706439+00:00"
                  }
                ]
              },
              "data": {
                "m_def": "../upload/raw/schema.archive.yaml#/definitions/section_definitions/3",
                "name": "ELN example sample",
                "datetime": "2023-09-21T13:34:46.706439+00:00",
                "lab_id": "001",
                "description": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "tags": [
                  "project"
                ],
                "substrate_type": "SLG",
                "processes": {
                  "pvd_evaporation": {
                    "datetime": "2022-05-10T07:20:00+00:00",
                    "fill_archive_from_datafile": false,
                    "data_file": "PVDProcess.csv",
                    "time": [
                      0,
                      130,
                      260,
                      390,
                      520,
                      650,
                      780,
                      910,
                      1040,
                      1170,
                      1300,
                      1430,
                      1560,
                      1691,
                      1821,
                      1951,
                      2081,
                      2211,
                      2341,
                      2471,
                      2601,
                      2731,
                      2861,
                      2991,
                      3121,
                      3251,
                      3317,
                      3383,
                      3513,
                      3643,
                      3838,
                      4033,
                      7500,
                      7823,
                      7889,
                      8148,
                      8408,
                      8731,
                      8990,
                      9249,
                      9444,
                      9510,
                      9576,
                      9642,
                      9648
                    ],
                    "chamber_pressure": [
                      0.00313,
                      0.00318,
                      0.00309,
                      0.00304,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00304,
                      0.00303,
                      0.00303,
                      0.00304,
                      0.00304,
                      0.00304,
                      0.00304,
                      0.00305,
                      0.00305,
                      0.00307,
                      0.00307,
                      0.00307,
                      0.0031,
                      0.00309,
                      0.00309,
                      0.00314,
                      0.00309,
                      0.00312,
                      0.0032,
                      0.0032,
                      0.00321,
                      0.00322,
                      0.00322,
                      0.0409,
                      0.00279,
                      1020,
                      1020,
                      1020,
                      1020,
                      25.2,
                      17.6
                    ],
                    "substrate_temperature": [
                      32.4132,
                      32.3748,
                      32.3667,
                      32.3506,
                      32.3848,
                      32.4239,
                      32.4554,
                      32.4683,
                      32.5455,
                      32.6005,
                      32.665,
                      32.7414,
                      32.8328,
                      32.9323,
                      33.033,
                      33.1444,
                      33.2855,
                      33.5597,
                      33.9553,
                      34.3703,
                      34.7837,
                      35.2038,
                      35.6129,
                      35.9984,
                      36.386,
                      36.7221,
                      36.9044,
                      37.065,
                      37.3777,
                      37.6708,
                      38.072,
                      38.4669,
                      40.3041,
                      39.8286,
                      39.7314,
                      39.4123,
                      39.0901,
                      38.7298,
                      38.4244,
                      37.0465,
                      36.3994,
                      36.3002,
                      36.4472,
                      36.4526,
                      36.4504
                    ]
                  },
                  "hotplate_annealing": {
                    "datetime": "2022-05-10T07:22:00+00:00",
                    "set_temperature": 373.15,
                    "duration": 60
                  }
                }
              },
              "results": {
                "properties": {}
              },
              "m_ref_archives": {}
            }
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "26225",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    },
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/bC7byHvWJp62Sn9uiuJUB38MT5j-/archive/query",
        "method": "POST",
        "body": {
          "required": "*"
        },
        "headers": {
          "accept": "application/json",
          "content-type": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiI5YTU5YTA3Ni05YWM3LTQzNGEtYThkOC01NGJjNzMwZGYxYzMiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDk1LCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.M3dP-qPat6IAGhApekH9npc5ibl8CmVnu_YE41KzcaKcK4jGBEH8zrHnNtJzRgP0NmPbQqprPTJpzMV-ZXb2sOFapO0FX6oryiC7uy1EODAdn9B0VBL8bNvGWsa-UjF1bfhPzdli1CNmqqeB6LIVKTMX6Y5HGpgW-6jSXcSBjMQY2StaHUO-3AEGk9AoP6VlQ-FrKRvh8tRKBvTUpoTKHqbdUECg1aRJWCEZ4JSCoehVXHgXPayyLyUPwDttK4-KXr97GngKrSv6EhBMEZJgnRaML6RqsubDXEiUOVZvvF1xvO7h9q5amdiVUhrikm845FXl8MCYkg4mXdgA1TPqaA",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "required": "*",
          "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
          "data": {
            "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
            "upload_id": "eln_upload_id",
            "parser_name": "parsers/archive",
            "archive": {
              "processing_logs": [
                {
                  "event": "Executing celery task",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "ejNNpYSbSJqDCpUm6w1tew",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-09-21 13:34.46",
                  "level": "DEBUG"
                },
                {
                  "exec_time": "0.03267502784729004",
                  "input_size": "1176",
                  "event": "parser executed",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "ejNNpYSbSJqDCpUm6w1tew",
                  "parser": "parsers/archive",
                  "step": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-09-21 13:34.46",
                  "level": "INFO"
                },
                {
                  "normalizer": "ResultsNormalizer",
                  "step": "ResultsNormalizer",
                  "event": "normalizer completed successfully",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "ejNNpYSbSJqDCpUm6w1tew",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-09-21 13:34.46",
                  "level": "INFO"
                },
                {
                  "exec_time": "0.0003426074981689453",
                  "input_size": "1176",
                  "event": "normalizer executed",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "ejNNpYSbSJqDCpUm6w1tew",
                  "parser": "parsers/archive",
                  "normalizer": "ResultsNormalizer",
                  "step": "ResultsNormalizer",
                  "logger": "nomad.processing",
                  "timestamp": "2023-09-21 13:34.46",
                  "level": "INFO"
                },
                {
                  "normalizer": "MetainfoNormalizer",
                  "step": "MetainfoNormalizer",
                  "event": "normalizer completed successfully",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "ejNNpYSbSJqDCpUm6w1tew",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-09-21 13:34.46",
                  "level": "INFO"
                },
                {
                  "exec_time": "0.0796356201171875",
                  "input_size": "1176",
                  "event": "normalizer executed",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "ejNNpYSbSJqDCpUm6w1tew",
                  "parser": "parsers/archive",
                  "normalizer": "MetainfoNormalizer",
                  "step": "MetainfoNormalizer",
                  "logger": "nomad.processing",
                  "timestamp": "2023-09-21 13:34.46",
                  "level": "INFO"
                },
                {
                  "exec_time": "0.003271341323852539",
                  "event": "entry metadata saved",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "ejNNpYSbSJqDCpUm6w1tew",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-09-21 13:34.46",
                  "level": "INFO"
                },
                {
                  "exec_time": "0.008923053741455078",
                  "event": "entry metadata indexed",
                  "proc": "Entry",
                  "process": "process_entry",
                  "process_worker_id": "ejNNpYSbSJqDCpUm6w1tew",
                  "parser": "parsers/archive",
                  "logger": "nomad.processing",
                  "timestamp": "2023-09-21 13:34.46",
                  "level": "INFO"
                }
              ],
              "data": {
                "m_def": "../upload/raw/schema.archive.yaml#/definitions/section_definitions/3",
                "name": "ELN example sample",
                "datetime": "2023-09-21T13:34:46.706439+00:00",
                "lab_id": "001",
                "description": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>",
                "tags": [
                  "project"
                ],
                "substrate_type": "SLG",
                "processes": {
                  "pvd_evaporation": {
                    "datetime": "2022-05-10T07:20:00+00:00",
                    "fill_archive_from_datafile": false,
                    "data_file": "PVDProcess.csv",
                    "time": [
                      0,
                      130,
                      260,
                      390,
                      520,
                      650,
                      780,
                      910,
                      1040,
                      1170,
                      1300,
                      1430,
                      1560,
                      1691,
                      1821,
                      1951,
                      2081,
                      2211,
                      2341,
                      2471,
                      2601,
                      2731,
                      2861,
                      2991,
                      3121,
                      3251,
                      3317,
                      3383,
                      3513,
                      3643,
                      3838,
                      4033,
                      7500,
                      7823,
                      7889,
                      8148,
                      8408,
                      8731,
                      8990,
                      9249,
                      9444,
                      9510,
                      9576,
                      9642,
                      9648
                    ],
                    "chamber_pressure": [
                      0.00313,
                      0.00318,
                      0.00309,
                      0.00304,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00303,
                      0.00304,
                      0.00303,
                      0.00303,
                      0.00304,
                      0.00304,
                      0.00304,
                      0.00304,
                      0.00305,
                      0.00305,
                      0.00307,
                      0.00307,
                      0.00307,
                      0.0031,
                      0.00309,
                      0.00309,
                      0.00314,
                      0.00309,
                      0.00312,
                      0.0032,
                      0.0032,
                      0.00321,
                      0.00322,
                      0.00322,
                      0.0409,
                      0.00279,
                      1020,
                      1020,
                      1020,
                      1020,
                      25.2,
                      17.6
                    ],
                    "substrate_temperature": [
                      32.4132,
                      32.3748,
                      32.3667,
                      32.3506,
                      32.3848,
                      32.4239,
                      32.4554,
                      32.4683,
                      32.5455,
                      32.6005,
                      32.665,
                      32.7414,
                      32.8328,
                      32.9323,
                      33.033,
                      33.1444,
                      33.2855,
                      33.5597,
                      33.9553,
                      34.3703,
                      34.7837,
                      35.2038,
                      35.6129,
                      35.9984,
                      36.386,
                      36.7221,
                      36.9044,
                      37.065,
                      37.3777,
                      37.6708,
                      38.072,
                      38.4669,
                      40.3041,
                      39.8286,
                      39.7314,
                      39.4123,
                      39.0901,
                      38.7298,
                      38.4244,
                      37.0465,
                      36.3994,
                      36.3002,
                      36.4472,
                      36.4526,
                      36.4504
                    ]
                  },
                  "hotplate_annealing": {
                    "datetime": "2022-05-10T07:22:00+00:00",
                    "set_temperature": 373.15,
                    "duration": 60
                  }
                }
              },
              "metadata": {
                "upload_id": "eln_upload_id",
                "upload_create_time": "2023-09-21T11:34:46.217000+00:00",
                "entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-",
                "entry_name": "ELN example sample",
                "entry_type": "Sample",
                "entry_hash": "Q5U7Kw9jdvvMZsfgH_-p7eXpU1Ci",
                "entry_create_time": "2023-09-21T11:34:46.288000+00:00",
                "parser_name": "parsers/archive",
                "mainfile": "sample.archive.json",
                "files": [
                  "sample.archive.json",
                  "PVDProcess.csv",
                  "schema.archive.yaml"
                ],
                "published": false,
                "with_embargo": false,
                "embargo_length": 0,
                "license": "CC BY 4.0",
                "processed": true,
                "last_processing_time": "2023-09-21T11:34:46.586109+00:00",
                "processing_errors": [],
                "nomad_version": "1.2.1.dev124+g099de4643.d20230919",
                "nomad_commit": "",
                "references": [],
                "main_author": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "coauthors": [
                  "a03af8b6-3aa7-428a-b3b1-4a6317e576b6"
                ],
                "entry_coauthors": [],
                "reviewers": [
                  "54cb1f64-f84e-4815-9ade-440ce0b5430f"
                ],
                "datasets": [],
                "n_quantities": 59,
                "quantities": [
                  "",
                  "data",
                  "data.datetime",
                  "data.description",
                  "data.lab_id",
                  "data.name",
                  "data.processes",
                  "data.processes.hotplate_annealing",
                  "data.processes.hotplate_annealing.datetime",
                  "data.processes.hotplate_annealing.duration",
                  "data.processes.hotplate_annealing.set_temperature",
                  "data.processes.pvd_evaporation",
                  "data.processes.pvd_evaporation.chamber_pressure",
                  "data.processes.pvd_evaporation.data_file",
                  "data.processes.pvd_evaporation.datetime",
                  "data.processes.pvd_evaporation.fill_archive_from_datafile",
                  "data.processes.pvd_evaporation.substrate_temperature",
                  "data.processes.pvd_evaporation.time",
                  "data.substrate_type",
                  "data.tags",
                  "metadata",
                  "metadata.coauthors",
                  "metadata.datasets",
                  "metadata.embargo_length",
                  "metadata.entry_coauthors",
                  "metadata.entry_create_time",
                  "metadata.entry_hash",
                  "metadata.entry_id",
                  "metadata.entry_name",
                  "metadata.entry_timestamp",
                  "metadata.entry_timestamp.timestamp",
                  "metadata.entry_timestamp.token",
                  "metadata.entry_timestamp.token_seed",
                  "metadata.entry_timestamp.tsa_server",
                  "metadata.entry_type",
                  "metadata.files",
                  "metadata.last_processing_time",
                  "metadata.license",
                  "metadata.main_author",
                  "metadata.mainfile",
                  "metadata.nomad_commit",
                  "metadata.nomad_version",
                  "metadata.parser_name",
                  "metadata.processed",
                  "metadata.processing_errors",
                  "metadata.published",
                  "metadata.quantities",
                  "metadata.references",
                  "metadata.reviewers",
                  "metadata.section_defs",
                  "metadata.section_defs.definition_id",
                  "metadata.section_defs.definition_qualified_name",
                  "metadata.section_defs.used_directly",
                  "metadata.sections",
                  "metadata.upload_create_time",
                  "metadata.upload_id",
                  "metadata.with_embargo",
                  "results",
                  "results.eln",
                  "results.eln.descriptions",
                  "results.eln.lab_ids",
                  "results.eln.methods",
                  "results.eln.names",
                  "results.eln.sections",
                  "results.eln.tags",
                  "results.properties"
                ],
                "sections": [
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
                  "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
                  "nomad.datamodel.datamodel.EntryArchive",
                  "nomad.datamodel.datamodel.EntryMetadata",
                  "nomad.datamodel.datamodel.RFC3161Timestamp",
                  "nomad.datamodel.results.ELN",
                  "nomad.datamodel.results.Properties",
                  "nomad.datamodel.results.Results"
                ],
                "entry_timestamp": {
                  "token_seed": "Q5U7Kw9jdvvMZsfgH_-p7eXpU1Ci",
                  "token": "",
                  "tsa_server": "http://time.certum.pl/",
                  "timestamp": "2023-09-21T11:34:46+00:00"
                },
                "section_defs": [
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Process",
                    "definition_id": "7e0331d2df29682413535f00d4aad156783fee2e",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample",
                    "definition_id": "ca0a6011326e4ca1e487e9b244bc5153e7cded19",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes",
                    "definition_id": "d0d0cbf5ae07a246dbfa9634e51f995151abde55",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.HotplateAnnealing",
                    "definition_id": "d39f4397900226398e6c17eb00467e874e5955c4",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "entry_id:83DS7AzwqTKFVwlrdVeaL3kMSLU_.Sample.Processes.PvdEvaporation",
                    "definition_id": "c7646bbd6f18ae97af64a6fa967de483af3e9100",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.data.ArchiveSection",
                    "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.data.EntryData",
                    "definition_id": "538f52fd8d52b29372066f878319c6aeb03b74d2",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive",
                    "definition_id": "a19151d9beb46b8690dc0937f050ef674f958ef4",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata",
                    "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp",
                    "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Activity",
                    "definition_id": "fc2735d177bf36f9718ca66a764a56fc0c6200a0",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.BaseSection",
                    "definition_id": "add2edfa25a61ff3bbfdebacc870181f64f41634",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.basesections.Process",
                    "definition_id": "8d81e1f95c60f39a6a8c9f954143a55e6f4c984c",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "definition_id": "f05adb2ccbe04cbeced6213c4b6bd8f78e3d4ead",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.ElnWithFormulaBaseSection",
                    "definition_id": "ada854aefd11fd40e6c161fe2d9207a7bb104052",
                    "used_directly": false
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.metainfo.eln.Sample",
                    "definition_id": "a830a6d8c03f2a0baa0203e07efcbbd54328daaa",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.ELN",
                    "definition_id": "eeed330bd18d40f3a2a00cc35ba6f58808d0c543",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Properties",
                    "definition_id": "c1223381a11d512543e254a8da6a40e88a9bdb9a",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Results",
                    "definition_id": "7cd04a0a1fc2db43414328de6410fa3bc1737b5f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.parsing.tabular.TableData",
                    "definition_id": "4408b02aafbcd5a196e33346021b9da4e64a84e8",
                    "used_directly": true
                  }
                ],
                "searchable_quantities": [
                  {
                    "quantity_name": "name",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                    "path": "data.name",
                    "text_value": "ELN example sample"
                  },
                  {
                    "quantity_name": "lab_id",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.lab_id",
                    "text_value": "001"
                  },
                  {
                    "quantity_name": "description",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.description",
                    "text_value": "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                  },
                  {
                    "quantity_name": "substrate_type",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3",
                    "path": "data.substrate_type",
                    "keyword_value": "SLG"
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.basesections.Activity",
                    "path": "data.processes.pvd_evaporation.datetime",
                    "date_value": "2022-05-10T07:20:00+00:00"
                  },
                  {
                    "quantity_name": "data_file",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0",
                    "path": "data.processes.pvd_evaporation.data_file",
                    "text_value": "PVDProcess.csv"
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.basesections.Activity",
                    "path": "data.processes.hotplate_annealing.datetime",
                    "date_value": "2022-05-10T07:22:00+00:00"
                  },
                  {
                    "quantity_name": "set_temperature",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                    "path": "data.processes.hotplate_annealing.set_temperature",
                    "double_value": 373.15
                  },
                  {
                    "quantity_name": "duration",
                    "section_definition": "../uploads/eln_upload_id/archive/83DS7AzwqTKFVwlrdVeaL3kMSLU_#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1",
                    "path": "data.processes.hotplate_annealing.duration",
                    "double_value": 60
                  },
                  {
                    "quantity_name": "datetime",
                    "section_definition": "nomad.datamodel.metainfo.eln.ElnBaseSection",
                    "path": "data.datetime",
                    "date_value": "2023-09-21T13:34:46.706439+00:00"
                  }
                ]
              },
              "results": {
                "properties": {},
                "eln": {
                  "sections": [
                    "PvdEvaporation",
                    "HotplateAnnealing",
                    "Sample"
                  ],
                  "tags": [
                    "project"
                  ],
                  "names": [
                    "ELN example sample"
                  ],
                  "descriptions": [
                    "<p>A simple example for an \"sample\" that demonstrates how to combine different data entities.</p>\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\n<p>The sample also show references to other entries (chemicals, instruments).</p>\n<p>&nbsp;</p>"
                  ],
                  "methods": [
                    "PvdEvaporation",
                    "HotplateAnnealing"
                  ],
                  "lab_ids": [
                    "001"
                  ]
                }
              },
              "m_ref_archives": {}
            }
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "29904",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    }
  ],
  "afa783d98e040c74b68e5cfd3d82f3f0": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/query",
        "method": "POST",
        "body": {
          "required": {
            "metadata": "*"
          },
          "owner": "visible",
          "pagination": {
            "order_by": "upload_create_time",
            "order": "desc",
            "page_size": 20
          },
          "query": {
            "entry_references.target_entry_id": "bC7byHvWJp62Sn9uiuJUB38MT5j-"
          }
        },
        "headers": {
          "accept": "application/json, text/plain, */*",
          "content-type": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiIzZDgxNDQzOC1jZWQ4LTQzMTYtYTllNC0zZWQ3NmUyOTU3ZjkiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDkyLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.KIidTnmBnpDvGnvD3NHd7XlFdP1FwuxjvwFXIjbtLsPEyASAY3HEHamANgNCpmeVt47yg35wXtdWtkrAXeOWn553y7tQUOTrcHdCLsAFlmraCjZSy6oBBsHIGaAfaf0bbVuzGUE943elrLXJcj2AmtWu-z80bIja-zYflUjPYPVr6HDVeTqnAEKPAXiCn3-h3nwNM3uNIPZFaq_Seg5CRDI5cFANbOdx9-d4E5sTs01MDplIzFt-aXc5_TVMgbYWmISVGHm5r7nVSndDbp3YBPqLiT1Z8taNw79ipgZuGYCiwEWri5gmIG2EdtEsVB-m6Uz8YHnQoFNcQawxwtejNg",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "owner": "visible",
          "query": {
            "prefix": "entry_references",
            "query": {
              "name": "target_entry_id",
              "value": "bC7byHvWJp62Sn9uiuJUB38MT5j-"
            }
          },
          "pagination": {
            "page_size": 20,
            "order_by": "upload_create_time",
            "order": "desc",
            "total": 0
          },
          "required": {},
          "data": []
        },
        "headers": {
          "connection": "close",
          "content-length": "326",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    }
  ],
  "10cf17b8184337f8438ff5af96db21a0": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/uploads/eln_upload_id/raw/sample.archive.json?decompress=true&ignore_mime_type=true",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJjMTkzNjQ4My04OWE5LTQyZDktYTZhYi0xMDZkNmVjNmI5NTkiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDkzLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.J_gITmpgI8xmsNk4ifljZl8659gejOPBRBmDedmZ3bAegSOaXBTRxEpIZJ72PUBHT2occI2RahyDScjYqxefxbDnDg96YIBlZ23d6d1tU4PnByzw6TZVXwlZraMm-o6vDHMg7qDfbypxiFW8wxBhPyKQvATIKDzzpf04SiFgUTmxUhhlNB05EtbUsUT5id_elv4s-37eYpoQXM3fY60qoSI3ReI6p1g6Qx-bcTQYpWhlRZP6eB9kax8-O-nThE71tlWom26i1hXsH5OhIqWY8UwsMQdIICFs6aecphUxKfWyLiglZN7xN1b2KqKnUlM-7gDjGg4lO84A1zVwGdjSVA",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": "{\n    \"data\": {\n        \"m_def\": \"../upload/raw/schema.archive.yaml#/definitions/section_definitions/3\",\n        \"name\": \"ELN example sample\",\n        \"lab_id\": \"001\",\n        \"tags\": [\n            \"project\"\n        ],\n        \"substrate_type\": \"SLG\",\n        \"processes\": {\n            \"pvd_evaporation\": {\n                \"datetime\": \"2022-05-10T07:20:00+00:00\",\n                \"data_file\": \"PVDProcess.csv\"\n            },\n            \"hotplate_annealing\": {\n                \"datetime\": \"2022-05-10T07:22:00+00:00\",\n                \"set_temperature\": 373.15,\n                \"duration\": 60\n            }\n        },\n        \"description\": \"<p>A simple example for an \\\"sample\\\" that demonstrates how to combine different data entities.</p>\\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\\n<p>The sample also show references to other entries (chemicals, instruments).</p>\\n<p>&nbsp;</p>\"\n    }\n}\n",
        "headers": {
          "connection": "close",
          "content-disposition": "attachment; filename=\"sample.archive.json\"",
          "content-type": "application/octet-stream",
          "server": "uvicorn",
          "transfer-encoding": "chunked"
        }
      }
    },
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/uploads/eln_upload_id/raw/sample.archive.json?decompress=true&ignore_mime_type=true",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiI1YTgxMTQ1ZC1kNzAxLTRiYTAtYmIxYi1jZGI1NTVhOTlkZGEiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDk1LCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.ORaxLnEAjyUIdLM-C5tZruxyEnhaFWcogE5dxe3_bDvMn0H1fpYkGMNF6feltediwgCcP9SLsB83eOvq8CXG0g0sn027gj9pqOMqEDCruUEy-0iKgBwdBMEO4Hibzt1YzoGqJX_iPHpDYTAWe-gfry3mnJOXEMquTUd5X8uIjR3zOanxkTQU7cbL9Lwpnt027WHH-8QRDlLQdGsSBDYGF7akph7ybFHF3VnfyuGO6_jkU-HkXe32X_txH8SvGV9yQXp1zzMFMxstdJGyoR4Xwbxqbr7tC6hH91ryCMR_iAED8zmdpL9fN2c4nNS5xu2CFzYCEFTVhvgPs0kc0h1SEw",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": "{\n    \"data\": {\n        \"m_def\": \"../upload/raw/schema.archive.yaml#/definitions/section_definitions/3\",\n        \"name\": \"ELN example sample\",\n        \"lab_id\": \"001\",\n        \"tags\": [\n            \"project\"\n        ],\n        \"substrate_type\": \"SLG\",\n        \"processes\": {\n            \"pvd_evaporation\": {\n                \"datetime\": \"2022-05-10T07:20:00+00:00\",\n                \"data_file\": \"PVDProcess.csv\"\n            },\n            \"hotplate_annealing\": {\n                \"datetime\": \"2022-05-10T07:22:00+00:00\",\n                \"set_temperature\": 373.15,\n                \"duration\": 60\n            }\n        },\n        \"description\": \"<p>A simple example for an \\\"sample\\\" that demonstrates how to combine different data entities.</p>\\n<p>The sample it-self defines a few properties (involved chemicals, used substrate) and uses inherited default properties (formula, name, lab id, ...)</p>\\n<p>But the sample also contains sub-sections that prodivde inforamtion about proccessed that were applied to this sample (PVD evaporation, hotplate annealing).&nbsp;</p>\\n<p>The sample also show references to other entries (chemicals, instruments).</p>\\n<p>&nbsp;</p>\"\n    }\n}\n",
        "headers": {
          "connection": "close",
          "content-disposition": "attachment; filename=\"sample.archive.json\"",
          "content-type": "application/octet-stream",
          "server": "uvicorn",
          "transfer-encoding": "chunked"
        }
      }
    }
  ],
  "e623af5f65daba3b3be485647832f50b": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/entries/83DS7AzwqTKFVwlrdVeaL3kMSLU_/archive/query",
        "method": "POST",
        "body": {
          "required": {
            "definitions": "*",
            "metadata": "*",
            "resolve-inplace": false
          }
        },
        "headers": {
          "accept": "application/json",
          "content-type": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiJjNTM2MTE1MC1kOTQ4LTQxMTMtYTFlNC1mZTJkOGFjYzlkZDMiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDkzLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.fcS5xP9GW4HKadUSWNn99nL1m3fn9piXR3qiGtqYJ4nCtDSg8SXovSqAQXvO0LRvUFfogyX8KYeAJ-MA25VUGIgt0WsfMQyxKZtVNu-pM2rA40MlUg7zcnAU6zdK27BHh7e-7WrldTKJzOzWcuE2U6CX7yhiy1CtNlzhjkNtsCB4b4hndaREHqk2N8czTMUw4iN5PlPtyOxlgzavjjkiMZKb0MObJv6w2WcplABuNJyJieQO_aK2hGgrX8Uo0lF4KUo9OSqdZyGYt9vr72mnueLqZ7Mk9ZkKUdXbXDVbCVcpg06St3b4H1ujzHzjbEZN-aFSFBfhLFN2bpTPouGcjg",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": {
          "required": {
            "definitions": "*",
            "metadata": "*",
            "resolve-inplace": false
          },
          "entry_id": "83DS7AzwqTKFVwlrdVeaL3kMSLU_",
          "data": {
            "entry_id": "83DS7AzwqTKFVwlrdVeaL3kMSLU_",
            "upload_id": "eln_upload_id",
            "parser_name": "parsers/archive",
            "archive": {
              "definitions": {
                "m_def": "nomad.metainfo.metainfo.Package",
                "m_parent_sub_section": "definitions",
                "name": "Electronic Lab Notebook example schema",
                "section_definitions": [
                  {
                    "m_def": "nomad.metainfo.metainfo.Section",
                    "m_parent_index": 0,
                    "m_parent_sub_section": "section_definitions",
                    "name": "Chemical",
                    "description": "This is an example description for Chemical.\nA description can contain **markdown** markup and TeX formulas, like $\\sum\\limits_{i=0}^{n}$.\n",
                    "base_sections": [
                      "nomad.datamodel.metainfo.eln.Chemical",
                      "nomad.datamodel.data.EntryData"
                    ],
                    "quantities": [
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "EnumEditQuantity"
                            }
                          ]
                        },
                        "name": "form",
                        "type": {
                          "type_kind": "Enum",
                          "type_data": [
                            "crystalline solid",
                            "powder"
                          ]
                        }
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 1,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "StringEditQuantity"
                            }
                          ]
                        },
                        "name": "cas_number",
                        "type": {
                          "type_kind": "python",
                          "type_data": "str"
                        }
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 2,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "StringEditQuantity"
                            }
                          ]
                        },
                        "name": "ec_number",
                        "type": {
                          "type_kind": "python",
                          "type_data": "str"
                        }
                      }
                    ]
                  },
                  {
                    "m_def": "nomad.metainfo.metainfo.Section",
                    "m_parent_index": 1,
                    "m_parent_sub_section": "section_definitions",
                    "name": "Instrument",
                    "base_sections": [
                      "nomad.datamodel.metainfo.basesections.Instrument",
                      "nomad.datamodel.data.EntryData"
                    ]
                  },
                  {
                    "m_def": "nomad.metainfo.metainfo.Section",
                    "m_parent_index": 2,
                    "m_parent_sub_section": "section_definitions",
                    "name": "Process",
                    "base_sections": [
                      "nomad.datamodel.metainfo.basesections.Process"
                    ],
                    "quantities": [
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "ReferenceEditQuantity"
                            }
                          ]
                        },
                        "name": "instrument",
                        "type": {
                          "type_kind": "reference",
                          "type_data": "#/definitions/section_definitions/1"
                        }
                      }
                    ]
                  },
                  {
                    "m_def": "nomad.metainfo.metainfo.Section",
                    "m_parent_index": 3,
                    "m_parent_sub_section": "section_definitions",
                    "m_annotations": {
                      "template": [
                        {
                          "processes": {
                            "pvd_evaporation": {}
                          }
                        }
                      ]
                    },
                    "name": "Sample",
                    "base_sections": [
                      "nomad.datamodel.metainfo.eln.Sample",
                      "nomad.datamodel.data.EntryData"
                    ],
                    "quantities": [
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "StringEditQuantity"
                            }
                          ]
                        },
                        "name": "name",
                        "type": {
                          "type_kind": "python",
                          "type_data": "str"
                        },
                        "default": "Default Sample Name"
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 1,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "AutocompleteEditQuantity"
                            }
                          ]
                        },
                        "name": "tags",
                        "type": {
                          "type_kind": "Enum",
                          "type_data": [
                            "internal",
                            "collaboration",
                            "project",
                            "other"
                          ]
                        },
                        "shape": [
                          "*"
                        ]
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 2,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "ReferenceEditQuantity"
                            }
                          ]
                        },
                        "name": "chemicals",
                        "type": {
                          "type_kind": "reference",
                          "type_data": "#/definitions/section_definitions/0"
                        },
                        "shape": [
                          "*"
                        ]
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 3,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "RadioEnumEditQuantity"
                            }
                          ]
                        },
                        "name": "substrate_type",
                        "type": {
                          "type_kind": "Enum",
                          "type_data": [
                            "Fused quartz glass",
                            "SLG",
                            "other"
                          ]
                        }
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 4,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "NumberEditQuantity"
                            }
                          ]
                        },
                        "name": "substrate_thickness",
                        "type": {
                          "type_kind": "numpy",
                          "type_data": "float64"
                        },
                        "unit": "meter"
                      },
                      {
                        "m_def": "nomad.metainfo.metainfo.Quantity",
                        "m_parent_index": 5,
                        "m_parent_sub_section": "quantities",
                        "m_annotations": {
                          "eln": [
                            {
                              "component": "BoolEditQuantity"
                            }
                          ]
                        },
                        "name": "sample_is_from_collaboration",
                        "type": {
                          "type_kind": "python",
                          "type_data": "bool"
                        }
                      }
                    ],
                    "sub_sections": [
                      {
                        "m_def": "nomad.metainfo.metainfo.SubSection",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "sub_sections",
                        "name": "processes",
                        "sub_section": "#/definitions/section_definitions/3/inner_section_definitions/0"
                      }
                    ],
                    "inner_section_definitions": [
                      {
                        "m_def": "nomad.metainfo.metainfo.Section",
                        "m_parent_index": 0,
                        "m_parent_sub_section": "inner_section_definitions",
                        "m_annotations": {
                          "eln": [
                            "None"
                          ]
                        },
                        "name": "Processes",
                        "sub_sections": [
                          {
                            "m_def": "nomad.metainfo.metainfo.SubSection",
                            "m_parent_index": 0,
                            "m_parent_sub_section": "sub_sections",
                            "name": "pvd_evaporation",
                            "sub_section": "#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/0"
                          },
                          {
                            "m_def": "nomad.metainfo.metainfo.SubSection",
                            "m_parent_index": 1,
                            "m_parent_sub_section": "sub_sections",
                            "name": "hotplate_annealing",
                            "sub_section": "#/definitions/section_definitions/3/inner_section_definitions/0/inner_section_definitions/1"
                          }
                        ],
                        "inner_section_definitions": [
                          {
                            "m_def": "nomad.metainfo.metainfo.Section",
                            "m_parent_index": 0,
                            "m_parent_sub_section": "inner_section_definitions",
                            "m_annotations": {
                              "eln": [
                                {
                                  "hide": [
                                    "name",
                                    "lab_id",
                                    "description",
                                    "method"
                                  ],
                                  "overview": true
                                }
                              ],
                              "plot": [
                                {
                                  "data": [
                                    {
                                      "x": "#time",
                                      "y": "#chamber_pressure"
                                    },
                                    {
                                      "x": "#time",
                                      "y": "#substrate_temperature",
                                      "yaxis": "y2"
                                    }
                                  ],
                                  "layout": {
                                    "title": {
                                      "text": "Pressure and Temperature over Time"
                                    },
                                    "yaxis2": {
                                      "overlaying": "y",
                                      "side": "right"
                                    }
                                  }
                                }
                              ]
                            },
                            "name": "PvdEvaporation",
                            "base_sections": [
                              "#/definitions/section_definitions/2",
                              "nomad.parsing.tabular.TableData"
                            ],
                            "quantities": [
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 0,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "tabular_parser": [
                                    {
                                      "parsing_options": {
                                        "sep": "\\t",
                                        "comment": "#"
                                      }
                                    }
                                  ],
                                  "browser": [
                                    {
                                      "adaptor": "RawFileAdaptor"
                                    }
                                  ],
                                  "eln": [
                                    {
                                      "component": "FileEditQuantity"
                                    }
                                  ]
                                },
                                "name": "data_file",
                                "description": "A reference to an uploaded .csv produced by the PVD evaporation instruments\ncontrol software.\n",
                                "type": {
                                  "type_kind": "python",
                                  "type_data": "str"
                                }
                              },
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 1,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "tabular": [
                                    {
                                      "name": "Process Time in seconds"
                                    }
                                  ]
                                },
                                "name": "time",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "shape": [
                                  "*"
                                ],
                                "unit": "second"
                              },
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 2,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "eln": [
                                    {
                                      "defaultDisplayUnit": "mbar"
                                    }
                                  ],
                                  "tabular": [
                                    {
                                      "name": "Vacuum Pressure1"
                                    }
                                  ],
                                  "plot": [
                                    {
                                      "data": {
                                        "x": "#time",
                                        "y": "#chamber_pressure"
                                      }
                                    }
                                  ]
                                },
                                "name": "chamber_pressure",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "shape": [
                                  "*"
                                ],
                                "unit": "millibar"
                              },
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 3,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "tabular": [
                                    {
                                      "name": "Substrate PV",
                                      "unit": "degC"
                                    }
                                  ],
                                  "plot": [
                                    {
                                      "data": {
                                        "x": "#time",
                                        "y": "#substrate_temperature"
                                      }
                                    }
                                  ]
                                },
                                "name": "substrate_temperature",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "shape": [
                                  "*"
                                ],
                                "unit": "kelvin"
                              }
                            ]
                          },
                          {
                            "m_def": "nomad.metainfo.metainfo.Section",
                            "m_parent_index": 1,
                            "m_parent_sub_section": "inner_section_definitions",
                            "m_annotations": {
                              "eln": [
                                {
                                  "hide": [
                                    "name",
                                    "lab_id",
                                    "description"
                                  ],
                                  "overview": true
                                }
                              ]
                            },
                            "name": "HotplateAnnealing",
                            "base_sections": [
                              "#/definitions/section_definitions/2"
                            ],
                            "quantities": [
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 0,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "eln": [
                                    {
                                      "component": "NumberEditQuantity"
                                    }
                                  ]
                                },
                                "name": "set_temperature",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "unit": "kelvin"
                              },
                              {
                                "m_def": "nomad.metainfo.metainfo.Quantity",
                                "m_parent_index": 1,
                                "m_parent_sub_section": "quantities",
                                "m_annotations": {
                                  "eln": [
                                    {
                                      "component": "NumberEditQuantity"
                                    }
                                  ]
                                },
                                "name": "duration",
                                "type": {
                                  "type_kind": "numpy",
                                  "type_data": "float64"
                                },
                                "unit": "second"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "metadata": {
                "upload_id": "eln_upload_id",
                "upload_create_time": "2023-09-21T11:34:46.217000+00:00",
                "entry_id": "83DS7AzwqTKFVwlrdVeaL3kMSLU_",
                "entry_name": "Electronic Lab Notebook example schema",
                "entry_type": "Schema",
                "entry_hash": "JJ5rnS9VMz4S5pSE6hoTqzvLsdMq",
                "entry_create_time": "2023-09-21T11:34:46.292000+00:00",
                "parser_name": "parsers/archive",
                "mainfile": "schema.archive.yaml",
                "files": [
                  "schema.archive.yaml",
                  "PVDProcess.csv",
                  "sample.archive.json"
                ],
                "published": false,
                "with_embargo": false,
                "embargo_length": 0,
                "license": "CC BY 4.0",
                "processed": true,
                "last_processing_time": "2023-09-21T11:34:46.589999+00:00",
                "processing_errors": [],
                "nomad_version": "1.2.1.dev124+g099de4643.d20230919",
                "nomad_commit": "",
                "references": [],
                "main_author": "68878af7-6845-46c0-b2c1-250d4d8eb470",
                "coauthors": [
                  "a03af8b6-3aa7-428a-b3b1-4a6317e576b6"
                ],
                "entry_coauthors": [],
                "reviewers": [
                  "54cb1f64-f84e-4815-9ade-440ce0b5430f"
                ],
                "datasets": [],
                "n_quantities": 153,
                "quantities": [
                  "",
                  "definitions",
                  "definitions.more",
                  "definitions.name",
                  "definitions.section_definitions",
                  "definitions.section_definitions.base_sections",
                  "definitions.section_definitions.description",
                  "definitions.section_definitions.inner_section_definitions",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.base_sections",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.more",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.name",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.description",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.more",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.name",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.shape",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.type",
                  "definitions.section_definitions.inner_section_definitions.inner_section_definitions.quantities.unit",
                  "definitions.section_definitions.inner_section_definitions.more",
                  "definitions.section_definitions.inner_section_definitions.name",
                  "definitions.section_definitions.inner_section_definitions.sub_sections",
                  "definitions.section_definitions.inner_section_definitions.sub_sections.more",
                  "definitions.section_definitions.inner_section_definitions.sub_sections.name",
                  "definitions.section_definitions.inner_section_definitions.sub_sections.sub_section",
                  "definitions.section_definitions.more",
                  "definitions.section_definitions.name",
                  "definitions.section_definitions.quantities",
                  "definitions.section_definitions.quantities.default",
                  "definitions.section_definitions.quantities.more",
                  "definitions.section_definitions.quantities.name",
                  "definitions.section_definitions.quantities.shape",
                  "definitions.section_definitions.quantities.type",
                  "definitions.section_definitions.quantities.unit",
                  "definitions.section_definitions.sub_sections",
                  "definitions.section_definitions.sub_sections.more",
                  "definitions.section_definitions.sub_sections.name",
                  "definitions.section_definitions.sub_sections.sub_section",
                  "metadata",
                  "metadata.coauthors",
                  "metadata.datasets",
                  "metadata.embargo_length",
                  "metadata.entry_coauthors",
                  "metadata.entry_create_time",
                  "metadata.entry_hash",
                  "metadata.entry_id",
                  "metadata.entry_name",
                  "metadata.entry_timestamp",
                  "metadata.entry_timestamp.timestamp",
                  "metadata.entry_timestamp.token",
                  "metadata.entry_timestamp.token_seed",
                  "metadata.entry_timestamp.tsa_server",
                  "metadata.entry_type",
                  "metadata.files",
                  "metadata.last_processing_time",
                  "metadata.license",
                  "metadata.main_author",
                  "metadata.mainfile",
                  "metadata.nomad_commit",
                  "metadata.nomad_version",
                  "metadata.parser_name",
                  "metadata.processed",
                  "metadata.processing_errors",
                  "metadata.published",
                  "metadata.quantities",
                  "metadata.references",
                  "metadata.reviewers",
                  "metadata.section_defs",
                  "metadata.section_defs.definition_id",
                  "metadata.section_defs.definition_qualified_name",
                  "metadata.section_defs.used_directly",
                  "metadata.sections",
                  "metadata.upload_create_time",
                  "metadata.upload_id",
                  "metadata.with_embargo",
                  "results",
                  "results.properties"
                ],
                "sections": [
                  "nomad.datamodel.datamodel.EntryArchive",
                  "nomad.datamodel.datamodel.EntryMetadata",
                  "nomad.datamodel.datamodel.RFC3161Timestamp",
                  "nomad.datamodel.results.Properties",
                  "nomad.datamodel.results.Results",
                  "nomad.metainfo.metainfo.Package",
                  "nomad.metainfo.metainfo.Quantity",
                  "nomad.metainfo.metainfo.Section",
                  "nomad.metainfo.metainfo.SubSection"
                ],
                "entry_timestamp": {
                  "token_seed": "JJ5rnS9VMz4S5pSE6hoTqzvLsdMq",
                  "token": "",
                  "tsa_server": "http://time.certum.pl/",
                  "timestamp": "2023-09-21T11:34:46+00:00"
                },
                "section_defs": [
                  {
                    "definition_qualified_name": "nomad.datamodel.data.ArchiveSection",
                    "definition_id": "7047cbff9980abff17cce4b1b6b0d1c783505b7f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryArchive",
                    "definition_id": "a19151d9beb46b8690dc0937f050ef674f958ef4",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.EntryMetadata",
                    "definition_id": "f0581d7d21c72a241c4a770488125b5ddcf539d8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.datamodel.RFC3161Timestamp",
                    "definition_id": "265ae33dbc9ace82b50260c1050d30c59ef9cb3c",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Properties",
                    "definition_id": "c1223381a11d512543e254a8da6a40e88a9bdb9a",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.datamodel.results.Results",
                    "definition_id": "7cd04a0a1fc2db43414328de6410fa3bc1737b5f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Definition",
                    "definition_id": "f6617f133366ffb8cd1bde4bf643ca5bae1db7f8",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Package",
                    "definition_id": "0c6464110f52fa3f556ae8e95e2f0272e201525a",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Property",
                    "definition_id": "28f841a88474d266eded1141318ea4c42d3aff3f",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Quantity",
                    "definition_id": "d12b9e6f4aed521dc6feeb67239a929542f78b8d",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.Section",
                    "definition_id": "f293173ca54be29603fb12b9b138f8a76130a25c",
                    "used_directly": true
                  },
                  {
                    "definition_qualified_name": "nomad.metainfo.metainfo.SubSection",
                    "definition_id": "19bf6b5bf2ffa69e6585a1fb1c6b0961d4a89738",
                    "used_directly": true
                  }
                ]
              },
              "m_ref_archives": {}
            }
          }
        },
        "headers": {
          "connection": "close",
          "content-length": "36049",
          "content-type": "application/json",
          "server": "uvicorn"
        }
      }
    }
  ],
  "3b5543f0893b09d8de514df16d0bac43": [
    {
      "request": {
        "url": "http://localhost:8000/fairdi/nomad/latest/api/v1/uploads/eln_upload_id/raw/schema.archive.yaml?decompress=true&ignore_mime_type=true",
        "method": "GET",
        "body": "",
        "headers": {
          "accept": "application/json",
          "authorization": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJSWFFIV1YxSEJ6cmh5U3h3UmRDdkhCcUF1WVNKRzZWSEJSZXg0TW5oX293In0.eyJqdGkiOiIyNTMwMTU2NS1lN2EwLTQyMGMtODgwNy1kNjYxNDgxMTBkNzYiLCJleHAiOjE2OTUzMzIwNzksIm5iZiI6MCwiaWF0IjoxNjk1Mjk2MDkzLCJpc3MiOiJodHRwczovL25vbWFkLWxhYi5ldS9mYWlyZGkva2V5Y2xvYWsvYXV0aC9yZWFsbXMvZmFpcmRpX25vbWFkX3Rlc3QiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNjg4NzhhZjctNjg0NS00NmMwLWIyYzEtMjUwZDRkOGViNDcwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9tYWRfZ3VpX2RldiIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6ImJmNWViMTUzLWYwMTMtNDQwOS1hNjNkLWQyNGM0ZWJiZjRkZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTWFya3VzIFNjaGVpZGdlbiIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiTWFya3VzIiwiZmFtaWx5X25hbWUiOiJTY2hlaWRnZW4iLCJlbWFpbCI6Im1hcmt1cy5zY2hlaWRnZW5AZmhpLWJlcmxpbi5kZSJ9.Mn-NkAjxantfUR6w7KMSqF9XjF3JrHHn0a8fDjBFpekK9c_-lvhu_txU-AQhQ98fecvCIco5Rqtovyv2VFzp0BlNyXBsgWco6PLy6D0JMohOzRVdN-WjNtDDakwEd2CzMlvlwe9g6DIqSvk3DbSlKdikRYG8pdaweiR19vD_ymKuJ5BZS13m2vVJDpw_55qldxxZhrtuGuvSjTfdPAVLqkDOveSR3WMr-LR3b9H5CDvFNwoJZgsKyg_CYNFcIE38Rz-JFEvX_89yRgDlF-FkjNsO_X4Nv5F0AYDWAPwYJpXTMMpER5AHG6cROZGNzJijKiFbNFcHjJ3j2XfzxDt0YQ",
          "cookie": null
        }
      },
      "response": {
        "status": 200,
        "body": "# Schemas can be defined as yaml files like this. The archive.yaml format will be\n# interpreted by nomad as a nomad archive. Therefore, all definitions have to be\n# put in a top-level section called \"definitions\"\ndefinitions:\n  # The \"definitions\" section is interpreted as a nomad schema package\n  # Schema packages can have a name:\n  name: 'Electronic Lab Notebook example schema'\n  # Schema packages contain section definitions. This is where the interesting schema\n  # information begins.\n  sections:\n    # Here we define a section called \"Chemical\":\n    Chemical:\n      # Section definition can have base_sections. Base sections are other schema\n      # definition and all properties of these will be inherited.\n      base_sections:\n        - 'nomad.datamodel.metainfo.eln.Chemical'  # Provides typical quantities like name, descriptions, chemical_formula and makes those available for search\n        - 'nomad.datamodel.data.EntryData'  # Declares this as a top-level entry section. This determines the types of entries you can create. With this we will be able to create a \"Chemical\" entry.\n      # All definitions, sections, sub_sections, quantities, can provide a description.\n      description: |\n        This is an example description for Chemical.\n        A description can contain **markdown** markup and TeX formulas, like $\\sum\\limits_{i=0}^{n}$.\n      # Sections define quantities. Quantities allow to manage actual data. Quantities\n      # can have various types, shapes, and units.\n      quantities:\n        # Here we define a quantity called \"from\"\n        form:\n          # This defines a Enum type with pre-defined possible values.\n          type:\n            type_kind: Enum\n            type_data:\n              - crystalline solid\n              - powder\n          # Annotations allow to provide additional information that is beyond just defining\n          # the possible data.\n          m_annotations:\n            # The eln annotation allows add the quantity to a ELN\n            eln:\n              component: EnumEditQuantity  # A form field component for EnumQuantities that uses a pull down menu.\n        cas_number:\n          type: str\n          m_annotations:\n            eln:\n              component: StringEditQuantity\n        ec_number:\n          type: str\n          m_annotations:\n            eln:\n              component: StringEditQuantity\n    Instrument:\n      base_sections:\n        - nomad.datamodel.metainfo.eln.Instrument\n        - nomad.datamodel.data.EntryData\n    Process:\n      base_section: nomad.datamodel.metainfo.eln.Process\n      quantities:\n        instrument:\n          type: Instrument\n          m_annotations:\n            eln:\n              component: ReferenceEditQuantity\n    Sample:\n      m_annotations:\n        # The template annotation allows to define what freshly created entries (instances of this schema) will look like.\n        # In this example we create a sample with an empty pvd_evaporation process.\n        template:\n          processes:\n            pvd_evaporation: {}\n      base_sections:\n        - 'nomad.datamodel.metainfo.eln.Sample'\n        - 'nomad.datamodel.data.EntryData'\n      quantities:\n        name:\n          type: str  # The simple string type\n          default: Default Sample Name\n          m_annotations:\n            eln:\n              component: StringEditQuantity  # A simple text edit form field\n        tags:\n          type:\n            type_kind: Enum\n            type_data:\n              - internal\n              - collaboration\n              - project\n              - other\n          shape: ['*']  # Shapes define non scalar values, like lists ['*'], vectors ['*', 3], etc.\n          m_annotations:\n            eln:\n              component: AutocompleteEditQuantity  # Allows to edit enums with an auto complete text form field\n        chemicals:\n          type: Chemical  # Types can also be other sections. This allows to reference a different section.\n          shape: ['*']\n          m_annotations:\n            eln:\n              component: ReferenceEditQuantity  # A editor component that allows to select from available \"Chemical\"s\n        substrate_type:\n          type:\n            type_kind: Enum\n            type_data:\n              - Fused quartz glass\n              - SLG\n              - other\n          m_annotations:\n            eln:\n              component: RadioEnumEditQuantity\n        substrate_thickness:\n          type: np.float64\n          unit: m\n          m_annotations:\n            eln:\n              component: NumberEditQuantity\n        sample_is_from_collaboration:\n          type: bool\n          m_annotations:\n            eln:\n              component: BoolEditQuantity\n      # Besides quantities, a section can define sub_sections. This allows hierarchies\n      # of information.\n      sub_sections:\n        # Here we define a sub_section of \"Sample\" called \"processes\"\n        processes:\n          section:\n            # The sub-section's section, is itself a section definition\n            m_annotations:\n              eln:  # adds the sub-section to the eln and allows users to create new instances of this sub-section\n            # We can also nest sub_sections. It goes aribitrarely deep.\n            sub_sections:\n              pvd_evaporation:\n                section:\n                  base_sections: ['Process', 'nomad.parsing.tabular.TableData']\n                  m_annotations:\n                    # We can use the eln annotations to put the section to the overview\n                    # page, and hide unwanted inherited quantities.\n                    eln:\n                      overview: true\n                      hide: ['name', 'lab_id', 'description', 'method']\n                    # Plots are shown in the eln. Currently we only support simple x,y\n                    # line plots\n                    plot:\n                      data:\n                        - x: \"#time\"\n                          y: \"#chamber_pressure\"\n                        - x: \"#time\"\n                          y: \"#substrate_temperature\"\n                          yaxis: y2\n                      layout:\n                        title:\n                          text: Pressure and Temperature over Time\n                        yaxis2:\n                          overlaying: y\n                          side: right\n                  quantities:\n                    data_file:\n                      type: str\n                      description: |\n                        A reference to an uploaded .csv produced by the PVD evaporation instruments\n                        control software.\n                      m_annotations:\n                        # The tabular_parser annotation, will treat the values of this\n                        # quantity as files. It will try to interpret the files and fill\n                        # quantities in this section (and sub_section) with the column\n                        # data of .csv or .xlsx files. There is also a mode option that by default, is set to column.\n                        tabular_parser:\n                          parsing_options:\n                            sep: '\\t'\n                            comment: '#'\n                        browser:\n                          adaptor: RawFileAdaptor  # Allows to navigate to files in the data browser\n                        eln:\n                          component: FileEditQuantity  # A form field that allows to drop and select files.\n                    time:\n                      type: np.float64\n                      shape: ['*']\n                      unit: s\n                      m_annotations:\n                        # The tabular annotation defines a mapping to column headers used in\n                        # tabular data files\n                        tabular:\n                          name: Process Time in seconds\n                    chamber_pressure:\n                      type: np.float64\n                      shape: ['*']\n                      unit: mbar\n                      m_annotations:\n                        eln:\n                          defaultDisplayUnit: mbar\n                        tabular:\n                          name: Vacuum Pressure1\n                        plot:\n                          data:\n                            x: \"#time\"\n                            y: \"#chamber_pressure\"\n                    substrate_temperature:\n                      type: np.float64\n                      shape: ['*']\n                      unit: kelvin\n                      m_annotations:\n                        tabular:\n                          name: Substrate PV\n                          unit: degC\n                        plot:\n                          data:\n                            x: \"#time\"\n                            y: \"#substrate_temperature\"\n              hotplate_annealing:\n                section:\n                  base_section: Process\n                  m_annotations:\n                    # We can use the eln annotations to put the section to the overview\n                    # page, and hide unwanted inherited quantities.\n                    eln:\n                      overview: true\n                      hide: ['name', 'lab_id', 'description']\n                  quantities:\n                    set_temperature:\n                      type: np.float64  # For actual numbers, we use numpy datatypes\n                      unit: K  # The unit system is based on Pint and allows all kinds of abreviations, prefixes, and complex units\n                      m_annotations:\n                        eln:\n                          component: NumberEditQuantity  # A component to enter numbers (with units)\n                    duration:\n                      type: np.float64\n                      unit: s\n                      m_annotations:\n                        eln:\n                          component: NumberEditQuantity\n\n",
        "headers": {
          "connection": "close",
          "content-disposition": "attachment; filename=\"schema.archive.yaml\"",
          "content-type": "application/octet-stream",
          "server": "uvicorn",
          "transfer-encoding": "chunked"
        }
      }
    }
  ]
}